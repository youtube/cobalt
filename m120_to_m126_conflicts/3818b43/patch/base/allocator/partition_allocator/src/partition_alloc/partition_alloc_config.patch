--- base/allocator/partition_allocator/src/partition_alloc/partition_alloc_config.h
+++ base/allocator/partition_allocator/src/partition_alloc/partition_alloc_config.h
@@ -56,13 +56,8 @@
 #define PA_CONFIG_DYNAMICALLY_SELECT_POOL_SIZE() 0
 #endif  // PA_BUILDFLAG(HAS_64_BIT_POINTERS) && BUILDFLAG(IS_IOS)
 
-<<<<<<< HEAD
 #if PA_BUILDFLAG(HAS_64_BIT_POINTERS) && \
-    (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_ANDROID)) && !defined(IS_COBALT_HERMETIC_BUILD)
-=======
-#if BUILDFLAG(HAS_64_BIT_POINTERS) && \
     (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_ANDROID)) && !BUILDFLAG(IS_COBALT_HERMETIC_BUILD)
->>>>>>> ea059b32471 (Add BUILDFLAG IS_COBALT_HERMETIC_BUILD (#4966))
 #include <linux/version.h>
 // TODO(bikineev): Enable for ChromeOS.
 #define PA_CONFIG_STARSCAN_UFFD_WRITE_PROTECTOR_SUPPORTED() \
@@ -100,16 +95,8 @@
 
 // POSIX is not only UNIX, e.g. macOS and other OSes. We do use Linux-specific
 // features such as futex(2).
-#if defined(IS_COBALT_HERMETIC_BUILD)
-#define PA_CONFIG_HAS_LINUX_KERNEL() false
-#else
 #define PA_CONFIG_HAS_LINUX_KERNEL() \
-<<<<<<< HEAD
-  (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_ANDROID))
-#endif
-=======
   (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_ANDROID)) && !BUILDFLAG(IS_COBALT_HERMETIC_BUILD)
->>>>>>> ea059b32471 (Add BUILDFLAG IS_COBALT_HERMETIC_BUILD (#4966))
 
 // On some platforms, we implement locking by spinning in userspace, then going
 // into the kernel only if there is contention. This requires platform support,
