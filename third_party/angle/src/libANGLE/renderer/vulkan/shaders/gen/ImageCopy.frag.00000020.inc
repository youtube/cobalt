// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000020.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000020[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x7b,0x6c,0xce,0x67,
    0x14,0xfe,0x9d,0xb7,0x37,0xea,0xd2,0xba,0x95,0x2e,0x73,0x2d,0x99,0xa9,0xb9,0x0d,
    0x23,0xa5,0xb4,0x4a,0x97,0x31,0x77,0x22,0x22,0xac,0xee,0x8c,0x9a,0x61,0xb2,0xcc,
    0x86,0xb1,0xcc,0x26,0x96,0x48,0x2c,0xc1,0x9a,0x85,0x6d,0x22,0x26,0x73,0xc9,0x26,
    0x36,0x86,0xbf,0xc4,0x42,0x76,0xf1,0xc7,0x22,0x13,0xb2,0xd1,0x64,0x89,0x4c,0xc8,
    0x36,0xcd,0x4c,0xb1,0xbd,0x4f,0xcf,0x73,0x7c,0xc7,0x97,0xc9,0xbe,0xe4,0xf5,0x7d,
    0xef,0x73,0x6e,0xcf,0x79,0xde,0xcb,0xef,0xa7,0x19,0xa1,0x28,0x27,0x49,0x24,0xc9,
    0x4d,0x1a,0x25,0x4b,0x42,0xd2,0xf0,0x69,0x91,0x84,0x88,0x24,0x49,0x93,0x24,0xbb,
    0xe1,0xbb,0x72,0xcc,0xa4,0x31,0xbd,0x56,0xac,0x9c,0xdb,0xab,0xff,0x80,0x3e,0xb0,
    0x37,0x4f,0x32,0x1a,0xfc,0x60,0xcb,0x4b,0x72,0x92,0xcc,0xf8,0x8d,0xb1,0xb4,0x6a,
    0x51,0x35,0xf0,0xfa,0x38,0xda,0x44,0x63,0x7e,0xf4,0x03,0x1e,0x0b,0x24,0xcf,0x26,
    0x59,0xc9,0x08,0x4d,0x9f,0x14,0xf1,0xdb,0x30,0x21,0xd6,0xc8,0x61,0x81,0x58,0xbe,
    0xc3,0x32,0x88,0xb5,0x76,0x58,0x26,0xb1,0x76,0x0e,0xcb,0x22,0xf6,0xb8,0xc3,0xb2,
    0x89,0x75,0x72,0x58,0x0e,0xb1,0xae,0x0e,0x6b,0x44,0xac,0xbb,0xc3,0x1a,0x13,0xeb,
    0xe9,0xb0,0x5c,0x62,0x7d,0x1c,0xd6,0x84,0x58,0x7f,0x87,0x35,0x25,0x36,0xc8,0x61,
    0xcd,0x88,0x0d,0x71,0x58,0x73,0x62,0xc3,0xa1,0x77,0xec,0xd4,0x34,0xa8,0x8c,0x1d,
    0xd6,0x33,0x77,0x1e,0xe7,0x99,0x51,0xb0,0x2e,0xd4,0xd0,0xe6,0x9d,0xdd,0x1c,0xda,
    0x77,0xe0,0xbc,0x55,0xcc,0x82,0x3c,0x9d,0x63,0xce,0x0c,0xe6,0x2c,0x88,0xbf,0xb2,
    0xa9,0x45,0x9b,0xe8,0x9f,0xc7,0xdf,0x58,0x87,0xb6,0x71,0x9e,0xcf,0x5a,0x81,0xf3,
    0x02,0xea,0x07,0xad,0x8b,0xe3,0xbf,0xf8,0xdd,0x1e,0xfa,0xf6,0x7a,0xbe,0xa4,0x75,
    0xf4,0xea,0xe0,0x70,0xf4,0x30,0xf1,0xcb,0xb1,0x65,0x36,0x87,0x8e,0x53,0xa6,0xfc,
    0x58,0x6a,0xf3,0x1e,0x71,0x0c,0xcd,0x7d,0x7b,0x98,0xcd,0xa1,0xe9,0x81,0xca,0xaa,
    0xa1,0x36,0xef,0x1b,0xc7,0xaf,0x07,0xba,0x3d,0x98,0x43,0xa3,0x9d,0x3b,0x0a,0x87,
    0x83,0x67,0x39,0x79,0xe2,0xd3,0x21,0xee,0xd2,0x11,0xdc,0x1f,0xc6,0xd7,0x46,0xf9,
    0xff,0x0c,0xf3,0xe9,0x14,0x73,0x56,0x70,0x7d,0x91,0xab,0x84,0xf3,0x91,0xc4,0x8a,
    0xa9,0xcd,0x28,0x6a,0x03,0xff,0x4a,0xda,0xf2,0x9d,0x7d,0x34,0xf7,0x1c,0xec,0x63,
    0x68,0x2f,0xa7,0x1d,0xdf,0xe3,0xc8,0xd9,0xfc,0xa7,0x51,0x4f,0x9b,0xcf,0xe1,0xfa,
    0xdb,0xbc,0x9a,0xeb,0x6d,0xf3,0x8d,0xdc,0xab,0x58,0x8b,0x2d,0x8c,0xcd,0x70,0xf6,
    0x6d,0xdc,0xb7,0xa6,0x59,0x4d,0x5a,0xbd,0x43,0xdc,0x87,0x36,0x3f,0x4d,0x8e,0xc8,
    0x77,0x8e,0xf9,0x82,0xb3,0x9f,0xe7,0xfe,0xb6,0xf9,0x25,0xee,0x59,0xf4,0x77,0x99,
    0xb1,0x79,0xce,0x7e,0x25,0x2d,0xbe,0x36,0xad,0xfe,0xb5,0xb4,0xbd,0x73,0xab,0xc1,
    0xba,0x6e,0x18,0xf2,0xdd,0xa1,0xb6,0x05,0xd4,0xff,0x0e,0xef,0x0f,0x60,0x85,0xb1,
    0x52,0x90,0x14,0x3f,0xff,0x11,0x7e,0x23,0x47,0x06,0x27,0xf0,0x2d,0xe1,0x3c,0x53,
    0x1e,0xe6,0x90,0x2b,0xaa,0x19,0x7a,0x6e,0x26,0xca,0x3f,0x83,0xf1,0xad,0x69,0x33,
    0x0e,0x98,0xb7,0x91,0x94,0xc6,0xa8,0x3f,0x21,0x12,0x58,0xb6,0xf7,0xe5,0x07,0xfb,
    0x76,0x62,0x9c,0x6f,0xdd,0xf0,0xe1,0xd0,0x81,0x71,0xe5,0x03,0xfb,0x4b,0x98,0xf3,
    0x76,0x44,0xb0,0x1f,0x86,0xf2,0xec,0xdc,0x65,0x4f,0xe3,0xe2,0x2a,0x42,0xef,0x7b,
    0xc4,0xee,0xba,0x5e,0xaa,0x79,0xee,0xee,0xd3,0x5e,0x16,0x33,0x60,0xaf,0xf5,0x10,
    0xdd,0x8f,0xa3,0x98,0xaf,0x61,0xdf,0x89,0xe2,0x6f,0x46,0x1f,0xcc,0x7b,0x8a,0xc6,
    0x01,0x47,0x1c,0xf6,0xe0,0x53,0x8c,0x1b,0xcd,0x38,0xec,0xc3,0x5e,0xa2,0xf8,0xfe,
    0xe8,0x83,0x33,0xdb,0x5b,0x14,0xc3,0xfe,0xfc,0x2b,0x32,0x1f,0x40,0xcd,0xee,0x44,
    0x7f,0xd8,0xfa,0xc4,0x01,0x0c,0xfd,0xe0,0xf7,0x84,0x18,0x07,0xdd,0xfa,0x89,0xd6,
    0xc4,0xe7,0x0d,0xea,0xfb,0xb4,0x28,0x3e,0x31,0xaa,0x03,0x4e,0xbd,0x83,0x62,0xe6,
    0xf7,0x77,0xcc,0x61,0xb9,0xf0,0x5d,0x17,0xb5,0x80,0xdf,0xa4,0xa0,0x3e,0x59,0x8c,
    0xe9,0xe3,0x7a,0x18,0xc8,0x1e,0xa6,0xb9,0x1e,0x9e,0x11,0xc5,0xad,0x87,0x41,0xa2,
    0x98,0xf5,0x50,0xea,0x7a,0x80,0x6d,0x70,0x1c,0xa5,0xac,0x3b,0xd8,0xf5,0x50,0x22,
    0x5a,0x5b,0x5c,0x0f,0x43,0x44,0x71,0xeb,0xa1,0x5f,0x50,0xcc,0xfc,0xd0,0x83,0xe5,
    0x2a,0x75,0x3d,0x4c,0x0e,0xea,0x83,0xbe,0x10,0x33,0xd8,0xf5,0x30,0x8c,0x3d,0xcc,
    0x71,0x3d,0x0c,0x17,0xc5,0xad,0x87,0x32,0x51,0xcc,0x7a,0x18,0xe9,0x7a,0x80,0xad,
    0x1c,0x39,0x58,0xb7,0x5c,0x74,0x1f,0xa1,0x6e,0x85,0x68,0xed,0xc9,0x21,0x75,0x1e,
    0xc0,0xd1,0x7c,0x47,0x3a,0x8e,0x53,0xe8,0x07,0xde,0x15,0xcc,0x09,0x3e,0x38,0x33,
    0x59,0x3c,0x2f,0xb6,0xe7,0xb2,0xc9,0xb9,0xd6,0xed,0xb9,0x1c,0x51,0x7c,0x1d,0xf7,
    0x5c,0x63,0x51,0x0c,0x79,0x11,0x87,0x7b,0xa1,0x09,0xe3,0x72,0x99,0x1b,0x9a,0x36,
    0x15,0xc5,0x4d,0xf7,0xe6,0xa2,0xb1,0xf8,0x18,0x96,0x47,0x0c,0xf0,0xf8,0xa8,0x3d,
    0xce,0x67,0xbe,0xa8,0x2f,0x6c,0x4d,0x25,0x55,0xa3,0x05,0x6b,0x5c,0x49,0x52,0x35,
    0x5a,0x8a,0xe2,0xb3,0x62,0xaf,0x38,0x6f,0xad,0xd8,0x13,0x72,0x04,0xda,0x6d,0x3d,
    0x26,0x30,0xbe,0xda,0xad,0xc7,0x44,0x51,0xdc,0xd6,0x63,0x92,0x28,0x66,0xeb,0x51,
    0xe5,0xd6,0x03,0xb6,0xc9,0x71,0x54,0x51,0xe3,0xc9,0xec,0x0d,0x77,0xc2,0x54,0xd1,
    0xda,0x09,0xe3,0xce,0xf3,0x77,0x7d,0xfc,0x8d,0x5c,0xa7,0x19,0x83,0xef,0xaf,0x59,
    0xeb,0x8c,0x68,0x5c,0x7b,0xc6,0xfc,0xe0,0x6a,0xc1,0xf6,0x4d,0x1c,0xe7,0x18,0x87,
    0xef,0xa6,0xb1,0x47,0xd4,0xfa,0x96,0x7a,0x3d,0xc6,0xba,0x78,0xce,0xbe,0x45,0x1e,
    0xdf,0x89,0xda,0xf1,0xac,0xdd,0x40,0xec,0x7b,0x51,0xbc,0x27,0xf7,0xc8,0x79,0xe6,
    0x44,0x7e,0x8b,0x3b,0x4b,0x2e,0x45,0x69,0x3e,0xe0,0xf4,0x4f,0xac,0x76,0x9b,0x58,
    0x1d,0x39,0x4c,0x0d,0x9a,0x17,0xbc,0xce,0x92,0x2b,0xce,0x0e,0xd6,0x60,0x40,0x50,
    0x7b,0x2b,0xb7,0xd6,0x88,0x99,0x4e,0x8d,0x84,0xfd,0xd6,0xa6,0x69,0x74,0x81,0x35,
    0x2f,0x38,0x8d,0x7e,0x12,0x8d,0x33,0x8d,0xae,0x3a,0x8d,0x60,0xbb,0x18,0xc7,0x65,
    0xc6,0x5d,0x76,0x1a,0xfd,0xec,0x34,0x9a,0x9e,0xa6,0xd1,0x2f,0xa2,0x76,0xaf,0xd1,
    0x15,0x51,0xdc,0x34,0xaa,0x65,0xce,0x8b,0x4e,0xa3,0x4b,0xe4,0x52,0x94,0xe6,0x73,
    0xd5,0x69,0x54,0xeb,0x34,0x9a,0x16,0x34,0x2f,0x78,0x5d,0x22,0x57,0xd3,0x68,0x50,
    0x50,0xfb,0x00,0x9e,0x5f,0xd3,0x68,0x26,0x35,0x0a,0xec,0xb7,0x2e,0x4d,0xa3,0x6b,
    0xac,0x79,0xcd,0x69,0xf4,0x9b,0x68,0x9c,0x69,0x74,0xcb,0x69,0x04,0xdb,0xf5,0x38,
    0x6e,0x32,0xee,0xa6,0xd3,0xe8,0x77,0xa7,0xd1,0xcc,0x34,0x8d,0xfe,0x10,0xb5,0x7b,
    0x8d,0xfe,0x14,0xc5,0x4d,0xa3,0x3a,0xe6,0xbc,0xee,0x34,0xba,0x41,0x2e,0x45,0x69,
    0x3e,0xb7,0x9c,0x46,0x75,0x4e,0xa3,0xe9,0x41,0xf3,0x82,0xd7,0x0d,0x72,0x35,0x8d,
    0x4a,0x82,0xda,0xa1,0x55,0x60,0x3e,0x3b,0x7b,0x55,0xcc,0x01,0xbf,0x19,0xdc,0x6b,
    0xb8,0xf3,0x10,0x53,0xe7,0xce,0xfc,0x6c,0x9e,0xf9,0x8d,0xee,0xcc,0xcf,0x11,0xc5,
    0xed,0xcc,0xcf,0x15,0xc5,0xec,0xcc,0xaf,0x77,0xfa,0xc1,0x36,0x2f,0x8e,0xa5,0xac,
    0xbb,0xd4,0xe5,0xae,0x66,0xee,0x6d,0x2e,0xf7,0x32,0x51,0xdc,0x72,0xbf,0x24,0x8a,
    0x59,0xee,0x55,0x2e,0x37,0x6c,0xcb,0xe3,0x58,0xc5,0xdc,0xcb,0xdd,0x7d,0xb2,0x42,
    0xb4,0x2f,0xbc,0x53,0x1c,0x63,0xae,0x95,0xa2,0x78,0x0d,0xb5,0xb0,0xb8,0x55,0xd4,
    0x02,0x3e,0xaf,0x88,0xd6,0x04,0xcf,0x95,0xcc,0x8f,0xba,0xeb,0x5c,0x5d,0xf8,0xac,
    0xc6,0x7d,0xce,0xf8,0xd5,0xae,0xee,0xab,0xae,0xee,0xb8,0xf8,0x66,0x89,0x77,0xce,
    0xd7,0x88,0xcd,0x08,0xa9,0x77,0x96,0xc0,0xfb,0x1a,0xf6,0x35,0xa2,0x71,0x36,0x36,
    0xc5,0x5c,0xc0,0x5f,0x17,0x8d,0x5d,0xd3,0xd0,0x7f,0xe3,0x86,0xb5,0x5a,0xcb,0x5c,
    0xb0,0x65,0xf2,0xdd,0xd9,0xde,0x69,0xd1,0x93,0x71,0x5a,0xe7,0xd6,0x77,0x16,0x6b,
    0xa3,0xcf,0xb5,0xe4,0x0e,0xdf,0xf5,0xf4,0x9d,0xe7,0xf8,0x2f,0xf8,0x0f,0xfe,0x8b,
    0x1e,0xc1,0xff,0x3d,0xf2,0x5c,0x2c,0xea,0xb3,0xc0,0xf1,0x5c,0xc2,0x98,0xc5,0x8f,
    0xe0,0x69,0xb5,0xd7,0x3b,0x9e,0x33,0x83,0x72,0x05,0xf7,0x25,0xdc,0x37,0xb6,0x57,
    0x36,0x71,0xaf,0x1c,0x72,0x7b,0xe5,0x1d,0x51,0xdc,0xf6,0xca,0xbb,0xa2,0x98,0xed,
    0x95,0xed,0x6e,0xcd,0x60,0xdb,0x1c,0xc7,0x76,0xd6,0xdd,0xec,0x7a,0xde,0x22,0x5a,
    0xdb,0x9e,0x3d,0x39,0xe1,0xe1,0x3b,0xa3,0x9e,0x31,0xf5,0xee,0xce,0xb8,0x27,0x1a,
    0xd7,0x97,0x31,0xd9,0x21,0x55,0x0b,0xb6,0xfb,0xb8,0x1b,0x82,0xc6,0xe1,0x7b,0x3d,
    0x6b,0x65,0x04,0x8d,0xeb,0xe9,0xee,0x8a,0xcc,0xa0,0x38,0xde,0x93,0xed,0x6e,0xc9,
    0x0a,0xa9,0xbb,0x05,0xf6,0x21,0xd4,0x2d,0x87,0x39,0xef,0xbb,0x3b,0x23,0x61,0x4e,
    0xbc,0x57,0x7b,0x1f,0x70,0xb2,0x3b,0x03,0x98,0xdd,0x19,0x2f,0x04,0xe6,0x0f,0x1a,
    0x7b,0xdf,0xdd,0x19,0x65,0x41,0xed,0xa6,0x87,0x69,0xb4,0x95,0x1a,0xd9,0xb3,0xa7,
    0x30,0x4d,0xa3,0x66,0xac,0x89,0x6f,0xd3,0x28,0x2f,0x68,0x9c,0x69,0xd4,0xce,0x69,
    0x04,0x5b,0x3e,0xee,0x1d,0xc6,0xb5,0x72,0x1a,0xb5,0x61,0x9c,0xd7,0xa8,0x20,0x28,
    0xee,0x35,0x6a,0xeb,0x34,0x2a,0x70,0x1a,0x15,0x32,0x27,0xf2,0x5b,0x7c,0x4b,0xe6,
    0x34,0x8d,0xcc,0xa7,0x9d,0xd3,0xa8,0xd0,0x69,0x34,0x3b,0x68,0x7e,0xf0,0x6a,0x49,
    0xae,0xa6,0x51,0x45,0x50,0x7b,0x59,0xda,0xb3,0xe7,0x7d,0x6a,0x64,0xcf,0x9e,0xe2,
    0x34,0x8d,0x3a,0xb2,0x66,0x47,0xa7,0x51,0xe7,0xa0,0x71,0xa6,0x51,0x0f,0xa7,0x11,
    0x6c,0x5d,0xe2,0xe8,0xc6,0xb8,0x6e,0x4e,0xa3,0x27,0x18,0xe7,0x35,0xea,0x1e,0x14,
    0xf7,0x1a,0x3d,0xe9,0x34,0xea,0xee,0x34,0x2a,0x66,0xce,0x2e,0x4e,0xa3,0xae,0xcc,
    0x69,0x1a,0x99,0x4f,0x0f,0xa7,0x51,0xb1,0xd3,0x68,0x6e,0xd0,0xfc,0xe0,0xd5,0x95,
    0x5c,0x4d,0xa3,0xca,0xa0,0xf6,0x0a,0xf7,0xec,0xb1,0xb3,0xb7,0xdd,0x9d,0xf9,0xf9,
    0xdc,0x6b,0xb8,0x07,0x10,0x53,0x1c,0x52,0x67,0x7e,0x07,0xcf,0xfc,0x69,0x77,0xe6,
    0x77,0x8a,0xe2,0x76,0xe6,0x3f,0x10,0xc5,0xec,0xcc,0x9f,0x72,0x67,0x1e,0xb6,0x9a,
    0x38,0x76,0xb3,0xee,0x6e,0x77,0x9f,0x7c,0xc4,0xdc,0xe7,0x5d,0xee,0x8f,0x45,0x71,
    0xcb,0xfd,0x89,0x28,0x66,0xb9,0x4f,0xba,0xdc,0xb0,0xed,0x89,0x63,0x1f,0x73,0xef,
    0x73,0xef,0xd9,0x9f,0x32,0xf7,0x25,0xf7,0x9e,0xbd,0x5f,0x14,0x3f,0xc3,0xf7,0xf6,
    0xcf,0x44,0x31,0xbc,0x8b,0x5b,0xbd,0x03,0xa2,0x78,0x2d,0xeb,0x1d,0x76,0xf5,0x60,
    0x3b,0x18,0xc7,0x61,0xd6,0x3b,0xe8,0xce,0xec,0x98,0xa0,0xcf,0xb4,0xf9,0xee,0xff,
    0x5a,0xe6,0x77,0xd8,0x69,0xbd,0x20,0xa8,0x0f,0xb8,0x22,0xe6,0xa0,0xe3,0xf3,0x39,
    0xf9,0x5c,0x73,0x7c,0xbe,0x10,0xc5,0x8d,0xcf,0x51,0xc7,0x07,0xb6,0x23,0x71,0x1c,
    0x65,0x9d,0x23,0x8e,0xcf,0x58,0xf2,0x59,0xe0,0xd6,0xde,0xfc,0x8e,0x3a,0x3e,0x0b,
    0x83,0xfa,0x80,0x23,0x62,0x8e,0x38,0x3e,0x5f,0x91,0xcf,0x36,0xc7,0xe7,0x98,0x28,
    0x6e,0x7c,0x4e,0x38,0x3e,0xb0,0x1d,0x8f,0xe3,0x04,0xeb,0x1c,0x77,0x7c,0xc6,0x07,
    0xfd,0xbb,0xc9,0xc2,0x90,0x7a,0xfe,0x98,0xdf,0x09,0xc7,0xe7,0xc5,0xa0,0x3e,0xe0,
    0x88,0x98,0xe3,0x7c,0x4e,0x9e,0xa4,0xef,0x1e,0xf7,0xcc,0xd8,0x2b,0xaa,0x25,0xf2,
    0x59,0x9d,0xe7,0x42,0x0a,0xb7,0xff,0x4f,0x5a,0xec,0x49,0x57,0x67,0x71,0xd0,0x5a,
    0xa8,0x8d,0x98,0x3d,0xac,0x73,0x8a,0xbe,0x35,0xee,0x39,0xba,0x8b,0xf9,0x30,0xec,
    0xef,0xc1,0xc1,0x3d,0x47,0x2d,0xe6,0x94,0xcb,0xbf,0x28,0x68,0x0d,0xd4,0xdc,0xc5,
    0x33,0x50,0x1a,0x23,0xf0,0x77,0x19,0xd8,0xee,0xc5,0x5d,0x32,0x28,0x8e,0x7f,0x01,
    0xd9,0x60,0x5b,0x42,0xc0,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out vec4 dst;
//
// #line 1 "shaders/src/ImageCopy.inc"
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// ivec2 transformImageCoords(ivec2 glFragCoords)
// {
//     ivec2 imageCoordsOut = glFragCoords - params . dstOffset;
//
//     if(params . flipX)
//     {
//         imageCoordsOut . x = - imageCoordsOut . x;
//     }
//     if(params . flipY)
//     {
//         imageCoordsOut . y = - imageCoordsOut . y;
//     }
//     if(params . rotateXY)
//     {
//         imageCoordsOut . xy = imageCoordsOut . yx;
//     }
//
//     return imageCoordsOut;
// }
//
//       vec4 transformSrcValue(vec4 srcValue)
// {
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//           vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     return dstValue;
// }
// #line 56 "shaders/src/ImageCopy.frag"
//
// void main()
// {
//     ivec2 srcSubImageCoords = transformImageCoords(ivec2(gl_FragCoord . xy));
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     dst = transformSrcValue(srcValue);
// }
