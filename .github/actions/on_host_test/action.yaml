name: On Host Test
description: Runs on-host tests.
runs:
  using: "composite"
  steps:
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.6.0
    - name: Configure Environment
      id: configure-environment
      shell: bash
      run: |
        set -x
        echo "ARCHIVE_EXTENSION=tar.xz" >> $GITHUB_ENV
    - name: Download Archive
      shell: bash
      env:
        WORKFLOW: ${{ github.workflow }}
      run: |
        set -x
        PROJECT_NAME=$(gcloud config get-value project)
        gsutil cp gs://${PROJECT_NAME}-test-artifacts/${WORKFLOW}/${GITHUB_RUN_NUMBER}/${{matrix.platform}}_${{matrix.config}}/${{matrix.platform}}_${{matrix.config}}.${ARCHIVE_EXTENSION} ${GITHUB_WORKSPACE}/out/tmp/${{matrix.platform}}_${{matrix.config}}.${ARCHIVE_EXTENSION}
    - name: Extract Archive
      shell: bash
      run: |
        set -x
        python3 ${GITHUB_WORKSPACE}/tools/create_archive.py -x -s ${GITHUB_WORKSPACE}/out/tmp/${{matrix.platform}}_${{matrix.config}}.${ARCHIVE_EXTENSION} -d ${GITHUB_WORKSPACE}/out --parallel
        rm -rf ${GITHUB_WORKSPACE}/out/tmp
    - name: Download Bootloader Archive
      if: ${{ env.COBALT_BOOTLOADER != null && env.COBALT_BOOTLOADER != 'null' }}
      shell: bash
      env:
        WORKFLOW: ${{ github.workflow }}
      run: |
        set -x
        PROJECT_NAME=$(gcloud config get-value project)
        gsutil cp gs://${PROJECT_NAME}-test-artifacts/${WORKFLOW}/${GITHUB_RUN_NUMBER}/${{matrix.platform}}_${{matrix.config}}/${COBALT_BOOTLOADER}_${{matrix.config}}.${ARCHIVE_EXTENSION} ${GITHUB_WORKSPACE}/out/tmp/${COBALT_BOOTLOADER}_${{matrix.config}}.${ARCHIVE_EXTENSION}
    - name: Extract Bootloader Archive
      if: ${{ env.COBALT_BOOTLOADER != null && env.COBALT_BOOTLOADER != 'null' }}
      shell: bash
      run: |
        set -x
        python3 ${GITHUB_WORKSPACE}/tools/create_archive.py -x -s ${GITHUB_WORKSPACE}/out/tmp/${COBALT_BOOTLOADER}_${{matrix.config}}.${ARCHIVE_EXTENSION} -d ${GITHUB_WORKSPACE}/out --parallel
        rm -rf ${GITHUB_WORKSPACE}/out/tmp
    - name: Set Env Variables
      shell: bash
      run: |
        echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
    - name: Run Tests
      shell: bash
      run: |
        set -x
        loader_args=''
        if [ "${COBALT_BOOTLOADER}" != "null" ]; then
          loader_args="--loader_platform ${{matrix.bootloader_platform}} --loader_config ${{matrix.config}}"
        fi
        if [[ "${{matrix.shard}}" == 'integration' ]]; then
          xvfb-run -a --server-args="-screen 0 1920x1080x24i +render +extension GLX -noreset" python2 $GITHUB_WORKSPACE/cobalt/black_box_tests/black_box_tests.py --platform ${{matrix.platform}} --config ${{matrix.config}} ${loader_args}
        elif [[ "${{matrix.shard}}" == 'evergreen' ]]; then
          xvfb-run -a --server-args="-screen 0 1920x1080x24i +render +extension GLX -noreset" python2 $GITHUB_WORKSPACE/cobalt/evergreen_tests/evergreen_tests.py --platform ${{matrix.platform}} --config ${{matrix.config}} ${loader_args} --platform_under_test linux --no-can_mount_tmpfs
        else
          xvfb-run -a --server-args="-screen 0 1920x1080x24i +render +extension GLX -noreset" python2 $GITHUB_WORKSPACE/starboard/tools/testing/test_runner.py --platform ${{matrix.platform}} --config ${{matrix.config}} -r ${loader_args}
        fi
