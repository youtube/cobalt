<!--
Copyright 2023 The Chromium Authors
Use of this source code is governed by a BSD-style license that can be
found in the LICENSE file.
-->

<!--
This file is used to generate a comprehensive list of Trusted Vault histograms
along with a detailed description for each histogram.

For best practices on writing histogram descriptions, see
https://chromium.googlesource.com/chromium/src.git/+/HEAD/tools/metrics/histograms/README.md

Please follow the instructions in the OWNERS file in this directory to find a
reviewer. If no OWNERS file exists, please consider signing up at
go/reviewing-metrics (Googlers only), as all subdirectories are expected to
have an OWNERS file. As a last resort you can send the CL to
chromium-metrics-reviews@google.com.
-->

<histogram-configuration>

<histograms>

<variants name="SecurityDomainId">
  <variant name=".ChromeSync" summary="The security domain used for Zuul"/>
  <variant name=".HwProtected" summary="The security domain used for passkeys"/>
</variants>

<histogram name="TrustedVault.DeviceRegistered{SecurityDomainId}"
    enum="Boolean" expires_after="2025-05-03">
  <owner>mmoskvitin@google.com</owner>
  <owner>mastiz@chromium.org</owner>
  <summary>
    Simplified version of TrustedVault.DeviceRegistrationState. Records whether
    the local device is registered (and ignores whether re-registration was
    completed/pending/in-flight) upon startup (if signed in) or upon first
    signin.
  </summary>
  <token key="SecurityDomainId" variants="SecurityDomainId"/>
</histogram>

<histogram name="TrustedVault.DeviceRegistrationOutcome{SecurityDomainId}"
    enum="TrustedVaultDeviceRegistrationOutcome" expires_after="2025-05-05">
  <owner>mmoskvitin@google.com</owner>
  <owner>mastiz@chromium.org</owner>
  <summary>
    Records the outcome of device registration attempt upon request completion
    or failure.
  </summary>
</histogram>

<histogram name="TrustedVault.DeviceRegistrationState{SecurityDomainId}"
    enum="TrustedVaultDeviceRegistrationState" expires_after="2025-05-09">
  <owner>mmoskvitin@google.com</owner>
  <owner>mastiz@chromium.org</owner>
  <summary>
    Records whether the local device is registered on the server upon startup
    (if signed in) or upon first signin, and if not registered, provides
    insights into why.
  </summary>
  <token key="SecurityDomainId" variants="SecurityDomainId"/>
</histogram>

<histogram
    name="TrustedVault.DownloadAuthenticationFactorsRegistrationState{SecurityDomainId}"
    enum="DownloadAuthenticationFactorsRegistrationStateResult"
    expires_after="2025-06-01">
  <owner>agl@google.com</owner>
  <owner>mmoskvitin@google.com</owner>
  <summary>
    Records the results of DownloadAuthenticationFactorsRegistrationState calls.
    This function determines the recoverability state of a security domain.

    It is recorded whenever DownloadAuthenticationFactorsRegistrationState is
    called. For passkeys this happens during WebAuthn calls, in some cases
    without a Google Password Manager passkey being selected, only present.
  </summary>
  <token key="SecurityDomainId" variants="SecurityDomainId"/>
</histogram>

<histogram name="TrustedVault.FileReadStatus{SecurityDomainId}"
    enum="TrustedVaultFileReadStatus" expires_after="2025-05-03">
  <owner>mmoskvitin@google.com</owner>
  <owner>mastiz@chromium.org</owner>
  <summary>Recorded when reading local trusted vault file.</summary>
  <token key="SecurityDomainId" variants="SecurityDomainId"/>
</histogram>

<histogram name="TrustedVault.FileWriteSuccess{SecurityDomainId}"
    enum="Boolean" expires_after="2025-05-03">
  <owner>mmoskvitin@google.com</owner>
  <owner>mastiz@chromium.org</owner>
  <summary>
    Records whether writing local trusted vault file upon each write.
  </summary>
  <token key="SecurityDomainId" variants="SecurityDomainId"/>
</histogram>

<histogram
    name="TrustedVault.JavascriptSetClientEncryptionKeysForSecurityDomain"
    enum="SecurityDomainId" expires_after="2025-01-31">
  <owner>mastiz@chromium.org</owner>
  <owner>martinkr@google.com</owner>
  <summary>
    Records the security domains passed as arguments to the Javascript API
    chrome.setClientEncryptionKeys() on the renderer side (one sample per
    security domain; multiple domains can be passed in one API call). Every
    unrecognized security domain name is recorded as &quot;invalid&quot;.
  </summary>
</histogram>

<histogram name="TrustedVault.JavascriptSetClientEncryptionKeysValidArgs"
    enum="BooleanValid" expires_after="2025-01-31">
  <owner>mastiz@chromium.org</owner>
  <owner>martinkr@google.com</owner>
  <summary>
    For each invocation of the Javascript API chrome.setClientEncryptionKeys(),
    records whether the passed arguments could be successfully parsed (one
    sample per invocation).
  </summary>
</histogram>

<histogram name="TrustedVault.RecoveryKeyStoreURLFetchResponse{Reason}"
    enum="CombinedHttpResponseAndNetErrorCode" expires_after="2025-01-31">
  <owner>mastiz@chromium.org</owner>
  <owner>mmoskvitin@chromium.org</owner>
  <owner>martinkr@google.com</owner>
  <summary>
    Counts of responses (both http code and net error code) for requests to the
    recovery key store server (aka Vault Service). Note that requests that timed
    out are not covered by this histogram.

    {Reason}
  </summary>
  <token key="Reason">
    <variant name="" summary="Any reason"/>
    <variant name=".UpdateRecoveryKeyStore"
        summary="Upload a set of recovery keys"/>
  </token>
</histogram>

<histogram
    name="TrustedVault.SecurityDomainServiceURLFetchResponse{Reason}{SecurityDomainId}"
    enum="CombinedHttpResponseAndNetErrorCode" expires_after="2025-04-06">
  <owner>mastiz@chromium.org</owner>
  <owner>mmoskvitin@chromium.org</owner>
  <owner>martinkr@google.com</owner>
  <summary>
    Counts of responses (both http code and net error code) for requests to the
    Trusted Vault server (aka Security Domain Service), broken out by {Reason}
    and {SecurityDomainId}. Note that requests that timed out are not covered by
    this histogram.
  </summary>
  <token key="SecurityDomainId" variants="SecurityDomainId">
    <variant name="" summary="Any security domain"/>
  </token>
  <token key="Reason">
    <variant name="" summary="Any reason"/>
    <variant name=".DownloadAuthenticationFactorsRegistrationState"
        summary="Downloading of auth factor registrations"/>
    <variant name=".DownloadIsRecoverabilityDegraded"
        summary="Downloading of the recoverability-degraded state"/>
    <variant name=".DownloadKeys" summary="Downloading of keys"/>
    <variant name=".RegisterDevice" summary="Local device registration"/>
    <variant name=".RegisterGooglePasswordManagerPIN"
        summary="Google Password Manager PIN registration"/>
    <variant name=".RegisterICloudKeychain"
        summary="Registration of a secret synced by iCloud Keychain"/>
    <variant name=".RegisterLockScreenKnowledgeFactor"
        summary="Registration of a lock screen knowledge factor (e.g. PIN or
                 local password)"/>
    <variant name=".RegisterUnspecifiedAuthenticationFactor"
        summary="Registration of an authentication factor of unspecified type"/>
  </token>
</histogram>

<histogram name="TrustedVault.SetEncryptionKeysForSecurityDomain{ProfileType}"
    enum="SecurityDomainId" expires_after="2025-01-31">
  <owner>mastiz@chromium.org</owner>
  <owner>martinkr@google.com</owner>
  <summary>
    Records the security domains passed as arguments to the Javascript API
    chrome.setClientEncryptionKeys() (or chrome.setSyncEncryptionKeys()) on the
    browser side (one sample per passed domain; multiple domains can be passed
    in one API call). Every unrecognized security domain name is recorded as
    &quot;invalid&quot;.

    {ProfileType}
  </summary>
  <token key="ProfileType">
    <variant name=".AllProfiles" summary="All profile types"/>
    <variant name=".OffTheRecordOnly" summary="Off-the-record profiles only"/>
  </token>
</histogram>

</histograms>

</histogram-configuration>
