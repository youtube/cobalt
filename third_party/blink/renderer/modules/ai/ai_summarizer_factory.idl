// Copyright 2024 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://github.com/WICG/writing-assistance-apis

[
  Exposed=(Window,Worker),
  RuntimeEnabled=AISummarizationAPI,
  SecureContext
]
interface AISummarizerCapabilities {
  readonly attribute AICapabilityAvailability available;

  AICapabilityAvailability createOptionsAvailable(AISummarizerCreateCoreOptions options);

  AICapabilityAvailability languageAvailable(DOMString languageTag);
};

enum AISummarizerType { "tl;dr", "key-points", "teaser", "headline" };
enum AISummarizerFormat { "plain-text", "markdown" };
enum AISummarizerLength { "short", "medium", "long" };

dictionary AISummarizerCreateCoreOptions {
  AISummarizerType type = "key-points";
  AISummarizerFormat format = "markdown";
  AISummarizerLength length = "short";

  sequence<DOMString> expectedInputLanguages;
  sequence<DOMString> expectedContextLanguages;
  DOMString outputLanguage;
};

dictionary AISummarizerCreateOptions : AISummarizerCreateCoreOptions {
  AbortSignal signal;
  AICreateMonitorCallback monitor;
  DOMString sharedContext;
};

[
  Exposed=(Window,Worker),
  RuntimeEnabled=AISummarizationAPI,
  SecureContext
]
interface AISummarizerFactory {
  [
    Measure,
    CallWith=ScriptState,
    RaisesException
  ]
  Promise<AISummarizer> create(optional AISummarizerCreateOptions options = {});

  [
    Measure,
    CallWith=ScriptState,
    RaisesException
  ]
  Promise<AIAvailability> availability(
    optional AISummarizerCreateCoreOptions options = {}
  );

  // TODO(crbug.com/390477782): Deprecate this method.
  [
    Measure,
    CallWith=ScriptState,
    RaisesException
  ]
  Promise<AISummarizerCapabilities> capabilities();
};
