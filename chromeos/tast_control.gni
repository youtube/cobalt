# Copyright 2021 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/sanitizers/sanitizers.gni")

#~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=
# BEFORE ADDING A TEST HERE: If this is a consistent failure in Chrome on
# ChromeOS CI builders, you should try to find and revert CLs causing new
# regressions. Do not simply disable newly failing tests in tast_control.gni
# as the Chrome uprev will still fail.
#
# Chromimum sheriffs should not disable NEW regressions here. Changes to
# this file require the current CrOS gardener's approval. See go/chrome-sheriff-tast.
#~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=

# WARNING: if you wish to disable a tast test that runs in a ChromeOS SDK
# build, this is the wrong file to edit. You need to mark those tests as
# "informational" in their source .go files.

# To disable a specific test in chrome_all_tast_tests, add the name of the test
# to the following list and cite a bug.
#
# To disable the test only on a specific board, add an at-mark ( @ ) and the
# board name at the end of the entry (eg. "login.Chrome@kevin" disables
# "login.Chrome" test only on "kevin" device). An asterisk is not supported in
# the board name.
#
# As a last resort, you can use an asterisk ( * ) in an entry -- matches every
# substring (eg. "crostini.*" disables the all tests that names are starting
# with "crostini.").
# WARNING: This may cause unexpected disablement and is strongly discouraged.
# You should specify the tests one-by-one in most cases, instead of this.
tast_disabled_tests_from_chrome_all = [
  # https://crbug.com/1307940
  "policy.URLCheck.blocklist",

  # https://crbug.com/1312121
  "policy.CookiesBlockedForUrls",

  # http://crbug.com/1335213
  "arc.WindowState.clamshell",

  # b/241122961
  "policy.BlockThirdPartyCookies",

  # b/287525851
  "arc.AudioValidity.playback",
  "arc.AudioValidity.record",
  "arc.BuildProperties",

  # https://crbug.com/1455848
  "arc.CheckAndroidVersion",
  "arc.Downloads",

  # b/293976130, NaCl issues on arm64 boards
  "nacl.Pnacl@jacuzzi",
  "nacl.Pnacl@trogdor",
  "terminal.SSH@jacuzzi",
  "terminal.SSH@trogdor",

  # b/338111076
  "crostini.AppAndroidStudio.bookworm_clamshell_stable@octopus",

  # b/346793249, b/330290054
  "videoconferencing.OpenCLCacher",

  # b/352753237, Pnacl and terminal.SSH failing only on brya, blocking LKGM
  "nacl.Pnacl@brya",
  "terminal.SSH@brya",

  # b/352703668: tests failing on trogdor.
  "security.SELinuxFilesDataDir.arcvm_user@trogdor",

  # b/384060114
  "inputs.InputMethodShelfInputs@reven-vmtest",
  "inputs.VirtualKeyboardHandwriting.docked@reven-vmtest",
  "inputs.VirtualKeyboardHandwriting.floating@reven-vmtest",

  # b/394108883
  "security.NetworkListenersNonARC@jacuzzi",
  "security.NetworkListenersNonARC@octopus",

  # https://crbug.com/394821952
  "ui.WebUIJSErrors",
  "ui.WebUIJSErrors.field_trial_off",
  "ui.WebUIJSErrors.field_trial_on",

  # b/394409115
  "network.AllowCACertificateManagement",
  "network.AllowClientCertificateManagement",

  #b/400849446
  "network.ARCCreateWifiInShillByCmd.manual_proxy",

  # b/408102591
  "network.ARCEAPWifiProvisioning.eap_wifi_tls",

  # b/409064294
  "apps.SystemWebAppsInstallGuest",
  "peripherals.LaunchAppFromGuestSession.diagnostics",
  "health.MonitorKeyboardDiagnosticEvent.tablet_mode_form_factors",
  "health.MonitorKeyboardDiagnosticEvent.non_tablet_mode_form_factors",

  # b/409349162
  "inputs.PhysicalKeyboardKoreanTyping@jacuzzi",

  # READ COMMENT AT TOP BEFORE ADDING NEW TESTS HERE.
]

# Entries only for the public builders (chromeos-XXX-rel)
if (!is_chrome_branded) {
  tast_disabled_tests_from_chrome_all += [
    # b/377802615: "runtime variable XXX is missing" error
    "bruschetta.AppVscodeWindowOperations.minimize",
    "crostini.AppAudacity.bookworm_clamshell_stable",
    "crostini.AppAudacityWindowOperations.maximize_bookworm_clamshell_stable",
    "crostini.AppAudacityWindowOperations.minimize_bookworm_clamshell_stable",
    "crostini.AppAudacityWindowOperations.switch_tablet_bookworm_clamshell_stable",
    "crostini.AppEmacs.bookworm_clamshell_stable",
    "crostini.AppEmacsWindowOperations.maximize_bookworm_clamshell_stable",
    "crostini.AppEmacsWindowOperations.minimize_bookworm_clamshell_stable",
    "crostini.AppEmacsWindowOperations.switch_tablet_bookworm_clamshell_stable",
    "crostini.AppFirefox.bookworm_clamshell_stable",
    "crostini.AppFirefoxNonalphanumericInput.bookworm_clamshell_stable",
    "crostini.AppFirefoxWindowOperations.maximize_bookworm_clamshell_stable",
    "crostini.AppFirefoxWindowOperations.minimize_bookworm_clamshell_stable",
    "crostini.AppFirefoxWindowOperations.switch_tablet_bookworm_clamshell_stable",
    "crostini.AppGedit.bookworm_clamshell_stable",
    "crostini.AppGedit.bullseye_clamshell_stable",
    "crostini.AppGeditFilesharing.bookworm_clamshell_stable",
    "crostini.AppGeditUnshareFolder.bookworm_clamshell_stable",
    "crostini.AppGeditNonalphanumericInput.bookworm_clamshell_stable",
    "crostini.AppVSCodeNonalphanumericInput.bookworm_clamshell_stable",
    "crostini.AppVscode.bookworm_clamshell_stable",
    "crostini.AppVscode.bullseye_clamshell_stable",
    "crostini.AppVscodeFromFileManager.bookworm_clamshell_stable",
    "crostini.AppVscodeWindowOperations.maximize_bookworm_clamshell_stable",
    "crostini.AppVscodeWindowOperations.minimize_bookworm_clamshell_stable",
    "crostini.AppVscodeWindowOperations.switch_tablet_bookworm_clamshell_stable",
    "crostini.RestartApp.bookworm_clamshell_stable",
    "shimlessrma.SelectComponentsNoneNextCancel.critical",
    "shimlessrma.WelcomeCancel.critical",
    "shimlessrma.WelcomeNextCancel.critical",
  ]
}
