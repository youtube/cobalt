Test the File constructor.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".

PASS (new File([new Blob([new Blob])], 'world.html')) instanceof window.File is true
PASS (new Blob([new File([], 'world.txt')])) instanceof window.Blob is true
PASS (new Blob([new Blob([new File([new Blob], 'world.txt')])])) instanceof window.Blob is true
PASS (new File([new Blob([new File([new Blob], 'world.txt')])], 'world.html')) instanceof window.File is true
PASS (new File([], 'world.html', {lastModified: 441532800000})).lastModified is 441532800000
PASS (new File([], 'world.html')).lastModified is equivalent to Date.now().
PASS (new File([], 'world.html', {})).lastModified is equivalent to Date.now().
PASS (new File([], 'world.html', {type: 'text/plain'})).lastModified is equivalent to Date.now().
PASS (new File([], 'world.html', {lastModified: new Date(441532800000)})).lastModified is 441532800000
PASS (new File([], 'world.html', {lastModified: 441532800000})).lastModifiedDate instanceof Date is true
PASS (new File([], 'world.html', {lastModified: 441532800000})).lastModifiedDate.valueOf() is 441532800000
PASS new File([new DataView(new ArrayBuffer(100))], 'world.html').size is 100
PASS new File([new Uint8Array(100)], 'world.html').size is 100
PASS new File([new Uint8ClampedArray(100)], 'world.html').size is 100
PASS new File([new Uint16Array(100)], 'world.html').size is 200
PASS new File([new Uint32Array(100)], 'world.html').size is 400
PASS new File([new Int8Array(100)], 'world.html').size is 100
PASS new File([new Int16Array(100)], 'world.html').size is 200
PASS new File([new Int32Array(100)], 'world.html').size is 400
PASS new File([new Float32Array(100)], 'world.html').size is 400
PASS new File([new Float64Array(100)], 'world.html').size is 800
PASS new File([new Float64Array(100), new Int32Array(100), new Uint8Array(100), new DataView(new ArrayBuffer(100))], 'world.html').size is 1400
PASS new File([new Blob([new Int32Array(100)]), new Uint8Array(100), new Float32Array(100), new DataView(new ArrayBuffer(100))], 'world.html').size is 1000
PASS new File([new Blob([new Int32Array(100)]), new File([new Uint16Array(100)], 'world.txt'), new Uint8Array(100), new Float32Array(100), new DataView(new ArrayBuffer(100))], 'world.html').size is 1200
PASS new File([(new DataView(new ArrayBuffer(100))).buffer], 'world.html').size is 100
PASS new File([(new Uint8Array(100)).buffer], 'world.html').size is 100
PASS new File([(new Uint8ClampedArray(100)).buffer], 'world.html').size is 100
PASS new File([(new Uint16Array(100)).buffer], 'world.html').size is 200
PASS new File([(new Uint32Array(100)).buffer], 'world.html').size is 400
PASS new File([(new Int8Array(100)).buffer], 'world.html').size is 100
PASS new File([(new Int16Array(100)).buffer], 'world.html').size is 200
PASS new File([(new Int32Array(100)).buffer], 'world.html').size is 400
PASS new File([(new Float32Array(100)).buffer], 'world.html').size is 400
PASS new File([(new Float64Array(100)).buffer], 'world.html').size is 800
PASS new File([(new Float64Array(100)).buffer, (new Int32Array(100)).buffer, (new Uint8Array(100)).buffer, (new DataView(new ArrayBuffer(100))).buffer], 'world.html').size is 1400
PASS new File([new Blob([(new Int32Array(100)).buffer]), (new Uint8Array(100)).buffer, (new Float32Array(100)).buffer, (new DataView(new ArrayBuffer(100))).buffer], 'world.html').size is 1000
PASS new File([new Blob([(new Int32Array(100)).buffer]), new File([new Uint16Array(100).buffer], 'world.txt'), (new Uint8Array(100)).buffer, (new Float32Array(100)).buffer, (new DataView(new ArrayBuffer(100))).buffer], 'world.html').size is 1200
PASS new Blob([new Blob([new Int32Array(100)]), new File([new Uint16Array(100)], 'world.txt'), new Uint8Array(100), new Float32Array(100), new DataView(new ArrayBuffer(100))]).size is 1200
PASS new Blob([new Blob([(new Int32Array(100)).buffer]), new File([new Uint16Array(100).buffer], 'world.txt'), (new Uint8Array(100)).buffer, (new Float32Array(100)).buffer, (new DataView(new ArrayBuffer(100))).buffer]).size is 1200
PASS successfullyParsed is true

TEST COMPLETE

