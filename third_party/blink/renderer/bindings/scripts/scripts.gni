# Copyright 2014 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/python.gni")
import("//third_party/blink/renderer/build/scripts/scripts.gni")

bindings_scripts_dir = get_path_info(".", "abspath")
bindings_scripts_output_dir = get_path_info(".", "gen_dir")

# Calls generate_event_interfaces
#
# Parameters:
#   sources = A list of IDL files to process.
#   output_file = The .in file to write, relative to the blink_gen_dir.
#   suffix = (Optional) String to be passed to script via --suffix
#   export_macro = (Optional) String to be passed to script via --export-macro
template("generate_event_interfaces") {
  action(target_name) {
    # Write the file list to a unique temp file to avoid blowing out the
    # command line length limit.
    idl_files_list = "$target_gen_dir/${target_name}_file_list.tmp"
    write_file(idl_files_list, rebase_path(invoker.sources, root_build_dir))

    inputs = [
               "//third_party/blink/renderer/bindings/scripts/utilities.py",
               idl_files_list,
             ] + invoker.sources

    output_file =
        "$root_gen_dir/third_party/blink/renderer/" + invoker.output_file
    outputs = [ output_file ]

    script = "//third_party/blink/renderer/bindings/scripts/generate_event_interfaces.py"
    args = [
      "--event-idl-files-list",
      rebase_path(idl_files_list, root_build_dir),
      "--event-interfaces-file",
      rebase_path(output_file, root_build_dir),
    ]

    if (defined(invoker.suffix)) {
      args += [
        "--suffix",
        invoker.suffix,
      ]
    }

    if (defined(invoker.export_macro)) {
      args += [
        "--export-macro",
        invoker.export_macro,
      ]
    }
  }
}
