This is a testharness.js-based test.
[PASS] 'calc(1px * NaN)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1% * NaN)' as a specified value should serialize as 'calc(NaN * 1%)'.
[PASS] 'calc(1in * NaN)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1cm * NaN)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1mm * NaN)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1q * NaN)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1pt * NaN)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1pc * NaN)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * nan)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * infinity / infinity)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * 0 * infinity)' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * (infinity + -infinity))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * (-infinity + infinity))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * (infinity - infinity))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * infinity)' as a specified value should serialize as 'calc(infinity * 1px)'.
[PASS] 'calc(1px * -infinity)' as a specified value should serialize as 'calc(-infinity * 1px)'.
[PASS] 'calc(1% * infinity)' as a specified value should serialize as 'calc(infinity * 1%)'.
[PASS] 'calc(1% * -infinity)' as a specified value should serialize as 'calc(-infinity * 1%)'.
[PASS] 'calc(1px * iNFinIty)' as a specified value should serialize as 'calc(infinity * 1px)'.
[PASS] 'calc(1px * (infinity + infinity))' as a specified value should serialize as 'calc(infinity * 1px)'.
[PASS] 'calc(1px * (-infinity + -infinity))' as a specified value should serialize as 'calc(-infinity * 1px)'.
[PASS] 'calc(1px * 1/infinity)' as a specified value should serialize as 'calc(0px)'.
[PASS] 'calc(1px * infinity * infinity)' as a specified value should serialize as 'calc(infinity * 1px)'.
[PASS] 'calc(1px * -infinity * -infinity)' as a specified value should serialize as 'calc(infinity * 1px)'.
[PASS] 'calc(1 * max(INFinity*3px, 0px))' as a specified value should serialize as 'calc(infinity * 1px)'.
[PASS] 'calc(1 * min(inFInity*4px, 0px))' as a specified value should serialize as 'calc(0px)'.
[PASS] 'calc(1 * max(nAn*2px, 0px))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1 * min(nan*3px, 0px))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1 * clamp(-INFINITY*20px, 0px, infiniTY*10px))' as a specified value should serialize as 'calc(0px)'.
[PASS] 'calc(1px * max(NaN, min(0,10)))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * clamp(NaN, 0, 10))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * max(0, min(10, NaN)))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * clamp(0, 10, NaN))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * max(0, min(NaN, 10)))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * clamp(0, NaN, 10))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1px * clamp(-Infinity, 0, infinity))' as a specified value should serialize as 'calc(0px)'.
[PASS] 'calc(1px * clamp(-inFinity, infinity, 10))' as a specified value should serialize as 'calc(10px)'.
[PASS] 'calc(1 * min(NaN * 1pt, NaN * 1cm))' as a specified value should serialize as 'calc(NaN * 1px)'.
[PASS] 'calc(1 * max(NaN * 1cm, NaN * 2Q))' as a specified value should serialize as 'calc(NaN * 1px)'.
[FAIL] 'calc(1 * min(NaN * 2px, NaN * 4em))' as a specified value should serialize as 'min(NaN * 1px, NaN * 1em)'.
  assert_equals: 'calc(1 * min(NaN * 2px, NaN * 4em))' and 'min(NaN * 1px, NaN * 1em)' should serialize the same in specified values. expected "min(NaN * 1px, NaN * 1em)" but got "calc(1 * min(NaN * 1px, NaN * 1em))"
[FAIL] 'calc(1 * clamp(NaN * 2em, NaN * 4px, NaN * 8pt))' as a specified value should serialize as 'clamp(NaN * 1em, NaN * 1px, NaN * 1px)'.
  assert_equals: 'calc(1 * clamp(NaN * 2em, NaN * 4px, NaN * 8pt))' and 'clamp(NaN * 1em, NaN * 1px, NaN * 1px)' should serialize the same in specified values. expected "clamp(NaN * 1em, NaN * 1px, NaN * 1px)" but got "calc(1 * clamp(NaN * 1em, NaN * 1px, NaN * 1px))"
Harness: the test ran to completion.

