This is a testharness.js-based test.
[FAIL] Became cross-origin via document.domain: setting the prototype to an empty object via Object.setPrototypeOf should throw a TypeError
  assert_throws_js: function "() => {\n      Object.setPrototypeOf(target, newValue);\n    }" threw object "SecurityError: Blocked a frame with origin "http://web-platform.test:8001" from accessing a cross-origin frame." ("SecurityError") expected instance of function "function TypeError() { [native code] }" ("TypeError")
[FAIL] Became cross-origin via document.domain: setting the prototype to an empty object via Reflect.setPrototypeOf should return false
  Blocked a frame with origin "http://web-platform.test:8001" from accessing a cross-origin frame.
[FAIL] Became cross-origin via document.domain: setting the prototype to null via Object.setPrototypeOf should not throw
  Blocked a frame with origin "http://web-platform.test:8001" from accessing a cross-origin frame.
[FAIL] Became cross-origin via document.domain: setting the prototype to null via Reflect.setPrototypeOf should return true
  Blocked a frame with origin "http://web-platform.test:8001" from accessing a cross-origin frame.
[FAIL] Became cross-origin via document.domain: setting the prototype to the original value from before going cross-origin via Object.setPrototypeOf should throw a TypeError
  assert_throws_js: function "() => {\n      Object.setPrototypeOf(target, newValue);\n    }" threw object "SecurityError: Blocked a frame with origin "http://web-platform.test:8001" from accessing a cross-origin frame." ("SecurityError") expected instance of function "function TypeError() { [native code] }" ("TypeError")
[FAIL] Became cross-origin via document.domain: setting the prototype to the original value from before going cross-origin via Reflect.setPrototypeOf should return false
  Blocked a frame with origin "http://web-platform.test:8001" from accessing a cross-origin frame.
Harness: the test ran to completion.

