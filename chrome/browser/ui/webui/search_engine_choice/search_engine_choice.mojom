// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module search_engine_choice.mojom;

// Lives in the browser process. A renderer uses this to link itself with
// a page handler.
interface PageHandlerFactory {
  // Creates a page handler for the file manager and link it to the UI.
  CreatePageHandler(pending_receiver<PageHandler> handler);
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // These values are persisted to logs and should not be renumbered or
  // re-used.
  // LINT.IfChange(ScrollState)
  enum ScrollState {
    kAtTheBottom = 0,
    kAtTheBottomWithErrorMargin = 1,
    kNotAtTheBottom = 2,
  };

  // LINT.ThenChange(/tools/metrics/histograms/metadata/search/enums.xml:SearchEngineChoiceScrollState)

  // Displays the Search Engine Choice dialog.
  // Triggered by the `displayDialog()` call in
  // `chrome/browser/resources/search_engine_choice/app.ts`
  DisplayDialog();

  // Updates the search engine based on the user's selection.
  // If `save_guest_mode_selection` is true, also saves the search engine
  // preference for future guest mode sessions.
  HandleSearchEngineChoiceSelected(
      int32 prepopulate_id, bool save_guest_mode_selection);

  // Notifies the `SearchEngineChoiceDialogService` that the learn more link was
  // clicked.
  HandleLearnMoreLinkClicked();

  // Notifies the `SearchEngineChoiceDialogService` that the "More" button was
  // clicked.
  HandleMoreButtonClicked();

  // Records the scroll state after the "More" button was clicked.
  RecordScrollState(ScrollState scroll_state);
};
