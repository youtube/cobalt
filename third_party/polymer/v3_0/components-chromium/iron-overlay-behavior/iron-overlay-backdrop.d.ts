/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   iron-overlay-backdrop.js
 */

import {Polymer} from '../polymer/lib/legacy/polymer-fn.js';

import {dom} from '../polymer/lib/legacy/polymer.dom.js';

import {html} from '../polymer/lib/utils/html-tag.js';

import {LegacyElementMixin} from '../polymer/lib/legacy/legacy-element-mixin.js';

/**
 * `iron-overlay-backdrop` is a backdrop used by `Polymer.IronOverlayBehavior`. It
 * should be a singleton.
 *
 * ### Styling
 *
 * The following custom properties and mixins are available for styling.
 *
 * Custom property | Description | Default
 * -------------------------------------------|------------------------|---------
 * `--iron-overlay-backdrop-background-color` | Backdrop background color | #000
 * `--iron-overlay-backdrop-opacity`          | Backdrop opacity | 0.6
 * `--iron-overlay-backdrop`                  | Mixin applied to `iron-overlay-backdrop`.                      | {}
 * `--iron-overlay-backdrop-opened`           | Mixin applied to `iron-overlay-backdrop` when it is displayed | {}
 */
interface IronOverlayBackdropElement extends LegacyElementMixin, HTMLElement {

  /**
   * Returns true if the backdrop is opened.
   */
  opened: boolean|null|undefined;
  created(): void;
  attached(): void;

  /**
   * Appends the backdrop to document body if needed.
   */
  prepare(): void;

  /**
   * Shows the backdrop.
   */
  open(): void;

  /**
   * Hides the backdrop.
   */
  close(): void;

  /**
   * Removes the backdrop from document body if needed.
   */
  complete(): void;
  _onTransitionend(event: any): void;
}

export {IronOverlayBackdropElement};

declare global {

  interface HTMLElementTagNameMap {
    "iron-overlay-backdrop": IronOverlayBackdropElement;
  }
}
