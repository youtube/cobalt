#!/usr/bin/env python3

# Copyright 2023 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
"""Parses the gtest xml output and prints the failing tests"""

import pathlib
import sys

from junitparser import JUnitXml

if __name__ == '__main__':
  if len(sys.argv) != 2:
    print(f'Usage: {sys.argv[0]} <path to unit test reports>')
    sys.exit(1)

  print('======== UNIT TEST REPORT ========')
  success = True
  for report in pathlib.Path(sys.argv[1]).rglob('*.xml'):
    # Get the target name from the filename generated by test_runner.py.
    target_name = pathlib.Path(report).stem
    try:
      xml = JUnitXml.fromfile(report)
      failure_str = ''
      for suite in xml:
        for case in suite:
          if not case.is_passed:
            failure_str += f'{suite.name}.{case.name}:\n'
            for result in case.result:
              success = False
              failure_str += f'{result.message}\n\n'
      if len(failure_str) > 0:
        print(target_name)
        print('-' * len(target_name))
        print(failure_str)
    except Exception:  # pylint: disable=broad-except
      success = False
      print(target_name)
      print('-' * len(target_name))
      print('Unable to read unit test report. Did the test crash?\n')

  if success:
    print('Found no test failures :)')
