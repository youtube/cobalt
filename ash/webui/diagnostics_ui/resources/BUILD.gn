# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//tools/grit/preprocess_if_expr.gni")
import("//tools/polymer/css_to_wrapper.gni")
import("//tools/polymer/html_to_wrapper.gni")
import("//tools/typescript/ts_library.gni")
import("//ui/webui/resources/tools/generate_grd.gni")

assert(is_chromeos_ash)

preprocessed_dir = "preprocessed"

non_web_component_files = [
  "diagnostics_browser_proxy.ts",
  "diagnostics_types.ts",
  "diagnostics_utils.ts",
  "drawing_provider.ts",
  "drawing_provider_utils.ts",
  "fake_data.ts",
  "fake_input_data_provider.ts",
  "fake_network_health_provider.ts",
  "fake_system_data_provider.ts",
  "fake_system_routine_controller.ts",
  "frequency_channel_utils.ts",
  "mojo_interface_provider.js",
  "routine_group.ts",
  "routine_list_executor.ts",
]

web_component_files = [
  "battery_status_card.ts",
  "cellular_info.ts",
  "connectivity_card.ts",
  "cpu_card.ts",
  "data_point.ts",
  "diagnostics_app.ts",
  "diagnostics_card.ts",
  "diagnostics_card_frame.ts",
  "diagnostics_network_icon.ts",
  "diagnostics_sticky_banner.ts",
  "ethernet_info.ts",
  "input_card.ts",
  "input_list.ts",
  "ip_config_info_drawer.ts",
  "keyboard_tester.ts",
  "memory_card.ts",
  "network_card.ts",
  "network_info.ts",
  "network_list.ts",
  "network_troubleshooting.ts",
  "overview_card.ts",
  "percent_bar_chart.ts",
  "realtime_cpu_chart.js",
  "routine_result_entry.ts",
  "routine_result_list.ts",
  "routine_section.ts",
  "system_page.ts",
  "text_badge.ts",
  "touchpad_tester.ts",
  "touchscreen_tester.ts",
  "wifi_info.ts",
]

html_files = []
foreach(f, web_component_files) {
  if (get_path_info(f, "extension") == "ts") {
    html_files += [ string_replace(f, ".ts", ".html") ]
  } else {
    html_files += [ string_replace(f, ".js", ".html") ]
  }
}

icons_html_files = [ "icons.html" ]

html_wrapper_files = []
foreach(f, html_files + icons_html_files) {
  html_wrapper_files += [ f + ".js" ]
}

js_files = web_component_files + non_web_component_files

# Files that are passed as input to css_to_wrapper().
css_files = [ "diagnostics_shared.css" ]

# Files that are generated by css_to_wrapper().
css_wrapper_files = []
foreach(f, css_files) {
  css_wrapper_files += [ f + ".js" ]
}

static_resource_files = [
  "app_icon_192.png",
  "index.html",
]

css_to_wrapper("css_wrapper_files") {
  in_files = css_files
  use_js = true
}

html_to_wrapper("html_wrapper_files") {
  in_files = html_files + icons_html_files
  use_js = true
}

preprocess_if_expr("preprocess") {
  in_folder = "."
  in_files = js_files
  out_folder = "$target_gen_dir/$preprocessed_dir"
}

preprocess_if_expr("preprocess_generated") {
  deps = [
    ":css_wrapper_files",
    ":html_wrapper_files",
  ]
  in_folder = target_gen_dir
  in_files = html_wrapper_files + css_wrapper_files
  out_folder = "$target_gen_dir/$preprocessed_dir"
}

# The WebUI mojo files are generated by mojom:mojom_webui_js into an
# external directory, so they need to be copied into this project's directory.
copy("copy_webui_mojo") {
  deps = [
    "../mojom:mojom_webui_js",
    "//ash/system/diagnostics/mojom:mojom_webui_js",
  ]
  sources = [
    "$root_gen_dir/mojom-webui/ash/system/diagnostics/mojom/input.mojom-webui.js",
    "$root_gen_dir/mojom-webui/ash/webui/diagnostics_ui/mojom/input_data_provider.mojom-webui.js",
    "$root_gen_dir/mojom-webui/ash/webui/diagnostics_ui/mojom/network_health_provider.mojom-webui.js",
    "$root_gen_dir/mojom-webui/ash/webui/diagnostics_ui/mojom/system_data_provider.mojom-webui.js",
    "$root_gen_dir/mojom-webui/ash/webui/diagnostics_ui/mojom/system_routine_controller.mojom-webui.js",
  ]
  outputs = [ "$target_gen_dir/$preprocessed_dir/{{source_file_part}}" ]
}

ts_library("build_ts") {
  root_dir = "$target_gen_dir/$preprocessed_dir"
  out_dir = "$target_gen_dir/tsc"
  tsconfig_base = "tsconfig_base.json"
  in_files = js_files + css_wrapper_files + html_wrapper_files + [
               "input.mojom-webui.js",
               "input_data_provider.mojom-webui.js",
               "network_health_provider.mojom-webui.js",
               "system_data_provider.mojom-webui.js",
               "system_routine_controller.mojom-webui.js",
             ]

  definitions = [ "//tools/typescript/definitions/chrome_send.d.ts" ]
  deps = [
    "//ash/webui/common/resources:build_ts",
    "//third_party/polymer/v3_0:library",
    "//ui/webui/resources/cr_components/color_change_listener:build_ts",
    "//ui/webui/resources/cr_elements:build_ts",
    "//ui/webui/resources/js:build_ts",
    "//ui/webui/resources/mojo:build_ts",
  ]

  extra_deps = [
    ":copy_webui_mojo",
    ":preprocess",
    ":preprocess_generated",
    "//ash/webui/common/resources:copy_checked_in_dts_files",
    "//ash/webui/common/resources:generate_definitions",
  ]
}

generate_grd("build_grd") {
  input_files_base_dir = rebase_path(".", "//")
  input_files = static_resource_files
  deps = [ ":build_ts" ]
  manifest_files =
      filter_include(get_target_outputs(":build_ts"), [ "*_manifest.json" ])
  grd_prefix = "ash_diagnostics_app"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grd"
}
