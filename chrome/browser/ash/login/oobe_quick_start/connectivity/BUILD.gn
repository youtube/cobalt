# Copyright 2022 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")

assert(is_chromeos_ash)

source_set("connectivity") {
  deps = [
    "proto",
    "//base",
    "//chrome/browser:browser_process",
    "//chrome/browser/ash/login/oobe_quick_start:oobe_quick_start_pref_names",
    "//chrome/browser/ash/nearby:quick_start_connectivity_service",
    "//chrome/browser/nearby_sharing/public/cpp",
    "//chromeos/ash/components/quick_start",
    "//chromeos/ash/services/nearby/public/cpp",
    "//chromeos/ash/services/nearby/public/mojom",
    "//chromeos/constants:constants",
    "//components/cbor",
    "//components/prefs",
    "//components/qr_code_generator:qr_code_generator",
    "//crypto",
    "//device/bluetooth",
    "//ui/chromeos",
    "//url",
  ]
  sources = [
    "account_transfer_client_data.cc",
    "account_transfer_client_data.h",
    "advertising_id.cc",
    "advertising_id.h",
    "connection.cc",
    "connection.h",
    "fast_pair_advertiser.cc",
    "fast_pair_advertiser.h",
    "fido_assertion_info.cc",
    "fido_assertion_info.h",
    "handshake_helpers.cc",
    "handshake_helpers.h",
    "qr_code.cc",
    "qr_code.h",
    "session_context.cc",
    "session_context.h",
    "target_device_connection_broker.cc",
    "target_device_connection_broker.h",
    "target_device_connection_broker_factory.cc",
    "target_device_connection_broker_factory.h",
    "target_device_connection_broker_impl.cc",
    "target_device_connection_broker_impl.h",
  ]
}

source_set("test_support") {
  testonly = true
  public_deps = [ ":connectivity" ]
  deps = [
    "//base",
    "//chrome/browser/ash/nearby:quick_start_connectivity_service",
    "//chrome/browser/nearby_sharing/public/cpp",
    "//chrome/test:test_support",
    "//chromeos/ash/components/quick_start:test_support",
    "//components/cbor",
  ]
  sources = [
    "fake_connection.cc",
    "fake_connection.h",
    "fake_target_device_connection_broker.cc",
    "fake_target_device_connection_broker.h",
    "fido_authentication_message_helper.cc",
    "fido_authentication_message_helper.h",
  ]
}

source_set("unit_tests") {
  testonly = true
  deps = [
    ":connectivity",
    ":test_support",
    "proto",
    "//base",
    "//base/test:test_support",
    "//chrome/browser/nearby_sharing/public/cpp",
    "//chrome/test:test_support",
    "//chromeos/ash/components/quick_start",
    "//chromeos/ash/components/quick_start:test_support",
    "//chromeos/ash/services/nearby/public/mojom",
    "//chromeos/constants",
    "//components/cbor",
    "//device/bluetooth:mocks",
    "//mojo/public/cpp/bindings",
    "//url",
  ]
  sources = [
    "account_transfer_client_data_unittest.cc",
    "connection_unittest.cc",
    "fast_pair_advertiser_unittest.cc",
    "handshake_helpers_unittest.cc",
    "qr_code_unittest.cc",
    "session_context_unittest.cc",
    "target_device_connection_broker_impl_unittest.cc",
  ]
}
