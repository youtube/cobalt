<!--
Copyright 2024 The Chromium Authors
Use of this source code is governed by a BSD-style license that can be
found in the LICENSE file.
-->

<!--
This file is used to generate a comprehensive list of Fingerprinting Protection
histograms along with a detailed description for each histogram.

For best practices on writing histogram descriptions, see
https://chromium.googlesource.com/chromium/src.git/+/HEAD/tools/metrics/histograms/README.md

Please follow the instructions in the OWNERS file in this directory to find a
reviewer. If no OWNERS file exists, please consider signing up at
go/reviewing-metrics (Googlers only), as all subdirectories are expected to
have an OWNERS file. As a last resort you can send the CL to
chromium-metrics-reviews@google.com.
-->

<histogram-configuration>

<histograms>

<histogram
    name="FingerprintingProtection.BlockedDomainListComponent.InstallationResult"
    enum="FingerprintingProtectionComponentInstallationResult"
    expires_after="2025-12-30">
  <owner>trishalfonso@google.com</owner>
  <owner>src/components/fingerprinting_protection_filter/OWNERS</owner>
  <summary>
    Whenever a new blocked domain list component is installed, log the result of
    the installation, i.e. success or failure reason.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.CanvasNoise.InterventionReason"
    units="bitmask" expires_after="2025-12-14">
  <owner>tov@chromium.org</owner>
  <owner>antoniosartori@chromium.org</owner>
  <owner>johnykim@google.com</owner>
  <owner>rizvis@google.com</owner>
  <summary>
    Records the reason why noise was, or was not, added to the canvas upon
    readback. The result is a bitmask of CanvasNoiseReason. This is recorded
    with every readback that happens.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.CanvasNoise.NoisedCanvasSize"
    units="pixels" expires_after="2025-12-14">
  <owner>tov@chromium.org</owner>
  <owner>antoniosartori@chromium.org</owner>
  <owner>johnykim@google.com</owner>
  <owner>rizvis@google.com</owner>
  <summary>
    Records the size (number of pixels) of the canvases that were noised upon
    readback. This is recorded every time that noise was added to a canvas, for
    all the different readback APIs.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.CanvasNoise.NoisedReadbacksPerContext"
    units="count" expires_after="2025-12-14">
  <owner>tov@chromium.org</owner>
  <owner>antoniosartori@chromium.org</owner>
  <owner>johnykim@google.com</owner>
  <owner>rizvis@google.com</owner>
  <summary>
    Records the number of canvas readbacks that happened for which noise was
    added. This is recorded every time that an execution context is disoposed,
    so this count is per frame and per worker context.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.CanvasNoise.NoiseDuration"
    units="microseconds" expires_after="2025-12-14">
  <owner>tov@chromium.org</owner>
  <owner>antoniosartori@chromium.org</owner>
  <owner>johnykim@google.com</owner>
  <owner>rizvis@google.com</owner>
  <summary>
    Records the time it took to add noise to the canvas upon readback. This
    reflects the total time of intervention. This is recorded every time that
    noise is added to a canvas, for all the different readback APIs.

    This metric uses UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES to exclude clients
    with low-resolution clocks.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.CanvasNoise.OperationTriggered"
    units="bitmask" expires_after="2025-12-14">
  <owner>tov@chromium.org</owner>
  <owner>antoniosartori@chromium.org</owner>
  <owner>johnykim@google.com</owner>
  <owner>rizvis@google.com</owner>
  <summary>
    Records the canvas operations that caused canvas noising to trigger. The
    result is a bitmask of CanvasOperationType. This is recoreded after every
    readback that happens.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.DocumentLoad.RulesetIsAvailable"
    enum="BooleanAvailable" expires_after="2025-10-10">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a document load is committed in any frame and subresource filtering
    should be activated for fingerprinting protection, records whether the
    filtering rules are available.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.DocumentLoad.SubframeFilteringDelay.NameAlias.{Result}"
    units="microseconds" expires_after="2025-12-30">
  <owner>thesalsa@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>johnykim@google.com</owner>
  <summary>
    Records the total time a child frame navigation was delayed due to alias
    checking, whether the check was triggered, and calculating whether it should
    be disallowed. Logged for all navigations that were marked {Result}.

    A {Result} marked as Checked indicates that the alias check was triggered,
    while Disallowed and WouldDisallow are LoadPolicy decisions determined by
    alias checking. Because alias checks are counted with
    FingerprintingProtection.DocumentLoad.SubframeFilteringDelay, alias allowed
    decisions can be derived.

    This metric uses UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES to acccount for
    clients with low-resolution clocks.
  </summary>
  <token key="Result">
    <variant name="Checked"/>
    <variant name="Disallowed"/>
    <variant name="WouldDisallow"/>
  </token>
</histogram>

<histogram
    name="FingerprintingProtection.DocumentLoad.SubframeFilteringDelay.NameAlias.{Result}.Incognito"
    units="microseconds" expires_after="2025-12-30">
  <owner>thesalsa@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>johnykim@google.com</owner>
  <summary>
    Records the total time a child frame navigation was delayed due to alias
    checking in incognito, whether the check was triggered, and calculating
    whether it should be disallowed. Logged for all navigations in incognito
    that were marked {Result}.

    A {Result} marked as Checked indicates that the alias check was triggered,
    while Disallowed and WouldDisallow are LoadPolicy decisions determined by
    alias checking. Because alias checks are counted with
    FingerprintingProtection.DocumentLoad.SubframeFilteringDelay, alias allowed
    decisions can be derived.

    This metric uses UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES to acccount for
    clients with low-resolution clocks.
  </summary>
  <token key="Result">
    <variant name="Checked"/>
    <variant name="Disallowed"/>
    <variant name="WouldDisallow"/>
  </token>
</histogram>

<histogram
    name="FingerprintingProtection.DocumentLoad.SubframeFilteringDelay.{Result}"
    units="microseconds" expires_after="2025-12-30">
  <owner>thesalsa@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    Records the total time a child frame navigation was delayed while
    calculating whether it should be disallowed or not. Logged for all
    navigations that were marked {Result}.

    This metric uses UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES to acccount for
    clients with low-resolution clocks.
  </summary>
  <token key="Result">
    <variant name="Allowed"/>
    <variant name="Disallowed"/>
    <variant name="WouldDisallow"/>
  </token>
</histogram>

<histogram
    name="FingerprintingProtection.DocumentLoad.SubframeFilteringDelay.{Result}.Incognito"
    units="microseconds" expires_after="2025-12-30">
  <owner>thesalsa@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    Records the total time a child frame navigation in incognito was delayed
    while calculating whether it should be disallowed or not. Logged for all
    navigations that were marked {Result} in incognito.

    This metric uses UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES to acccount for
    clients with low-resolution clocks.
  </summary>
  <token key="Result">
    <variant name="Allowed"/>
    <variant name="Disallowed"/>
    <variant name="WouldDisallow"/>
  </token>
</histogram>

<histogram name="FingerprintingProtection.IndexRuleset.CPUDuration" units="ms"
    expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Measures the CPU time it takes for the ruleset to get indexed by the
    RulesetService using thread ticks. Recorded every time the RulesetService
    kicks off a ruleset indexing process for Fingerprinting Protection.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.IndexRuleset.NumUnsupportedRules"
    units="rules" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    The number of rules that could be not be successfully indexed and therefore
    have been ignored. Recorded every time the RulesetService kicks off a
    ruleset indexing process and it reaches the point where rules are getting
    indexed. This is logged when a new ruleset is indexed for the first time on
    Chrome start for Fingerprinting Protection.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.IndexRuleset.Verify.Status"
    enum="SubresourceFilterVerifyStatus" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    The result of the IndexRulesetMatcher Verify method. Either pass if both the
    checksum and verifier succeeded, or a value indicating which combination of
    them failed. Note that a zero checksum indicates that the checksum has not
    yet been stored during indexing (for rulesets indexed prior to the
    checksumming code). This is logged when the indexed ruleset is loaded on
    Chrome start.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.IndexRuleset.Verify2.WallDuration"
    units="ms" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Measures total time it took to verify the indexed ruleset in the browser
    process. Logged every time verification occurs, which usually occurs when
    the first page with activation is navigated to. This is logged when the
    indexed ruleset is loaded on Chrome start.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.IndexRuleset.WallDuration" units="ms"
    expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Measures the time it takes for the ruleset to get indexed by the
    RulesetService. Recorded every time the RulesetService kicks off a ruleset
    indexing process for Fingerprinting Protection.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.MainFrameLoad.RulesetIsAvailableAnyActivationLevel"
    enum="BooleanAvailable" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a document load is committed in the root frame, records whether the
    filtering rules are available. This is independent of whether or not
    filtering should be activated.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.PageLoad.ActivationDecision"
    enum="FingerprintingProtectionActivationDecision"
    expires_after="2025-12-30">
  <owner>thesalsa@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    Records the ActivationDecision computed by the
    FingerprintingProtectionPageActivationThrottle, considering the tracking
    protection content setting values, on the navigation. Computed once in
    WillProcessResponse, before committing the navigation.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.PageLoad.ActivationLevel"
    enum="FingerprintingProtectionActivationLevel" expires_after="2025-12-30">
  <owner>thesalsa@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    Records the ActivationLevel computed by the
    FingerprintingProtectionPageActivationThrottle, considering the tracking
    protection content setting values, on the navigation. Computed once in
    WillProcessResponse, before committing the navigation.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.NumSubresourceLoads.Disallowed"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load is finished with subresource filtering activated,
    records the total number of subresource loads that have been disallowed.
    This only differs from `MatchedRules` when filtering is performed in dry-run
    mode.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.NumSubresourceLoads.Disallowed.Incognito"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load associated with an incognito profile is finished with
    subresource filtering activated, records the total number of subresource
    loads that have been disallowed. This only differs from `MatchedRules` when
    filtering is performed in dry-run mode.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.NumSubresourceLoads.Evaluated"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load is finished with subresource filtering activated,
    records the total number of subresource loads that have been evaluated. This
    only differs from 'Total' when some of subdocuments is subject to a
    deactivating rule with DOCUMENT activation type.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.NumSubresourceLoads.Evaluated.Incognito"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load associated with an incognito profile is finished with
    subresource filtering activated, records the total number of subresource
    loads that have been evaluated. This only differs from 'Total' when some of
    subdocuments is subject to a deactivating rule with DOCUMENT activation
    type.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.NumSubresourceLoads.MatchedRules"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load is finished with subresource filtering activated,
    records the total number of subresource loads that have matched filtering
    rules. This only differs from `Disallowed` when filtering is performed in
    dry-run mode.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.NumSubresourceLoads.MatchedRules.Incognito"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load associated with an incognito profile is finished with
    subresource filtering activated, records the total number of subresource
    loads that have matched filtering rules. This only differs from `Disallowed`
    when filtering is performed in dry-run mode.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.PageLoad.NumSubresourceLoads.Total"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load associated is finished with subresource filtering
    activated, records the total number of subresource loads that have gone
    through the subresource filtering pipeline.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.NumSubresourceLoads.Total.Incognito"
    units="resource loads" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load associated with an incognito profile is finished with
    subresource filtering activated, records the total number of subresource
    loads that have gone through the subresource filtering pipeline.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.RefreshCount.SiteHasBreakageException"
    enum="BooleanAvailable" expires_after="2025-12-30">
  <owner>aabeshouse@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    When a document loads, records if the site has an exception created by the
    refresh count breakage heuristic. In that case, fingerprinting protection
    filtering is disabled due to the exception.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.RefreshCount.SiteHasBreakageExceptionWallDuration"
    units="microseconds" expires_after="2025-12-30">
  <owner>aabeshouse@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    See
    `FingerprintingProtection.PageLoad.RefreshCount.SiteHasBreakageException`.
    Measures the wall time taken to check for a breakage exception.

    This metric uses UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES to acccount for
    clients with low-resolution clocks.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.RootNavigation.ActivationState"
    enum="SubresourceFilterActivationState" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    Whenever a document load is committed in a root frame, records whether
    fingerprinting protection filtering should be activated for that load. Also
    records the same for the initial document load, even if it was not
    committed.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.RootNavigation.ActivationState.DidInherit"
    enum="SubresourceFilterActivationState" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    Whenever a document load is committed in a root frame that inherits from its
    same-origin opener, records whether fingerprinting protection filtering
    should be activated for that load. Also records the same for the initial
    document load (if it inherits its activation) even if it was not committed.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.SubresourceEvaluation.TotalCPUDuration"
    units="microseconds" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load is finished with subresource filtering activated,
    records the total CPU time in thread ticks spent on evaluating subresource
    requests, aggregated across all frames.

    Note: this histogram is emitted for all clients, both ones which have
    high-resolution timer available and those which don't.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.PageLoad.SubresourceEvaluation.TotalWallDuration"
    units="microseconds" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a page load is finished with subresource filtering activated,
    records the total time spent on evaluating subresource requests, aggregated
    across all frames.

    Note: this histogram is emitted for all clients, both ones which have
    high-resolution timer available and those which don't.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.SubresourceLoad.Evaluation.CPUDuration"
    units="microseconds" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a subresource of a document is evaluated against the ruleset,
    records the thread CPU time spent on calculating whether it should be
    allowed to load.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.SubresourceLoad.Evaluation.WallDuration"
    units="microseconds" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whenever a subresource of a document is evaluated against the ruleset,
    records how much time was spent on calculating whether it should be allowed
    to load.

    Warning: This metric may include reports from clients with low-resolution
    clocks (i.e. on Windows, ref. |TimeTicks::IsHighResolution()|). Such reports
    will cause this metric to have an abnormal distribution. When considering
    revising this histogram, see UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES for the
    solution.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.WebContentsObserver.RefreshCount"
    units="refresh counts" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    The count of refreshes on the first document after a Fingerprinting
    Protection throttling completes. This metric is experimental and for
    data-gathering.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.WebContentsObserver.RefreshCount.AddBreakageException"
    enum="BooleanAvailable" expires_after="2025-12-30">
  <owner>aabeshouse@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    Logs when a breakage exception is added based on the refresh count
    heuristic.
  </summary>
</histogram>

<histogram
    name="FingerprintingProtection.WebContentsObserver.RefreshCount.AddBreakageExceptionWallDuration"
    units="microseconds" expires_after="2025-12-30">
  <owner>aabeshouse@google.com</owner>
  <owner>rizvis@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <summary>
    See
    `FingerprintingProtection.WebContentsObserver.RefreshCount.AddBreakageException`.
    Measures the wall time taken to add a breakage exception.

    This metric uses UMA_HISTOGRAM_CUSTOM_MICROSECONDS_TIMES to acccount for
    clients with low-resolution clocks.
  </summary>
</histogram>

<histogram name="FingerprintingProtection.WriteRuleset.Result"
    enum="SubresourceFilterWriteRulesetResult" expires_after="2025-12-30">
  <owner>rizvis@google.com</owner>
  <owner>thesalsa@google.com</owner>
  <owner>tanub@google.com</owner>
  <owner>trishalfonso@google.com</owner>
  <summary>
    Whether indexing a version of the ruleset and writing it to disk succeeded,
    or failed at a particular step. Recorded every time the RulesetService kicks
    off a ruleset indexing process for Fingerprinting Protection.
  </summary>
</histogram>

</histograms>

</histogram-configuration>
