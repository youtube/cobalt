/* Copyright 2022 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
syntax = "proto2";

package tflite.scann_ondevice.core;

enum DistanceMeasure {
  SQUARED_L2_DISTANCE = 0;
  DOT_PRODUCT = 1;
  UNSPECIFIED = 2;
}

message PartitionerProto {
  message Leaf {
    repeated float dimension = 1 [packed = true];
  }

  repeated Leaf leaf = 1;

  optional float search_fraction = 2 [default = 1.0];

  optional DistanceMeasure query_distance = 3 [default = SQUARED_L2_DISTANCE];
}

message AsymmetricHashingProto {
  message CodebookEntry {
    repeated float dimension = 1 [packed = true];
  }

  message SubspaceCodebook {
    repeated CodebookEntry entry = 1;
  }

  repeated SubspaceCodebook subspace = 1;

  optional DistanceMeasure query_distance = 2 [default = SQUARED_L2_DISTANCE];

  enum LookupType {
    FLOAT = 0;
    INT16 = 1;
    INT8 = 2;
    INT8_LUT16 = 3;
  }
  optional LookupType lookup_type = 3 [default = FLOAT];
}
message IndexerProto {
  oneof indexer {
    AsymmetricHashingProto asymmetric_hashing = 1;
  }
}
message ScannOnDeviceConfig {
  optional DistanceMeasure query_distance = 1 [default = UNSPECIFIED];

  optional IndexerProto indexer = 2;

  optional PartitionerProto partitioner = 3;
}
