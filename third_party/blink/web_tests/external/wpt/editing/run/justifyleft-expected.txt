This is a testharness.js-based test.
Found 2447 tests; 2041 PASS, 406 FAIL, 0 TIMEOUT, 0 NOTRUN.
PASS [["justifyleft",""]] "foo[]bar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "foo[]bar<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "foo[]bar<p>extra" compare innerHTML
PASS [["justifyleft",""]] "foo[]bar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "foo[]bar<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "foo[]bar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "foo[]bar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "foo[]bar<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "foo[]bar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<span>foo</span>{}<span>bar</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<span>foo[</span><span>]bar</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "foo[bar]baz<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "foo[bar]baz<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "foo[bar]baz<p>extra" compare innerHTML
PASS [["justifyleft",""]] "foo[bar]baz<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "foo[bar]baz<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "foo[bar]baz<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "foo[bar]baz<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "foo[bar]baz<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "foo[bar]baz<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" compare innerHTML
PASS [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "foo[bar<b>baz]qoz</b>quz<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>foo[]bar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>foo[]bar<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>foo[]bar<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>foo[]bar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>foo[]bar<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>foo[]bar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>foo[]bar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>foo[]bar<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>foo[]bar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>foo[bar]baz<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>foo[bar]baz<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>foo[bar]baz<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>foo[bar]baz<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>foo[bar]baz<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>foo[bar]baz<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>foo[bar]baz<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>foo[bar]baz<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>foo[bar]baz<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<h1>foo[bar]baz</h1><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<pre>foo[bar]baz</pre><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<xmp>foo[bar]baz</xmp><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<center><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></center><p>extra</p>" but got "<center><p style=\"text-align:left\">foo</p><p>bar</p></center><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") before assert_equals: Wrong result returned expected false but got true
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<center><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></center><p>extra</p>" but got "<center><p style=\"text-align:left\">foo</p><p>bar</p></center><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<center><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></center><p>extra</p>" but got "<center><p style=\"text-align:left\">foo</p><p>bar</p></center><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<center><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></center><p>extra</p>" but got "<center><p style=\"text-align:left\">foo</p><p>bar</p></center><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<center><p>[foo]<p>bar</center><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<center><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></center><p>extra</p>"
PASS [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<center><p>[foo<p>bar]</center><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" compare innerHTML
PASS [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "{<table><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table align=left><tbody><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table align=left><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table align=left><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table align=\"left\"><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table align=left><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table align=\"left\"><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table align=left data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table align=\"left\"><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "{<table align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody align=left><tr><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody align=left><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody align=left><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table><tbody align=\"left\"><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody align=left data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table><tbody align=\"left\"><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody align=left><tr><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table><tbody align=\"left\"><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "{<table><tbody align=left><tr><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody><tr align=left><td>foo<td>b[a]r<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody><tr align=left data-start=1 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody><tr align=left data-start=0 data-end=2><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table><tbody><tr align=\"left\"><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table><tbody data-start=0 data-end=1><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table><tbody><tr align=\"left\"><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<table data-start=0 data-end=1><tbody><tr align=left><td>foo<td>bar<td>baz</table><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<table><tbody><tr><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>" but got "<table><tbody><tr align=\"left\"><td>foo</td><td>bar</td><td>baz</td></tr></tbody></table><p>extra</p>"
PASS [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "{<table><tr align=left><td>foo<td>bar<td>baz</table>}<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"center\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"center\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=center><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:center\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "center" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:center><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"justify\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"justify\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=justify><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>extra</p>" but got "<div align=\"nonsense\"><p>foo</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>extra</p>" but got "<div align=\"nonsense\"><p>foo</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=nonsense><p>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>extra</p>" but got "<div style=\"text-align:inherit\"><p>foo</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>extra</p>" but got "<div style=\"text-align:inherit\"><p>foo</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>extra</p>" but got "<div style=\"text-align:inherit\"><p>foo</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>extra</p>" but got "<div style=\"text-align:inherit\"><p>foo</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:inherit><p>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" checks for modifications to non-editable content
FAIL [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<quasit><p>foo</p></quasit><p>extra</p>" but got "<quasit align=\"center\"><p>foo</p></quasit><p>extra</p>"
PASS [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<quasit align=center><p>[foo]</p></quasit><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:start\">foo</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:start\">foo</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:start\">foo</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:start\">foo</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:end\">foo</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") before assert_equals: Wrong result returned expected false but got true
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:end\">foo</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") before assert_equals: Wrong result returned expected false but got true
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:end\">foo</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") before assert_equals: Wrong result returned expected false but got true
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<div style=\"text-align:end\">foo</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") before assert_equals: Wrong result returned expected false but got true
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:left\"><div dir=\"rtl\">foo</div></div><p>extra</p>" but got "<div dir=\"rtl\" style=\"text-align:left\">foo</div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:left\"><div dir=\"rtl\">foo</div></div><p>extra</p>" but got "<div dir=\"rtl\" style=\"text-align:left\">foo</div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:start>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:left\"><div dir=\"rtl\">foo</div></div><p>extra</p>" but got "<div dir=\"rtl\" style=\"text-align:left\">foo</div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") before assert_equals: Wrong result returned expected true but got false
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:left\"><div dir=\"rtl\">foo</div></div><p>extra</p>" but got "<div dir=\"rtl\" style=\"text-align:left\">foo</div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") before assert_equals: Wrong result returned expected true but got false
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div dir=rtl style=text-align:end>[foo]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]</p> <div style=text-align:left><p>bar</div>" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]</p> <div align=left><p>bar</div>" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div> <p>[bar]</p> <div style=text-align:left><p>baz</div>" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>foo</div> <p>[bar]</p> <div align=left><p>baz</div>" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
Harness: the test ran to completion.

