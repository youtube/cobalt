
/* This file is generated by glib-mkenums, do not modify it. This code is
 * licensed under the same license as the containing project. Note that it links
 * to GLib, so must comply with the LGPL linking clauses. */

#pragma once

#include <glib-object.h>

#include "meta/common.h"

G_BEGIN_DECLS
/* enumerations from "barrier.h" */
META_EXPORT GType meta_barrier_direction_get_type(void) G_GNUC_CONST;
#define META_TYPE_BARRIER_DIRECTION (meta_barrier_direction_get_type())
META_EXPORT GType meta_barrier_flags_get_type(void) G_GNUC_CONST;
#define META_TYPE_BARRIER_FLAGS (meta_barrier_flags_get_type())
/* enumerations from "boxes.h" */
META_EXPORT GType meta_edge_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_EDGE_TYPE (meta_edge_type_get_type())
/* enumerations from "compositor.h" */
META_EXPORT GType meta_comp_effect_get_type(void) G_GNUC_CONST;
#define META_TYPE_COMP_EFFECT (meta_comp_effect_get_type())
META_EXPORT GType meta_size_change_get_type(void) G_GNUC_CONST;
#define META_TYPE_SIZE_CHANGE (meta_size_change_get_type())
/* enumerations from "display.h" */
META_EXPORT GType meta_tab_list_get_type(void) G_GNUC_CONST;
#define META_TYPE_TAB_LIST (meta_tab_list_get_type())
META_EXPORT GType meta_tab_show_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_TAB_SHOW_TYPE (meta_tab_show_type_get_type())
META_EXPORT GType meta_pad_feature_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_PAD_FEATURE_TYPE (meta_pad_feature_type_get_type())
META_EXPORT GType meta_pad_direction_get_type(void) G_GNUC_CONST;
#define META_TYPE_PAD_DIRECTION (meta_pad_direction_get_type())
META_EXPORT GType meta_display_direction_get_type(void) G_GNUC_CONST;
#define META_TYPE_DISPLAY_DIRECTION (meta_display_direction_get_type())
META_EXPORT GType meta_display_corner_get_type(void) G_GNUC_CONST;
#define META_TYPE_DISPLAY_CORNER (meta_display_corner_get_type())
/* enumerations from "main.h" */
META_EXPORT GType meta_exit_code_get_type(void) G_GNUC_CONST;
#define META_TYPE_EXIT_CODE (meta_exit_code_get_type())
/* enumerations from "meta-backend.h" */
META_EXPORT GType meta_backend_capabilities_get_type(void) G_GNUC_CONST;
#define META_TYPE_BACKEND_CAPABILITIES (meta_backend_capabilities_get_type())
/* enumerations from "meta-close-dialog.h" */
META_EXPORT GType meta_close_dialog_response_get_type(void) G_GNUC_CONST;
#define META_TYPE_CLOSE_DIALOG_RESPONSE (meta_close_dialog_response_get_type())
/* enumerations from "meta-debug.h" */
META_EXPORT GType meta_debug_topic_get_type(void) G_GNUC_CONST;
#define META_TYPE_DEBUG_TOPIC (meta_debug_topic_get_type())
/* enumerations from "meta-enums.h" */
META_EXPORT GType meta_compositor_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_COMPOSITOR_TYPE (meta_compositor_type_get_type())
META_EXPORT GType meta_grab_op_get_type(void) G_GNUC_CONST;
#define META_TYPE_GRAB_OP (meta_grab_op_get_type())
META_EXPORT GType meta_cursor_get_type(void) G_GNUC_CONST;
#define META_TYPE_CURSOR (meta_cursor_get_type())
META_EXPORT GType meta_frame_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_FRAME_TYPE (meta_frame_type_get_type())
META_EXPORT GType meta_direction_get_type(void) G_GNUC_CONST;
#define META_TYPE_DIRECTION (meta_direction_get_type())
META_EXPORT GType meta_motion_direction_get_type(void) G_GNUC_CONST;
#define META_TYPE_MOTION_DIRECTION (meta_motion_direction_get_type())
META_EXPORT GType meta_side_get_type(void) G_GNUC_CONST;
#define META_TYPE_SIDE (meta_side_get_type())
META_EXPORT GType meta_button_function_get_type(void) G_GNUC_CONST;
#define META_TYPE_BUTTON_FUNCTION (meta_button_function_get_type())
META_EXPORT GType meta_window_menu_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_WINDOW_MENU_TYPE (meta_window_menu_type_get_type())
META_EXPORT GType meta_stack_layer_get_type(void) G_GNUC_CONST;
#define META_TYPE_STACK_LAYER (meta_stack_layer_get_type())
META_EXPORT GType meta_gravity_get_type(void) G_GNUC_CONST;
#define META_TYPE_GRAVITY (meta_gravity_get_type())
META_EXPORT GType meta_keyboard_a11y_flags_get_type(void) G_GNUC_CONST;
#define META_TYPE_KEYBOARD_A11Y_FLAGS (meta_keyboard_a11y_flags_get_type())
/* enumerations from "meta-inhibit-shortcuts-dialog.h" */
META_EXPORT GType meta_inhibit_shortcuts_dialog_response_get_type(void)
    G_GNUC_CONST;
#define META_TYPE_INHIBIT_SHORTCUTS_DIALOG_RESPONSE \
  (meta_inhibit_shortcuts_dialog_response_get_type())
/* enumerations from "meta-later.h" */
META_EXPORT GType meta_later_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_LATER_TYPE (meta_later_type_get_type())
/* enumerations from "meta-monitor-manager.h" */
META_EXPORT GType meta_monitor_switch_config_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_MONITOR_SWITCH_CONFIG_TYPE \
  (meta_monitor_switch_config_type_get_type())
META_EXPORT GType meta_power_save_change_reason_get_type(void) G_GNUC_CONST;
#define META_TYPE_POWER_SAVE_CHANGE_REASON \
  (meta_power_save_change_reason_get_type())
/* enumerations from "meta-multi-texture-format.h" */
META_EXPORT GType meta_multi_texture_format_get_type(void) G_GNUC_CONST;
#define META_TYPE_MULTI_TEXTURE_FORMAT (meta_multi_texture_format_get_type())
/* enumerations from "meta-orientation-manager.h" */
META_EXPORT GType meta_orientation_get_type(void) G_GNUC_CONST;
#define META_TYPE_ORIENTATION (meta_orientation_get_type())
/* enumerations from "meta-selection-source.h" */
META_EXPORT GType meta_selection_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_SELECTION_TYPE (meta_selection_type_get_type())
/* enumerations from "prefs.h" */
META_EXPORT GType meta_preference_get_type(void) G_GNUC_CONST;
#define META_TYPE_PREFERENCE (meta_preference_get_type())
META_EXPORT GType meta_key_binding_action_get_type(void) G_GNUC_CONST;
#define META_TYPE_KEY_BINDING_ACTION (meta_key_binding_action_get_type())
META_EXPORT GType meta_key_binding_flags_get_type(void) G_GNUC_CONST;
#define META_TYPE_KEY_BINDING_FLAGS (meta_key_binding_flags_get_type())
/* enumerations from "util.h" */
META_EXPORT GType meta_debug_paint_flag_get_type(void) G_GNUC_CONST;
#define META_TYPE_DEBUG_PAINT_FLAG (meta_debug_paint_flag_get_type())
/* enumerations from "window.h" */
META_EXPORT GType meta_window_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_WINDOW_TYPE (meta_window_type_get_type())
META_EXPORT GType meta_maximize_flags_get_type(void) G_GNUC_CONST;
#define META_TYPE_MAXIMIZE_FLAGS (meta_maximize_flags_get_type())
META_EXPORT GType meta_window_client_type_get_type(void) G_GNUC_CONST;
#define META_TYPE_WINDOW_CLIENT_TYPE (meta_window_client_type_get_type())
G_END_DECLS

/* Generated data ends here */
