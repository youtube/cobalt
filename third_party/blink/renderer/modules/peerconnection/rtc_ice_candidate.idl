/*
 * Copyright (C) 2012 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer
 *    in the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name of Google Inc. nor the names of its contributors
 *    may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// https://w3c.github.io/webrtc-pc/#dom-rtcicecomponent
enum RTCIceComponent {
    "rtp",
    "rtcp"
};

// https://w3c.github.io/webrtc-pc/#rtciceprotocol-enum
enum RTCIceProtocol {
    "udp",
    "tcp"
};

// https://w3c.github.io/webrtc-pc/#rtcicecandidatetype-enum
enum RTCIceCandidateType {
    "host",
    "srflx",
    "prflx",
    "relay"
};

// https://w3c.github.io/webrtc-pc/#rtcicetcpcandidatetype-enum
enum RTCIceTcpCandidateType {
    "active",
    "passive",
    "so"
};

// https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface
[
    Exposed=Window
] interface RTCIceCandidate {
    [CallWith=ExecutionContext, RaisesException] constructor(optional RTCIceCandidateInit candidateInitDict = {});
    [HighEntropy=Direct, MeasureAs=RTCIceCandidateCandidate] readonly attribute DOMString candidate;
    readonly attribute DOMString? sdpMid;
    readonly attribute unsigned short? sdpMLineIndex;
    readonly attribute DOMString? foundation;
    readonly attribute RTCIceComponent? component;
    readonly attribute unsigned long? priority;
    [HighEntropy=Direct, MeasureAs=RTCIceCandidateAddress] readonly attribute DOMString? address;
    readonly attribute RTCIceProtocol? protocol;
    [HighEntropy=Direct, MeasureAs=RTCIceCandidatePort] readonly attribute unsigned short? port;
    readonly attribute RTCIceCandidateType? type;
    readonly attribute RTCIceTcpCandidateType? tcpType;
    [HighEntropy=Direct, MeasureAs=RTCIceCandidateRelatedAddress] readonly attribute DOMString? relatedAddress;
    [HighEntropy=Direct, MeasureAs=RTCIceCandidateRelatedPort] readonly attribute unsigned short? relatedPort;
    readonly attribute DOMString? usernameFragment;
    // TODO(peria): Return type should be RTCIceCandidateInit.
    [CallWith=ScriptState, ImplementedAs=toJSONForBinding] object toJSON();
};
