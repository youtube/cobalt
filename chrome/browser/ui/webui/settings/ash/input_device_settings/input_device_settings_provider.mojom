// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.settings.mojom;

import "ash/public/mojom/input_device_settings.mojom";

// Interface for observing keyboard settings changes in OSSettings SWA.
interface KeyboardSettingsObserver {
  // Notifies KeyboardSettingsObserver when the list of connected keyboards
  // and their settings are updated.
  OnKeyboardListUpdated(array<ash.mojom.Keyboard> keyboards);
  // Notifies KeyboardSettingsObserver whenever the set of policies which
  // control keyboard settings change.
  OnKeyboardPoliciesUpdated(ash.mojom.KeyboardPolicies policies);
};

// Interface for observing touchpad settings changes in OSSettings SWA.
interface TouchpadSettingsObserver {
  // Notifies TouchpadSettingsObserver when the list of connected touchpads
  // and their settings are updated.
  OnTouchpadListUpdated(array<ash.mojom.Touchpad> touchpads);
};

// Interface for observing point stick settings changes in OSSettings SWA.
interface PointingStickSettingsObserver {
  // Notifies PointingStickSettingsObserver when the list of connected
  // pointing sticks and their settings are updated.
  OnPointingStickListUpdated(array<ash.mojom.PointingStick> pointSticks);
};

// Interface for observing mouse settings changes in OSSettings SWA.
interface MouseSettingsObserver {
  // Notifies MouseSettingsObserver when the list of connected mice
  // and their settings are updated.
  OnMouseListUpdated(array<ash.mojom.Mouse> mice);
  // Notifies MouseSettingsObserver whenever the set of policies which
  // control mouse settings change.
  OnMousePoliciesUpdated(ash.mojom.MousePolicies policies);
};

// Interface for fetching and configuring input device settings in OSSettings.
interface InputDeviceSettingsProvider {
  // Registers an observer which will be notified every time
  // a keyboard connects/disconnects or when settings change.
  // The observer which is registered is immediately informed
  // of the current state via its OnKeyboardListUpdated function.
  ObserveKeyboardSettings(pending_remote<KeyboardSettingsObserver> observer);
  // Registers an observer which will be notified every time
  // a touchpad connects/disconnects or when settings change.
  // The observer which is registered is immediately informed
  // of the current state via its ObserveTouchpadSettings function.
  ObserveTouchpadSettings(pending_remote<TouchpadSettingsObserver> observer);
  // Registers an observer which will be notified every time
  // a pointing stick connects/disconnects or when settings change.
  // The observer which is registered is immediately informed
  // of the current state via its ObservePointingStickSettings function.
  ObservePointingStickSettings(
      pending_remote<PointingStickSettingsObserver> observer);
  // Registers an observer which will be notified every time
  // a mouse connects/disconnects or when settings change.
  // The observer which is registered is immediately informed
  // of the current state via its ObserveMouseSettings function.
  ObserveMouseSettings(pending_remote<MouseSettingsObserver> observer);
  // Sets the keyboard settings based on its id.
  SetKeyboardSettings(uint32 device_id, ash.mojom.KeyboardSettings settings);
  // Sets the point stick settings based on its id.
  SetPointingStickSettings(
      uint32 device_id, ash.mojom.PointingStickSettings settings);
  // Sets the mouse settings based on its id.
  SetMouseSettings(uint32 device_id, ash.mojom.MouseSettings settings);
  // Sets the touchpad settings based on its id.
  SetTouchpadSettings(uint32 device_id, ash.mojom.TouchpadSettings settings);
};
