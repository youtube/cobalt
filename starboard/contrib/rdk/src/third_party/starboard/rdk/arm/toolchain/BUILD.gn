# Copyright 2022 Comcast Cable Communications Management, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2021 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//starboard/build/toolchain/cobalt_toolchains.gni")
import("$rdk_starboard_root/third_party/starboard/rdk/shared/build/rdk_toolchain.gni")

_rdk_toolchain_path = "$rdk_home_dir/sysroots/x86_64-rdksdk-linux/usr/bin/arm-rdkmllib32-linux-gnueabi"
_rdk_toolchain_toolprefix = "$_rdk_toolchain_path/arm-rdkmllib32-linux-gnueabi-"
_rdk_toolchain_platform_cflags = ""

if (!rdk_build_with_yocto) {
  _rdk_toolchain_platform_cflags += "-march=armv7-a -mthumb -mfpu=neon"
  if (rdk_arm_call_convention == "softfp") {
    _rdk_toolchain_platform_cflags += " -mfloat-abi=softfp"
  } else {
    _rdk_toolchain_platform_cflags += " -mfloat-abi=hard"
  }
}

cobalt_clang_toolchain("cobalt") {
  if (rdk_build_with_yocto) {
    native_linker_path = getenv("CXX")
  } else {
    native_linker_path = _rdk_toolchain_toolprefix + "gcc"
  }
}

rdk_gcc_toolchain("starboard") {
  if (rdk_build_with_yocto) {
    envprefix = ""
  } else {
    toolprefix = _rdk_toolchain_toolprefix
    platform_cflags = _rdk_toolchain_platform_cflags
  }
}

rdk_gcc_toolchain("target") {
  if (rdk_build_with_yocto) {
    envprefix = ""
  } else {
    toolprefix = _rdk_toolchain_toolprefix
    platform_cflags = _rdk_toolchain_platform_cflags
  }
}

rdk_gcc_toolchain("native_target") {
  if (rdk_build_with_yocto) {
    envprefix = ""
  } else {
    toolprefix = _rdk_toolchain_toolprefix
    platform_cflags = _rdk_toolchain_platform_cflags
  }
  toolchain_args = {
    is_starboard = false
    is_native_target_build = true
  }
}
