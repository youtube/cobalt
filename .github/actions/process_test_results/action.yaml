name: Process Test Results
description: Processes test results to produce a test summary and upload results to DataDog.
inputs:
  target_name:
    description: "The test target name."
    required: true
  datadog_api_key:
    description: "Path to directory where test results are saved."
    required: true
  results_path:
    description: "Path (or glob) to test result xml files."
    required: true
runs:
  using: "composite"
  steps:
    - name: Create Test Summary
      id: test-summary
      uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86
      with:
        paths: ${{ inputs.results_path }}
        output: test-report-summary.md
        show: "fail, skip"

    - name: Populate GitHub Summary
      run: cat test-report-summary.md >> $GITHUB_STEP_SUMMARY
      shell: bash

    - name: Check Failed Tests
      if: always()
      run: |
        set -x
        # Enable globstar shell option for globstar paths e.g. /**/*.xml and
        # nullglob to return empty string if the glob matches no files.
        shopt -s globstar nullglob

        result_xmls=(${{ inputs.results_path }})
        if [ ${#result_xmls[@]} -eq 0 ]; then
          echo "::error::No test results found. Did the test crash?"
          exit 1
        fi
        if [ ${{ steps.test-summary.outputs.failed }} -gt 0 ]; then
          echo "::error::${{ inputs.target_name }} has ${{ steps.test-summary.outputs.failed }} failed test(s)."
          exit 1
        fi
      shell: bash

    - name: Get Datadog CLI
      id: download-dd-cli
      # The API key is not available on PRs created from a fork.
      if: always() && inputs.datadog_api_key != ''
      env:
        DD_VERSION: 'v2.18.0'
        DD_SHA256SUM: 'adbe9b3a41faaf0b1d9702ba256cf8fa9e474c0cc8216f25e5b489c53d6f0a70  datadog-ci'
      run: |
        set -x
        download_url="https://github.com/DataDog/datadog-ci/releases/download/${DD_VERSION}/datadog-ci_linux-x64"
        curl -L --fail ${download_url} --output datadog-ci
        echo ${DD_SHA256SUM} | sha256sum --check
        chmod +x datadog-ci
      shell: bash

    - name: Upload to Datadog
      if: always() && steps.download-dd-cli.outcome == 'success'
      env:
        DATADOG_SITE: us5.datadoghq.com
        DATADOG_API_KEY: ${{ inputs.datadog_api_key }}
        DD_SERVICE: ${{ github.event.repository.name }}
        DD_TAGS: os.platform:${{ matrix.platform }}
        DD_ENV: ci
      run: |
        set -x
        # Enable globstar shell option for globstar paths e.g. /**/*.xml
        shopt -s globstar
        ./datadog-ci junit upload --service ${DD_SERVICE} ${{ inputs.results_path }}
      shell: bash
