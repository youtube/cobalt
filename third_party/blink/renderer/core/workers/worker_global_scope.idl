/*
 * Copyright (C) 2008 Apple Inc. All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

// https://html.spec.whatwg.org/C/#the-workerglobalscope-common-interface

[
    ActiveScriptWrappable,
    Exposed=Worker
] interface WorkerGlobalScope : EventTarget {
    readonly attribute WorkerGlobalScope self;
    readonly attribute WorkerLocation location;

    attribute OnErrorEventHandler onerror;
    attribute EventHandler onlanguagechange;
    [RuntimeEnabled=TimeZoneChangeEvent] attribute EventHandler ontimezonechange;
    // attribute EventHandler onoffline;
    // attribute EventHandler ononline;

    // https://html.spec.whatwg.org/C/#apis-available-to-workers
    // Although RaisesException is not specified, importScripts() can actually
    // throw exceptions directly to V8.
    void importScripts(ScriptURLString... urls);
    readonly attribute WorkerNavigator navigator;


    // Console API
    // https://console.spec.whatwg.org/#console-interface
    // [Replaceable] readonly attribute Console console;
    // Console is installed by v8 inspector when context is created
    // and is left commented here just for documentation.

    // Unhandled Promise Rejection Events
    attribute EventHandler onrejectionhandled;
    attribute EventHandler onunhandledrejection;

    // Secure Contexts
    // https://w3c.github.io/webappsec-secure-contexts/#dom-windoworworkerglobalscope-issecurecontext
    [ImplementedAs=isSecureContextForBindings] readonly attribute boolean isSecureContext;

    // WindowOrWorkerGlobalScope mixin
    // https://html.spec.whatwg.org/C/#windoworworkerglobalscope-mixin
    [Replaceable] readonly attribute DOMString origin;
    void queueMicrotask(VoidFunction callback);

    // TrustedTypes API: http://github.com/w3c/trusted-types
    readonly attribute TrustedTypePolicyFactory trustedTypes;
};

WorkerGlobalScope includes WindowOrWorkerGlobalScope;
WorkerGlobalScope includes FontFaceSource;
