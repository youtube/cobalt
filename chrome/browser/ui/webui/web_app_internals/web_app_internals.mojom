// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mojom;

import "url/mojom/origin.mojom";
import "url/mojom/url.mojom";

struct InstallIsolatedWebAppResult {
  bool success;  // true if app was installed successfully.
  string error;  // should only be set if the app failed to install.
};

struct IwaDevProxyAppInfo {
  string app_id;
  string name;
  url.mojom.Origin proxy_origin;
  string installed_version;
};

// Handles requests from chrome://web-app-internals.
// This is expected to be hosted in the browser process.
interface WebAppInternalsHandler {
  // Returns Web App related debug information as a JSON string.
  GetDebugInfoAsJsonString() => (string result);
  // Returns whether the clearing is successful.
  [EnableIf=is_chromeos_lacros]
  ClearExperimentalWebAppIsolationData() => (bool success);
  // Returns whether the installation succeeded.
  InstallIsolatedWebAppFromDevProxy(url.mojom.Url url) =>
      (InstallIsolatedWebAppResult result);
  // Returns whether the installation succeeded.
  SelectFileAndInstallIsolatedWebAppFromDevBundle() =>
      (InstallIsolatedWebAppResult result);
  // Triggers update discovery for installed non-dev-mode Isolated Web Apps.
  // Returns a string containing a success or error message.
  SearchForIsolatedWebAppUpdates() => (string result);
  // Returns information about installed dev mode proxy apps.
  GetIsolatedWebAppDevModeProxyAppInfo() => (array<IwaDevProxyAppInfo> apps);
  // Triggers an update for a dev mode proxy app. Returns a string containing a
  // success or error message.
  UpdateDevProxyIsolatedWebApp(string app_id) => (string result);
};
