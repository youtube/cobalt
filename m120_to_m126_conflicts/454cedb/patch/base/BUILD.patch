--- base/BUILD.gn
+++ base/BUILD.gn
@@ -44,14 +44,13 @@
 import("//testing/libfuzzer/fuzzer_test.gni")
 import("//testing/test.gni")
 
-<<<<<<< HEAD
+if (is_cobalt) {
+  import("//cobalt/build/configs/modular_variables.gni")
+}
+
 if (is_ios) {
   # Used to access ios_is_app_extension variable definition.
   import("//build/config/ios/ios_sdk.gni")
-=======
-if (is_cobalt) {
-  import("//cobalt/build/configs/modular_variables.gni")
->>>>>>> 08381675a91 (Build nplb hermetically (#4587))
 }
 
 if (is_mac) {
@@ -99,7 +98,6 @@
 assert(!is_win || is_clang,
        "only clang-cl is supported on Windows, see https://crbug.com/988071")
 
-<<<<<<< HEAD
 # Whether we should provide a `__libcpp_verbose_abort` handler that discards
 # `__VA_ARGS__` and just calls base::ImmediateCrash() for hardening failures.
 # This conditional matches `defined(OFFICIAL_BUILD) && !DCHECK_IS_ON()` in
@@ -107,12 +105,10 @@
 # to discard `__VA_ARGS__` when we disable logging from CHECK() failures.
 use_nodebug_assertion =
     use_custom_libcxx && is_official_build && !is_debug && !dcheck_always_on
-=======
+
 # TODO: b/384652502 - Cobalt: Fix compiler errors building hermetically.
 # ../../third_party/libevent/signal.c:43:10: fatal error: 'sys/queue.h' file not found
 # #include <sys/queue.h>
->>>>>>> 08381675a91 (Build nplb hermetically (#4587))
-
 # Determines whether libevent should be dep.
 if (is_cobalt && is_cobalt_hermetic_build) {
   dep_libevent = false
