[elementwise_binary.https.any.html]
  [add float32 1D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 2D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 3D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 4D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 5D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 1D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 2D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 3D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 4D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 1D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 2D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 3D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 4D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 5D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 1D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 2D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 3D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 4D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 1D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 2D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 3D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 4D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 5D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 1D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 2D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 3D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 4D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 1D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 2D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 3D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 4D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 5D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 1D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 2D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 3D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 4D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 1D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 2D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 3D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 4D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 5D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 1D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 2D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 3D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 4D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [pow (sqrt) float32 4D positive base tensor and broadcastable 1D integer exponent tensor / async]
    expected: FAIL

  [pow (square) float32 4D base tensor and broadcastable 1D integer exponent tensor / async]
    expected: FAIL

  [pow float32 1D base tensor and 1D integer exponent tensor / async]
    expected: FAIL

  [pow float32 2D base tensor and 2D integer exponent tensor / async]
    expected: FAIL

  [pow float32 3D base tensor and 3D integer exponent tensor / async]
    expected: FAIL

  [pow float32 4D base tensor and 4D integer exponent tensor / async]
    expected: FAIL

  [pow float32 4D base tensor and broadcastable 2D integer exponent tensor / async]
    expected: FAIL

  [pow float32 4D base tensor and broadcastable 3D integer exponent tensor / async]
    expected: FAIL

  [pow float32 5D base tensor and 5D integer exponent tensor / async]
    expected: FAIL

  [sub float32 1D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 2D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 3D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 4D tensors / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 5D tensors / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 1D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 2D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 3D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 4D to 4D / async]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL


[elementwise_binary.https.any.worker.html]
  [add float32 1D tensors / async]
    expected: FAIL

  [add float32 1D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 2D tensors / async]
    expected: FAIL

  [add float32 2D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 3D tensors / async]
    expected: FAIL

  [add float32 3D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 4D tensors / async]
    expected: FAIL

  [add float32 4D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 5D tensors / async]
    expected: FAIL

  [add float32 5D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 1D to 4D / async]
    expected: FAIL

  [add float32 broadcast 1D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 2D to 4D / async]
    expected: FAIL

  [add float32 broadcast 2D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 3D to 4D / async]
    expected: FAIL

  [add float32 broadcast 3D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [add float32 broadcast 4D to 4D / async]
    expected: FAIL

  [add float32 broadcast 4D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 1D tensors / async]
    expected: FAIL

  [div float32 1D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 2D tensors / async]
    expected: FAIL

  [div float32 2D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 3D tensors / async]
    expected: FAIL

  [div float32 3D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 4D tensors / async]
    expected: FAIL

  [div float32 4D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 5D tensors / async]
    expected: FAIL

  [div float32 5D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 1D to 4D / async]
    expected: FAIL

  [div float32 broadcast 1D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 2D to 4D / async]
    expected: FAIL

  [div float32 broadcast 2D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 3D to 4D / async]
    expected: FAIL

  [div float32 broadcast 3D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [div float32 broadcast 4D to 4D / async]
    expected: FAIL

  [div float32 broadcast 4D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 1D tensors / async]
    expected: FAIL

  [max float32 1D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 2D tensors / async]
    expected: FAIL

  [max float32 2D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 3D tensors / async]
    expected: FAIL

  [max float32 3D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 4D tensors / async]
    expected: FAIL

  [max float32 4D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 5D tensors / async]
    expected: FAIL

  [max float32 5D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 1D to 4D / async]
    expected: FAIL

  [max float32 broadcast 1D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 2D to 4D / async]
    expected: FAIL

  [max float32 broadcast 2D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 3D to 4D / async]
    expected: FAIL

  [max float32 broadcast 3D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [max float32 broadcast 4D to 4D / async]
    expected: FAIL

  [max float32 broadcast 4D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 1D tensors / async]
    expected: FAIL

  [min float32 1D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 2D tensors / async]
    expected: FAIL

  [min float32 2D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 3D tensors / async]
    expected: FAIL

  [min float32 3D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 4D tensors / async]
    expected: FAIL

  [min float32 4D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 5D tensors / async]
    expected: FAIL

  [min float32 5D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 1D to 4D / async]
    expected: FAIL

  [min float32 broadcast 1D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 2D to 4D / async]
    expected: FAIL

  [min float32 broadcast 2D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 3D to 4D / async]
    expected: FAIL

  [min float32 broadcast 3D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [min float32 broadcast 4D to 4D / async]
    expected: FAIL

  [min float32 broadcast 4D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 1D tensors / async]
    expected: FAIL

  [mul float32 1D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 2D tensors / async]
    expected: FAIL

  [mul float32 2D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 3D tensors / async]
    expected: FAIL

  [mul float32 3D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 4D tensors / async]
    expected: FAIL

  [mul float32 4D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 5D tensors / async]
    expected: FAIL

  [mul float32 5D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 1D to 4D / async]
    expected: FAIL

  [mul float32 broadcast 1D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 2D to 4D / async]
    expected: FAIL

  [mul float32 broadcast 2D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 3D to 4D / async]
    expected: FAIL

  [mul float32 broadcast 3D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [mul float32 broadcast 4D to 4D / async]
    expected: FAIL

  [mul float32 broadcast 4D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [pow (sqrt) float32 4D positive base tensor and broadcastable 1D integer exponent tensor / async]
    expected: FAIL

  [pow (sqrt) float32 4D positive base tensor and broadcastable 1D integer exponent tensor / sync]
    expected: FAIL

  [pow (square) float32 4D base tensor and broadcastable 1D integer exponent tensor / async]
    expected: FAIL

  [pow (square) float32 4D base tensor and broadcastable 1D integer exponent tensor / sync]
    expected: FAIL

  [pow float32 1D base tensor and 1D integer exponent tensor / async]
    expected: FAIL

  [pow float32 1D base tensor and 1D integer exponent tensor / sync]
    expected: FAIL

  [pow float32 2D base tensor and 2D integer exponent tensor / async]
    expected: FAIL

  [pow float32 2D base tensor and 2D integer exponent tensor / sync]
    expected: FAIL

  [pow float32 3D base tensor and 3D integer exponent tensor / async]
    expected: FAIL

  [pow float32 3D base tensor and 3D integer exponent tensor / sync]
    expected: FAIL

  [pow float32 4D base tensor and 4D integer exponent tensor / async]
    expected: FAIL

  [pow float32 4D base tensor and 4D integer exponent tensor / sync]
    expected: FAIL

  [pow float32 4D base tensor and broadcastable 2D integer exponent tensor / async]
    expected: FAIL

  [pow float32 4D base tensor and broadcastable 2D integer exponent tensor / sync]
    expected: FAIL

  [pow float32 4D base tensor and broadcastable 3D integer exponent tensor / async]
    expected: FAIL

  [pow float32 4D base tensor and broadcastable 3D integer exponent tensor / sync]
    expected: FAIL

  [pow float32 5D base tensor and 5D integer exponent tensor / async]
    expected: FAIL

  [pow float32 5D base tensor and 5D integer exponent tensor / sync]
    expected: FAIL

  [sub float32 1D tensors / async]
    expected: FAIL

  [sub float32 1D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 2D tensors / async]
    expected: FAIL

  [sub float32 2D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 3D tensors / async]
    expected: FAIL

  [sub float32 3D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 4D tensors / async]
    expected: FAIL

  [sub float32 4D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 5D tensors / async]
    expected: FAIL

  [sub float32 5D tensors / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 1D to 4D / async]
    expected: FAIL

  [sub float32 broadcast 1D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 2D to 4D / async]
    expected: FAIL

  [sub float32 broadcast 2D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "linux"): PASS
      if (product == "content_shell") and (os == "win"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 3D to 4D / async]
    expected: FAIL

  [sub float32 broadcast 3D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL

  [sub float32 broadcast 4D to 4D / async]
    expected: FAIL

  [sub float32 broadcast 4D to 4D / sync]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      if (product == "content_shell") and (os == "linux"): PASS
      if product == "chrome": PASS
      FAIL
