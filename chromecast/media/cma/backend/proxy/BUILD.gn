# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//chromecast/chromecast.gni")
import("//third_party/grpc/grpc_library.gni")
import("//third_party/protobuf/proto_library.gni")

# For .proto files with RPC definitions.
# TODO(b/172295002): Move this and proto compilation to Openscreen.
template("chromecast_media_grpc_library") {
  grpc_library(target_name) {
    proto_in_dir = "//"

    # NOTE: For using built-in proto files like empty.proto.
    import_dirs = [ "//third_party/protobuf/src" ]
    use_protobuf_full = true

    forward_variables_from(invoker,
                           [
                             "deps",
                             "sources",
                           ])
  }
}

cast_source_set("headers") {
  sources = [ "cast_runtime_audio_channel_endpoint_manager.h" ]
}

if (!is_android) {
  cast_source_set("proxy") {
    assert(!is_android)

    sources = [
      "audio_channel_broker_impl.cc",
      "audio_channel_broker_impl.h",
      "audio_channel_push_buffer_handler.h",
      "audio_decoder_pipeline_node.cc",
      "audio_decoder_pipeline_node.h",
      "buffer_id_manager.cc",
      "buffer_id_manager.h",
      "cast_runtime_audio_channel_broker.cc",
      "cast_runtime_audio_channel_broker.h",
      "cma_backend_proxy.cc",
      "cma_backend_proxy.h",
      "cma_proxy_handler.h",
      "media_pipeline_buffer_extension.cc",
      "media_pipeline_buffer_extension.h",
      "multizone_audio_decoder_proxy.h",
      "multizone_audio_decoder_proxy_impl.cc",
      "multizone_audio_decoder_proxy_impl.h",
      "proxy_call_translator.cc",
      "proxy_call_translator.h",
      "push_buffer_pending_handler.cc",
      "push_buffer_pending_handler.h",
      "push_buffer_queue.cc",
      "push_buffer_queue.h",
    ]

    deps = [
      ":headers",
      "//base",
      "//chromecast/base",
      "//chromecast/media/api",
      "//chromecast/public/media",
      "//third_party/cast_core/public/src/proto/common:duration_proto",
      "//third_party/cast_core/public/src/proto/runtime:media_service_proto",
      "//third_party/grpc:grpc++",
      "//third_party/protobuf:protobuf_full",
    ]

    if (!enable_chromium_runtime_cast_renderer ||
        chromecast_branding == "public") {
      sources += [ "cast_runtime_audio_channel_endpoint_simple.cc" ]
    }
  }
}
