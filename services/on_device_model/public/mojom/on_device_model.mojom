// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module on_device_model.mojom;

import "mojo/public/mojom/base/file.mojom";
import "sandbox/policy/mojom/context.mojom";
import "sandbox/policy/mojom/sandbox.mojom";

// Streams a response from a call to execute a model.
interface StreamingResponder {
  // This is called N times each time a new chunk of text is available.
  OnResponse(string text);

  // This is called once when all text for the query has been returned.
  // OnResponse() will not be called after OnComplete() has been called.
  OnComplete();
};

// A loaded model which can be queried. This interface must be controlled by the
// browser and consumers must take care to sanitize inputs.
interface OnDeviceModel {
  // Executes model on the given input. The response will be streamed to
  // |response|.
  Execute(string input, pending_remote<StreamingResponder> response);
};

// Opened file resources needed to define the model.
struct ModelAssets {
  mojo_base.mojom.File? sp_model;
  mojo_base.mojom.File? model;
  mojo_base.mojom.File? weights;
};

// The result of OnDeviceModelService.LoadModel().
union LoadModelResult {
  // On successful load, this field is populated with a Remote to control the
  // loaded model.
  pending_remote<OnDeviceModel> model;

  // On load failure, this field is populated with a description of the failure.
  string error;
};

// Classifies the device based on how fast it is estimated to be able to run a
// model..
enum PerformanceClass {
  // There was an error running the benchmark. The device is likely not able to
  // run any models.
  kError,

  // The values below classify devices into a range of performance buckets.
  kVeryLow,
  kLow,
  kMedium,
  kHigh,
  kVeryHigh,
};

// A service which allows loading trusted models which are stored on-device and
// which may process untrustworthy data.
[ServiceSandbox=sandbox.mojom.Sandbox.kOnDeviceModelExecution,
 RequireContext=sandbox.mojom.Context.kBrowser]
interface OnDeviceModelService {
  // Initializes a new model instance given `assets`.
  LoadModel(ModelAssets assets) => (LoadModelResult result);

  // Returns the performance class based on benchmarks run on the device.
  GetEstimatedPerformanceClass() => (PerformanceClass performance_class);
};
