name: Test Artifact Upload
description: Uploads test archives for on-device and on-host tests.
inputs:
  upload_on_host_test_artifacts:
    description: "Indicates if on-host test artifacts should be uploaded."
    required: true
  upload_on_device_test_artifacts:
    description: "Indicates if on-device test artifacts should be uploaded."
    required: true
  test_artifacts_key:
    description: "Artifact key used to store on-host test artifacts."
    required: true
  test_targets_json:
    description: "The test targets as a json list."
    required: true
runs:
  using: "composite"
  steps:
    - name: Archive Test Artifacts
      env:
        TEST_TARGETS_JSON: ${{ inputs.test_targets_json }}
      run: |
        set -x
        mkdir ${GITHUB_WORKSPACE}/artifacts
        cd src/

        time vpython3 -u ./cobalt/build/archive_test_artifacts.py \
          --source-dir ${GITHUB_WORKSPACE}/src \
          --out-dir out/${{ matrix.platform }}_${{ matrix.config }}/ \
          --destination-dir ${GITHUB_WORKSPACE}/artifacts \
          --platform ${{ matrix.platform }} \
          --targets $(echo "${TEST_TARGETS_JSON}" | jq -cr 'join(",")')
      shell: bash
    - name: Upload On-Host Test Artifacts Archive
      if: inputs.upload_on_host_test_artifacts == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.test_artifacts_key }}
        path: artifacts/*
        retention-days: 3
    - name: Set up Cloud SDK
      if: inputs.upload_on_device_test_artifacts == 'true'
      uses: isarkis/setup-gcloud@40dce7857b354839efac498d3632050f568090b6 # v1.1.1
    - name: Upload Android Test Artifacts to GCS
      if: inputs.upload_on_device_test_artifacts == 'true'
      env:
        WORKFLOW: ${{ github.workflow }}
      run: |
        set -eux
        project_name=$(gcloud config get-value project)

        # Upload gtest target artifacts.
        gsutil -m cp "${GITHUB_WORKSPACE}/artifacts/*" \
          "gs://${project_name}-test-artifacts/${WORKFLOW}/${GITHUB_RUN_NUMBER}/${{matrix.platform}}/"

        # Upload cobalt.apk for smoke tests.
        gsutil -m cp "${GITHUB_WORKSPACE}/src/out/${{ matrix.platform }}_${{ matrix.config }}/apks/Cobalt.apk" \
          "gs://${project_name}-test-artifacts/${WORKFLOW}/${GITHUB_RUN_NUMBER}/${{matrix.platform}}/"
      shell: bash
