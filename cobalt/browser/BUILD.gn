# Copyright 2025 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//starboard/build/buildflags.gni")

source_set("browser") {
  # TODO(cobalt, b/375655377): remove testonly declaration, needed because of
  # content_shell_lib.
  testonly = true

  sources = [
    "cobalt_browser_interface_binders.cc",
    "cobalt_browser_interface_binders.h",
    "cobalt_content_browser_client.cc",
    "cobalt_content_browser_client.h",
    "cobalt_web_contents_observer.cc",
    "cobalt_web_contents_observer.h",
  ]

  if (is_androidtv) {
    sources += [
      "android/mojo/cobalt_interface_registrar_android.cc",
      "android/mojo/cobalt_interface_registrar_android.h",
    ]
  }

  deps = [
    ":embed_polyfilled_javascript",
    ":metrics",
    "//cobalt/browser/crash_annotator/public/mojom",
    "//cobalt/browser/h5vcc_runtime",
    "//cobalt/browser/h5vcc_runtime/public/mojom",
    "//cobalt/browser/h5vcc_system",
    "//cobalt/browser/h5vcc_system/public/mojom",
    "//cobalt/browser/migrate_storage_record",
    "//cobalt/media/service",
    "//cobalt/media/service/mojom",
    "//cobalt/user_agent",
    "//components/js_injection/browser:browser",
    "//components/os_crypt/sync",
    "//content/public/browser",

    # TODO(b/390021478): Do not depend on content_shell_lib here.
    "//content/shell:content_shell_lib",
  ]

  if (!cobalt_is_release_build) {
    deps += [
      "//cobalt/browser/h5vcc_storage/testing",
      "//cobalt/browser/h5vcc_storage/testing/public/mojom",
    ]
  }

  if (is_androidtv) {
    deps += [ "//cobalt/android:jni_headers" ]
  } else {
    deps += [ "//cobalt/browser/crash_annotator" ]
  }
}

source_set("switches") {
  sources = [
    "switches.cc",
    "switches.h",
  ]

  deps = [ "//base" ]
}

config("embed_polyfilled_javascript_config") {
  include_dirs = [ root_gen_dir ]
}

# TODO(cobalt, b/390710539): migrate to GRIT.
action("embed_polyfilled_javascript") {
  script = "//cobalt/build/generate_data_header.py"
  outputs = [ "$target_gen_dir/embedded_resources/embedded_js.h" ]
  public_configs = [ ":embed_polyfilled_javascript_config" ]

  args = [
    "CobaltJavaScriptPolyfill",
    rebase_path(outputs[0], root_build_dir),
    rebase_path("embedded_resources", root_build_dir),
  ]
}

source_set("metrics") {
  # TODO(cobalt, b/375655377): remove testonly declaration, needed because of
  # being depended-on by :browser above.
  testonly = true

  sources = [
    "metrics/cobalt_metrics_service_client.cc",
    "metrics/cobalt_metrics_service_client.h",
  ]
  deps = [
    "//components/metrics",
    "//components/prefs",
    "//components/variations",
    "//content/public/browser",
    "//url",
  ]
}
