# Copyright 2024 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//cobalt/build/configs/hacks.gni")
import("//starboard/build/buildflags.gni")

config("cobalt_config") {
  configs = [
    ":default_includes",
    ":buildflag_defines",
  ]
  if (current_toolchain == starboard_toolchain) {
    configs += [ "//${starboard_path}/platform_configuration" ]
  } else if (is_cobalt_hermetic_build &&
             current_toolchain == cobalt_toolchain) {
    configs += [
      # TODO: b/390500840 - Remove hardcoded x64 config, switch config based on platform.
      "//starboard/build/config/modular/x64",
      "//starboard/build/config:starboard",
    ]
  } else {
    # No configs to add for any other toolchain
  }
}

config("default_includes") {
  if (is_android) {
    include_dirs = [
      # POSIX emulation headers - these need to come *before* system include_dirs.
      "//starboard/android/shared/posix_emu/include",
    ]
  }
}

config("buildflag_defines") {
  defines = []
  if (is_cobalt) {
    defines += [ "ENABLE_BUILDFLAG_IS_COBALT" ]
  }
  if (is_starboard) {
    defines += [ "OS_STARBOARD" ]
  }
  if (use_starboard_media) {
    defines += [ "ENABLE_BUILDFLAG_USE_STARBOARD_MEDIA" ]
  }
  if (use_evergreen) {
    defines += [ "ENABLE_BUILFLAG_USE_EVERGREEN" ]
  }
  if (sb_is_modular) {
    defines += [ "ENABLE_BUILDFLAG_MODULAR_BUILD" ]
  }
  if (cobalt_is_release_build) {
    defines += [ "ENABLE_BUILDFLAG_COBALT_IS_RELEASE_BUILD" ]
  }
  if (enable_cobalt_hacks) {
    defines += [ "ENABLE_BUILDFLAG_ENABLE_COBALT_HACKS" ]
  }
  if (is_androidtv) {
    defines += [ "ENABLE_BUILFLAG_IS_ANDROIDTV" ]
  }
}
