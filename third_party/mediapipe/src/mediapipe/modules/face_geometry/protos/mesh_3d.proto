// Copyright 2020 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe.face_geometry;

option java_package = "com.google.mediapipe.modules.facegeometry";
option java_outer_classname = "Mesh3dProto";

message Mesh3d {
  enum VertexType {
    // Is defined by 5 coordinates: Position (XYZ) + Texture coordinate (UV).
    VERTEX_PT = 0;
  }

  enum PrimitiveType {
    // Is defined by 3 indices: triangle vertex IDs.
    TRIANGLE = 0;
  }

  optional VertexType vertex_type = 1;
  optional PrimitiveType primitive_type = 2;
  // Vertex buffer size is a multiple of the vertex size (e.g., 5 for
  // VERTEX_PT).
  repeated float vertex_buffer = 3;
  // Index buffer size is a multiple of the primitive size (e.g., 3 for
  // TRIANGLE).
  repeated uint32 index_buffer = 4;
}
