This is a testharness.js-based test.
Found 133 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\\"#0000ff\\">a</font>bar" but got "foo<span style=\\"color:rgb(0, 0, 255)\\">a</span>bar"
[FAIL] [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar" but got "foabar"
[FAIL] [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</div>" but got "<div>fooabar</div>"
[FAIL] [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>ar" but got "fooaar"
[FAIL] [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\\"margin:0 0 0 40px; border:none; padding:0px\\">foobar</blockquote>"
[FAIL] [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</blockquote>" but got "<blockquote style=\\"margin:0 0 0 40px; border:none; padding:0px\\">fooabar</blockquote>"
[FAIL] [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar" but got "foo<hr>abar"
[FAIL] [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar" but got "fooab<b>c</b>dabar"
[FAIL] [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\\"/img/lion.svg\\"><span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar" but got "foo<img src=\\"/img/lion.svg\\">abar"
[FAIL] [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\\"background-color:rgb(0, 255, 255)\\"><br></span>bar"
[FAIL] [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar" but got "foo<span style=\\"background-color:rgb(0, 255, 255)\\"><br>a</span>bar"
[FAIL] [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</li></ol>" but got "<ol><li>afoobar</li></ol>"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
[FAIL] [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</p>" but got "foo<div><span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</div>"
[FAIL] [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</li></ul>" but got "<ul><li>afoobar</li></ul>"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before
  assert_equals: Wrong result returned expected "left" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after
  assert_equals: Wrong result returned expected "center" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\\"text-align:center\\">foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</div>" but got "<div style=\\"text-align:center\\">fooabar</div>"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before
  assert_equals: Wrong result returned expected "left" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after
  assert_equals: Wrong result returned expected "center" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before
  assert_equals: Wrong result returned expected "left" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after
  assert_equals: Wrong result returned expected "justify" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\\"text-align:justify\\">foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</div>" but got "<div style=\\"text-align:justify\\">fooabar</div>"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before
  assert_equals: Wrong result returned expected "left" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after
  assert_equals: Wrong result returned expected "justify" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before
  assert_equals: Wrong result returned expected "left" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after
  assert_equals: Wrong result returned expected "left" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar" but got "fooabar"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before
  assert_equals: Wrong result returned expected "left" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after
  assert_equals: Wrong result returned expected "left" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before
  assert_equals: Wrong result returned expected "left" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after
  assert_equals: Wrong result returned expected "right" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\\"text-align:right\\">foo<span style=\\"background-color:rgb(0, 255, 255)\\">a</span>bar</div>" but got "<div style=\\"text-align:right\\">fooabar</div>"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before
  assert_equals: Wrong result returned expected "left" but got "false"
[FAIL] [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after
  assert_equals: Wrong result returned expected "right" but got "true"
[FAIL] [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "foo<span style=\\"vertical-align:sub\\">a</span>bar"
[FAIL] [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>bar" but got "foo<span style=\\"vertical-align:super\\">a</span>bar"
[FAIL] [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\\"http://www.google.com/\\"><font color=\\"#a52a2a\\">a</font></a>bar" but got "foo<a href=\\"http://www.google.com/\\" style=\\"color:rgb(165, 42, 42)\\">a</a>bar"
[FAIL] [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\\"http://www.google.com/\\"><font color=\\"#a52a2a\\">a</font></a>bar" but got "foo<a href=\\"http://www.google.com/\\">a</a>bar"
[FAIL] [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(165, 42, 42)" but got "rgb(0, 0, 255)"
[FAIL] [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\\"http://www.google.com/\\"><font color=\\"#000000\\">a</font></a>bar" but got "foo<a href=\\"http://www.google.com/\\" style=\\"color:rgb(0, 0, 0)\\">a</a>bar"
[FAIL] [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\\"http://www.google.com/\\"><font color=\\"#000000\\">a</font></a>bar" but got "foo<a href=\\"http://www.google.com/\\">a</a>bar"
[FAIL] [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 0)" but got "rgb(0, 0, 255)"
[FAIL] [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "true"
Harness: the test ran to completion.

