// Copyright 2019 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Forked from mediapipe/framework/tool/source.proto.
// The forked proto must remain identical to the original proto and should be
// ONLY used by mediapipe open source project.

syntax = "proto2";

package mediapipe;

// `MessageData`, like protobuf.Any, contains an arbitrary serialized protbuf
// along with a URL that describes the type of the serialized message.
message MessageData {
  // A URL/resource name that identifies the type of serialized protbuf.
  optional string type_url = 1;

  // Must be a valid serialized protocol buffer of the above specified type.
  optional bytes value = 2;
}

// Data for one Protobuf field or one MediaPipe packet.
message FieldData {
  oneof value {
    sint32 int32_value = 1;
    sint64 int64_value = 2;
    uint32 uint32_value = 3;
    uint64 uint64_value = 4;
    double double_value = 5;
    float float_value = 6;
    bool bool_value = 7;
    sint32 enum_value = 8;
    string string_value = 9;
    MessageData message_value = 10;
  }
}
