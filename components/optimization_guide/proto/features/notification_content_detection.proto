// Copyright 2025 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package optimization_guide.proto;

import "components/optimization_guide/proto/features/common_quality_data.proto";

option optimize_for = LITE_RUNTIME;
option java_package = "org.chromium.components.optimization_guide.features.proto";

option java_outer_classname = "NotificationContentDetectionProto";

// DO NOT EDIT THIS FILE DIRECTLY!
//
// This file is generated in g3 and then synced to Chrome. Instead, please
// refer to http://go/chrome-intelligence-feature-protos (Google-internal link),
// and then changes will be synced with Chrome automatically.

message NotificationContentDetectionLoggingData {
  NotificationContentDetectionRequest request = 1;

  NotificationContentDetectionResponse response = 2;

  NotificationContentDetectionQuality quality = 3;
}

message NotificationContentDetectionRequest {
  // The textual contents of the notification.
  NotificationContents notification_contents = 1;
}

message NotificationContents {
  string notification_title = 1;

  string notification_message = 2;

  repeated string notification_action_labels = 3;

  string url = 4;
}

message NotificationContentDetectionResponse {
  // The score of the notification being suspicious from 0 to 100.
  float suspicious_score = 1;
}

message NotificationContentDetectionQuality {
  UserFeedback user_feedback = 1;

  FinalModelStatus final_model_status = 2;

  // Is the url of the notification on the safe browsing high confidence
  // allowlist.
  bool is_url_on_allowlist = 3;

  // Did the user tap "Always allow" on a notification from the url to bypass
  // warnings for the url.
  bool did_user_always_allow_url = 4;
}
