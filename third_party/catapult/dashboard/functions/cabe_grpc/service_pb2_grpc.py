# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import service_pb2 as service__pb2


class AnalysisStub(object):
  """Missing associated documentation comment in .proto file."""

  def __init__(self, channel):
    """Constructor.

        Args:
            channel: A grpc.Channel.
        """
    self.GetAnalysis = channel.unary_unary(
        '/cabe.proto.Analysis/GetAnalysis',
        request_serializer=service__pb2.GetAnalysisRequest.SerializeToString,
        response_deserializer=service__pb2.GetAnalysisResponse.FromString,
    )


class AnalysisServicer(object):
  """Missing associated documentation comment in .proto file."""

  def GetAnalysis(self, request, context):
    """Get results of a performance experiment analysis.
        """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAnalysis':
          grpc.unary_unary_rpc_method_handler(
              servicer.GetAnalysis,
              request_deserializer=service__pb2.GetAnalysisRequest.FromString,
              response_serializer=service__pb2.GetAnalysisResponse
              .SerializeToString,
          ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cabe.proto.Analysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Analysis(object):
  """Missing associated documentation comment in .proto file."""

  @staticmethod
  def GetAnalysis(request,
                  target,
                  options=(),
                  channel_credentials=None,
                  call_credentials=None,
                  insecure=False,
                  compression=None,
                  wait_for_ready=None,
                  timeout=None,
                  metadata=None):
    return grpc.experimental.unary_unary(
        request, target, '/cabe.proto.Analysis/GetAnalysis',
        service__pb2.GetAnalysisRequest.SerializeToString,
        service__pb2.GetAnalysisResponse.FromString, options,
        channel_credentials, insecure, call_credentials, compression,
        wait_for_ready, timeout, metadata)
