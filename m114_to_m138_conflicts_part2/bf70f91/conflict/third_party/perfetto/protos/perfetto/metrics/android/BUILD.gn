# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../../gn/proto_library.gni")

perfetto_proto_library("@TYPE@") {
<<<<<<< HEAD
  proto_generators = [ "lite" ]
  sources = [
    "ad_services_metric.proto",
    "android_anomaly_metric.proto",
    "android_blocking_call.proto",
    "android_blocking_call_per_frame.proto",
    "android_blocking_calls_cuj_metric.proto",
    "android_blocking_calls_cuj_per_frame_metric.proto",
    "android_blocking_calls_unagg.proto",
    "android_boot.proto",
    "android_boot_unagg.proto",
    "android_broadcasts_metric.proto",
    "android_frame_timeline_metric.proto",
    "android_garbage_collection_stats.proto",
    "android_garbage_collection_unagg_metric.proto",
    "android_oom_adjuster_metric.proto",
    "android_sysui_notifications_blocking_calls_metric.proto",
    "anr_metric.proto",
    "app_process_starts_metric.proto",
    "auto_metric.proto",
=======
  proto_generators = [
    "lite",
    "source_set",
  ]
  sources = [
    "android_blocking_calls_cuj_metric.proto",
    "android_frame_timeline_metric.proto",
    "android_trusty_workqueues.proto",
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "batt_metric.proto",
    "binder_metric.proto",
    "camera_metric.proto",
    "camera_unagg_metric.proto",
<<<<<<< HEAD
    "codec_metrics.proto",
=======
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "cpu_metric.proto",
    "display_metrics.proto",
    "dma_heap_metric.proto",
    "dvfs_metric.proto",
    "fastrpc_metric.proto",
    "g2d_metric.proto",
    "gpu_metric.proto",
    "hwcomposer.proto",
    "hwui_metric.proto",
<<<<<<< HEAD
    "io_metric.proto",
    "io_unagg_metric.proto",
    "ion_metric.proto",
    "irq_runtime_metric.proto",
    "jank_cuj_metric.proto",
    "java_heap_class_stats.proto",
=======
    "ion_metric.proto",
    "irq_runtime_metric.proto",
    "jank_cuj_metric.proto",
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "java_heap_histogram.proto",
    "java_heap_stats.proto",
    "lmk_metric.proto",
    "lmk_reason_metric.proto",
    "mem_metric.proto",
    "mem_unagg_metric.proto",
<<<<<<< HEAD
    "monitor_contention_agg_metric.proto",
    "monitor_contention_metric.proto",
    "multiuser_metric.proto",
    "network_metric.proto",
=======
    "monitor_contention_metric.proto",
    "multiuser_metric.proto",
    "network_metric.proto",
    "other_traces.proto",
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "package_list.proto",
    "powrails_metric.proto",
    "process_metadata.proto",
    "profiler_smaps.proto",
    "rt_runtime_metric.proto",
    "simpleperf.proto",
    "startup_metric.proto",
    "surfaceflinger.proto",
<<<<<<< HEAD
    "sysui_notif_shade_list_builder_metric.proto",
    "sysui_slice_performance_statistical_data.proto",
    "sysui_update_notif_on_ui_mode_changed_metric.proto",
=======
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "task_names.proto",
    "thread_time_in_state_metric.proto",
    "trace_quality.proto",
    "unsymbolized_frames.proto",
<<<<<<< HEAD
    "wattson_in_time_period.proto",
    "wattson_tasks_attribution.proto",
=======
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
  ]
}
