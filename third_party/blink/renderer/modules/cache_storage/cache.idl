// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://w3c.github.io/ServiceWorker/#cache-interface

[
    SecureContext,
    Exposed=(Window,Worker)
] interface Cache {
    [CallWith=ScriptState, MeasureAs=CacheStorageRead, RaisesException]
    Promise<(Response or undefined)> match(RequestInfo request, optional CacheQueryOptions options = {});

    [CallWith=ScriptState, MeasureAs=CacheStorageRead, RaisesException]
    Promise<sequence<Response>> matchAll(optional RequestInfo request,
                                         optional CacheQueryOptions options = {});

    [CallWith=ScriptState, MeasureAs=CacheStorageWrite, RaisesException]
    Promise<undefined> add(RequestInfo request);

    [CallWith=ScriptState, MeasureAs=CacheStorageWrite, RaisesException]
    Promise<undefined> addAll(sequence<RequestInfo> requests);

    [CallWith=ScriptState, MeasureAs=CacheStorageWrite, RaisesException]
    Promise<undefined> put(RequestInfo request, Response response);

    [
      CallWith=ScriptState,
      ImplementedAs=Delete,
      MeasureAs=CacheStorageWrite,
      RaisesException
    ] Promise<boolean> delete(RequestInfo request,
                              optional CacheQueryOptions options = {});

    [CallWith=ScriptState, MeasureAs=CacheStorageRead, RaisesException]
    Promise<sequence<Request>> keys(optional RequestInfo request,
                                    optional CacheQueryOptions options = {});
};
