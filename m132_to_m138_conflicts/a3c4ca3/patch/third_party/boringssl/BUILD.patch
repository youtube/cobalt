--- third_party/boringssl/BUILD.gn
+++ third_party/boringssl/BUILD.gn
@@ -297,49 +297,6 @@
     deps += [ "//base/test:test_support" ]
   }
 
-<<<<<<< HEAD
-=======
-  config("fuzzer_config") {
-    visibility = [ ":*" ]
-    defines = [
-      "BORINGSSL_UNSAFE_FUZZER_MODE",
-      "BORINGSSL_UNSAFE_DETERMINISTIC_MODE",
-    ]
-  }
-
-  # The same as boringssl, but builds with BORINGSSL_UNSAFE_FUZZER_MODE.
-  # TODO(https://crbug.com/boringssl/258): Fold this into the normal target.
-  component("boringssl_fuzzer") {
-    visibility = [ ":*" ]
-
-    sources = rebase_path(all_sources, ".", "src")
-    public = rebase_path(all_headers, ".", "src")
-    friend = [ ":*" ]
-    deps = [ "//third_party/boringssl/src/third_party/fiat:fiat_license" ]
-    if (is_cobalt_hermetic_build) {
-      deps += [ "//starboard:starboard_headers_only" ]
-    }
-
-    # Mark boringssl_asm as a public dependency so the OPENSSL_NO_ASM
-    # config is forwarded to callers. In particular, boringssl_crypto_tests
-    # requires it.
-    public_deps = [ ":boringssl_asm" ]
-
-    public_configs = [
-      ":external_config",
-      ":fuzzer_config",
-    ]
-    configs += [ ":component_config" ]
-
-    configs -= [ "//build/config/compiler:chromium_code" ]
-    configs += [ "//build/config/compiler:no_chromium_code" ]
-
-    if (is_nacl) {
-      deps += [ "//native_client_sdk/src/libraries/nacl_io" ]
-    }
-  }
-
->>>>>>> e0020b3283a (Modify boringssl to run nplb (#4943))
   foreach(source, fuzz_sources) {
     fuzzer = get_path_info(source, "name")
     fuzzer_test("boringssl_${fuzzer}_fuzzer") {
@@ -373,66 +330,4 @@
       }
     }
   }
-<<<<<<< HEAD
-=======
-
-  config("fuzzer_no_fuzzer_mode_config") {
-    visibility = [ ":*" ]
-    defines = [ "BORINGSSL_UNSAFE_DETERMINISTIC_MODE" ]
-  }
-
-  # The same as boringssl, but builds with BORINGSSL_UNSAFE_DETERMINISTIC_MODE.
-  # TODO(https://crbug.com/boringssl/258): Fold this into the normal target.
-  component("boringssl_fuzzer_no_fuzzer_mode") {
-    visibility = [ ":*" ]
-
-    sources = rebase_path(all_sources, ".", "src")
-    public = rebase_path(all_headers, ".", "src")
-    friend = [ ":*" ]
-    deps = [ "//third_party/boringssl/src/third_party/fiat:fiat_license" ]
-    if (is_cobalt_hermetic_build) {
-      deps += [ "//starboard:starboard_headers_only" ]
-    }
-
-    # Mark boringssl_asm as a public dependency so the OPENSSL_NO_ASM
-    # config is forwarded to callers. In particular, boringssl_crypto_tests
-    # requires it.
-    public_deps = [ ":boringssl_asm" ]
-
-    public_configs = [
-      ":external_config",
-      ":fuzzer_no_fuzzer_mode_config",
-    ]
-    configs += [ ":component_config" ]
-
-    configs -= [ "//build/config/compiler:chromium_code" ]
-    configs += [ "//build/config/compiler:no_chromium_code" ]
-
-    if (is_nacl) {
-      deps += [ "//native_client_sdk/src/libraries/nacl_io" ]
-    }
-  }
-
-  fuzzer_test("boringssl_client_no_fuzzer_mode_fuzzer") {
-    sources = [
-      "src/fuzz/client.cc",
-      "src/ssl/test/fuzzer.h",
-      "src/ssl/test/fuzzer_tags.h",
-    ]
-    additional_configs = [ ":internal_config" ]
-    deps = [ ":boringssl_fuzzer_no_fuzzer_mode" ]
-    seed_corpus = "src/fuzz/client_corpus_no_fuzzer_mode"
-  }
-
-  fuzzer_test("boringssl_server_no_fuzzer_mode_fuzzer") {
-    sources = [
-      "src/fuzz/server.cc",
-      "src/ssl/test/fuzzer.h",
-      "src/ssl/test/fuzzer_tags.h",
-    ]
-    additional_configs = [ ":internal_config" ]
-    deps = [ ":boringssl_fuzzer_no_fuzzer_mode" ]
-    seed_corpus = "src/fuzz/server_corpus_no_fuzzer_mode"
-  }
->>>>>>> e0020b3283a (Modify boringssl to run nplb (#4943))
 }
