// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000001.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000001[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x6d,0x96,0x7f,0x68,0x56,0x55,
    0x18,0xc7,0xef,0x7d,0xdf,0x77,0xef,0xe6,0x6b,0xdb,0x5c,0x6d,0xfe,0xd8,0xeb,0xaf,
    0x39,0xd1,0x6a,0xc3,0x0c,0x72,0x19,0xba,0x9c,0xa2,0x66,0x4e,0x32,0xb5,0x0d,0xc3,
    0x6a,0x2b,0xfa,0x67,0x83,0x74,0x90,0x7f,0xb8,0x4d,0x34,0xf7,0x03,0x2a,0x6b,0xa3,
    0x36,0xb0,0x56,0x6d,0x98,0xd9,0xb4,0xcc,0x34,0x4b,0x2d,0xac,0x24,0xca,0x21,0x85,
    0x08,0x41,0xae,0x81,0x65,0x10,0xf9,0xa3,0xff,0x04,0xfb,0x69,0xac,0xe7,0x39,0xf7,
    0x73,0xea,0xe1,0xad,0x0b,0x87,0x7b,0xcf,0xf7,0xf9,0xf9,0x7d,0xce,0x73,0xce,0x3d,
    0xf1,0x58,0x69,0x76,0x10,0x84,0x41,0x2a,0xc8,0x09,0x66,0x84,0x81,0x7b,0x0a,0x82,
    0x58,0xa0,0x9f,0x63,0x83,0xa4,0x7b,0xdf,0xb3,0x6a,0xdd,0xaa,0x39,0x4f,0x6e,0x7e,
    0x7c,0xce,0x1d,0xf3,0xe6,0xaa,0x3c,0x2f,0x88,0x3b,0x3d,0x95,0xe5,0x8b,0x4e,0x96,
    0xbc,0x13,0x32,0x9e,0x78,0xb4,0x61,0xa3,0xe2,0xb9,0x32,0xc6,0x09,0x9e,0x70,0xbe,
    0x02,0xf1,0x1c,0x0d,0xe7,0x4b,0xd0,0x5c,0xe7,0x3b,0x08,0x26,0xcb,0x58,0x21,0xd6,
    0x53,0xa2,0xb0,0x41,0x29,0x6f,0x8f,0x85,0x60,0x39,0x06,0x8b,0x81,0x8d,0x33,0x58,
    0x1c,0x6c,0xa2,0xc1,0x12,0x60,0x36,0x46,0x16,0xd8,0x74,0x83,0x25,0xc1,0x66,0x1a,
    0x2c,0x1b,0xec,0x66,0x83,0xe5,0x80,0x95,0x1b,0x6c,0x0c,0xd8,0x5c,0x83,0xa5,0xc0,
    0xaa,0x1c,0xd7,0xf8,0x3f,0x39,0x2b,0xef,0x3d,0xf2,0x9e,0x01,0x47,0x3f,0x2f,0x31,
    0x75,0x19,0xcc,0x90,0x0f,0x22,0xf7,0xf6,0xe7,0xc8,0x37,0x41,0xbc,0xe1,0x8c,0xba,
    0x69,0xbc,0x61,0xea,0xa1,0xfa,0x23,0x19,0xfe,0x46,0xf0,0xe7,0xe7,0x97,0x59,0x87,
    0x49,0x32,0x6e,0x92,0x28,0x31,0x27,0x8f,0x3b,0x7b,0xfd,0x2e,0x12,0x9d,0x24,0xf5,
    0xd2,0x1c,0x27,0xc8,0x3c,0x9b,0x1c,0xbc,0x3c,0x85,0x3c,0x40,0x3e,0x96,0x1a,0xc4,
    0x1d,0x9e,0x08,0x6e,0xc0,0x56,0xf1,0x05,0xcc,0x73,0xc1,0xca,0xb0,0xcf,0xc3,0x5e,
    0xf5,0xf3,0x91,0xa5,0x8c,0xfc,0x46,0x38,0xfb,0x79,0x11,0x3a,0xe3,0x25,0x4a,0x31,
    0xf1,0x35,0x76,0x5a,0xde,0xc5,0xe4,0xa6,0xf3,0xc9,0xa6,0x5e,0x53,0x25,0xaa,0xae,
    0x45,0xda,0x8c,0xa4,0x19,0x29,0x33,0xbc,0x9d,0xe6,0x33,0x95,0x75,0x9e,0x42,0xfe,
    0x3a,0x9f,0x06,0x56,0x66,0xea,0x33,0x06,0xfd,0x12,0xbe,0xd5,0x47,0xa1,0x64,0x32,
    0x8b,0x5c,0x66,0xcb,0x7b,0x16,0xb9,0x79,0xbb,0x0a,0x78,0xa8,0xdd,0x9d,0xd8,0xa5,
    0x91,0x2b,0x8f,0x85,0x51,0x59,0x16,0x95,0xcb,0x5a,0x2b,0x5e,0x09,0xb6,0xd0,0xf8,
    0xa8,0xa2,0x76,0x7e,0xbe,0xcc,0xe4,0xbe,0x1c,0x9f,0x29,0x23,0x5f,0x43,0x7f,0xfb,
    0xf9,0x06,0x7a,0xdb,0xcf,0x75,0x03,0x8f,0xca,0xe3,0xe7,0xdb,0x4c,0xed,0x35,0xa7,
    0x36,0xb3,0x56,0x4f,0xe3,0x3f,0x69,0xec,0x77,0xb1,0xcf,0x26,0x89,0x64,0x37,0xb1,
    0x39,0x56,0xfe,0xf3,0x56,0x1f,0xaf,0xf3,0xbd,0x9b,0xfa,0xea,0x7c,0x0f,0x58,0xb1,
    0x54,0x6b,0x2f,0x7a,0x6f,0x82,0xed,0x45,0x4f,0xe7,0x83,0x60,0x69,0xe9,0x83,0xfd,
    0xf8,0xf0,0x79,0x1c,0xc8,0xa8,0xf5,0x21,0x7a,0x52,0xd7,0xe2,0x7d,0xfa,0xc4,0xcf,
    0x8f,0x93,0xa7,0xed,0xb1,0x13,0x5a,0x07,0xb7,0xee,0x71,0xb7,0xef,0x52,0xae,0x87,
    0xa2,0xfd,0x75,0x8e,0x9c,0xbe,0x25,0xc6,0x30,0x39,0xe9,0x7c,0x24,0x23,0xee,0x79,
    0x6c,0x55,0xff,0x27,0x64,0xb6,0xb7,0x2f,0x51,0xff,0x72,0xd1,0xd6,0x3d,0x72,0x19,
    0xec,0x12,0x7d,0x5e,0x21,0xd5,0x8c,0x91,0x5b,0x40,0xce,0xbf,0x09,0xa2,0x35,0xfe,
    0x55,0x66,0x57,0xc0,0xff,0x94,0x6f,0xdd,0x47,0x3f,0x23,0xd7,0xf7,0x62,0xd1,0xca,
    0xe7,0xac,0xcc,0x65,0x9f,0x55,0x12,0xb7,0x00,0xbc,0x43,0x74,0x52,0x6e,0xff,0x47,
    0x98,0xee,0xb5,0xad,0xe4,0x5e,0x08,0xee,0xfd,0x8c,0xc7,0x4f,0x91,0xf1,0x33,0x01,
    0xdc,0xdb,0x4c,0x04,0xbb,0x5f,0x6c,0xb2,0x39,0x5b,0x0a,0xc1,0xd5,0x4f,0x09,0x67,
    0xd2,0x34,0xf6,0x4d,0x25,0xfb,0xb4,0x14,0x7c,0xb5,0x58,0x65,0x73,0x1e,0x97,0x32,
    0x62,0xf0,0x3e,0x22,0xf6,0xb3,0x39,0x97,0x67,0xe2,0xbb,0x4f,0xec,0x75,0x5f,0xdd,
    0x02,0xae,0x35,0x29,0xa3,0x26,0x7f,0x88,0x4c,0xf1,0x5b,0x5d,0xbd,0xa3,0xba,0xe8,
    0xf7,0xef,0xf2,0xbe,0xc2,0xbc,0xcc,0xc4,0xbc,0xcd,0xc4,0xf4,0x7d,0xfa,0x14,0x3c,
    0x6e,0x27,0x9e,0xea,0x6c,0xe2,0xac,0x99,0x07,0xae,0xbc,0x74,0xff,0xce,0x87,0x57,
    0x05,0xbc,0x54,0xe7,0x2e,0xf0,0x4e,0xf6,0xf0,0x02,0xec,0x14,0xdf,0x01,0xb6,0x08,
    0xbc,0xd2,0xf8,0x5a,0x8c,0xaf,0x2a,0xe3,0x6b,0x09,0x78,0x3b,0x76,0x4b,0xb1,0x5d,
    0x82,0xdd,0x72,0x77,0xae,0x47,0x76,0xcb,0xcc,0x1a,0xad,0x00,0x7f,0x5b,0x74,0xb4,
    0x56,0xf7,0x82,0xe5,0x51,0xaf,0x6a,0x53,0x2f,0x95,0xad,0x94,0x51,0x4d,0x7d,0x56,
    0xba,0x33,0x23,0xcb,0xed,0x97,0xfb,0x88,0xa9,0xcf,0x76,0xce,0x83,0xd5,0xe0,0x6b,
    0x65,0xf5,0x35,0xa7,0xab,0x60,0x5e,0x4f,0x6b,0xed,0x7d,0xe9,0xfb,0x9a,0x54,0x33,
    0x4d,0x71,0x97,0xb2,0x2e,0x57,0x89,0xe9,0x39,0xac,0x85,0xc3,0x1a,0xc3,0x61,0x1d,
    0xb8,0xe7,0xf0,0x00,0x98,0xe7,0x50,0x6b,0x38,0xa8,0xac,0x46,0x46,0x2d,0x71,0x6b,
    0x0c,0x87,0xf5,0xc4,0x0e,0x0d,0x87,0x07,0xc1,0x3d,0x87,0x6b,0x60,0x5e,0x4f,0x39,
    0x78,0x5f,0xb5,0x86,0x43,0x18,0x46,0x3a,0xd5,0xd8,0xd4,0x18,0x0e,0x0f,0xc1,0x61,
    0x83,0xe1,0xf0,0x30,0xb8,0xe7,0xf0,0x08,0x98,0xe7,0x50,0x6f,0x38,0xa8,0xac,0x4e,
    0x46,0x3d,0x71,0xeb,0xe8,0x53,0x8d,0xfb,0x18,0xb1,0xc3,0xf0,0xdf,0xb3,0x54,0x73,
    0xf4,0xba,0xf5,0x26,0xc7,0x24,0x7a,0xb5,0xd8,0xd5,0x11,0xab,0x31,0x23,0x56,0x83,
    0x8c,0x26,0xec,0xf5,0x7b,0xbf,0xd4,0x22,0xe9,0x7a,0x3d,0xaa,0xf5,0x46,0xfa,0x5a,
    0xe3,0x34,0xa2,0xd7,0x64,0xf4,0x36,0xd3,0x57,0xff,0xa7,0xd7,0x48,0x3e,0xaa,0x97,
    0x0e,0x23,0x9f,0x0d,0xf4,0x76,0x93,0x91,0x15,0x86,0x11,0xd6,0x80,0xbf,0x26,0xfc,
    0x6c,0xc1,0xcf,0x16,0xc3,0x2b,0x11,0x46,0xdc,0xd4,0x77,0x89,0xbc,0x5b,0x91,0xb9,
    0xbb,0x47,0x18,0xd5,0x54,0x65,0xd3,0x8d,0xcc,0xdd,0x5b,0x88,0xa1,0xb2,0x6f,0x82,
    0x48,0x76,0x98,0xf5,0xd8,0x8e,0x5c,0xff,0x79,0xbf,0x48,0x5d,0x5a,0x90,0xfb,0x3a,
    0xa9,0xbc,0x59,0x46,0x0b,0xf9,0x34,0x9b,0xbe,0xda,0x41,0x4e,0xfa,0x7c,0x82,0xbf,
    0x76,0xf0,0x36,0x6a,0xde,0x69,0x7c,0xb5,0xbb,0xb3,0x37,0x70,0x98,0xfa,0xea,0xa0,
    0x77,0xf4,0x9f,0xfa,0x0c,0xbd,0xb3,0x8d,0xde,0xd1,0xbc,0x9f,0x05,0xdf,0x44,0xcf,
    0xee,0x04,0x3b,0x4e,0xac,0xe7,0x88,0xb5,0x93,0x9a,0x79,0xbf,0x9d,0x70,0x57,0x9d,
    0xe7,0xc9,0xa9,0x19,0xfd,0x0e,0xf2,0xea,0x36,0x79,0xa9,0x4e,0x97,0x8c,0x6e,0xec,
    0xbb,0x0c,0xc7,0x17,0xe0,0x18,0x1a,0x8e,0x2f,0x82,0x7b,0x8e,0xbd,0xc6,0x97,0xca,
    0x7a,0x64,0xf4,0xe2,0xab,0xc7,0x70,0x7c,0x09,0x8e,0xbb,0x0c,0xc7,0x97,0xc1,0x3d,
    0xc7,0x3e,0x30,0xcf,0xf1,0x15,0x62,0xf5,0xc1,0xd1,0xfb,0xed,0x35,0x1c,0x5f,0x25,
    0xa7,0x2e,0xf4,0x7b,0xd0,0xf5,0x7c,0xba,0x8d,0xee,0x6b,0xd4,0xa4,0x13,0xbb,0x5e,
    0x38,0x0c,0x18,0x0e,0xaa,0xd3,0x2f,0x63,0x00,0xfb,0x7e,0xf2,0xd5,0xbb,0xc6,0x1b,
    0xdc,0x55,0x74,0xae,0xf7,0x92,0x7d,0xdc,0x49,0x6a,0x25,0x5f,0xbd,0x8f,0xbc,0x85,
    0xce,0x3e,0x73,0xae,0xbf,0x03,0xef,0x03,0xe6,0x5c,0x3f,0x08,0xee,0xff,0x11,0xef,
    0x52,0xe7,0x83,0xa6,0x5e,0x87,0xb1,0x3b,0x64,0xea,0xf5,0x1e,0xb8,0xaf,0xd7,0x11,
    0x30,0xbf,0x5e,0x1f,0xe0,0x2b,0x30,0xd8,0x51,0xb0,0xd0,0xfd,0xa3,0x93,0xee,0x2e,
    0x74,0x0c,0xdd,0xa3,0xf8,0x58,0x2f,0xf5,0xd1,0x3b,0xd1,0x87,0x70,0x38,0xc6,0x3f,
    0xb8,0x0d,0x3f,0xba,0xc7,0x3e,0x42,0xae,0xcf,0x10,0xd8,0xc7,0xe0,0x27,0xb8,0x57,
    0x68,0x8e,0x9f,0xb2,0xa7,0xf4,0x1c,0xfc,0x1c,0xbd,0x93,0xe8,0xaa,0xec,0x0b,0xb0,
    0xcf,0xd8,0xb7,0x27,0x59,0x2f,0x5f,0xef,0x01,0xb3,0xaf,0x75,0x2f,0xab,0x4e,0x37,
    0xfa,0xfd,0xac,0xd7,0x50,0xc6,0x59,0x76,0x4a,0xc6,0x19,0xec,0x4f,0x99,0xfa,0x9c,
    0xe6,0xfc,0xf1,0xb5,0xf8,0xd2,0xf4,0xf3,0x0e,0xb0,0xaf,0xc0,0x4f,0x9b,0xff,0xc1,
    0x75,0xf0,0x84,0xf9,0x1f,0x0c,0xe1,0xff,0x8c,0xf1,0x7f,0x96,0x33,0xcc,0xfb,0xfa,
    0x9a,0x3d,0x79,0xd6,0xf8,0x1a,0x05,0xf7,0x67,0x85,0xf5,0x35,0x64,0xce,0x37,0x3d,
    0xd3,0xae,0xc3,0x65,0x14,0x3e,0xaa,0xdb,0x8a,0x6e,0x2b,0x77,0x93,0x24,0xe7,0x98,
    0xd6,0xb8,0x22,0xe3,0xbc,0x6c,0x31,0xfd,0xf3,0x1d,0xfd,0x73,0xde,0xf4,0xcf,0xf7,
    0xe0,0x5b,0xf9,0x3f,0x5d,0x00,0xf3,0x77,0xc2,0x1f,0xb8,0xcb,0x5d,0x20,0x96,0x62,
    0x3f,0x82,0x17,0x38,0xdf,0x49,0x77,0xa7,0xbd,0xc8,0xbd,0xb7,0x0a,0xf9,0xdd,0xb2,
    0x26,0x17,0x59,0x4f,0x7b,0xd7,0xd2,0xf7,0x5f,0x52,0xc1,0xf9,0x32,0xfe,0x06,0x12,
    0x24,0x9e,0x45,0x78,0x10,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             vec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//     int srcHeight;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
//
//     ivec4 blitArea;
//     int destPitch;
// } params;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2DArray stencil;
//
// layout(set = 0, binding = 2)uniform sampler blitSampler;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             vec2 srcImageCoords = vec2(destSubImageCoords);
//
//     srcImageCoords *= params . stretch;
//     srcImageCoords += vec2(0.5);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = 0, yDir = 0;
//     if(params . rotateXY)
//     {
//         yDir = params . flipY ? - 1 : 1;
//     }
//     else
//     {
//         xDir = params . flipX ? - 1 : 1;
//     }
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if((srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)&&
//             (srcImageCoords . y >= 0 && srcImageCoords . y < params . srcHeight))
//         {
//
//             uint stencilValue = texture(usampler2DArray(stencil, blitSampler), vec3(srcImageCoords * params . invSrcExtent, params . srcLayer)). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         if(params . rotateXY)
//         {
//             srcImageCoords . y += yDir;
//         }
//         else
//         {
//             srcImageCoords . x += xDir;
//         }
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
