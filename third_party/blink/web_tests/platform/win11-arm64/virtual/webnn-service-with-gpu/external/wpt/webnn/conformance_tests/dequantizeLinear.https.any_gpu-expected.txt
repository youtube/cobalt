This is a testharness.js-based test.
[FAIL] dequantizeLinear uint8 1D constant tensor with implicit block_size = 2.
  promise_test: Unhandled rejection with value: object "UnknownError: Failed to execute 'build' on 'MLGraphBuilder': DirectML: DequantizeLinear and quantizeLinear can't support block-wise when FL < 6.3."
[FAIL] dequantizeLinear int8 4D constant tensor with block_size = [3, 2]
  promise_test: Unhandled rejection with value: object "UnknownError: Failed to execute 'build' on 'MLGraphBuilder': DirectML: DequantizeLinear and quantizeLinear can't support block-wise when FL < 6.3."
[FAIL] dequantizeLinear uint4 1D tensor with even input size
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, input data type uint4 must be one of [int8,uint8]."
[FAIL] dequantizeLinear uint4 1D tensor with odd input size
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, input data type uint4 must be one of [int8,uint8]."
[FAIL] dequantizeLinear uint4 4D constant tensor broadcasting zeroPoint
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, input data type uint4 must be one of [int8,uint8]."
[FAIL] dequantizeLinear uint4 3D input with block_size = [1, 1, 2]
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, input data type uint4 must be one of [int8,uint8]."
[FAIL] dequantizeLinear int4 1D tensor with even size
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, input data type int4 must be one of [int8,uint8]."
[FAIL] dequantizeLinear int4 1D tensor with odd size
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, input data type int4 must be one of [int8,uint8]."
[FAIL] per-tensor dequantizeLinear for int4 4D constant
  promise_test: Unhandled rejection with value: object "TypeError: Unsupported data type, input data type int4 must be one of [int8,uint8]."
Harness: the test ran to completion.

