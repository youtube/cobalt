# Copyright 2014 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import("//mojo/public/tools/bindings/mojom.gni")
import("//testing/libfuzzer/fuzzer_test.gni")

static_library("common") {
  sources = [
    "content_settings.cc",
    "content_settings.h",
    "content_settings_constraints.h",
    "content_settings_metadata.h",
    "content_settings_param_traits.cc",
    "content_settings_param_traits.h",
    "content_settings_pattern.cc",
    "content_settings_pattern.h",
    "content_settings_pattern_parser.cc",
    "content_settings_pattern_parser.h",
    "content_settings_types.h",
    "content_settings_utils.cc",
    "content_settings_utils.h",
    "cookie_controls_enforcement.h",
    "cookie_controls_status.h",
    "cookie_settings_base.cc",
    "cookie_settings_base.h",
    "pref_names.cc",
    "pref_names.h",
  ]

  configs += [ "//build/config/compiler:wexit_time_destructors" ]

  public_deps = [
    ":features",
    "//base",
  ]

  deps = [
    "//build:blink_buildflags",
    "//ipc",
    "//mojo/public/cpp/base",
    "//mojo/public/cpp/bindings:struct_traits",
    "//net",
    "//url",
  ]

  if (use_blink) {
    deps += [ "//components/privacy_sandbox:features" ]
  }
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "content_settings_pattern_parser_unittest.cc",
    "content_settings_pattern_unittest.cc",
    "content_settings_utils_unittest.cc",
    "cookie_settings_base_unittest.cc",
  ]

  deps = [
    ":common",
    "//base",
    "//base/test:test_support",
    "//net",
    "//testing/gmock",
    "//testing/gtest",
    "//url",
  ]
}

mojom("mojo_bindings") {
  generate_java = true
  sources = [ "content_settings.mojom" ]

  public_deps = [ "//mojo/public/mojom/base" ]

  cpp_typemaps = [
    {
      types = [
        {
          mojom = "content_settings.mojom.PatternParts"
          cpp = "::ContentSettingsPattern::PatternParts"
        },
        {
          mojom = "content_settings.mojom.ContentSettingsPattern"
          cpp = "::ContentSettingsPattern"
        },
        {
          mojom = "content_settings.mojom.ContentSettingsType"
          cpp = "::ContentSettingsType"
        },
        {
          mojom = "content_settings.mojom.ContentSetting"
          cpp = "::ContentSetting"
        },
        {
          mojom = "content_settings.mojom.ContentSettingPatternSource"
          cpp = "::ContentSettingPatternSource"
        },
        {
          mojom = "content_settings.mojom.RendererContentSettingRules"
          cpp = "::RendererContentSettingRules"
        },
      ]
      traits_headers = [ "content_settings_mojom_traits.h" ]
      traits_private_headers = [ "content_settings_param_traits.h" ]
      traits_sources = [ "content_settings_mojom_traits.cc" ]
      traits_public_deps = [ ":common" ]
    },
  ]
}

component("features") {
  output_name = "content_settings_features"

  defines = [ "IS_CONTENT_SETTINGS_FEATURES_IMPL" ]

  sources = [
    "features.cc",
    "features.h",
  ]

  deps = [ "//base" ]
}

fuzzer_test("content_settings_pattern_parser_fuzzer") {
  sources = [ "content_settings_pattern_parser_fuzzer.cc" ]
  deps = [
    ":common",
    "//base",
    "//base:i18n",
    "//third_party/icu",
    "//third_party/icu/fuzzers:fuzzer_support",
  ]
  dict = "content_settings_pattern_parser_fuzzer.dict"
}
