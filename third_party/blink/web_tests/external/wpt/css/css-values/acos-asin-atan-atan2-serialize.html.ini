[acos-asin-atan-atan2-serialize.html]
  ['rotate(acos(-1))' as a specified value should serialize as 'rotate(calc(180deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(-1.5))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(0))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(0.5))' as a specified value should serialize as 'rotate(calc(60deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(1 - 0.5))' as a specified value should serialize as 'rotate(calc(60deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(1))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(1.5))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(2))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(acos(pi - pi))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(-1))' as a specified value should serialize as 'rotate(calc(-90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(-1.5))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(0))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(0.5))' as a specified value should serialize as 'rotate(calc(30deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(1 - 0.5))' as a specified value should serialize as 'rotate(calc(30deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(1))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(1.5))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(2))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(asin(pi - pi + 1))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan(0))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan(0.577350269))' as a specified value should serialize as 'rotate(calc(30deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan(1))' as a specified value should serialize as 'rotate(calc(45deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan(infinity))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(-infinity, -infinity))' as a specified value should serialize as 'rotate(calc(-135deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(10, NaN))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(10, infinity))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(1s, 1000ms))' as a specified value should serialize as 'rotate(calc(45deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(37.320508075, 10))' as a specified value should serialize as 'rotate(calc(75deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(NaN, 10))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(NaN, NaN))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(infinity, 10))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(atan2(infinity, infinity))' as a specified value should serialize as 'rotate(calc(45deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(-1)))' as a specified value should serialize as 'rotate(calc(180deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(-1.5)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(0)))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(0.5)))' as a specified value should serialize as 'rotate(calc(60deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(1 - 0.5)))' as a specified value should serialize as 'rotate(calc(60deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(1)))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(1.5)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(2)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(acos(pi - pi)))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(-1)))' as a specified value should serialize as 'rotate(calc(-90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(-1.5)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(0)))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(0.5)))' as a specified value should serialize as 'rotate(calc(30deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(1 - 0.5)))' as a specified value should serialize as 'rotate(calc(30deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(1)))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(1.5)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(2)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(asin(pi - pi + 1)))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(atan(0)))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(atan(0.577350269)))' as a specified value should serialize as 'rotate(calc(30deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(atan(1)))' as a specified value should serialize as 'rotate(calc(45deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL

  ['rotate(calc(atan(infinity)))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(-infinity, -infinity)))' as a specified value should serialize as 'rotate(calc(-135deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(10, NaN)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(10, infinity)))' as a specified value should serialize as 'rotate(calc(0deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(1s, 1000ms)))' as a specified value should serialize as 'rotate(calc(45deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(37.320508075, 10)))' as a specified value should serialize as 'rotate(calc(75deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(NaN, 10)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(NaN, NaN)))' as a specified value should serialize as 'rotate(calc(NaN * 1deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(infinity, 10)))' as a specified value should serialize as 'rotate(calc(90deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]

  ['rotate(calc(atan2(infinity, infinity)))' as a specified value should serialize as 'rotate(calc(45deg))'.]
    expected:
      if (product == "content_shell") and (virtual_suite == "css-trigonometric-functions-disabled"): FAIL
      if product == "chrome": [PASS, FAIL]
