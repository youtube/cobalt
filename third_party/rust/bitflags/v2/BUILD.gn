# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# @generated from third_party/rust/chromium_crates_io/BUILD.gn.hbs by
# tools/crates/gnrt.
# Do not edit!

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "bitflags"
  epoch = "2"
  crate_type = "rlib"
  crate_root =
      "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/lib.rs"
  sources = [
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/example_generated.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/external.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/external/arbitrary.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/external/bytemuck.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/external/serde.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/internal.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/iter.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/lib.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/parser.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/public.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/all.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/bitflags_match.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/bits.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/clear.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/complement.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/contains.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/difference.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/empty.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/eq.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/extend.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/flags.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/fmt.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/from_bits.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/from_bits_retain.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/from_bits_truncate.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/from_name.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/insert.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/intersection.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/intersects.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/is_all.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/is_empty.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/iter.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/parser.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/remove.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/symmetric_difference.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/truncate.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/union.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/tests/unknown.rs",
    "//third_party/rust/chromium_crates_io/vendor/bitflags-v2/src/traits.rs",
  ]
  inputs = []

  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_authors = "The Rust Project Developers"
  cargo_pkg_name = "bitflags"
  cargo_pkg_description =
      "A macro to generate structures which behave like bitflags."
  cargo_pkg_version = "2.9.1"

  allow_unsafe = false

  #####################################################################
  # Tweaking which GN `config`s apply to this target.

  # Config changes that apply to all `//third_party/rust` crates.
  _configs_to_remove = [
    # We don't need code coverage data for any `chromium_crates_io` crates.
    "//build/config/coverage:default_coverage",

    # This is third-party code, so remove `chromium_code` config.  We are not
    # at the same time adding `//build/config/compiler:no_chromium_code`,
    # because 1) we don't want to pull how warnings are handled by that config
    # and 2) that config doesn't have any non-warnings-related stuff.
    "//build/config/compiler:chromium_code",
  ]
  _configs_to_add = []

  # Changing (if needed) which configs apply to this specific crate (based on
  # `extra_kv.configs_to_remove` and `extra_kv.configs_to_add` from
  # `gnrt_config.toml`).
  _configs_to_remove += []
  _configs_to_add += []

  # Applying config changes.
  library_configs -= _configs_to_remove
  library_configs += _configs_to_add
  executable_configs -= _configs_to_remove
  executable_configs += _configs_to_add
  proc_macro_configs -= _configs_to_remove
  proc_macro_configs += _configs_to_add
}
