actions {
  new_ad_auction_service {
    id: 1
  }
}
actions {
  net_response_action {
    script {
      constructed_script {
        generate_bid_function {
          generate_bid_return {
            generate_bid_return_value {
              generate_bid_return_dict {
                ad {
                  param_value {
                    interest_group {
                      ads {
                        ad {
                          index: 0
                        }
                      }
                    }
                  }
                }
                bid {
                  raw_value: "1"
                }
                render {
                  value {
                    param_value {
                      interest_group {
                        ads {
                          ad {
                            index: 0
                            ad_field {
                              render_url {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                allow_component_auction {
                  raw_value: "true"
                }
              }
            }
          }
        }
        score_ad_function {
        }
        report_win_function {
        }
        report_result_function {
        }
      }
    }
  }
}
actions {
  ad_auction_service_remote_action {
    id: 1
    m_join_interest_group {
      m_group {
        new {
          id: 1
          m_name: "shoes"
          m_owner: {
            new {
              id: 1
              m_scheme: "https"
              m_host: "owner.test"
              m_port: 443
            }
          }
          m_expiry {
            new {
              id: 1
              # Set a large time that's far in the future (int64 max) -- the
              # browser will clamp this to the max expiration.
              m_internal_value: 0x7FFFFFFFFFFFFFFF
            }
          }
          m_update_url {
            new {
              id: 1
              m_url: "https://owner.test:443/update"
            }
          }
          m_bidding_url {
            new {
              id: 1
              m_url: "https://owner.test:443/logic.js"
            }
          }
          m_ads {
            values {
              value {
                new {
                  id: 1
                  m_render_url: "https://owner.test/render"
                }
              }
            }
          }

          # The default values of required fields need to be explicitly set to
          # avoid build warnings.
          m_priority: 0.0
          m_enable_bidding_signals_prioritization: false
          m_all_sellers_capabilities {
          }
          m_execution_mode: InterestGroup_ExecutionMode_kCompatibilityMode
          m_trusted_bidding_signals_slot_size_mode: InterestGroup_TrustedBiddingSignalsSlotSizeMode_kNone
          m_auction_server_request_flags {
          }
          m_max_trusted_bidding_signals_url_length: 0
        }
      }
    }
  }
}
actions {
  ad_auction_service_remote_action {
    id: 1
    m_run_ad_auction {
      m_config {
        new {
          id: 1
          m_seller {
            new {
              id: 1
              m_scheme: "https"
              m_host: "owner.test"
              m_port: 443
            }
          }
          m_decision_logic_url {
            new {
              id: 1
              m_url: "https://owner.test:443/logic.js"
            }
          }
          m_auction_ad_config_non_shared_params {
            new {
              id: 1
              m_interest_group_buyers {
                values: {
                  value {
                    new {
                      id: 1
                      m_scheme: "https"
                      m_host: "owner.test"
                      m_port: 443
                    }
                  }
                }
              }

              m_auction_signals {
                # This is a hack -- this is a oneof type where value needs to
                # be set to be set to null in Mojo. Protos don't have null --
                # they only have unset fields, but m_value must be set to pick
                # the right oneof field. By selecting old with an id of an
                # object that's never been created, the result is that null is
                # used.
                old: 1
              }
              m_seller_signals {
                old: 1
              }
              m_per_buyer_signals {
                old: 1
              }
              m_buyer_timeouts {
                old: 1
              }
              m_buyer_currencies {
                old: 1
              }
              m_buyer_cumulative_timeouts {
                old: 1
              }
              m_per_buyer_group_limits {
              }
              m_all_buyers_group_limit: 65535
              m_required_seller_capabilities {
                new {
                  id: 1
                  m_allows_interest_group_counts: false
                  m_allows_latency_stats: false
                }
              }
              m_per_buyer_multi_bid_limits {
              }
              m_all_buyers_multi_bid_limit: 1
              m_component_auctions {
              }
              m_deprecated_render_url_replacements {
                old: 1
              }
              m_max_trusted_scoring_signals_url_length: 0
            }
          }

          m_direct_from_seller_signals {
            old: 1
          }
          m_expects_direct_from_seller_signals_header_ad_slot: false
          m_seller_experiment_group_id: 0
          m_all_buyer_experiment_group_id: 0
          m_per_buyer_experiment_group_ids {
          }
          m_expects_additional_bids: false
        }
      }
    }
  }
}
actions {
  run_until_idle {
  }
}
sequences {
  action_indexes: 0
  action_indexes: 1
  action_indexes: 2
  action_indexes: 3
  action_indexes: 4
}
sequence_indexes: 0
