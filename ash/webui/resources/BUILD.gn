# Copyright 2021 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//ash/webui/eche_app_ui/eche_app_ui.gni")
import("//ash/webui/face_ml_app_ui/face_ml_app_ui.gni")
import("//ash/webui/help_app_ui/help_app_ui.gni")
import("//ash/webui/media_app_ui/media_app_ui.gni")
import("//ash/webui/projector_app/projector_app.gni")
import("//tools/grit/grit_rule.gni")

assert(is_chromeos_ash, "Non-ChromeOS builds cannot depend on //ash")

ash_webui_grit_output_dir = "$root_gen_dir/ash/webui"

# Convenience template for WebUIs using generate_grd.
# TODO(calamity): Further deduplicate with non-generated grit targets.
template("ash_generated_grit") {
  grit(target_name) {
    forward_variables_from(invoker,
                           [
                             "deps",
                             "source",
                           ])

    # These arguments are needed since the grd is generated at build time.
    enable_input_discovery_for_gn_analyze = false

    outputs = [
      "ash_${target_name}.pak",
      "grit/ash_${target_name}.h",
      "grit/ash_${target_name}_map.cc",
      "grit/ash_${target_name}_map.h",
    ]
    output_dir = "$ash_webui_grit_output_dir"
  }
}

# Resources used by chrome://camera-app.
ash_generated_grit("camera_app_resources") {
  source = "$root_gen_dir/ash/webui/camera_app_ui/ash_camera_app_resources.grd"
  deps = [ "//ash/webui/camera_app_ui:build_grd" ]
}

# Resources used by chrome://os-feedback
ash_generated_grit("os_feedback_resources") {
  os_feedback_gen_dir = "$root_gen_dir/ash/webui/os_feedback_ui/resources"
  source = "$os_feedback_gen_dir/ash_os_feedback_resources.grd"
  deps = [
    "//ash/webui/os_feedback_ui/resources:build_grd",
    "//ash/webui/os_feedback_ui/resources:web_components",
  ]
}

# Resources used by chrome-untrusted://os-feedback
ash_generated_grit("os_feedback_untrusted_resources") {
  os_feedback_gen_dir =
      "$root_gen_dir/ash/webui/os_feedback_ui/untrusted_resources"
  source = "$os_feedback_gen_dir/ash_os_feedback_untrusted_resources.grd"
  deps = [ "//ash/webui/os_feedback_ui/untrusted_resources:build_grd" ]
}

ash_generated_grit("shortcut_customization_app_resources") {
  shortcut_customization_app_gen_dir =
      "$root_gen_dir/ash/webui/shortcut_customization_ui/resources"
  source = "$shortcut_customization_app_gen_dir/ash_shortcut_customization_app_resources.grd"
  deps = [ "//ash/webui/shortcut_customization_ui/resources:build_grd" ]
}

# Resources used by shimless rma flow
ash_generated_grit("shimless_rma_resources") {
  shimless_rma_resource_gen_dir =
      "$root_gen_dir/ash/webui/shimless_rma/resources"
  source = "$shimless_rma_resource_gen_dir/ash_shimless_rma_resources.grd"
  deps = [ "//ash/webui/shimless_rma/resources:build_grd" ]
}

ash_generated_grit("files_internals_resources") {
  source = "$root_gen_dir/ash/webui/files_internals/ash_files_internals_resources.grd"
  deps = [ "//ash/webui/files_internals:build_grd" ]
}

ash_generated_grit("system_extensions_internals_resources") {
  source = "$root_gen_dir/ash/webui/system_extensions_internals_ui/ash_system_extensions_internals_resources.grd"
  deps = [ "//ash/webui/system_extensions_internals_ui:build_grd" ]
}

# Resources used by chrome-untrusted://demo-mode-app
ash_generated_grit("demo_mode_app_resources") {
  source =
      "$root_gen_dir/ash/webui/demo_mode_app_ui/ash_demo_mode_app_resources.grd"
  deps = [ "//ash/webui/demo_mode_app_ui:build_grd" ]
}

if (!is_official_build) {
  # Resources used by chrome://sample-system-web-app
  ash_generated_grit("sample_system_web_app_resources") {
    source = "$root_gen_dir/ash/webui/sample_system_web_app_ui/resources/trusted/ash_sample_system_web_app_resources.grd"
    deps =
        [ "//ash/webui/sample_system_web_app_ui/resources/trusted:trusted_grd" ]
  }

  # Resources used by chrome-untrusted://sample-system-web-app
  ash_generated_grit("sample_system_web_app_untrusted_resources") {
    source = "$root_gen_dir/ash/webui/sample_system_web_app_ui/resources/untrusted/ash_sample_system_web_app_untrusted_resources.grd"
    deps = [
      "//ash/webui/sample_system_web_app_ui/resources/untrusted:untrusted_grd",
    ]
  }
}

# Resources used by chrome://help-app, and parts of the sandboxed app it hosts
# that do not come from the app bundle (below).
grit("help_app_resources") {
  source = "//ash/webui/help_app_ui/resources/help_app_resources.grd"

  outputs = [
    "grit/ash_help_app_resources.h",
    "grit/ash_help_app_resources_map.cc",
    "grit/ash_help_app_resources_map.h",
    "ash_help_app_resources.pak",
  ]
  output_dir = "$ash_webui_grit_output_dir"

  deps = [
    "//ash/webui/help_app_ui:mojo_bindings_js",
    "//ash/webui/help_app_ui/resources:browser_proxy_rollup",
    "//ash/webui/help_app_ui/resources:receiver_rollup",
    "//ash/webui/help_app_ui/search:mojo_bindings_js",
    "//chromeos/ash/components/local_search_service/public/mojom:mojom_js",
  ]
}

# Resources automatically served by the chrome://help-app bundle, obtained via DEPS.
grit("help_app_bundle_resources") {
  if (enable_cros_help_app) {
    # Obtained via an internal CIPD package in src/DEPS.
    source =
        "//ash/webui/help_app_ui/resources/prod/help_app_bundle_resources.grd"
  } else {
    source = "//ash/webui/help_app_ui/resources/mock/help_app_bundle_mock_resources.grd"
  }

  use_brotli = true

  # TODO(https://crbug.com/1401565): Prefix of outputs should be changed to ash
  # when .grd from internal CIPD package is updated.
  outputs = [
    "grit/chromeos_help_app_bundle_resources.h",
    "grit/chromeos_help_app_bundle_resources_map.cc",
    "grit/chromeos_help_app_bundle_resources_map.h",
    "chromeos_help_app_bundle_resources.pak",
  ]
  output_dir = "$root_gen_dir/chromeos"
}

grit("help_app_kids_magazine_bundle_resources") {
  if (enable_cros_help_app) {
    source = "//ash/webui/help_app_ui/resources/prod/help_app_kids_magazine_bundle_resources.grd"
  } else {
    source = "//ash/webui/help_app_ui/resources/mock/help_app_kids_magazine_bundle_mock_resources.grd"
  }

  use_brotli = true

  # TODO(https://crbug.com/1401565): Prefix of outputs should be changed to ash
  # when .grd from internal CIPD package is updated.
  outputs = [
    "grit/chromeos_help_app_kids_magazine_bundle_resources.h",
    "grit/chromeos_help_app_kids_magazine_bundle_resources_map.cc",
    "grit/chromeos_help_app_kids_magazine_bundle_resources_map.h",
    "chromeos_help_app_kids_magazine_bundle_resources.pak",
  ]
  output_dir = "$root_gen_dir/chromeos"
}

# Resources used by chrome://media-app, and parts of the sandboxed app it hosts
# that do not come from the app bundle (below).
grit("media_app_resources") {
  source = "//ash/webui/media_app_ui/resources/media_app_resources.grd"

  outputs = [
    "grit/ash_media_app_resources.h",
    "ash_media_app_resources.pak",
  ]
  output_dir = "$ash_webui_grit_output_dir"

  use_brotli = true

  deps = [
    "//ash/webui/media_app_ui:mojo_bindings_js",
    "//ash/webui/media_app_ui/resources/js:launch_rollup",
    "//ash/webui/media_app_ui/resources/js:piex_rollup",
    "//ash/webui/media_app_ui/resources/js:receiver_rollup",
  ]
}

# Resources automatically served by the chrome://media-app bundle, obtained via DEPS.
grit("media_app_bundle_resources") {
  if (enable_cros_media_app) {
    # Obtained via an internal CIPD package in src/DEPS.
    source =
        "//ash/webui/media_app_ui/resources/prod/media_app_bundle_resources.grd"
  } else {
    source = "//ash/webui/media_app_ui/resources/mock/media_app_bundle_mock_resources.grd"
  }

  use_brotli = true

  # TODO(https://crbug.com/1401565): Prefix of outputs should be changed to ash
  # when .grd from internal CIPD package is updated.
  outputs = [
    "grit/chromeos_media_app_bundle_resources.h",
    "grit/chromeos_media_app_bundle_resources_map.cc",
    "grit/chromeos_media_app_bundle_resources_map.h",
    "chromeos_media_app_bundle_resources.pak",
  ]
  output_dir = "$root_gen_dir/chromeos"
}

ash_generated_grit("diagnostics_app_resources") {
  source = "$root_gen_dir/ash/webui/diagnostics_ui/resources/ash_diagnostics_app_resources.grd"
  deps = [ "//ash/webui/diagnostics_ui/resources:build_grd" ]
}

# Resources used by chrome-untrusted://projector SWA.
ash_generated_grit("projector_app_untrusted_resources") {
  source = "$root_gen_dir/ash/webui/projector_app/resources/app/untrusted/ash_projector_app_untrusted_resources.grd"
  deps = [
    "//ash/webui/projector_app/resources/app/untrusted:build_untrusted_grd",
  ]
}

# Resources automatically served by the chrome-untrusted://projector bundle, obtained via DEPS.
# TODO(b/216523790): Split up the projector_app_bundle_resource into app_bundle and annotator_bundle.
grit("projector_app_bundle_resources") {
  if (enable_cros_projector_app) {
    # Obtained via an internal CIPD package in src/DEPS.
    source = "//ash/webui/projector_app/resources/prod/projector_app_bundle_resources.grd"
  } else {
    source = "//ash/webui/projector_app/resources/mock/projector_app_bundle_mock_resources.grd"
  }

  use_brotli = true

  # TODO(https://crbug.com/1401565): Prefix of outputs should be changed to ash
  # when .grd from internal CIPD package is updated.
  outputs = [
    "grit/chromeos_projector_app_bundle_resources.h",
    "grit/chromeos_projector_app_bundle_resources_map.cc",
    "grit/chromeos_projector_app_bundle_resources_map.h",
    "chromeos_projector_app_bundle_resources.pak",
  ]
  output_dir = "$root_gen_dir/chromeos"
}

# Resources used by chrome://face-ml
ash_generated_grit("face_ml_app_resources") {
  source = "$root_gen_dir/ash/webui/face_ml_app_ui/resources/trusted/ash_face_ml_app_resources.grd"
  deps = [ "//ash/webui/face_ml_app_ui/resources/trusted:trusted_grd" ]
}

# Resources used by chrome-untrusted://face-ml
ash_generated_grit("face_ml_app_untrusted_resources") {
  source = "$root_gen_dir/ash/webui/face_ml_app_ui/resources/untrusted/ash_face_ml_app_untrusted_resources.grd"
  deps = [ "//ash/webui/face_ml_app_ui/resources/untrusted:untrusted_grd" ]
}

# Resources automatically served by the chrome-untrusted://face-ml bundle, obtained via DEPS.
grit("face_ml_app_bundle_resources") {
  if (enable_cros_face_ml) {
    # Obtained via an internal CIPD package in src/DEPS.
    source = "//ash/webui/face_ml_app_ui/resources/prod/face_ml_app_bundle_resources.grd"
  } else {
    source = "//ash/webui/face_ml_app_ui/resources/mock/face_ml_app_bundle_mock_resources.grd"
  }

  use_brotli = true

  outputs = [
    "grit/ash_face_ml_app_bundle_resources.h",
    "grit/ash_face_ml_app_bundle_resources_map.cc",
    "grit/ash_face_ml_app_bundle_resources_map.h",
    "ash_face_ml_app_bundle_resources.pak",
  ]

  output_dir = "$ash_webui_grit_output_dir"
}

# Resources used by chrome-untrusted://projector-annotator SWA.
ash_generated_grit("projector_annotator_untrusted_resources") {
  source = "$root_gen_dir/ash/webui/projector_app/resources/annotator/untrusted/ash_projector_annotator_untrusted_resources.grd"
  deps = [ "//ash/webui/projector_app/resources/annotator/untrusted:build_untrusted_grd" ]
}

# Resources used by chrome://projector and chrome://projector-annotator SWA.
ash_generated_grit("projector_common_resources") {
  source = "$root_gen_dir/ash/webui/projector_app/resources/common/ash_projector_common_resources.grd"
  deps = [ "//ash/webui/projector_app/resources/common:build_common_grd" ]
}

# Resources used by chrome://eche-app
ash_generated_grit("eche_app_resources") {
  source = "$root_gen_dir/ash/webui/eche_app_ui/ash_eche_app_resources.grd"
  deps = [ "//ash/webui/eche_app_ui:build_grd" ]
}

# Resources automatically served by the chrome://eche-app bundle, obtained via DEPS.
grit("eche_bundle_resources") {
  # Obtained via an internal CIPD package in src/DEPS.
  if (enable_cros_eche_app) {
    # Obtained via an internal CIPD package in src/DEPS.
    source =
        "//ash/webui/eche_app_ui/resources/prod/ash_eche_bundle_resources.grd"
  } else {
    source = "//ash/webui/eche_app_ui/resources/mock/ash_eche_bundle_mock_resources.grd"
  }

  use_brotli = true

  outputs = [
    "grit/ash_eche_bundle_resources.h",
    "grit/ash_eche_bundle_resources_map.cc",
    "grit/ash_eche_bundle_resources_map.h",
    "ash_eche_bundle_resources.pak",
  ]
  output_dir = "$ash_webui_grit_output_dir"
}

# Resources used by chrome://connectivity-diagnostics
grit("connectivity_diagnostics_resources") {
  # These arguments are needed since the grd is generated at build time.
  enable_input_discovery_for_gn_analyze = false
  conn_diag_gen_dir =
      "$root_gen_dir/ash/webui/connectivity_diagnostics/resources"
  source = "$conn_diag_gen_dir/connectivity_diagnostics_resources.grd"

  deps = [ "//ash/webui/connectivity_diagnostics/resources:build_grd" ]

  outputs = [
    "connectivity_diagnostics_resources.pak",
    "grit/connectivity_diagnostics_resources.h",
    "grit/connectivity_diagnostics_resources_map.cc",
    "grit/connectivity_diagnostics_resources_map.h",
  ]

  output_dir = "$ash_webui_grit_output_dir"
}

grit("multidevice_debug_resources") {
  source =
      "//ash/webui/multidevice_debug/resources/multidevice_debug_resources.grd"

  outputs = [
    "grit/ash_multidevice_debug_resources.h",
    "grit/ash_multidevice_debug_resources_map.cc",
    "grit/ash_multidevice_debug_resources_map.h",
    "ash_multidevice_debug_resources.pak",
  ]

  output_dir = "$ash_webui_grit_output_dir"
}
