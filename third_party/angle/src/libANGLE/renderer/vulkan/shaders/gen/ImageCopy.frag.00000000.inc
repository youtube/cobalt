// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x5b,0x6c,0x55,0x45,
    0x14,0x3d,0x7b,0x5a,0x0a,0xa5,0x40,0x0b,0x22,0xf2,0x90,0x06,0x68,0x51,0x10,0x52,
    0x81,0x14,0x41,0x4a,0xcb,0x4b,0xa8,0xd2,0x96,0x0a,0x0d,0x01,0x41,0x9e,0x05,0x14,
    0x22,0x85,0x20,0x18,0xe0,0xc3,0xf0,0xf2,0x11,0x13,0x49,0x50,0xf8,0x00,0x91,0x18,
    0x34,0x42,0x50,0x9b,0x46,0x09,0x10,0x63,0x8c,0x06,0x11,0xc5,0x1f,0x90,0x40,0x54,
    0xea,0x07,0x20,0x02,0x2a,0x7c,0x81,0xbc,0xc1,0x59,0xdd,0x6b,0x73,0x37,0x37,0x1a,
    0x6f,0x3a,0x3d,0x77,0xd6,0x7e,0xad,0xbd,0x66,0xe6,0x9c,0xd3,0x66,0x84,0x82,0xe6,
    0x49,0x22,0x49,0xcb,0xa4,0x45,0x32,0x37,0x24,0x4d,0x9f,0xb6,0x49,0x88,0x48,0x92,
    0xe4,0x24,0x59,0x4d,0xd7,0xf2,0xca,0x9a,0xca,0xa2,0x17,0x97,0xce,0x29,0x2a,0x1e,
    0xd8,0x0f,0xf6,0x36,0x49,0x46,0x93,0x1f,0x6c,0xb9,0x49,0xf3,0x24,0x33,0x5e,0x31,
    0x16,0xce,0x9a,0x5f,0x07,0xfc,0x06,0x7c,0xa2,0x31,0x2f,0xfa,0x01,0x8f,0x05,0x92,
    0x27,0x93,0x66,0xc9,0x28,0x4d,0x9f,0x14,0xf0,0x6a,0x98,0x10,0x6b,0xe1,0xb0,0x40,
    0x2c,0xcf,0x61,0x19,0xc4,0xda,0x3b,0x2c,0x93,0x58,0x47,0x87,0x35,0x23,0xf6,0xa0,
    0xc3,0xb2,0x88,0x75,0x73,0x58,0x73,0x62,0x85,0x0e,0x6b,0x41,0xac,0x97,0xc3,0xb2,
    0x89,0xf5,0x75,0x58,0x4b,0x62,0xfd,0x1c,0x96,0x43,0xac,0xd8,0x61,0xad,0x88,0x0d,
    0x76,0x58,0x6b,0x62,0x43,0x1d,0xd6,0x86,0xd8,0x70,0xe8,0x1d,0x3b,0x35,0x0d,0xca,
    0x63,0x87,0x37,0x98,0x3b,0x97,0xf3,0xcc,0x28,0x58,0x0f,0x6a,0x68,0xf3,0xee,0x6e,
    0x0e,0xed,0xf3,0x39,0xbf,0x2f,0x66,0x41,0x9e,0xee,0x31,0x67,0x06,0x73,0x76,0x88,
    0xdf,0xb2,0xa8,0xc5,0xfd,0xd1,0x3f,0x97,0xdf,0xb1,0x0e,0x0f,0xc4,0x79,0x1e,0x6b,
    0x05,0xce,0x3b,0x50,0x3f,0x68,0xdd,0x27,0xfe,0xc6,0xf7,0xae,0xd0,0xb7,0xa8,0xaa,
    0xa4,0x7d,0xf4,0xca,0x77,0x38,0x7a,0x98,0xb0,0x6f,0xdc,0x08,0x9b,0x43,0xc7,0x89,
    0x13,0x8f,0x95,0xd9,0xfc,0x91,0x38,0x4a,0x5b,0xbe,0x36,0xcc,0xe6,0xd0,0xb4,0xbe,
    0x7c,0x56,0xa9,0xcd,0xfb,0xc7,0xf1,0x7b,0x7d,0xcf,0xbb,0x73,0x68,0xb4,0x65,0x73,
    0xa7,0xe1,0xe0,0x39,0x92,0x3c,0xf1,0xc9,0x8f,0xbb,0x74,0x14,0xf7,0x87,0xf1,0xb5,
    0x31,0xf2,0x7f,0x86,0xf9,0x74,0x8b,0x39,0x9f,0xe0,0xfa,0x22,0x57,0x09,0xe7,0xa3,
    0x89,0xf5,0xa1,0x36,0x63,0xa8,0x0d,0xfc,0xcb,0x69,0xcb,0x73,0xf6,0x0a,0xee,0x39,
    0xd8,0x2b,0x69,0x1f,0x49,0x3b,0xae,0xd5,0xe4,0x6c,0xfe,0x93,0xa9,0xa7,0xcd,0x6b,
    0xb9,0xfe,0x36,0xaf,0xe3,0x7a,0xdb,0x7c,0x1d,0xf7,0x2a,0xd6,0xe2,0x4d,0xc6,0x66,
    0x38,0xfb,0x46,0xee,0x5b,0xd3,0x6c,0x6b,0x5a,0xbd,0x06,0xee,0x43,0x9b,0x1f,0x20,
    0x47,0xe4,0xfb,0x81,0xf9,0x82,0xb3,0x1f,0xe1,0xfe,0xb6,0x79,0x23,0xf7,0x2c,0xfa,
    0xfb,0x95,0xb1,0xb9,0xce,0x7e,0x32,0x2d,0xfe,0x74,0x5a,0xfd,0xf3,0x69,0x7b,0xe7,
    0x52,0x93,0x75,0xd5,0x30,0xe4,0xbb,0x4e,0x6d,0x3b,0x50,0xff,0xeb,0xbc,0x7f,0x00,
    0xeb,0x14,0x2b,0x05,0x51,0x7e,0x92,0xdc,0xfb,0xb1,0x39,0x72,0x64,0x70,0x02,0xdf,
    0x12,0xce,0x33,0x25,0x65,0x6f,0x2d,0xaa,0x97,0xd5,0xc0,0xbc,0x8d,0xa4,0x34,0x44,
    0xfe,0xb1,0xb1,0x81,0x45,0x3b,0x96,0xdc,0xdd,0x97,0x15,0x71,0xbe,0x61,0xed,0xb6,
    0xd2,0xc7,0xe2,0xca,0x06,0xf2,0x4f,0xa8,0xfb,0xd5,0x88,0x60,0xbd,0x4b,0x79,0x36,
    0x6e,0x92,0x73,0x75,0x5c,0x25,0xe8,0x79,0x8b,0xd8,0x4d,0xc7,0xb5,0x8e,0xe7,0xea,
    0x36,0xed,0x23,0x62,0x06,0xec,0xa5,0x02,0xd1,0xfd,0x36,0x86,0xf9,0xe0,0x53,0x28,
    0x8a,0xaf,0x89,0x3e,0x98,0xf7,0x14,0x8d,0x03,0x8e,0x38,0xec,0xb1,0x87,0x18,0x57,
    0xc1,0x38,0xec,0xb3,0x87,0x45,0xf1,0x8f,0xa2,0x0f,0xce,0x64,0x2f,0x51,0x0c,0xfb,
    0xef,0x4a,0x64,0x5e,0x44,0x4d,0xae,0x47,0x7f,0xd8,0x7a,0xc7,0x01,0x0c,0xfd,0xe0,
    0xfb,0xf8,0x18,0xd7,0xb4,0xae,0xa2,0x35,0xf1,0x79,0x99,0x6b,0xd8,0x57,0x14,0x9f,
    0x10,0xd5,0x01,0xa7,0x5e,0x41,0x31,0xf3,0xbb,0x16,0x73,0x58,0x2e,0x5c,0x2f,0x47,
    0x2d,0xe0,0x57,0x19,0xd4,0xa7,0x19,0x63,0x7a,0xbb,0x1e,0x1e,0x65,0x0f,0x93,0x5d,
    0x0f,0xfd,0x44,0x71,0xeb,0xa1,0xbf,0x28,0x66,0x3d,0x0c,0x72,0x3d,0xc0,0x36,0x20,
    0x8e,0x41,0xac,0x3b,0xc0,0xf5,0x50,0x2c,0x5a,0x5b,0x5c,0x0f,0x03,0x45,0x71,0xeb,
    0xa1,0x4f,0x50,0xcc,0xfc,0xd0,0x83,0xe5,0x1a,0xe4,0x7a,0xa8,0x0a,0xea,0x83,0xbe,
    0x10,0x33,0xc0,0xf5,0x30,0x98,0x3d,0xd4,0xba,0x1e,0x1e,0x17,0xc5,0xad,0x87,0x21,
    0xa2,0x98,0xf5,0x50,0xe6,0x7a,0x80,0xad,0x24,0x8e,0x32,0xd6,0x2d,0x11,0xdd,0x47,
    0xa8,0x5b,0x2a,0x5a,0xbb,0x2a,0xa4,0xf6,0x3b,0x38,0x9a,0x6f,0x99,0xe3,0x38,0x8e,
    0x7e,0xe0,0x5d,0xca,0x9c,0xe0,0x83,0x33,0xd1,0x8c,0xe7,0xc1,0xf6,0x5c,0x16,0x39,
    0x9f,0x76,0x7b,0xae,0xb9,0x28,0xbe,0x8a,0x7b,0x2e,0x5b,0x14,0x43,0x5e,0xc4,0xe1,
    0xdc,0xb7,0x64,0xdc,0x49,0xc6,0x41,0xd3,0x1c,0x51,0x7c,0x46,0xe4,0x81,0xb3,0xd0,
    0x8a,0xf5,0x10,0x1f,0x68,0x37,0xad,0xc6,0x32,0xbe,0xce,0x69,0x55,0x21,0x8a,0x9b,
    0x56,0x95,0xa2,0x98,0x69,0x35,0xc5,0x69,0x05,0x5b,0x55,0x1c,0x53,0xd8,0x7f,0x15,
    0xd7,0x1b,0xe7,0xb5,0x5a,0xb4,0x76,0xc2,0xb8,0x43,0xfc,0x7e,0x23,0x7e,0x47,0xae,
    0x2f,0x19,0x83,0xeb,0x17,0xac,0xf5,0x95,0x68,0x5c,0x57,0xc6,0x7c,0xef,0x6a,0xc1,
    0xf6,0x75,0x1c,0xdf,0x30,0x0e,0xd7,0x56,0xb1,0x47,0xd4,0xfa,0x56,0x74,0x3d,0x3a,
    0xb3,0x2e,0x9e,0x71,0xaf,0x90,0xc7,0x41,0x51,0x3b,0x9e,0x73,0x6b,0x89,0x7d,0x27,
    0x8a,0xf7,0xe5,0xfa,0x1d,0x62,0x4e,0xe4,0xb7,0xb8,0xfd,0xe4,0x52,0x90,0xe6,0x03,
    0x4e,0x77,0x62,0xb5,0xab,0xc4,0x2e,0x93,0x43,0x75,0xd0,0xbc,0xe0,0xb5,0x9f,0x5c,
    0xb1,0xaf,0xb1,0x06,0x45,0x41,0xed,0xa6,0x87,0x69,0x54,0x43,0x8d,0x84,0xfd,0x36,
    0xa6,0x69,0x74,0x98,0x35,0x0f,0x3b,0x8d,0x7e,0x14,0x8d,0x33,0x8d,0x4e,0x38,0x8d,
    0x60,0x3b,0x1a,0xc7,0x71,0xc6,0x1d,0x77,0x1a,0xfd,0xe4,0x34,0xaa,0x49,0xd3,0xe8,
    0x67,0x51,0xbb,0xd7,0xe8,0x17,0x51,0xdc,0x34,0x6a,0x64,0xce,0xa3,0x4e,0xa3,0x63,
    0xe4,0x52,0x90,0xe6,0x73,0xc2,0x69,0xd4,0xe8,0x34,0x1a,0x1f,0x34,0x2f,0x78,0x1d,
    0x23,0x57,0xd3,0xa8,0x7f,0x50,0x7b,0x11,0xcf,0x96,0x69,0x34,0x89,0x1a,0x05,0xf6,
    0x7b,0x31,0x4d,0xa3,0x53,0xac,0x79,0xca,0x69,0xf4,0x9b,0x68,0x9c,0x69,0x74,0xc1,
    0x69,0x04,0xdb,0x99,0x38,0xce,0x31,0xee,0x9c,0xd3,0xe8,0x0f,0xa7,0xd1,0xa4,0x34,
    0x8d,0xfe,0x14,0xb5,0x7b,0x8d,0xfe,0x12,0xc5,0x4d,0xa3,0x8b,0xcc,0x79,0xc6,0x69,
    0x74,0x96,0x5c,0x0a,0xd2,0x7c,0x2e,0x38,0x8d,0x2e,0x3a,0x8d,0x6a,0x82,0xe6,0x05,
    0xaf,0xb3,0xe4,0x6a,0x1a,0x15,0x07,0xb5,0x43,0xab,0xc0,0x7c,0x76,0xf6,0xa6,0x30,
    0x07,0xfc,0x26,0x72,0xaf,0xe1,0x7e,0x84,0x98,0x8b,0xee,0xcc,0x4f,0xe5,0x99,0x5f,
    0xe7,0xce,0xfc,0xb3,0xa2,0xb8,0x9d,0xf9,0x69,0xa2,0x98,0x9d,0xf9,0x95,0x4e,0x3f,
    0xd8,0xa6,0xc7,0x31,0x8f,0x75,0xe7,0xb9,0xdc,0xcf,0x31,0xf7,0x46,0x97,0xfb,0x79,
    0x51,0xdc,0x72,0xcf,0x17,0xc5,0x2c,0x77,0x9d,0xcb,0x0d,0xdb,0x82,0x38,0xea,0x98,
    0x7b,0x81,0xbb,0x9f,0xbc,0x20,0xda,0x17,0x9e,0xf7,0x9f,0x33,0xd7,0x42,0x51,0x7c,
    0x2b,0xb5,0xb0,0xb8,0x3a,0x6a,0x01,0x9f,0x45,0xa2,0x35,0xc1,0x73,0x21,0xf3,0xa3,
    0xee,0x0a,0x57,0x17,0x3e,0x8b,0xe3,0x58,0xc1,0xf8,0xc5,0xae,0xee,0x12,0x57,0xb7,
    0x3a,0xbe,0xd5,0xe1,0x7d,0x6f,0x29,0xb1,0x89,0x21,0xf5,0x3e,0x81,0xaf,0x4f,0xc7,
    0x08,0xd8,0x97,0x89,0xc6,0xd9,0x78,0x3d,0xe6,0x02,0xfe,0x92,0x68,0xec,0xb2,0xa6,
    0xfe,0xb3,0x9b,0xd6,0x6a,0x39,0x73,0xc1,0x96,0xc9,0xf7,0x56,0x7b,0x9f,0x44,0x4f,
    0xc6,0x69,0x85,0x5b,0xdf,0xc9,0xac,0x8d,0x3e,0x97,0x93,0x3b,0x7c,0x57,0xd2,0x77,
    0xba,0xe3,0x3f,0xf3,0x5f,0xf8,0xcf,0xfe,0x0f,0xfe,0xeb,0xc9,0xb3,0x56,0xd4,0x67,
    0xa6,0xe3,0x39,0x97,0x31,0xb5,0xff,0xc1,0xd3,0x6a,0xaf,0x74,0x3c,0x27,0x05,0xe5,
    0x0a,0xee,0x73,0xb9,0x6f,0x6c,0xaf,0xac,0xe6,0x5e,0x69,0x70,0x7b,0x65,0x8d,0x28,
    0x6e,0x7b,0x65,0xad,0x28,0x66,0x7b,0x65,0x83,0x5b,0x33,0xd8,0xd6,0xc5,0xb1,0x81,
    0x75,0xd7,0xb9,0x9e,0x5f,0x15,0xad,0x6d,0xcf,0x9e,0x24,0xdc,0x7b,0xcf,0xb8,0xc4,
    0x98,0x4b,0xee,0x9e,0xf1,0xb7,0x68,0x5c,0x7f,0xc6,0xdc,0x71,0xb5,0x60,0xbb,0x12,
    0xc7,0x75,0xc6,0xe1,0xba,0x9a,0xb5,0x6e,0x32,0xae,0xaf,0xbb,0x57,0xdc,0x12,0xc5,
    0xf1,0x0e,0x6b,0xf7,0x96,0xdb,0xee,0xde,0x02,0xfb,0x50,0xea,0x86,0x1f,0xe4,0xbc,
    0xe2,0xee,0x19,0xd7,0x98,0x13,0xef,0xbc,0xde,0xe7,0x8e,0xbb,0x67,0xe0,0xc7,0xee,
    0x19,0xcf,0x04,0xcd,0x0f,0x5e,0xd7,0xc8,0xd5,0xee,0x19,0x43,0x82,0xda,0x4d,0x0f,
    0xd3,0xe8,0x0d,0x6a,0x64,0xcf,0x9e,0x76,0x69,0x1a,0x65,0xb1,0x26,0xae,0xa6,0x51,
    0x8b,0xa0,0x71,0xa6,0x51,0xdb,0x90,0xd2,0x08,0xb6,0x6c,0xf4,0xcb,0x38,0x5c,0x4d,
    0xa3,0x36,0x8c,0xf3,0x1a,0xe5,0x06,0xc5,0xbd,0x46,0x79,0x21,0xa5,0x11,0xec,0xa6,
    0x51,0x3b,0xe6,0x44,0x7e,0x8b,0xcf,0x61,0x4e,0xd3,0xc8,0x7c,0xc0,0xc9,0x34,0x6a,
    0xe7,0x34,0x9a,0x1a,0x34,0x3f,0x78,0xe5,0x90,0xab,0x69,0x54,0x1a,0xd4,0x3e,0x24,
    0xed,0xd9,0xb3,0x9e,0x1a,0xd9,0xb3,0xa7,0x30,0x4d,0xa3,0x8e,0xac,0xd9,0xd1,0x69,
    0xd4,0x39,0x68,0x9c,0x69,0x54,0xe0,0x34,0x82,0xad,0x4b,0x1c,0xf9,0x8c,0xcb,0x77,
    0x1a,0x75,0x63,0x9c,0xd7,0xa8,0x7b,0x50,0xdc,0x6b,0xd4,0xc3,0x69,0xd4,0xdd,0x69,
    0x54,0xc8,0x9c,0x5d,0x9c,0x46,0x5d,0x99,0xd3,0x34,0x32,0x9f,0x02,0xa7,0x51,0xa1,
    0xd3,0x68,0x5a,0xd0,0xfc,0xe0,0xd5,0x95,0x5c,0x4d,0xa3,0xe1,0x41,0xed,0xa5,0xee,
    0xd9,0x63,0x67,0x6f,0x83,0x3b,0xf3,0x33,0xb8,0xd7,0x70,0x1f,0x40,0x4c,0x61,0x48,
    0x9d,0xf9,0xb7,0x78,0xe6,0x0f,0xb8,0x33,0xff,0xb6,0x28,0x6e,0x67,0x7e,0xa3,0x28,
    0x66,0x67,0x7e,0x9f,0x3b,0x87,0xb0,0x6d,0x8a,0x63,0x0b,0xeb,0x6e,0x71,0xf7,0x93,
    0x77,0x98,0xfb,0x88,0xcb,0xbd,0x55,0x14,0xb7,0xdc,0xef,0x8a,0x62,0x96,0x7b,0xaf,
    0xcb,0x0d,0xdb,0xb6,0x38,0xb6,0x33,0xf7,0x76,0x49,0xbd,0x67,0xbf,0xcf,0xdc,0x8d,
    0xee,0x3d,0xfb,0x03,0x51,0xfc,0x20,0xff,0xbe,0xf9,0x50,0x14,0xc3,0xbb,0xb8,0xd5,
    0xdb,0x21,0x8a,0x9f,0x66,0xbd,0x5d,0xae,0x1e,0x6c,0x3b,0xe3,0xd8,0xc5,0x7a,0x3b,
    0xdd,0x99,0x1d,0x1d,0xf4,0x99,0x36,0xc3,0xfd,0x1d,0x64,0x7e,0xbb,0x9c,0xd6,0x33,
    0x83,0xfa,0x80,0x2b,0x62,0x76,0x3a,0x3e,0x1f,0x93,0xcf,0x79,0xc7,0xe7,0x13,0x51,
    0xdc,0xf8,0x34,0x38,0x3e,0xb0,0xd5,0xc7,0xd1,0xc0,0x3a,0xf5,0x8e,0x4f,0x39,0xf9,
    0xcc,0x74,0x6b,0x6f,0x7e,0x0d,0x8e,0xcf,0xac,0xa0,0x3e,0xe0,0x88,0x98,0x7a,0xc7,
    0xe7,0x53,0xf2,0xd9,0xe8,0xf8,0x7c,0x26,0x8a,0x1b,0x9f,0x3d,0x8e,0x0f,0x6c,0xbb,
    0xe3,0xd8,0xc3,0x3a,0xbb,0x1d,0x9f,0xa7,0x82,0xfe,0xcf,0x62,0x56,0x48,0x3d,0x7f,
    0xcc,0x6f,0x8f,0xe3,0x33,0x27,0xa8,0x0f,0x38,0x22,0x66,0x37,0x9f,0x93,0x7b,0xe9,
    0xbb,0xcd,0x3d,0x33,0xde,0x13,0xd5,0x12,0xf9,0xac,0xce,0xa8,0x90,0xc2,0xed,0x6f,
    0x3d,0x8b,0xdd,0xeb,0xea,0xd4,0x06,0xad,0x85,0xda,0x88,0xd9,0xc6,0x3a,0xfb,0xe8,
    0xbb,0xc9,0x3d,0x47,0x37,0x33,0x1f,0x86,0xfd,0x2f,0x36,0xb8,0xe7,0xa8,0xc5,0xec,
    0x73,0xf9,0x67,0x07,0xad,0x81,0x9a,0x9b,0x79,0x06,0xca,0x62,0x04,0xfe,0x67,0x02,
    0xdb,0xad,0xb8,0x4b,0x06,0xc7,0xf1,0x0f,0xf6,0x04,0xe8,0x0b,0x3c,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2D src;
// layout(location = 0)out vec4 dst;
//
// #line 1 "shaders/src/ImageCopy.inc"
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// ivec2 transformImageCoords(ivec2 glFragCoords)
// {
//     ivec2 imageCoordsOut = glFragCoords - params . dstOffset;
//
//     if(params . flipX)
//     {
//         imageCoordsOut . x = - imageCoordsOut . x;
//     }
//     if(params . flipY)
//     {
//         imageCoordsOut . y = - imageCoordsOut . y;
//     }
//     if(params . rotateXY)
//     {
//         imageCoordsOut . xy = imageCoordsOut . yx;
//     }
//
//     return imageCoordsOut;
// }
//
//       vec4 transformSrcValue(vec4 srcValue)
// {
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//           vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     return dstValue;
// }
// #line 56 "shaders/src/ImageCopy.frag"
//
// void main()
// {
//     ivec2 srcSubImageCoords = transformImageCoords(ivec2(gl_FragCoord . xy));
//
//           vec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     dst = transformSrcValue(srcValue);
// }
