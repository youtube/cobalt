// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ntp.history_clusters_v2.mojom;

import "chrome/browser/new_tab_page/modules/history_clusters/cart/cart.mojom";
import "chrome/browser/new_tab_page/modules/history_clusters/discount/discount.mojom";
import "chrome/browser/new_tab_page/modules/history_clusters/history_clusters_layout_type.mojom";
import "components/history_clusters/public/mojom/history_cluster_types.mojom";
import "url/mojom/url.mojom";

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // Get a series of relevant history clusters.
  GetClusters() => (array<history_clusters.mojom.Cluster> clusters);

  // Get the most relevant cart for given `cluster`.
  GetCartForCluster(history_clusters.mojom.Cluster cluster)
    => (ntp.history_clusters.cart.mojom.Cart? cart);

  // Get the discounts for the given `cluster`.
  GetDiscountsForCluster(history_clusters.mojom.Cluster cluster)
    => (map<url.mojom.Url, array<ntp.history_clusters.discount.mojom.Discount>> discounts);

  // Open or make visible the Journeys UI on the Side Panel.
  ShowJourneysSidePanel(string query);

  // Records that the cluster with `cluster_id` was clicked.
  RecordClick(int64 cluster_id);

  // Records the layout type for the cluster with `cluster_id`.
  RecordLayoutTypeShown(ntp.history_clusters.mojom.LayoutType layout_type,
                        int64 cluster_id);

  // Dismiss or undo a dismiss of a cluster by marking its associated visits
  // with a given interaction state.
  UpdateClusterVisitsInteractionState(
      array<history_clusters.mojom.URLVisit> visits,
      history_clusters.mojom.InteractionState state);
};
