This is a testharness.js-based test.
[FAIL] execCommand("insertHTML", false, "1st line\n2nd line") when ""
  assert_equals: expected "1st line 2nd line" but got "1st line\\n2nd line"
[FAIL] execCommand("insertHTML", false, "<pre>1st line\n2nd line</pre>") when ""
  assert_equals: expected "1st line<br>2nd line" but got "1st line\\n2nd line"
[FAIL] execCommand("insertHTML", false, "plaintext") when "<b>{}</b>"
  assert_equals: expected "<b>plaintext</b>" but got "<b></b>"
[FAIL] execCommand("insertHTML", false, "plaintext") when "<b>{}<br></b>"
  assert_in_array: value "plaintext<b></b>" not in array ["<b>plaintext</b>", "<b>plaintext<br></b>"]
[FAIL] execCommand("insertHTML", false, "plaintext") when "<b>A[]B</b>"
  assert_equals: expected "<b>AplaintextB</b>" but got "<b>A</b>plaintext<b>B</b>"
[FAIL] execCommand("insertHTML", false, "plaintext") when "<span>A[]B</span>"
  assert_equals: expected "<span>AplaintextB</span>" but got "<span>A</span>plaintext<span>B</span>"
[FAIL] execCommand("insertHTML", false, "<div>abc<br>def</div>") when ""
  assert_equals: expected "abc<br>def" but got "abc\\ndef"
[FAIL] execCommand("insertHTML", false, "<div>abc</div><div>def</div>") when ""
  assert_equals: expected "abc<br>def" but got "abc\\ndef"
[FAIL] execCommand("insertHTML", false, "<div>abc<br>def</div><div>ghi<br>jkl</div>") when ""
  assert_equals: expected "abc<br>def<br>ghi<br>jkl" but got "abc\\ndef\\nghi\\njkl"
[FAIL] execCommand("insertHTML", false, "plain  text") when ""
  assert_equals: expected "plain text" but got "plain  text"
[FAIL] execCommand("insertHTML", false, "<span>plain  text</span>") when ""
  assert_equals: expected "plain text" but got "plain  text"
[FAIL] execCommand("insertHTML", false, "<pre>plain  text</pre>") when ""
  assert_in_array: value "plain  text" not in array ["plain &nbsp;text", "plain&nbsp; text", "plain&nbsp;&nbsp;text", "plain  text", "plain  text", "plain  text"]
Harness: the test ran to completion.

