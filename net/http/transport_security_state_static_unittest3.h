// Copyright 2017 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is generated by net/tools/transport_security_state_generator/.
// See transport_security_state_static.template for more information on the data
// in this file.

// Note that consumers must include <stdint.h>, "<iterator>", and
// "net/http/transport_security_state_source.h", which this file cannot do
// itself, since it's always included in a nested namespace.

// Cobalt copied this file from Chromium directly.

static const char kSPKIHash_TestSPKI1[] =
    "\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"
    "\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01";

static const char kSPKIHash_TestSPKI2[] =
    "\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02"
    "\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02";

static const char* const kNoRejectedPublicKeys[] = {
    nullptr,
};

static const char* const kTest1AcceptableCerts[] = {
    kSPKIHash_TestSPKI1,
    nullptr,
};
static const char kTest1ReportURI[] = "https://report.example.com/hpkp-upload";

static const char* const kTest2AcceptableCerts[] = {
    kSPKIHash_TestSPKI2,
    nullptr,
};
static const char* const kTest2RejectedCerts[] = {
    kSPKIHash_TestSPKI1,
    nullptr,
};

static const struct net::TransportSecurityStateSource::Pinset kPinsets[] = {
    {kTest1AcceptableCerts, kNoRejectedPublicKeys, kTest1ReportURI},
    {kTest2AcceptableCerts, kTest2RejectedCerts, kNoReportURI},
};

static const uint8_t kHSTSHuffmanTree[] = {
    0x80, 0xe5, 0xef, 0xf2, 0xf8, 0x01, 0xf4, 0xf9, 0xeb, 0xee, 0x03, 0x04,
    0x05, 0xae, 0x02, 0x06, 0x00, 0x07, 0xad, 0xe2, 0x09, 0xe9, 0xe7, 0xe8,
    0xe3, 0xe4, 0x0b, 0x0c, 0x0a, 0x0d, 0xec, 0xed, 0x0e, 0x0f, 0xe1, 0xf3,
    0xf0, 0x11, 0xff, 0x12, 0x10, 0x13, 0x08, 0x14,
};

static const uint8_t kPreloadedHSTSData[] = {
    0x7c, 0xb5, 0x39, 0xae, 0xbf, 0x21, 0x05, 0xb3, 0x5d, 0x28, 0x10, 0xef,
    0xe5, 0xb0, 0xd9, 0x80, 0xd7, 0x5c, 0x7e, 0x38, 0xe3, 0xe4, 0x64, 0x8b,
    0x3a, 0xba, 0xfc, 0x84, 0x5c, 0xd1, 0xec, 0x91, 0xb0, 0x63, 0xde, 0xff,
    0xe7, 0xf4, 0x21, 0x41, 0xcb, 0xfd, 0x95, 0x33, 0x94, 0x47, 0x52, 0x96,
    0x24, 0x4e, 0x02, 0xe3, 0x4f, 0xc0,
};

static const unsigned kPreloadedHSTSBits = 427;
static const unsigned kHSTSRootPosition = 384;

static const net::TransportSecurityStateSource kHSTSSource = {
  kHSTSHuffmanTree,
  sizeof(kHSTSHuffmanTree),
  kPreloadedHSTSData,
  kPreloadedHSTSBits,
  kHSTSRootPosition,
  kPinsets,
  std::size(kPinsets)
};
