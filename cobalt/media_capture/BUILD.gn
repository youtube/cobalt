# Copyright 2021 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

static_library("media_capture") {
  has_pedantic_warnings = true

  # Creates cycle with //cobalt/dom
  check_includes = false

  sources = [
    "encoders/audio_encoder.cc",
    "encoders/audio_encoder.h",
    "encoders/flac_audio_encoder.cc",
    "encoders/flac_audio_encoder.h",
    "encoders/linear16_audio_encoder.cc",
    "encoders/linear16_audio_encoder.h",
    "media_device_info.cc",
    "media_device_info.h",
    "media_devices.cc",
    "media_devices.h",
    "media_recorder.cc",
    "media_recorder.h",
  ]

  public_deps = [
    # Additionally, ensure that the include directories for generated
    # headers are put on the include directories for targets that depend
    # on this one.
    "//cobalt/browser:generated_types",
  ]

  deps = [
    "//base",
    "//cobalt/base",
    "//cobalt/media",
    "//cobalt/media_stream",
    "//cobalt/script",
    "//cobalt/script:engine",
    "//cobalt/speech",
    "//cobalt/web:dom_exception",
    "//starboard:starboard_group",
  ]
}

target(gtest_target_type, "media_capture_test") {
  testonly = true
  has_pedantic_warnings = true

  sources = [
    "get_user_media_test.cc",
    "media_recorder_test.cc",
  ]

  deps = [
    ":media_capture",
    "//cobalt/dom",
    "//cobalt/dom/testing:dom_testing",
    "//cobalt/media_stream",
    "//cobalt/media_stream:media_stream_test_headers",
    "//cobalt/script",
    "//cobalt/test:run_all_unittests",
    "//cobalt/web:dom_exception",
    "//testing/gmock",
    "//testing/gtest",
  ]
}
