# Copyright 2019 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/android/rules.gni")

if (enable_java_templates) {
  android_system_java_prebuilt("public_framework_system_java") {
    jar_path = "//third_party/android_system_sdk/android_system.jar"
  }

  android_system_java_prebuilt("android_sdk_java") {
    jar_path = android_sdk_jar
  }

  android_system_java_prebuilt("android_privacy_sandbox_sdk_java") {
    jar_path = "public/platforms/android-TiramisuPrivacySandbox/android.jar"
    output_name = "android.privacy-sandbox.jar"
  }

  template("android_sdk_optional_library") {
    forward_variables_from(invoker, [ "testonly" ])
    _manifest_path = "$target_gen_dir/$target_name/AndroidManifest.xml"

    # String replace to prevent dep from being treated as a java library.
    _manifest_target = string_replace(target_name, "_java", "_J") + "__manifest"
    jinja_template(_manifest_target) {
      input = "//third_party/android_sdk/AndroidManifest.xml.jinja2"
      output = _manifest_path
      variables = [ "library_name=${invoker.library_name}" ]
    }
    java_group(target_name) {
      deps = [ ":$_manifest_target" ]

      # Makes the .jar appear in the classpath for compile steps.
      input_jars_paths =
          [ "${android_sdk}/optional/${invoker.library_name}.jar" ]

      # Adds the <uses-library> tag to the manifest.
      mergeable_android_manifests = [ _manifest_path ]
    }
  }

  android_sdk_optional_library("android_test_base_java") {
    testonly = true
    library_name = "android.test.base"
  }
  android_sdk_optional_library("android_test_mock_java") {
    testonly = true
    library_name = "android.test.mock"
  }
  android_sdk_optional_library("android_test_runner_java") {
    testonly = true
    library_name = "android.test.runner"
  }
  android_sdk_optional_library("android_car_java") {
    library_name = "android.car"
  }
}
