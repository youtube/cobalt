{%  for constant in struct.constants %}
/**
 * @const { {{constant.kind|lite_closure_type_with_nullability}} }
 * @export
 */
{{module.namespace}}.{{struct.name}}_{{constant.name}} =
    {{constant|constant_value}};
{%  endfor %}

{%- from "lite/enum_definition.tmpl" import enum_def with context %}
{%  for enum in struct.enums %}
{{enum_def("%s.%sSpec"|format(module.namespace, struct.name),
           "%s.%s"|format(module.namespace, struct.name), enum)}}
{%  endfor %}

mojo.internal.Struct(
    {{module.namespace}}.{{struct.name}}Spec.$,
    '{{struct.name}}',
    [
{%- for packed_field in struct.packed.packed_fields_in_ordinal_order %}
      mojo.internal.StructField(
        '{{packed_field.field.name}}', {{packed_field.offset}},
        {% if packed_field.field.kind|is_bool_kind %}{{packed_field.bit}}
        {%- else %}0{% endif %},
        {{packed_field.field.kind|lite_js_type}},
        {{packed_field.field|lite_default_value}},
{%-   if packed_field.field.kind.is_nullable %}
        true /* nullable */),
{%-   else %}
        false /* nullable */),
{%-   endif %}
{%- endfor %}
    ],
    [
{%-   for info in struct.versions -%}
      [{{info.version}}, {{info.num_bytes}}],
{%-   endfor -%}
    ]);

{% if generate_struct_deserializers %}
{{module.namespace}}.{{struct.name}}_Deserialize =
    mojo.internal.createStructDeserializer({{module.namespace}}.{{struct.name}}Spec.$);
{% endif %}

{%  if generate_closure_exports -%}
goog.provide('{{module.namespace}}.{{struct.name}}');
{%- endif %}

/** @record */
{{module.namespace}}.{{struct.name}} = class {
  constructor() {
{%- for packed_field in struct.packed.packed_fields %}
    /** @export { {{packed_field.field.kind|lite_closure_field_type}} } */
    this.{{packed_field.field.name}};
{%-  endfor %}
  }
};

