--- v8/src/base/cpu.cc
+++ v8/src/base/cpu.cc
@@ -352,56 +352,6 @@
 #endif  // V8_HOST_ARCH_ARM || V8_HOST_ARCH_ARM64 ||
         // V8_HOST_ARCH_MIPS64 || V8_HOST_ARCH_RISCV64
 
-<<<<<<< HEAD
-#if defined(V8_OS_STARBOARD)
-
-bool CPU::StarboardDetectCPU() {
-  SbCPUFeatures features;
-  if (!SbCPUFeaturesGet(&features)) {
-    return false;
-  }
-  architecture_ = features.arm.architecture_generation;
-  switch (features.architecture) {
-    case kSbCPUFeaturesArchitectureArm:
-    case kSbCPUFeaturesArchitectureArm64:
-      has_neon_ = features.arm.has_neon;
-      has_thumb2_ = features.arm.has_thumb2;
-      has_vfp_ = features.arm.has_vfp;
-      has_vfp3_ = features.arm.has_vfp3;
-      has_vfp3_d32_ = features.arm.has_vfp3_d32;
-      has_idiva_ = features.arm.has_idiva;
-      break;
-    case kSbCPUFeaturesArchitectureX86:
-    case kSbCPUFeaturesArchitectureX86_64:
-      // Following flags are mandatory for V8
-      has_cmov_ = features.x86.has_cmov;
-      has_sse2_ = features.x86.has_sse2;
-      // These flags are optional
-      has_sse3_ = features.x86.has_sse3;
-      has_ssse3_ = features.x86.has_ssse3;
-      has_sse41_ = features.x86.has_sse41;
-      has_sahf_ = features.x86.has_sahf;
-      has_avx_ = features.x86.has_avx;
-      has_avx2_ = features.x86.has_avx2;
-      // TODO: Support AVX-VNNI on Starboard
-      has_fma3_ = features.x86.has_fma3;
-      has_bmi1_ = features.x86.has_bmi1;
-      has_bmi2_ = features.x86.has_bmi2;
-      has_lzcnt_ = features.x86.has_lzcnt;
-      has_popcnt_ = features.x86.has_popcnt;
-      has_f16c_ = features.x86.has_f16c;
-      break;
-    default:
-      return false;
-  }
-
-  return true;
-}
-
-#endif
-
-=======
->>>>>>> 113ed595a62 (Deprecate SbCPUFeaturesGet (#7324))
 CPU::CPU()
     : stepping_(0),
       model_(0),
