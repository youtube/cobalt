// Copyright 2018 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module network.mojom;

import "url/mojom/scheme_host_port.mojom";

// Information related to an authentication challenge in an HTTP response.
// Typemapped to net::AuthChallengeInfo.
struct AuthChallengeInfo {
  // True if the challenge was for proxy authentication.
  bool is_proxy;
  // The service issuing the challenge.
  url.mojom.SchemeHostPort challenger;
  // The authentication scheme used, such as "basic" or "digest".
  string scheme;
  // The realm of the authentication challenge. May be empty.
  string realm;
  // The authentication challenge.
  string challenge;
  // The path on which authentication was requested.
  string path;
};

[Native]
struct AuthCredentials;

[Native]
struct CertVerifyResult;

[Native]
struct HttpResponseHeaders;

struct HttpVersion {
  uint16 major_value;
  uint16 minor_value;
};

// Mirror of net::HostPortPair.
struct HostPortPair {
  string host;
  uint16 port;
};

[Native]
struct ProxyServer;

// Host resolution error info.
struct ResolveErrorInfo {
  // Underlying network error code. See net/base/net_error_list.h for error
  // descriptions.
  int32 error;

  // Whether |error| came from a DNS-over-HTTPS lookup. This will be false if
  // the answer was obtained from the cache or if |error| is net::OK since this
  // field is intended to identify secure DNS *network* failures.
  bool is_secure_network_error = false;
};

[Native]
struct SSLCertRequestInfo;

[Native]
struct SSLInfo;

[Native]
struct X509Certificate;
