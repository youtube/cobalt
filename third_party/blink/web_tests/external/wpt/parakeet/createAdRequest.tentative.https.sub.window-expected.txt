This is a testharness.js-based test.
FAIL createAdRequest() should be supported on the navigator interface. assert_not_equals: got disallowed value undefined
FAIL createAdRequest() should reject with NotSupported initially. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should reject missing parameters. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should reject a missing adRequestUrl. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should reject a HTTP adRequestUrl. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should reject missing adProperties. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should reject empty adProperties. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should reject a HTTP fallbackSource. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should have optional params. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should accept a single adProperties. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should accept valid anonymizedProxiedSignals. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
FAIL createAdRequest() should reject unknown anonymizedPRoxiedSignals. promise_test: Unhandled rejection with value: object "TypeError: navigator.createAdRequest is not a function"
Harness: the test ran to completion.

