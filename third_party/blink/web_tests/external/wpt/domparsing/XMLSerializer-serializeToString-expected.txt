This is a testharness.js-based test.
[FAIL] Check if redundant xmlns="..." is dropped.
  assert_equals: expected "<root><child/></root>" but got "<root><child xmlns=\\"\\"/></root>"
[FAIL] Check if an attribute with namespace and no prefix is serialized with the nearest-declared prefix even if the prefix is assigned to another namespace.
  assert_equals: expected "<el1 xmlns:p=\\"u1\\" xmlns:q=\\"u1\\"><el2 xmlns:q=\\"u2\\" q:name=\\"v\\"/></el1>" but got "<el1 xmlns:p=\\"u1\\" xmlns:q=\\"u1\\"><el2 xmlns:q=\\"u2\\" p:name=\\"v\\"/></el1>"
[FAIL] Check if the prefix of an attribute is NOT preserved in a case where neither its prefix nor its namespace URI is not already used.
  assert_equals: expected "<r xmlns:xx=\\"uri\\" xmlns:ns1=\\"uri2\\" ns1:name=\\"value\\"/>" but got "<r xmlns:xx=\\"uri\\" xmlns:p=\\"uri2\\" p:name=\\"value\\"/>"
[FAIL] Check if start tag serialization does NOT apply the default namespace if its namespace is declared in an ancestor.
  assert_equals: expected "<root xmlns:x=\\"uri1\\"><x:table xmlns=\\"uri1\\"/></root>" but got "<root xmlns:x=\\"uri1\\"><table xmlns=\\"uri1\\"/></root>"
[FAIL] Check if "ns1" is generated even if the element already has xmlns:ns1.
  assert_equals: expected "<root xmlns:ns2=\\"uri2\\"><child xmlns:ns1=\\"uri1\\" xmlns:ns1=\\"uri3\\" ns1:attr1=\\"value1\\"/></root>" but got "<root xmlns:ns2=\\"uri2\\"><child xmlns:ns1=\\"uri1\\" xmlns:ns3=\\"uri3\\" ns3:attr1=\\"value1\\"/></root>"
Harness: the test ran to completion.

