// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x6d,0x96,0x6d,0x4c,0x95,0x65,
    0x18,0xc7,0x9f,0x73,0x0e,0x9c,0x83,0x47,0x01,0x49,0x50,0x5e,0x7c,0x89,0x70,0x5a,
    0x1d,0x66,0xb6,0x25,0xd9,0x94,0x44,0x97,0xa6,0xe0,0x32,0x35,0x58,0xcd,0x0a,0x6a,
    0x7d,0x81,0x2d,0x65,0xcb,0x0f,0x02,0x4e,0xe3,0x6d,0xab,0x2c,0x58,0xc1,0x66,0x51,
    0xc9,0x4c,0x0d,0x2d,0xd3,0x2c,0x5b,0xcc,0x0f,0x30,0x97,0x99,0x5b,0x5b,0x12,0x9b,
    0x65,0x5b,0xcb,0x97,0xbe,0xb5,0xf5,0xcd,0x22,0x94,0x5e,0xae,0xeb,0x7e,0x7e,0xb7,
    0xbb,0x76,0xd6,0xd9,0xee,0x3d,0xcf,0xfd,0xbf,0x5e,0xff,0xd7,0x7d,0xdd,0xd7,0x79,
    0x62,0xd1,0xb2,0x44,0x10,0x44,0x82,0x64,0x90,0x15,0x14,0x47,0x02,0xf7,0xcb,0x0b,
    0xa2,0x81,0xbe,0x4e,0x0f,0xe2,0xee,0xf9,0xe8,0xc6,0xad,0x1b,0x97,0xbc,0xb4,0xf3,
    0x85,0x25,0x0f,0x2c,0x5b,0xaa,0xf2,0x9c,0x20,0xe6,0xf4,0x54,0x96,0x2b,0x3a,0x99,
    0xf2,0xcc,0x90,0xf5,0xe2,0x73,0x8d,0xdb,0x15,0xcf,0x96,0x35,0x53,0xf0,0x0c,0xe7,
    0x2b,0x10,0xcf,0xe1,0x72,0xbe,0x04,0xcd,0x76,0xbe,0x83,0x60,0xae,0xac,0xf5,0x62,
    0x3d,0x2f,0x0c,0x1b,0x94,0xf1,0xf4,0x58,0x04,0x2c,0xcb,0x60,0x51,0xb0,0x99,0x06,
    0x8b,0x81,0x15,0x1a,0x2c,0x03,0xcc,0xc6,0xc8,0x04,0xbb,0xd3,0x60,0x71,0xb0,0x85,
    0x06,0x4b,0x80,0xdd,0x6d,0xb0,0x2c,0xb0,0x72,0x83,0x4d,0x03,0x5b,0x6a,0xb0,0x24,
    0x58,0x95,0xe3,0x1a,0xbb,0x9d,0xb3,0xf2,0x3e,0x24,0xcf,0xbb,0xe0,0xe8,0xf7,0xa5,
    0xa6,0x2e,0x43,0x69,0xf2,0x21,0xe4,0xde,0xfe,0x22,0xf9,0x66,0x10,0x6f,0x2c,0xad,
    0x6e,0x1a,0x6f,0x8c,0x7a,0xa8,0xfe,0x78,0x9a,0xbf,0x71,0xfc,0xf9,0xfd,0x35,0xce,
    0xa1,0x48,0xd6,0x2c,0x89,0x12,0x75,0xf2,0x98,0xb3,0xd7,0xf7,0x02,0xd1,0x89,0x53,
    0x2f,0xcd,0x71,0x8e,0xec,0x13,0xe4,0xe0,0xe5,0x49,0xe4,0x01,0xf2,0xe9,0xd4,0x20,
    0xe6,0xf0,0x8c,0x60,0x06,0xb6,0x8a,0xaf,0x60,0x9f,0x0d,0x96,0xc2,0x3e,0x07,0x7b,
    0xd5,0xcf,0x45,0x96,0x34,0xf2,0x3b,0xe0,0xec,0xf7,0x05,0xe8,0xcc,0x96,0x28,0xc5,
    0xc4,0xd7,0xd8,0x25,0xf2,0x2c,0x26,0x37,0xdd,0xcf,0x35,0xf5,0x9a,0x2f,0x51,0xf5,
    0x2c,0x4a,0xcc,0x8a,0x9b,0x95,0x34,0xcb,0xdb,0x69,0x3e,0xf3,0x39,0xe7,0x79,0xe4,
    0xaf,0xfb,0x05,0x60,0x29,0x53,0x9f,0x69,0xe8,0x97,0xf2,0xae,0x3e,0xf2,0x25,0x93,
    0x45,0xe4,0xb2,0x58,0x9e,0x8b,0xc8,0xcd,0xdb,0x55,0xc0,0x43,0xed,0x1e,0xc4,0xae,
    0x04,0xb9,0xf2,0x58,0x19,0x96,0x65,0x55,0xb9,0x9c,0xb5,0xe2,0x95,0x60,0x2b,0x8d,
    0x8f,0x2a,0x6a,0xe7,0xf7,0x6b,0x4d,0xee,0xeb,0xf0,0x99,0x34,0xf2,0xcd,0xf4,0xb7,
    0xdf,0x6f,0xa3,0xb7,0xfd,0x5e,0x2f,0xf0,0xbf,0xf2,0xf3,0xfb,0x3d,0xa6,0xf6,0x9a,
    0x53,0x87,0x39,0xab,0x57,0xf0,0x1f,0x37,0xf6,0xfb,0xb9,0x67,0x45,0x22,0x39,0x48,
    0x6c,0xc6,0xca,0xed,0x5f,0xc4,0xf8,0xf8,0x80,0xf7,0x83,0xd4,0x57,0xf7,0x87,0xc0,
    0x8a,0xa5,0x5a,0x47,0xd0,0xfb,0x10,0xec,0x08,0x7a,0xba,0x1f,0x02,0x2b,0x91,0x3e,
    0x38,0x86,0x0f,0x9f,0xc7,0x71,0xd3,0x07,0x9f,0x92,0x87,0xed,0xa1,0xd3,0xca,0xd3,
    0x9d,0x6b,0xcc,0xdd,0xab,0xa4,0xeb,0x91,0xf0,0xfe,0x5c,0x24,0xe6,0xf7,0xf8,0x18,
    0x23,0xa6,0xee,0xc7,0xd3,0xce,0xf0,0x12,0xb6,0xaa,0xff,0x0b,0x32,0xdb,0xbb,0x57,
    0xa9,0x6f,0xb9,0x68,0xeb,0x1d,0xb8,0x06,0x76,0x95,0x3e,0xae,0x90,0x6a,0x45,0xc9,
    0x2d,0xe0,0xde,0xfc,0x25,0x88,0xd6,0x70,0x42,0x76,0xd7,0xc1,0x6f,0xc9,0xbb,0xde,
    0x93,0x5f,0x91,0xeb,0x73,0xb5,0x68,0xe5,0x32,0x0b,0xb3,0xb9,0x47,0x95,0xc4,0xcd,
    0x03,0xef,0x12,0x9d,0xa4,0xbb,0xdf,0x21,0xa6,0x77,0x69,0x37,0xb9,0xe7,0x83,0x7b,
    0x3f,0xb3,0xf1,0x53,0x60,0xfc,0xcc,0x01,0xf7,0x36,0x85,0x60,0x8f,0x8b,0x4d,0x82,
    0xd9,0x91,0x0f,0xae,0x7e,0x4a,0x99,0x39,0x0b,0xb8,0x17,0x95,0xdc,0xc3,0x32,0xf0,
    0x4d,0x62,0x95,0x60,0xde,0x96,0xb1,0xa2,0xf0,0xfe,0x5c,0xec,0x17,0x33,0x77,0x17,
    0xe2,0x7b,0x40,0xec,0xf5,0xde,0xdc,0x03,0xae,0x35,0x49,0x51,0x93,0x9b,0x22,0x53,
    0xfc,0x5e,0x57,0xef,0xb0,0x2e,0xfa,0x3e,0x29,0xcf,0xeb,0xec,0x53,0x26,0xe6,0x7d,
    0x26,0xa6,0xef,0xc3,0x97,0xe1,0x71,0x3f,0xf1,0x54,0x67,0x07,0xb3,0x64,0x19,0xb8,
    0xf2,0xd2,0xfb,0xb9,0x1c,0x5e,0x15,0xf0,0x52,0x9d,0x87,0xc0,0xbb,0xb9,0xa3,0x2b,
    0xb0,0x53,0xbc,0x1d,0x6c,0x15,0x78,0xa5,0xf1,0xb5,0x1a,0x5f,0x55,0xc6,0xd7,0x1a,
    0xf0,0x4e,0xec,0x1e,0xc1,0x76,0x0d,0x76,0xeb,0xdc,0xdc,0x0e,0xed,0xd6,0x9a,0x33,
    0x5a,0x0f,0xfe,0xb1,0xe8,0x68,0xad,0x36,0x80,0xe5,0x50,0xaf,0x1a,0x53,0x2f,0x95,
    0x55,0xcb,0xaa,0xa1,0x3e,0xd5,0x6e,0x26,0x64,0xba,0xbb,0xfd,0x18,0x31,0xf5,0xb7,
    0x97,0xfb,0xbe,0x09,0x7c,0x8b,0x9c,0xbe,0xe6,0xf4,0x1b,0x98,0xd7,0xd3,0x5a,0x7b,
    0x5f,0xfa,0xfc,0x43,0xaa,0x59,0xe2,0xf6,0xa1,0x4e,0x0a,0x9b,0x6a,0xc3,0x61,0x0b,
    0x1c,0x36,0x1b,0x0e,0x5b,0xc1,0x3d,0x87,0x27,0xc0,0x3c,0x87,0x3a,0xc3,0x41,0x65,
    0xb5,0xb2,0xea,0x88,0x5b,0x6b,0x38,0x3c,0x49,0xec,0x88,0xe1,0xf0,0x14,0xb8,0xe7,
    0xf0,0x3b,0x98,0xd7,0x53,0x0e,0xde,0x57,0x9d,0xe1,0x30,0x89,0x4e,0x0d,0x36,0xb5,
    0x86,0xc3,0xd3,0x70,0xd8,0x66,0x38,0x3c,0x03,0xee,0x39,0x3c,0x0b,0xe6,0x39,0x34,
    0x18,0x0e,0x2a,0xab,0x97,0xd5,0x40,0xdc,0x7a,0xfa,0x54,0xe3,0x3e,0x4f,0xec,0x49,
    0x33,0x2b,0x35,0x47,0xaf,0xdb,0x60,0x72,0xfc,0x07,0xbd,0x3a,0xec,0xea,0x89,0xd5,
    0x94,0x16,0xab,0x51,0x56,0x33,0xf6,0xfa,0x7e,0x4c,0x6a,0x11,0x77,0xbd,0x1e,0xd6,
    0x7a,0x3b,0x7d,0xad,0x71,0x9a,0xd0,0x6b,0x36,0x7a,0x3b,0xe9,0xab,0xff,0xd3,0x6b,
    0x22,0x1f,0xd5,0x9b,0x15,0x09,0x7d,0x36,0xd2,0xdb,0xcd,0x46,0x36,0x23,0x12,0x62,
    0x8d,0xf8,0x6b,0xc6,0xcf,0x2e,0xfc,0xec,0x32,0xbc,0xa6,0xe0,0xa6,0xbe,0x8b,0xc4,
    0xae,0x0d,0x59,0xd2,0xcd,0xc2,0xb0,0xa6,0x2a,0x2b,0x34,0xb2,0xb8,0xe3,0x1b,0xc6,
    0x50,0xd9,0x77,0x41,0x28,0x3b,0xc5,0x79,0xec,0x45,0xae,0xff,0x69,0x7f,0x4a,0x5d,
    0x5a,0x91,0xfb,0x3a,0xa9,0xbc,0x45,0x56,0x2b,0xf9,0xb4,0x98,0xbe,0x6a,0x27,0x27,
    0xfd,0x8d,0xe0,0xaf,0x13,0xbc,0x83,0x9a,0x77,0x1b,0x5f,0x9d,0x6e,0xf6,0x06,0x0e,
    0x53,0x5f,0x5d,0xf4,0x8e,0xfe,0x67,0xbe,0x4a,0xef,0xec,0xa1,0x77,0x34,0xef,0xd7,
    0xc0,0x77,0xd0,0xb3,0xfb,0xc0,0x86,0x89,0xf5,0x3a,0xb1,0xf6,0x51,0x33,0xef,0xb7,
    0x1b,0xee,0xaa,0xf3,0x06,0x39,0xb5,0xa0,0xdf,0x45,0x5e,0xbd,0x26,0x2f,0xd5,0xe9,
    0x91,0xd5,0x8b,0x7d,0x8f,0xe1,0xf8,0x26,0x1c,0x23,0x86,0xe3,0x5b,0xe0,0x9e,0x63,
    0xbf,0xf1,0xa5,0xb2,0x3e,0x59,0xfd,0xf8,0xea,0x33,0x1c,0xdf,0x86,0xe3,0x7e,0xc3,
    0xf1,0x1d,0x70,0xcf,0x71,0x00,0xcc,0x73,0x7c,0x97,0x58,0x03,0x70,0xf4,0x7e,0xfb,
    0x0d,0xc7,0xf7,0xc8,0xa9,0x07,0xfd,0x3e,0x74,0x3d,0x9f,0x5e,0xa3,0xfb,0x3e,0x35,
    0xe9,0xc6,0xae,0x1f,0x0e,0x83,0x86,0x83,0xea,0x1c,0x90,0x35,0x88,0xfd,0x01,0xf2,
    0xd5,0x6f,0x89,0xc3,0x7c,0x8b,0xe8,0x5e,0xbf,0x3b,0x8e,0xf2,0xcd,0x51,0x27,0xf9,
    0xea,0xf7,0xc6,0x47,0xe8,0x1c,0x35,0x73,0xfd,0x13,0x78,0x1f,0x37,0x73,0xfd,0x04,
    0xb8,0xff,0x8f,0x38,0x49,0x9d,0x4f,0xb8,0xb9,0x94,0x70,0xdf,0x27,0xa7,0xf0,0x77,
    0x92,0xff,0xc3,0x0e,0xce,0x45,0xfb,0xfd,0x33,0xe4,0xfa,0xfb,0x06,0xec,0x0b,0xf0,
    0xd3,0xfc,0xc7,0x6b,0x7d,0xbf,0xa4,0xbf,0x75,0x26,0x9d,0x43,0x6f,0x18,0x5d,0x95,
    0x7d,0x0d,0x76,0x86,0x3b,0x34,0x4c,0xed,0x3c,0xf7,0x41,0x73,0xc7,0xf4,0x5e,0xdd,
    0xa2,0x4f,0xce,0x50,0x23,0xad,0xdd,0x68,0xda,0x5c,0x19,0x91,0x75,0x1e,0xfb,0x11,
    0x73,0xb6,0x67,0x99,0x05,0xbe,0xb7,0xbe,0x32,0xbd,0xd5,0x0e,0x76,0x0e,0xfc,0xac,
    0x99,0xcd,0x37,0xc0,0xa7,0xcc,0x6c,0x1e,0xc5,0xff,0x79,0xe3,0xff,0x02,0xf3,0xc4,
    0xfb,0xfa,0x96,0xfb,0x71,0xc1,0xf8,0x9a,0x00,0x9f,0x32,0x33,0xd4,0xfb,0x1a,0x35,
    0xb3,0x46,0xe7,0xcb,0x0d,0xb8,0x4c,0xc0,0x47,0x75,0xdb,0xd0,0x6d,0xe3,0x3b,0x21,
    0xce,0x4c,0xb9,0x69,0x66,0xa0,0x9f,0x5d,0xad,0xa6,0xf7,0x7f,0xa0,0x07,0x2e,0x99,
    0xde,0xff,0x11,0x7c,0x37,0xff,0x15,0x97,0xc1,0xfc,0xf7,0xd9,0x4f,0x7c,0x57,0x5d,
    0x26,0x96,0x62,0x3f,0x83,0xe7,0x39,0xdf,0x71,0xf7,0x7d,0x79,0x85,0x6f,0xd0,0x2a,
    0xe4,0x0f,0xcb,0x99,0x5c,0xe1,0x3c,0xed,0x77,0x8f,0x3e,0xff,0x96,0x0a,0x2e,0x97,
    0xf5,0x1f,0x73,0x58,0x0a,0xd2,0xe4,0x0f,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             vec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//     int srcHeight;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
//
//     ivec4 blitArea;
//     int destPitch;
// } params;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2D stencil;
//
// layout(set = 0, binding = 2)uniform sampler blitSampler;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             vec2 srcImageCoords = vec2(destSubImageCoords);
//
//     srcImageCoords *= params . stretch;
//     srcImageCoords += vec2(0.5);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = 0, yDir = 0;
//     if(params . rotateXY)
//     {
//         yDir = params . flipY ? - 1 : 1;
//     }
//     else
//     {
//         xDir = params . flipX ? - 1 : 1;
//     }
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if((srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)&&
//             (srcImageCoords . y >= 0 && srcImageCoords . y < params . srcHeight))
//         {
//
//             uint stencilValue = texture(usampler2D(stencil, blitSampler), srcImageCoords * params . invSrcExtent). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         if(params . rotateXY)
//         {
//             srcImageCoords . y += yDir;
//         }
//         else
//         {
//             srcImageCoords . x += xDir;
//         }
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
