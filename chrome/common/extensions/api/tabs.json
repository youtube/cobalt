// Copyright 2012 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "tabs",
    "description": "Use the <code>chrome.tabs</code> API to interact with the browser's tab system. You can use this API to create, modify, and rearrange tabs in the browser.",
    "types": [
      {
        "id": "TabStatus",
        "type": "string",
        "enum": ["unloaded", "loading", "complete"],
        "description": "The tab's loading status."
      },
      {
        "id": "MutedInfoReason",
        "type": "string",
        "description": "An event that caused a muted state change.",
        "enum": [
          {"name": "user", "description": "A user input action set the muted state."},
          {"name": "capture", "description": "Tab capture was started, forcing a muted state change."},
          {"name": "extension", "description": "An extension, identified by the extensionId field, set the muted state."}
        ]
      },
      {
        "id": "MutedInfo",
        "type": "object",
        "description": "The tab's muted state and the reason for the last state change.",
        "properties": {
          "muted": {
            "type": "boolean",
            "description": "Whether the tab is muted (prevented from playing sound). The tab may be muted even if it has not played or is not currently playing sound. Equivalent to whether the 'muted' audio indicator is showing."
          },
          "reason": {
            "$ref": "MutedInfoReason",
            "optional": true,
            "description": "The reason the tab was muted or unmuted. Not set if the tab's mute state has never been changed."
          },
          "extensionId": {
            "type": "string",
            "optional": true,
            "description": "The ID of the extension that changed the muted state. Not set if an extension was not the reason the muted state last changed."
          }
        }
      },
      {
        "id": "Tab",
        "type": "object",
        "properties": {
          "id": {"type": "integer", "minimum": -1, "optional": true, "description": "The ID of the tab. Tab IDs are unique within a browser session. Under some circumstances a tab may not be assigned an ID; for example, when querying foreign tabs using the $(ref:sessions) API, in which case a session ID may be present. Tab ID can also be set to <code>chrome.tabs.TAB_ID_NONE</code> for apps and devtools windows."},
          // TODO(kalman): Investigate how this is ending up as -1 (based on window type? a bug?) and whether it should be optional instead.
          "index": {"type": "integer", "minimum": -1, "description": "The zero-based index of the tab within its window."},
          "groupId": {"type": "integer", "minimum": -1, "description": "The ID of the group that the tab belongs to."},
          "windowId": {"type": "integer", "minimum": 0, "description": "The ID of the window that contains the tab."},
          "openerTabId": {"type": "integer", "minimum": 0, "optional": true, "description": "The ID of the tab that opened this tab, if any. This property is only present if the opener tab still exists."},
          "selected": {"type": "boolean", "description": "Whether the tab is selected.", "deprecated": "Please use $(ref:tabs.Tab.highlighted)."},
          "highlighted": {"type": "boolean", "description": "Whether the tab is highlighted."},
          "active": {"type": "boolean", "description": "Whether the tab is active in its window. Does not necessarily mean the window is focused."},
          "pinned": {"type": "boolean", "description": "Whether the tab is pinned."},
          "audible": {"type": "boolean", "optional": true, "description": "Whether the tab has produced sound over the past couple of seconds (but it might not be heard if also muted). Equivalent to whether the 'speaker audio' indicator is showing."},
          "discarded": {"type": "boolean", "description": "Whether the tab is discarded. A discarded tab is one whose content has been unloaded from memory, but is still visible in the tab strip. Its content is reloaded the next time it is activated."},
          "autoDiscardable":  {"type": "boolean", "description": "Whether the tab can be discarded automatically by the browser when resources are low."},
          "mutedInfo": {"$ref": "MutedInfo", "optional": true, "description": "The tab's muted state and the reason for the last state change."},
          "url": {"type": "string", "optional": true, "description": "The last committed URL of the main frame of the tab. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission and may be an empty string if the tab has not yet committed. See also $(ref:Tab.pendingUrl)."},
          "pendingUrl": {"type": "string", "optional": true, "description": "The URL the tab is navigating to, before it has committed. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission and there is a pending navigation."},
          "title": {"type": "string", "optional": true, "description": "The title of the tab. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission."},
          "favIconUrl": {"type": "string", "optional": true, "description": "The URL of the tab's favicon. This property is only present if the extension's manifest includes the <code>\"tabs\"</code> permission. It may also be an empty string if the tab is loading."},
          "status": {
            "$ref": "TabStatus",
            "optional": true,
            "description": "The tab's loading status."
          },
          "incognito": {"type": "boolean", "description": "Whether the tab is in an incognito window."},
          "width": {"type": "integer", "optional": true, "description": "The width of the tab in pixels."},
          "height": {"type": "integer", "optional": true, "description": "The height of the tab in pixels."},
          "sessionId": {"type": "string", "optional": true, "description": "The session ID used to uniquely identify a tab obtained from the $(ref:sessions) API."}
        }
      },
      {
        "id": "ZoomSettingsMode",
        "type": "string",
        "description": "Defines how zoom changes are handled, i.e., which entity is responsible for the actual scaling of the page; defaults to <code>automatic</code>.",
        "enum": [
          {
            "name": "automatic",
            "description": "Zoom changes are handled automatically by the browser."
          },
          {
            "name": "manual",
            "description": "Overrides the automatic handling of zoom changes. The <code>onZoomChange</code> event will still be dispatched, and it is the extension's responsibility to listen for this event and manually scale the page. This mode does not support <code>per-origin</code> zooming, and thus ignores the <code>scope</code> zoom setting and assumes <code>per-tab</code>."
          },
          {
            "name": "disabled",
            "description": "Disables all zooming in the tab. The tab reverts to the default zoom level, and all attempted zoom changes are ignored."
          }
        ]
      },
      {
        "id": "ZoomSettingsScope",
        "type": "string",
        "description": "Defines whether zoom changes persist for the page's origin, or only take effect in this tab; defaults to <code>per-origin</code> when in <code>automatic</code> mode, and <code>per-tab</code> otherwise.",
        "enum": [
          {
            "name": "per-origin",
            "description": "Zoom changes persist in the zoomed page's origin, i.e., all other tabs navigated to that same origin are zoomed as well. Moreover, <code>per-origin</code> zoom changes are saved with the origin, meaning that when navigating to other pages in the same origin, they are all zoomed to the same zoom factor. The <code>per-origin</code> scope is only available in the <code>automatic</code> mode."
          },
          {
            "name": "per-tab",
            "description": "Zoom changes only take effect in this tab, and zoom changes in other tabs do not affect the zooming of this tab. Also, <code>per-tab</code> zoom changes are reset on navigation; navigating a tab always loads pages with their <code>per-origin</code> zoom factors."
          }
        ]
      },
      {
        "id": "ZoomSettings",
        "type": "object",
        "description": "Defines how zoom changes in a tab are handled and at what scope.",
        "properties": {
          "mode": {
            "$ref": "ZoomSettingsMode",
            "description": "Defines how zoom changes are handled, i.e., which entity is responsible for the actual scaling of the page; defaults to <code>automatic</code>.",
            "optional": true
          },
          "scope": {
            "$ref": "ZoomSettingsScope",
            "description": "Defines whether zoom changes persist for the page's origin, or only take effect in this tab; defaults to <code>per-origin</code> when in <code>automatic</code> mode, and <code>per-tab</code> otherwise.",
            "optional": true
          },
          "defaultZoomFactor": {
            "type": "number",
            "optional": true,
            "description": "Used to return the default zoom level for the current tab in calls to tabs.getZoomSettings."
          }
        }
      },
      {
        "id": "WindowType",
        "type": "string",
        "enum": ["normal", "popup", "panel", "app", "devtools"],
        "description": "The type of window."
      }
    ],
    "properties": {
      "MAX_CAPTURE_VISIBLE_TAB_CALLS_PER_SECOND": {
        "value": 2,
        "description": "The maximum number of times that $(ref:captureVisibleTab) can be called per second. $(ref:captureVisibleTab) is expensive and should not be called too often."
      },
      "TAB_ID_NONE": {
        "value": -1,
        "description": "An ID that represents the absence of a browser tab."
      }
    },
    "functions": [
      {
        "name": "get",
        "type": "function",
        "description": "Retrieves details about the specified tab.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {"name": "tab", "$ref": "Tab"}
          ]
        }
      },
      {
        "name": "getCurrent",
        "type": "function",
        "description": "Gets the tab that this script call is being made from. May be undefined if called from a non-tab context (for example, a background page or popup view).",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "tab",
              "$ref": "Tab",
              "optional": true
            }
          ]
        }
      },
      {
        "name": "connect",
        "nocompile": true,
        "type": "function",
        "description": "Connects to the content script(s) in the specified tab. The $(ref:runtime.onConnect) event is fired in each content script running in the specified tab for the current extension. For more details, see <a href='messaging'>Content Script Messaging</a>.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0
          },
          {
            "type": "object",
            "name": "connectInfo",
            "properties": {
              "name": { "type": "string", "optional": true, "description": "Is passed into onConnect for content scripts that are listening for the connection event." },
              "frameId": {
                "type": "integer",
                "optional": true,
                "minimum": 0,
                "description": "Open a port to a specific <a href='webNavigation#frame_ids'>frame</a> identified by <code>frameId</code> instead of all frames in the tab."
              },
              "documentId": {
                "type": "string",
                "optional": true,
                "description": "Open a port to a specific <a href='webNavigation#document_ids'>document</a> identified by <code>documentId</code> instead of all frames in the tab."
              }
            },
            "optional": true
          }
        ],
        "returns": {
          "$ref": "runtime.Port",
          "description": "A port that can be used to communicate with the content scripts running in the specified tab. The port's $(ref:runtime.Port) event is fired if the tab closes or does not exist. "
        }
      },
      {
        "name": "sendRequest",
        "deprecated": "Please use $(ref:runtime.sendMessage).",
        "nocompile": true,
        "type": "function",
        "description": "Sends a single request to the content script(s) in the specified tab, with an optional callback to run when a response is sent back.  The $(ref:extension.onRequest) event is fired in each content script running in the specified tab for the current extension.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0
          },
          {
            "type": "any",
            "name": "request"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "response",
              "type": "any",
              "description": "The JSON response object sent by the handler of the request. If an error occurs while connecting to the specified tab, the callback is called with no arguments and $(ref:runtime.lastError) is set to the error message."
            }
          ]
        }
      },
      {
        "name": "sendMessage",
        "nocompile": true,
        "type": "function",
        "description": "Sends a single message to the content script(s) in the specified tab, with an optional callback to run when a response is sent back.  The $(ref:runtime.onMessage) event is fired in each content script running in the specified tab for the current extension.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0
          },
          {
            "type": "any",
            "name": "message",
            "description": "The message to send. This message should be a JSON-ifiable object."
          },
          {
            "type": "object",
            "name": "options",
            "properties": {
              "frameId": {
                "type": "integer",
                "optional": true,
                "minimum": 0,
                "description": "Send a message to a specific <a href='webNavigation#frame_ids'>frame</a> identified by <code>frameId</code> instead of all frames in the tab."
              },
              "documentId": {
                "type": "string",
                "optional": true,
                "description": "Send a message to a specific <a href='webNavigation#document_ids'>document</a> identified by <code>documentId</code> instead of all frames in the tab."
              }
            },
            "optional": true
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "response",
              "type": "any",
              "description": "The JSON response object sent by the handler of the message. If an error occurs while connecting to the specified tab, the callback is called with no arguments and $(ref:runtime.lastError) is set to the error message."
            }
          ]
        }
      },
      {
        "name": "getSelected",
        "deprecated": "Please use $(ref:tabs.query) <code>{active: true}</code>.",
        "type": "function",
        "description": "Gets the tab that is selected in the specified window.",
        "parameters": [
          {
            "type": "integer",
            "name": "windowId",
            "minimum": -2,
            "optional": true,
            "description": "Defaults to the <a href='windows#current-window'>current window</a>."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {"name": "tab", "$ref": "Tab"}
          ]
        }
      },
      {
        "name": "getAllInWindow",
        "type": "function",
        "deprecated": "Please use $(ref:tabs.query) <code>{windowId: windowId}</code>.",
        "description": "Gets details about all tabs in the specified window.",
        "parameters": [
          {
            "type": "integer",
            "name": "windowId",
            "minimum": -2,
            "optional": true,
            "description": "Defaults to the <a href='windows#current-window'>current window</a>."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {"name": "tabs", "type": "array", "items": { "$ref": "Tab" } }
          ]
        }
      },
      {
        "name": "create",
        "type": "function",
        "description": "Creates a new tab.",
        "parameters": [
          {
            "type": "object",
            "name": "createProperties",
            "properties": {
              "windowId": {
                "type": "integer",
                "minimum": -2,
                "optional": true,
                "description": "The window in which to create the new tab. Defaults to the <a href='windows#current-window'>current window</a>."
              },
              "index": {
                "type": "integer",
                "minimum": 0,
                "optional": true,
                "description": "The position the tab should take in the window. The provided value is clamped to between zero and the number of tabs in the window."
              },
              "url": {
                "type": "string",
                "optional": true,
                "description": "The URL to initially navigate the tab to. Fully-qualified URLs must include a scheme (i.e., 'http://www.google.com', not 'www.google.com'). Relative URLs are relative to the current page within the extension. Defaults to the New Tab Page."
              },
              "active": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should become the active tab in the window. Does not affect whether the window is focused (see $(ref:windows.update)). Defaults to <var>true</var>."
              },
              "selected": {
                "deprecated": "Please use <em>active</em>.",
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should become the selected tab in the window. Defaults to <var>true</var>"
              },
              "pinned": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should be pinned. Defaults to <var>false</var>"
              },
              "openerTabId": {
                "type": "integer",
                "minimum": 0,
                "optional": true,
                "description": "The ID of the tab that opened this tab. If specified, the opener tab must be in the same window as the newly created tab."
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "tab",
              "$ref": "Tab",
              "description": "The created tab."
            }
          ]
        }
      },
      {
        "name": "duplicate",
        "type": "function",
        "description": "Duplicates a tab.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "description": "The ID of the tab to duplicate."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "tab",
              "optional": true,
              "description": "Details about the duplicated tab. The $(ref:tabs.Tab) object does not contain <code>url</code>, <code>pendingUrl</code>, <code>title</code>, and <code>favIconUrl</code> if the <code>\"tabs\"</code> permission has not been requested.",
              "$ref": "Tab"
            }
          ]
        }
      },
      {
        "name": "query",
        "type": "function",
        "description": "Gets all tabs that have the specified properties, or all tabs if no properties are specified.",
        "parameters": [
          {
            "type": "object",
            "name": "queryInfo",
            "properties": {
              "active": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are active in their windows."
              },
              "pinned": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are pinned."
              },
              "audible": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are audible."
              },
              "muted": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are muted."
              },
              "highlighted": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are highlighted."
              },
              "discarded": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are discarded. A discarded tab is one whose content has been unloaded from memory, but is still visible in the tab strip. Its content is reloaded the next time it is activated."
              },
              "autoDiscardable": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs can be discarded automatically by the browser when resources are low."
              },
              "currentWindow": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are in the <a href='windows#current-window'>current window</a>."
              },
              "lastFocusedWindow": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tabs are in the last focused window."
              },
              "status": {
                "$ref": "TabStatus",
                "optional": true,
                "description": "The tab loading status."
              },
              "title": {
                "type": "string",
                "optional": true,
                "description": "Match page titles against a pattern. This property is ignored if the extension does not have the <code>\"tabs\"</code> permission."
              },
              "url": {
                "choices": [
                  {"type": "string"},
                  {"type": "array", "items": {"type": "string"}}
                ],
                "optional": true,
                "description": "Match tabs against one or more <a href='match_patterns'>URL patterns</a>. Fragment identifiers are not matched. This property is ignored if the extension does not have the <code>\"tabs\"</code> permission."
              },
              "groupId": {
                "type": "integer",
                "optional": true,
                "minimum": -1,
                "description": "The ID of the group that the tabs are in, or $(ref:tabGroups.TAB_GROUP_ID_NONE) for ungrouped tabs."
              },
              "windowId": {
                "type": "integer",
                "optional": true,
                "minimum": -2,
                "description": "The ID of the parent window, or $(ref:windows.WINDOW_ID_CURRENT) for the <a href='windows#current-window'>current window</a>."
              },
              "windowType": {
                "$ref": "WindowType",
                "optional": true,
                "description": "The type of window the tabs are in."
              },
              "index": {
                "type": "integer",
                "optional": true,
                "minimum": 0,
                "description": "The position of the tabs within their windows."
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "array",
              "items": {
                "$ref": "Tab"
              }
            }
          ]
        }
      },
      {
        "name": "highlight",
        "type": "function",
        "description": "Highlights the given tabs and focuses on the first of group. Will appear to do nothing if the specified tab is currently active.",
        "parameters": [
          {
            "type": "object",
            "name": "highlightInfo",
            "properties": {
              "windowId": {
                "type": "integer",
                "optional": true,
                "description": "The window that contains the tabs.",
                "minimum": -2
              },
              "tabs": {
                "description": "One or more tab indices to highlight.",
                "choices": [
                  {"type": "array", "items": {"type": "integer", "minimum": 0}},
                  {"type": "integer"}
                ]
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "window",
              "$ref": "windows.Window",
              "description": "Contains details about the window whose tabs were highlighted."
            }
          ]
        }
      },
      {
        "name": "update",
        "type": "function",
        "description": "Modifies the properties of a tab. Properties that are not specified in <var>updateProperties</var> are not modified.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "optional": true,
            "description": "Defaults to the selected tab of the <a href='windows#current-window'>current window</a>."
          },
          {
            "type": "object",
            "name": "updateProperties",
            "properties": {
              "url": {
                "type": "string",
                "optional": true,
                "description": "A URL to navigate the tab to. JavaScript URLs are not supported; use $(ref:scripting.executeScript) instead."
              },
              "active": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should be active. Does not affect whether the window is focused (see $(ref:windows.update))."
              },
              "highlighted": {
                "type": "boolean",
                "optional": true,
                "description": "Adds or removes the tab from the current selection."
              },
              "selected": {
                "deprecated": "Please use <em>highlighted</em>.",
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should be selected."
              },
              "pinned": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should be pinned."
              },
              "muted": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should be muted."
              },
              "openerTabId": {
                "type": "integer",
                "minimum": 0,
                "optional": true,
                "description": "The ID of the tab that opened this tab. If specified, the opener tab must be in the same window as this tab."
              },
              "autoDiscardable": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the tab should be discarded automatically by the browser when resources are low."
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "tab",
              "$ref": "Tab",
              "optional": true,
              "description": "Details about the updated tab. The $(ref:tabs.Tab) object does not contain <code>url</code>, <code>pendingUrl</code>, <code>title</code>, and <code>favIconUrl</code> if the <code>\"tabs\"</code> permission has not been requested."
            }
          ]
        }
      },
      {
        "name": "move",
        "type": "function",
        "description": "Moves one or more tabs to a new position within its window, or to a new window. Note that tabs can only be moved to and from normal (window.type === \"normal\") windows.",
        "parameters": [
          {
            "name": "tabIds",
            "description": "The tab ID or list of tab IDs to move.",
            "choices": [
              {"type": "integer", "minimum": 0},
              {"type": "array", "items": {"type": "integer", "minimum": 0}}
            ]
          },
          {
            "type": "object",
            "name": "moveProperties",
            "properties": {
              "windowId": {
                "type": "integer",
                "minimum": -2,
                "optional": true,
                "description": "Defaults to the window the tab is currently in."
              },
              "index": {
                "type": "integer",
                "minimum": -1,
                "description": "The position to move the window to. Use <code>-1</code> to place the tab at the end of the window."
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "tabs",
              "description": "Details about the moved tabs.",
              "choices": [
                {"$ref": "Tab"},
                {"type": "array", "items": {"$ref": "Tab"}}
              ]
            }
          ]
        }
      },
      {
        "name": "reload",
        "type": "function",
        "description": "Reload a tab.",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0, "optional": true, "description": "The ID of the tab to reload; defaults to the selected tab of the current window."},
          {
            "type": "object",
            "name": "reloadProperties",
            "optional": true,
            "properties": {
              "bypassCache": {
                "type": "boolean",
                "optional": true,
                "description": "Whether to bypass local caching. Defaults to <code>false</code>."
              }
            }
          }
        ],
        "returns_async": {"name": "callback", "optional": true, "parameters": []}
      },
      {
        "name": "remove",
        "type": "function",
        "description": "Closes one or more tabs.",
        "parameters": [
          {
            "name": "tabIds",
            "description": "The tab ID or list of tab IDs to close.",
            "choices": [
              {"type": "integer", "minimum": 0},
              {"type": "array", "items": {"type": "integer", "minimum": 0}}
            ]
          }
        ],
        "returns_async": {"name": "callback", "optional": true, "parameters": []}
      },
      {
        "name": "group",
        "type": "function",
        "description": "Adds one or more tabs to a specified group, or if no group is specified, adds the given tabs to a newly created group.",
        "parameters": [
          {
            "name": "options",
            "type": "object",
            "properties": {
              "tabIds": {
                "description": "The tab ID or list of tab IDs to add to the specified group.",
                "choices": [
                  {"type": "integer", "minimum": 0},
                  {"type": "array", "items": {"type": "integer", "minimum": 0}, "minItems": 1}
                ]
              },
              "groupId": {
                "type": "integer",
                "description": "The ID of the group to add the tabs to. If not specified, a new group will be created.",
                "minimum": 0,
                "optional": true
              },
              "createProperties": {
                "type": "object",
                "optional": true,
                "description": "Configurations for creating a group. Cannot be used if groupId is already specified.",
                "properties": {
                  "windowId": {
                    "type": "integer",
                    "minimum": -2,
                    "optional": true,
                    "description": "The window of the new group. Defaults to the current window."
                  }
                }
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "groupId",
              "type": "integer",
              "minimum": 0,
              "description": "The ID of the group that the tabs were added to."
            }
          ]
        }
      },
      {
        "name": "ungroup",
        "type": "function",
        "description": "Removes one or more tabs from their respective groups. If any groups become empty, they are deleted.",
        "parameters": [
          {
            "name": "tabIds",
            "description": "The tab ID or list of tab IDs to remove from their respective groups.",
            "choices": [
              {"type": "integer", "minimum": 0},
              {"type": "array", "items": {"type": "integer", "minimum": 0}, "minItems": 1}
            ]
          }
        ],
        "returns_async": {"name": "callback", "optional": true, "parameters": []}
      },
      {
        "name": "detectLanguage",
        "type": "function",
        "description": "Detects the primary language of the content in a tab.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "optional": true,
            "description": "Defaults to the active tab of the <a href='windows#current-window'>current window</a>."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "string",
              "name": "language",
              "description": "An ISO language code such as <code>en</code> or <code>fr</code>. For a complete list of languages supported by this method, see <a href='http://src.chromium.org/viewvc/chrome/trunk/src/third_party/cld/languages/internal/languages.cc'>kLanguageInfoTable</a>. The second to fourth columns are checked and the first non-NULL value is returned, except for Simplified Chinese for which <code>zh-CN</code> is returned. For an unknown/undefined language, <code>und</code> is returned."
            }
          ]
        }
      },
      {
        "name": "captureVisibleTab",
        "type": "function",
        "description": "Captures the visible area of the currently active tab in the specified window. In order to call this method, the extension must have either the <a href='declare_permissions'>&lt;all_urls&gt;</a> permission or the <a href='activeTab'>activeTab</a> permission. In addition to sites that extensions can normally access, this method allows extensions to capture sensitive sites that are otherwise restricted, including chrome:-scheme pages, other extensions' pages, and data: URLs. These sensitive sites can only be captured with the activeTab permission. File URLs may be captured only if the extension has been granted file access.",
        "parameters": [
          {
            "type": "integer",
            "name": "windowId",
            "minimum": -2,
            "optional": true,
            "description": "The target window. Defaults to the <a href='windows#current-window'>current window</a>."
          },
          {
            "$ref": "extensionTypes.ImageDetails",
            "name": "options",
            "optional": true
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "string",
              "name": "dataUrl",
              "description": "A data URL that encodes an image of the visible area of the captured tab. May be assigned to the 'src' property of an HTML <code>img</code> element for display."
            }
          ]
        }
      },
      {
        "name": "executeScript",
        "deprecated": "Replaced by $(ref:scripting.executeScript) in Manifest V3.",
        "type": "function",
        "description": "Injects JavaScript code into a page. For details, see the <a href='content_scripts#pi'>programmatic injection</a> section of the content scripts doc.",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0, "optional": true, "description": "The ID of the tab in which to run the script; defaults to the active tab of the current window."},
          {
            "$ref": "extensionTypes.InjectDetails",
            "name": "details",
            "description": "Details of the script to run. Either the code or the file property must be set, but both may not be set at the same time."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "description": "Called after all the JavaScript has been executed.",
          "parameters": [
            {
              "name": "result",
              "optional": true,
              "type": "array",
              "items": {"type": "any", "minimum": 0},
              "description": "The result of the script in every injected frame."
            }
          ]
        }
      },
      {
        "name": "insertCSS",
        "deprecated": "Replaced by $(ref:scripting.insertCSS) in Manifest V3.",
        "type": "function",
        "description": "Injects CSS into a page. Styles inserted with this method can be removed with $(ref:scripting.removeCSS). For details, see the <a href='content_scripts#pi'>programmatic injection</a> section of the content scripts doc.",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0, "optional": true, "description": "The ID of the tab in which to insert the CSS; defaults to the active tab of the current window."},
          {
            "$ref": "extensionTypes.InjectDetails",
            "name": "details",
            "description": "Details of the CSS text to insert. Either the code or the file property must be set, but both may not be set at the same time."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "description": "Called when all the CSS has been inserted.",
          "parameters": []
        }
      },
      {
        "name": "removeCSS",
        "deprecated": "Replaced by $(ref:scripting.removeCSS) in Manifest V3.",
        "type": "function",
        "description": "Removes from a page CSS that was previously injected by a call to $(ref:scripting.insertCSS).",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "optional": true,
            "description": "The ID of the tab from which to remove the CSS; defaults to the active tab of the current window."
          },
          {
            "$ref": "extensionTypes.DeleteInjectionDetails",
            "name": "details",
            "description": "Details of the CSS text to remove. Either the code or the file property must be set, but both may not be set at the same time."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "description": "Called when all the CSS has been removed.",
          "parameters": []
        }
      },
      {
        "name": "setZoom",
        "type": "function",
        "description": "Zooms a specified tab.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "optional": true,
            "description": "The ID of the tab to zoom; defaults to the active tab of the current window."
          },
          {
            "type": "number",
            "name": "zoomFactor",
            "description": "The new zoom factor. A value of <code>0</code> sets the tab to its current default zoom factor. Values greater than <code>0</code> specify a (possibly non-default) zoom factor for the tab."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "description": "Called after the zoom factor has been changed.",
          "parameters": []
        }
      },
      {
        "name": "getZoom",
        "type": "function",
        "description": "Gets the current zoom factor of a specified tab.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "optional": true,
            "description": "The ID of the tab to get the current zoom factor from; defaults to the active tab of the current window."
          }
        ],
        "returns_async": {
          "name": "callback",
          "description": "Called with the tab's current zoom factor after it has been fetched.",
          "parameters": [
            {
              "type": "number",
              "name": "zoomFactor",
              "description": "The tab's current zoom factor."
            }
          ]
        }
      },
      {
        "name": "setZoomSettings",
        "type": "function",
        "description": "Sets the zoom settings for a specified tab, which define how zoom changes are handled. These settings are reset to defaults upon navigating the tab.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "optional": true,
            "minimum": 0,
            "description": "The ID of the tab to change the zoom settings for; defaults to the active tab of the current window."
          },
          {
            "$ref": "ZoomSettings",
            "name": "zoomSettings",
            "description": "Defines how zoom changes are handled and at what scope."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "description": "Called after the zoom settings are changed.",
          "parameters": []
        }
      },
      {
        "name": "getZoomSettings",
        "type": "function",
        "description": "Gets the current zoom settings of a specified tab.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "optional": true,
            "minimum": 0,
            "description": "The ID of the tab to get the current zoom settings from; defaults to the active tab of the current window."
          }
        ],
        "returns_async": {
          "name": "callback",
          "description": "Called with the tab's current zoom settings.",
          "parameters": [
            {
              "$ref": "ZoomSettings",
              "name": "zoomSettings",
              "description": "The tab's current zoom settings."
            }
          ]
        }
      },
      {
        "name": "discard",
        "type": "function",
        "description": "Discards a tab from memory. Discarded tabs are still visible on the tab strip and are reloaded when activated.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "optional": true,
            "minimum": 0,
            "description": "The ID of the tab to be discarded. If specified, the tab is discarded unless it is active or already discarded. If omitted, the browser discards the least important tab. This can fail if no discardable tabs exist."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "description": "Called after the operation is completed.",
          "parameters": [
            {
              "name": "tab",
              "$ref": "Tab",
              "optional": true,
              "description": "The discarded tab, if it was successfully discarded; undefined otherwise."
            }
          ]
        }
      },
      {
        "name": "goForward",
        "type": "function",
        "description": "Go foward to the next page, if one is available.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "optional": true,
            "minimum": 0,
            "description": "The ID of the tab to navigate forward; defaults to the selected tab of the current window."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": []
        }
      },
      {
        "name": "goBack",
        "type": "function",
        "description": "Go back to the previous page, if one is available.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "optional": true,
            "minimum": 0,
            "description": "The ID of the tab to navigate back; defaults to the selected tab of the current window."
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": []
        }
      }
    ],
    "events": [
      {
        "name": "onCreated",
        "type": "function",
        "description": "Fired when a tab is created. Note that the tab's URL and tab group membership may not be set at the time this event is fired, but you can listen to onUpdated events so as to be notified when a URL is set or the tab is added to a tab group.",
        "parameters": [
          {
            "$ref": "Tab",
            "name": "tab",
            "description": "Details of the tab that was created."
          }
        ]
      },
      {
        "name": "onUpdated",
        "type": "function",
        "description": "Fired when a tab is updated.",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0},
          {
            "type": "object",
            "name": "changeInfo",
            "description": "Lists the changes to the state of the tab that was updated.",
            "properties": {
              "status": {
                "$ref": "TabStatus",
                "optional": true,
                "description": "The tab's loading status."
              },
              "url": {
                "type": "string",
                "optional": true,
                "description": "The tab's URL if it has changed."
              },
              "groupId": {
                "type": "integer",
                "optional": true,
                "minimum": -1,
                "description": "The tab's new group."
              },
              "pinned": {
                "type": "boolean",
                "optional": true,
                "description": "The tab's new pinned state."
              },
              "audible": {
                "type": "boolean",
                "optional": true,
                "description": "The tab's new audible state."
              },
              "discarded": {
                "type": "boolean",
                "optional": true,
                "description": "The tab's new discarded state."
              },
              "autoDiscardable": {
                "type": "boolean",
                "optional": true,
                "description": "The tab's new auto-discardable state."
              },
              "mutedInfo": {
                "$ref": "MutedInfo",
                "optional": true,
                "description": "The tab's new muted state and the reason for the change."
              },
              "favIconUrl": {
                "type": "string",
                "optional": true,
                "description": "The tab's new favicon URL."
              },
              "title": {
                "type": "string",
                "optional": true,
                "description": "The tab's new title."
              }
            }
          },
          {
            "$ref": "Tab",
            "name": "tab",
            "description": "Gives the state of the tab that was updated."
          }
        ]
      },
      {
        "name": "onMoved",
        "type": "function",
        "description": "Fired when a tab is moved within a window. Only one move event is fired, representing the tab the user directly moved. Move events are not fired for the other tabs that must move in response to the manually-moved tab. This event is not fired when a tab is moved between windows; for details, see $(ref:tabs.onDetached).",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0},
          {
            "type": "object",
            "name": "moveInfo",
            "properties": {
              "windowId": {"type": "integer", "minimum": 0},
              "fromIndex": {"type": "integer", "minimum": 0},
              "toIndex": {"type": "integer", "minimum": 0}
            }
          }
        ]
      },
      {
        "name": "onSelectionChanged",
        "deprecated": "Please use $(ref:tabs.onActivated).",
        "type": "function",
        "description": "Fires when the selected tab in a window changes.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "description": "The ID of the tab that has become active."
          },
          {
            "type": "object",
            "name": "selectInfo",
            "properties": {
              "windowId": {
                "type": "integer",
                "minimum": 0,
                "description": "The ID of the window the selected tab changed inside of."
              }
            }
          }
        ]
      },
      {
        "name": "onActiveChanged",
        "deprecated": "Please use $(ref:tabs.onActivated).",
        "type": "function",
        "description": "Fires when the selected tab in a window changes. Note that the tab's URL may not be set at the time this event fired, but you can listen to $(ref:tabs.onUpdated) events so as to be notified when a URL is set.",
        "parameters": [
          {
            "type": "integer",
            "name": "tabId",
            "minimum": 0,
            "description": "The ID of the tab that has become active."
          },
          {
            "type": "object",
            "name": "selectInfo",
            "properties": {
              "windowId": {
                "type": "integer",
                "minimum": 0,
                "description": "The ID of the window the selected tab changed inside of."
              }
            }
          }
        ]
      },
      {
        "name": "onActivated",
        "type": "function",
        "description": "Fires when the active tab in a window changes. Note that the tab's URL may not be set at the time this event fired, but you can listen to onUpdated events so as to be notified when a URL is set.",
        "parameters": [
          {
            "type": "object",
            "name": "activeInfo",
            "properties": {
              "tabId": {
                "type": "integer",
                "minimum": 0,
                "description": "The ID of the tab that has become active."
              },
              "windowId": {
                "type": "integer",
                "minimum": 0,
                "description": "The ID of the window the active tab changed inside of."
              }
            }
          }
        ]
      },
      {
        "name": "onHighlightChanged",
        "deprecated": "Please use $(ref:tabs.onHighlighted).",
        "type": "function",
        "description": "Fired when the highlighted or selected tabs in a window changes.",
        "parameters": [
          {
            "type": "object",
            "name": "selectInfo",
            "properties": {
              "windowId": {
                "type": "integer",
                "minimum": 0,
                "description": "The window whose tabs changed."
              },
              "tabIds": {
                "type": "array",
                "name": "tabIds",
                "items": {"type": "integer", "minimum": 0},
                "description": "All highlighted tabs in the window."
              }
            }
          }
        ]
      },
      {
        "name": "onHighlighted",
        "type": "function",
        "description": "Fired when the highlighted or selected tabs in a window changes.",
        "parameters": [
          {
            "type": "object",
            "name": "highlightInfo",
            "properties": {
              "windowId": {
                "type": "integer",
                "minimum": 0,
                "description": "The window whose tabs changed."
              },
              "tabIds": {
                "type": "array",
                "name": "tabIds",
                "items": {"type": "integer", "minimum": 0},
                "description": "All highlighted tabs in the window."
              }
            }
          }
        ]
      },
      {
        "name": "onDetached",
        "type": "function",
        "description": "Fired when a tab is detached from a window; for example, because it was moved between windows.",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0},
          {
            "type": "object",
            "name": "detachInfo",
            "properties": {
              "oldWindowId": {"type": "integer", "minimum": 0},
              "oldPosition": {"type": "integer", "minimum": 0}
            }
          }
        ]
      },
      {
        "name": "onAttached",
        "type": "function",
        "description": "Fired when a tab is attached to a window; for example, because it was moved between windows.",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0},
          {
            "type": "object",
            "name": "attachInfo",
            "properties": {
              "newWindowId": {"type": "integer", "minimum": 0},
              "newPosition": {"type": "integer", "minimum": 0}
            }
          }
        ]
      },
      {
        "name": "onRemoved",
        "type": "function",
        "description": "Fired when a tab is closed.",
        "parameters": [
          {"type": "integer", "name": "tabId", "minimum": 0},
          {
            "type": "object",
            "name": "removeInfo",
            "properties": {
              "windowId": {"type": "integer", "minimum": 0, "description": "The window whose tab is closed." },
              "isWindowClosing": {"type": "boolean", "description": "True when the tab was closed because its parent window was closed." }
            }
          }
        ]
      },
      {
        "name": "onReplaced",
        "type": "function",
        "description": "Fired when a tab is replaced with another tab due to prerendering or instant.",
        "parameters": [
          {"type": "integer", "name": "addedTabId", "minimum": 0},
          {"type": "integer", "name": "removedTabId", "minimum": 0}
        ]
      },
      {
        "name": "onZoomChange",
        "type": "function",
        "description": "Fired when a tab is zoomed.",
        "parameters": [{
          "type": "object",
          "name": "ZoomChangeInfo",
          "properties": {
            "tabId": {"type": "integer", "minimum": 0},
            "oldZoomFactor": {"type": "number"},
            "newZoomFactor": {"type": "number"},
            "zoomSettings": {"$ref": "ZoomSettings"}
          }
        }]
      }
    ]
  }
]
