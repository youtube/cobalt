# Copyright 2015 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/ios/bundle_data_from_filelist.gni")
import("//ios/build/config.gni")
import("//testing/test.gni")

group("all_tests") {
  testonly = true
  deps = [ ":ios_testing_unittests" ]
}

source_set("verify_custom_webkit") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true
  sources = [
    "verify_custom_webkit.h",
    "verify_custom_webkit.mm",
  ]
  deps = [ "//base" ]
}

source_set("hardware_keyboard_support") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true
  sources = [
    "hardware_keyboard_util.h",
    "hardware_keyboard_util.mm",
  ]
  deps = [ "//base/test:test_support" ]
}

source_set("open_url_context") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true
  sources = [
    "open_url_context.h",
    "open_url_context.mm",
  ]
}

source_set("block_swizzler") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true
  sources = [
    "scoped_block_swizzler.h",
    "scoped_block_swizzler.mm",
  ]
  deps = [ "//base" ]
}

source_set("nserror_support") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true
  sources = [
    "nserror_util.h",
    "nserror_util.mm",
  ]
}

source_set("embedded_test_server_support") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true

  deps = [ "//net:test_support" ]
  sources = [
    "embedded_test_server_handlers.cc",
    "embedded_test_server_handlers.h",
  ]
}

source_set("system_alert_handler") {
  configs += [
    "//build/config/compiler:enable_arc",
    "//build/config/ios:xctest_config",
  ]
  testonly = true
  sources = [
    "system_alert_handler.h",
    "system_alert_handler.mm",
  ]
  deps = [ "//base/test:test_support" ]
}

source_set("ocmock_support") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true

  deps = [ "//base" ]

  public_deps = [ "//third_party/ocmock" ]

  sources = [
    "ocmock_complex_type_helper.h",
    "ocmock_complex_type_helper.mm",
  ]
}

test("ios_testing_unittests") {
  configs += [ "//build/config/compiler:enable_arc" ]
  deps = [
    ":block_swizzler",
    ":ocmock_support",
    "//base/test:run_all_unittests",
    "//base/test:test_support",
    "//testing/gmock",
    "//testing/gtest",
    "//third_party/ocmock",
  ]

  sources = [
    "ocmock_complex_type_helper_unittest.mm",
    "scoped_block_swizzler_unittest.mm",
  ]

  assert_no_deps = ios_assert_no_deps
}

bundle_data_from_filelist("http_server_bundle_data") {
  testonly = true
  filelist_name = "http_server_bundle_data.filelist"
}
