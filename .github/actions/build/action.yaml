name: Build Cobalt
description: Builds Cobalt targets
inputs:
  targets:
    description: "List of ninja targets for Cobalt build."
    required: true
  test_artifacts_key:
    description: "Artifact key used to store test artifacts."
    required: true
runs:
  using: "composite"
  steps:
      - name: Get depot tools
        run: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        shell: bash
      - name: Add directory to PATH
        run: echo "$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_PATH
        shell: bash
      - name: Generate gclient file
        run: gclient config --name=src https://github.com/${{ github.repository }}
        shell: bash
      - name: Set target OS for Android
        if: ${{ contains(matrix.platform, 'android') }}
        run: |
          echo "target_os=['android']" >> .gclient
          gclient validate
        shell: bash
      - name: Gclient sync
        run: gclient sync -v --shallow --no-history -r ${{ github.sha }}
        shell: bash
      - name: sccache check
        run: sccache -s
        shell: bash
      - name: gn gen
        run: |
          cd src
          cobalt/build/gn.py -p ${{ matrix.platform }} -C ${{ matrix.config }}
        shell: bash
      - name: Dump GN args
        run: |
          cd src
          gn args --list --short --overrides-only out/${{ matrix.platform }}_${{ matrix.config }}
        shell: bash
      - name: Ninja build
        env:
          TARGETS: ${{ inputs.targets }}
        run: |
          set -x
          cd src
          ninja -C out/${{ matrix.platform }}_${{ matrix.config }} $(echo "${TARGETS}" | tr -d '"')
        shell: bash
      - name: Dump sccache stats
        run: sccache -s
        shell: bash
      - name: Archive Android APKs
        if: startsWith(matrix.platform, 'android') && matrix.config == 'qa'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }} APKs
          path: |
            src/out/${{ matrix.platform }}_qa/apks/*.apk
            src/out/${{ matrix.platform }}_qa/*_apk/*.apk
      - name: Create Test Files Archive
        if: startsWith(matrix.platform, 'linux') && matrix.config == 'devel'
        run: |
          set -x
          cd src
          tar cvf - out/${{ matrix.platform }}_${{ matrix.config }}/*tests out/${{ matrix.platform }}_${{ matrix.config }}/nplb out/${{ matrix.platform }}_${{ matrix.config }}/*.so out/${{ matrix.platform }}_${{ matrix.config }}/*.so.* out/${{ matrix.platform }}_${{ matrix.config }}/starboard/*.so.* out/${{ matrix.platform }}_${{ matrix.config }}/content/test | xz -T0 -1 -z - > test_artifacts.tar.xz
        shell: bash
      - name: Upload Test artifacts
        if: startsWith(matrix.platform, 'linux') && matrix.config == 'devel'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.test_artifacts_key }}
          path: src/test_artifacts.tar.xz
          retention-days: 3
