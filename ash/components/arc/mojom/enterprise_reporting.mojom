// Copyright 2016 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Next MinVersion: 4
module arc.mojom;

// Enumerates the states that management can be in for a user.
[Extensible]
enum ManagementState {
  // The user is not managed.
  UNMANAGED = 0,

  // The user is managed and the management infrastructure is working correctly.
  MANAGED_OK = 1,

  // The user is managed but managing app lost its Device Owner status and
  // cannot set policies.
  MANAGED_DO_LOST = 2
};

[Extensible]
enum TimedCloudDpcOp {
  [Default] UNKNOWN_OP = 0,
  DEVICE_SETUP = 1,
  SETUP_TOTAL = 2,
  SETUP_CHECK_FOR_ANDROID_ID = 3,
  SETUP_CHECK_FOR_FIRST_ACCOUNT_READY = 4,
  SETUP_REGISTER = 5,
  SETUP_PULL_AND_APPLY_POLICIES = 6,
  SETUP_REPORT_POLICY_COMPLIANCE = 7,
  SETUP_QUARANTINED = 8,
  SETUP_ADD_ACCOUNT = 9,
  SETUP_INSTALL_APPS = 10,
  SETUP_INSTALL_APPS_RETRY = 11,
  SETUP_UPDATE_PLAY_SERVICES = 12,
  SETUP_CHECK_REGISTRATION_TOKEN = 13,
  SETUP_THIRD_PARTY_SIGNIN = 14
};

// Next method ID: 2
interface EnterpriseReportingHost {
  // Reports the management status for the user.
  ReportManagementState@0(ManagementState state);

  // Reports time in ms for a CloudDpc operation.
  [MinVersion=3] ReportCloudDpcOperationTime@1(int64 time_ms,
    TimedCloudDpcOp op, bool success);
};

// Deprecated method IDs: 0
// Next method ID: 3
interface EnterpriseReportingInstance {
  // Establishes full-duplex communication with the host.
  [MinVersion=2] Init@2(
      pending_remote<EnterpriseReportingHost> host_remote) => ();

  // Requests that a JSON status blob be generated and passed to the
  // host.
  [MinVersion=1] GetStatus@1() => (string status, string droid_guard_info);
};
