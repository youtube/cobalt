diff '--color=auto' -r --strip-trailing-cr /usr/local/google/home/waffles/Downloads/lzma2409/Asm/x86/LzmaDecOpt.asm ./Asm/x86/LzmaDecOpt.asm
42c42,44
< _TEXT$LZMADECOPT SEGMENT ALIGN(64) 'CODE'
---
> ; Make this deterministic
> ; _TEXT$LZMADECOPT SEGMENT ALIGN(64) 'CODE'
> LZMADEC SEGMENT ALIGN(64) 'CODE'
1336c1338
< _TEXT$LZMADECOPT ENDS
---
> LZMADEC ENDS
diff '--color=auto' -r --strip-trailing-cr /usr/local/google/home/waffles/Downloads/lzma2409/C/CpuArch.c ./C/CpuArch.c
873a874
> #if defined(__FreeBSD__) || (defined(__has_include) && __has_include(<asm/hwcap.h>))
876a878
> #endif  // Z7_GETAUXV_AVAILABLE
diff '--color=auto' -r --strip-trailing-cr /usr/local/google/home/waffles/Downloads/lzma2409/C/CpuArch.h ./C/CpuArch.h
413c413,417
< 
---
> // Disable MY_CPU_LE_UNALIGN. Although the underlying ISA may be able to load
> // unaligned words, doing so via pointer casts is undefined behavior in C and
> // C++, under both strict aliasing and because it is invalid to construct
> // unaligned pointers. Instead, load the bytes generically and leave optimizing
> // this to the compiler.
419,420c423,424
<     #define MY_CPU_LE_UNALIGN
<     #define MY_CPU_LE_UNALIGN_64
---
>     // #define MY_CPU_LE_UNALIGN
>     // #define MY_CPU_LE_UNALIGN_64
diff '--color=auto' -r --strip-trailing-cr /usr/local/google/home/waffles/Downloads/lzma2409/C/LzFind.c ./C/LzFind.c
598c598
< 
---
> #if 0
642c642
< 
---
> #endif // #if 0
diff '--color=auto' -r --strip-trailing-cr /usr/local/google/home/waffles/Downloads/lzma2409/C/Util/SfxSetup/SfxSetup.c ./C/Util/SfxSetup/SfxSetup.c
13a14,17
> // SHELLEXECUTEINFO
> #include <windows.h>
> #include <shellapi.h>
> 
144c148
< #define kSignatureSearchLimit (1 << 22)
---
> #define kSignatureSearchLimit (1 << 26)

