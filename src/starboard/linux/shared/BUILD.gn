# Copyright 2017 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//starboard/build/config/base.gni")
import("//starboard/build/config/fastbuild.gni")
import("//starboard/build/config/sanitizers.gni")
import("//starboard/build/toolchain/asan_symbolizer_path.gni")
import("//starboard/build/delegated_config.gni")
import("//starboard/linux/shared/clang.gni")
import("//starboard/linux/shared/dlmalloc.gni")

# =============================================================================
# DEFAULT COMPILER CONFIGS
# =============================================================================

config("compiler_defaults") {
  cflags = [
     # We'll pretend not to be Linux, but Starboard instead.
    "-U__linux__",
  ]

  cflags_c = [
    # Limit to C99. This allows Linux to be a canary build for any
    # C11 features that are not supported on some platforms' compilers.
    "-std=c99",
  ]

  cflags_cc = [
    "-std=gnu++11",
  ]

  libs = [
    "asound",
    "avcodec",
    "avformat",
    "avresample",
    "avutil",
    "pthread",
    "rt",
  ]

  ldflags = []

  if (use_dlmalloc_allocator && !use_asan) {
    ldflags += [
      "-Wl,--wrap=malloc",
      "-Wl,--wrap=calloc",
      "-Wl,--wrap=realloc",
      "-Wl,--wrap=memalign",
      "-Wl,--wrap=reallocalign",
      "-Wl,--wrap=free",
      "-Wl,--wrap=strdup",
      "-Wl,--wrap=malloc_usable_size",
      "-Wl,--wrap=malloc_stats_fast",
      "-Wl,--wrap=__cxa_demangle",
    ]
  }

  defines = [
    # Cobalt on Linux flag
    "COBALT_LINUX",
    "__STDC_FORMAT_MACROS", # so that we get PRI*
    # Enable GNU extensions to get prototypes like ffsl.
    "_GNU_SOURCE=1",

    # By default, <EGL/eglplatform.h> pulls in some X11 headers that have some
    # nasty macros (|Status|, for example) that conflict with Chromium base.
    "MESA_EGL_NO_X11_HEADERS",
  ]

  if (use_clang) {
    cflags += [
      "-Werror",
      "-fcolor-diagnostics",
      # Default visibility to hidden, to enable dead stripping.
      "-fvisibility=hidden",
      # Warn for implicit type conversions that may change a value.
      "-Wconversion",
      "-Wno-c++11-compat",
      # This complains about "override", which we use heavily.
      "-Wno-c++11-extensions",
      # Warns on switches on enums that cover all enum values but
      # also contain a default: branch. Chrome is full of that.
      "-Wno-covered-switch-default",
      # protobuf uses hash_map.
      "-Wno-deprecated",
      "-fno-exceptions",
      # Don't warn about the "struct foo f = {0};" initialization pattern.
      "-Wno-missing-field-initializers",
      # Do not warn for implicit sign conversions.
      "-Wno-sign-conversion",
      "-fno-strict-aliasing",  # See http://crbug.com/32204
      "-Wno-unnamed-type-template-args",
      # Triggered by the COMPILE_ASSERT macro.
      "-Wno-unused-local-typedef",
      # Do not warn if a function or variable cannot be implicitly
      # instantiated.
      "-Wno-undefined-var-template",
      # Do not warn about an implicit exception spec mismatch.
      "-Wno-implicit-exception-spec-mismatch",
    ]

    ldflags += [ "-fuse-ld=lld" ]

    if (use_asan) {
      cflags += [
        "-fsanitize=address",
        "-fno-omit-frame-pointer",
      ]

      ldflags += [
        "-fsanitize=address",
        # Force linking of the helpers in sanitizer_options.cc
        "-Wl,-u_sanitizer_options_link_helper",
      ]

      defines += [
        "ADDRESS_SANITIZER",
      ]

      if (asan_symbolizer_path != "") {
        defines += [
          "ASAN_SYMBOLIZER_PATH=\"$asan_symbolizer_path\"",
        ]
      }
    }

    if (use_tsan) {
      cflags += [
        "-fsanitize=thread",
        "-fno-omit-frame-pointer",
      ]

      ldflags += [
        "-fsanitize-thread",
      ]

      defines += [
        "THREAD_SANITIZER",
      ]
    }
  }
}

config("compiler_defaults_debug") {
  cflags = []
  if (!cobalt_use_fastbuild) {
    cflags += [ "-g" ]
  }
}

config("compiler_defaults_devel") {
  cflags = []
  if (!cobalt_use_fastbuild) {
    cflags += [ "-g" ]
  }
}

config("compiler_defaults_qa") {
  cflags = [
    "-gline-tables-only",
  ]
}

config("compiler_defaults_gold") {
  cflags = [
    "-gline-tables-only",
  ]
}

config("compiler_defaults_host") {
  cflags = [
    "-O2",
  ]
}

# ==============================================================================
# DELEGATED CONFIGS
# ==============================================================================

config("pedantic_warnings") {
  cflags = [
    "-Wall",
    "-Wextra",
    "-Wunreachable-code",
  ]
}

config("no_pedantic_warnings") {
  cflags = [
    # "this" pointer cannot be NULL...pointer may be assumed
    # to always convert to true.
    "-Wno-undefined-bool-conversion",
    # Skia doesn't use overrides.
    "-Wno-inconsistent-missing-override",
    # Do not warn about unused function params.
    "-Wno-unused-parameter",
    # Do not warn for implicit type conversions that may change a value.
    "-Wno-conversion",
    # shifting a negative signed value is undefined
    "-Wno-shift-negative-value",
    # Width of bit-field exceeds width of its type- value will be truncated
    "-Wno-bitfield-width",
    "-Wno-undefined-var-template",
  ]
}


delegated_config("optimizations") {
  path = "//starboard/build/toolchain/linux/config"
  prefixes = [ "no", "debuggable", "full" ]
  generate_default = false
}

config("default_optimizations") {
  if (cobalt_config == "debug") {
    configs = [ ":no_optimizations" ]
  } else {
    configs = [ ":debuggable_optimizations" ]
  }
}


delegated_config("rtti") {
  path = "//starboard/build/toolchain/linux/config"
  generate_default = false
}

config("default_rtti") {
  if (cobalt_config == "debug" || cobalt_config == "devel") {
    configs = [ ":rtti" ]
  } else {
    configs = [ ":no_rtti" ]
  }
}


config("wexit_time_destructors") {
  if (use_clang) {
    configs =
        [ "//starboard/build/toolchain/linux/config:wexit_time_destructors" ]
  }
}

# =============================================================================
# starboard_platform TARGET
# =============================================================================

source_set("starboard_platform") {
  visibility = [ "//starboard/linux/*" ]

  sources = [
    "//starboard/linux/shared/atomic_public.h",
    "//starboard/linux/shared/configuration_public.h",
    "//starboard/linux/shared/decode_target_get_info.cc",
    "//starboard/linux/shared/decode_target_internal.cc",
    "//starboard/linux/shared/decode_target_internal.h",
    "//starboard/linux/shared/decode_target_release.cc",
    "//starboard/linux/shared/media_is_video_supported.cc",
    "//starboard/linux/shared/player_components_impl.cc",
    "//starboard/linux/shared/system_get_connection_type.cc",
    "//starboard/linux/shared/system_get_device_type.cc",
    "//starboard/linux/shared/system_get_path.cc",
    "//starboard/linux/shared/system_has_capability.cc",
    "//starboard/shared/alsa/alsa_audio_sink_type.cc",
    "//starboard/shared/alsa/alsa_audio_sink_type.h",
    "//starboard/shared/alsa/alsa_util.cc",
    "//starboard/shared/alsa/alsa_util.h",
    "//starboard/shared/alsa/audio_sink_get_max_channels.cc",
    "//starboard/shared/alsa/audio_sink_get_nearest_supported_sample_frequency.cc",
    "//starboard/shared/alsa/audio_sink_is_audio_frame_storage_type_supported.cc",
    "//starboard/shared/alsa/audio_sink_is_audio_sample_type_supported.cc",
    "//starboard/shared/dlmalloc/memory_map.cc",
    "//starboard/shared/dlmalloc/memory_unmap.cc",
    "//starboard/shared/ffmpeg/ffmpeg_audio_decoder.cc",
    "//starboard/shared/ffmpeg/ffmpeg_audio_decoder.h",
    "//starboard/shared/ffmpeg/ffmpeg_common.cc",
    "//starboard/shared/ffmpeg/ffmpeg_common.h",
    "//starboard/shared/ffmpeg/ffmpeg_video_decoder.cc",
    "//starboard/shared/ffmpeg/ffmpeg_video_decoder.h",
    "//starboard/shared/gcc/atomic_gcc_public.h",
    "//starboard/shared/iso/character_is_alphanumeric.cc",
    "//starboard/shared/iso/character_is_digit.cc",
    "//starboard/shared/iso/character_is_hex_digit.cc",
    "//starboard/shared/iso/character_is_space.cc",
    "//starboard/shared/iso/character_is_upper.cc",
    "//starboard/shared/iso/character_to_lower.cc",
    "//starboard/shared/iso/character_to_upper.cc",
    "//starboard/shared/iso/directory_close.cc",
    "//starboard/shared/iso/directory_get_next.cc",
    "//starboard/shared/iso/directory_open.cc",
    "//starboard/shared/iso/double_absolute.cc",
    "//starboard/shared/iso/double_exponent.cc",
    "//starboard/shared/iso/double_floor.cc",
    "//starboard/shared/iso/double_is_finite.cc",
    "//starboard/shared/iso/double_is_nan.cc",
    "//starboard/shared/iso/memory_compare.cc",
    "//starboard/shared/iso/memory_copy.cc",
    "//starboard/shared/iso/memory_find_byte.cc",
    "//starboard/shared/iso/memory_move.cc",
    "//starboard/shared/iso/memory_set.cc",
    "//starboard/shared/iso/string_compare.cc",
    "//starboard/shared/iso/string_compare_all.cc",
    "//starboard/shared/iso/string_find_character.cc",
    "//starboard/shared/iso/string_find_last_character.cc",
    "//starboard/shared/iso/string_find_string.cc",
    "//starboard/shared/iso/string_get_length.cc",
    "//starboard/shared/iso/string_get_length_wide.cc",
    "//starboard/shared/iso/string_parse_double.cc",
    "//starboard/shared/iso/string_parse_signed_integer.cc",
    "//starboard/shared/iso/string_parse_uint64.cc",
    "//starboard/shared/iso/string_parse_unsigned_integer.cc",
    "//starboard/shared/iso/string_scan.cc",
    "//starboard/shared/iso/system_binary_search.cc",
    "//starboard/shared/iso/system_sort.cc",
    "//starboard/shared/libevent/socket_waiter_add.cc",
    "//starboard/shared/libevent/socket_waiter_create.cc",
    "//starboard/shared/libevent/socket_waiter_destroy.cc",
    "//starboard/shared/libevent/socket_waiter_internal.cc",
    "//starboard/shared/libevent/socket_waiter_remove.cc",
    "//starboard/shared/libevent/socket_waiter_wait.cc",
    "//starboard/shared/libevent/socket_waiter_wait_timed.cc",
    "//starboard/shared/libevent/socket_waiter_wake_up.cc",
    "//starboard/shared/libvpx/vpx_video_decoder.cc",
    "//starboard/shared/libvpx/vpx_video_decoder.h",
    "//starboard/shared/linux/byte_swap.cc",
    "//starboard/shared/linux/get_home_directory.cc",
    "//starboard/shared/linux/memory_get_stack_bounds.cc",
    "//starboard/shared/linux/page_internal.cc",
    "//starboard/shared/linux/socket_get_interface_address.cc",
    "//starboard/shared/linux/system_get_random_data.cc",
    "//starboard/shared/linux/system_get_stack.cc",
    "//starboard/shared/linux/system_get_total_cpu_memory.cc",
    "//starboard/shared/linux/system_is_debugger_attached.cc",
    "//starboard/shared/linux/system_symbolize.cc",
    "//starboard/shared/linux/thread_get_id.cc",
    "//starboard/shared/linux/thread_get_name.cc",
    "//starboard/shared/linux/thread_set_name.cc",
    "//starboard/shared/nouser/user_get_current.cc",
    "//starboard/shared/nouser/user_get_property.cc",
    "//starboard/shared/nouser/user_get_signed_in.cc",
    "//starboard/shared/nouser/user_internal.cc",
    "//starboard/shared/posix/directory_create.cc",
    "//starboard/shared/posix/file_can_open.cc",
    "//starboard/shared/posix/file_close.cc",
    "//starboard/shared/posix/file_delete.cc",
    "//starboard/shared/posix/file_exists.cc",
    "//starboard/shared/posix/file_flush.cc",
    "//starboard/shared/posix/file_get_info.cc",
    "//starboard/shared/posix/file_get_path_info.cc",
    "//starboard/shared/posix/file_open.cc",
    "//starboard/shared/posix/file_read.cc",
    "//starboard/shared/posix/file_seek.cc",
    "//starboard/shared/posix/file_truncate.cc",
    "//starboard/shared/posix/file_write.cc",
    "//starboard/shared/posix/log.cc",
    "//starboard/shared/posix/log_flush.cc",
    "//starboard/shared/posix/log_format.cc",
    "//starboard/shared/posix/log_is_tty.cc",
    "//starboard/shared/posix/log_raw.cc",
    "//starboard/shared/posix/memory_flush.cc",
    "//starboard/shared/posix/set_non_blocking_internal.cc",
    "//starboard/shared/posix/socket_accept.cc",
    "//starboard/shared/posix/socket_bind.cc",
    "//starboard/shared/posix/socket_clear_last_error.cc",
    "//starboard/shared/posix/socket_connect.cc",
    "//starboard/shared/posix/socket_create.cc",
    "//starboard/shared/posix/socket_destroy.cc",
    "//starboard/shared/posix/socket_free_resolution.cc",
    "//starboard/shared/posix/socket_get_last_error.cc",
    "//starboard/shared/posix/socket_get_local_address.cc",
    "//starboard/shared/posix/socket_internal.cc",
    "//starboard/shared/posix/socket_is_connected.cc",
    "//starboard/shared/posix/socket_is_connected_and_idle.cc",
    "//starboard/shared/posix/socket_join_multicast_group.cc",
    "//starboard/shared/posix/socket_listen.cc",
    "//starboard/shared/posix/socket_receive_from.cc",
    "//starboard/shared/posix/socket_resolve.cc",
    "//starboard/shared/posix/socket_send_to.cc",
    "//starboard/shared/posix/socket_set_broadcast.cc",
    "//starboard/shared/posix/socket_set_receive_buffer_size.cc",
    "//starboard/shared/posix/socket_set_reuse_address.cc",
    "//starboard/shared/posix/socket_set_send_buffer_size.cc",
    "//starboard/shared/posix/socket_set_tcp_keep_alive.cc",
    "//starboard/shared/posix/socket_set_tcp_no_delay.cc",
    "//starboard/shared/posix/socket_set_tcp_window_scaling.cc",
    "//starboard/shared/posix/string_compare_no_case.cc",
    "//starboard/shared/posix/string_compare_no_case_n.cc",
    "//starboard/shared/posix/string_compare_wide.cc",
    "//starboard/shared/posix/string_format.cc",
    "//starboard/shared/posix/string_format_wide.cc",
    "//starboard/shared/posix/system_break_into_debugger.cc",
    "//starboard/shared/posix/system_clear_last_error.cc",
    "//starboard/shared/posix/system_get_error_string.cc",
    "//starboard/shared/posix/system_get_last_error.cc",
    "//starboard/shared/posix/system_get_locale_id.cc",
    "//starboard/shared/posix/system_get_number_of_processors.cc",
    "//starboard/shared/posix/thread_sleep.cc",
    "//starboard/shared/posix/time_get_monotonic_now.cc",
    "//starboard/shared/posix/time_get_monotonic_thread_now.cc",
    "//starboard/shared/posix/time_get_now.cc",
    "//starboard/shared/posix/time_zone_get_current.cc",
    "//starboard/shared/posix/time_zone_get_dst_name.cc",
    "//starboard/shared/posix/time_zone_get_name.cc",
    "//starboard/shared/pthread/condition_variable_broadcast.cc",
    "//starboard/shared/pthread/condition_variable_create.cc",
    "//starboard/shared/pthread/condition_variable_destroy.cc",
    "//starboard/shared/pthread/condition_variable_signal.cc",
    "//starboard/shared/pthread/condition_variable_wait.cc",
    "//starboard/shared/pthread/condition_variable_wait_timed.cc",
    "//starboard/shared/pthread/mutex_acquire.cc",
    "//starboard/shared/pthread/mutex_acquire_try.cc",
    "//starboard/shared/pthread/mutex_create.cc",
    "//starboard/shared/pthread/mutex_destroy.cc",
    "//starboard/shared/pthread/mutex_release.cc",
    "//starboard/shared/pthread/once.cc",
    "//starboard/shared/pthread/thread_create.cc",
    "//starboard/shared/pthread/thread_create_local_key.cc",
    "//starboard/shared/pthread/thread_create_priority.h",
    "//starboard/shared/pthread/thread_destroy_local_key.cc",
    "//starboard/shared/pthread/thread_detach.cc",
    "//starboard/shared/pthread/thread_get_current.cc",
    "//starboard/shared/pthread/thread_get_local_value.cc",
    "//starboard/shared/pthread/thread_is_equal.cc",
    "//starboard/shared/pthread/thread_join.cc",
    "//starboard/shared/pthread/thread_set_local_value.cc",
    "//starboard/shared/pthread/thread_yield.cc",
    "//starboard/shared/signal/crash_signals.h",
    "//starboard/shared/signal/crash_signals_sigaction.cc",
    "//starboard/shared/signal/suspend_signals.cc",
    "//starboard/shared/signal/suspend_signals.h",
    "//starboard/shared/starboard/application.cc",
    "//starboard/shared/starboard/audio_sink/audio_sink_create.cc",
    "//starboard/shared/starboard/audio_sink/audio_sink_destroy.cc",
    "//starboard/shared/starboard/audio_sink/audio_sink_internal.cc",
    "//starboard/shared/starboard/audio_sink/audio_sink_internal.h",
    "//starboard/shared/starboard/audio_sink/audio_sink_is_valid.cc",
    "//starboard/shared/starboard/audio_sink/stub_audio_sink_type.cc",
    "//starboard/shared/starboard/audio_sink/stub_audio_sink_type.h",
    "//starboard/shared/starboard/command_line.cc",
    "//starboard/shared/starboard/command_line.h",
    "//starboard/shared/starboard/directory_can_open.cc",
    "//starboard/shared/starboard/event_cancel.cc",
    "//starboard/shared/starboard/event_schedule.cc",
    "//starboard/shared/starboard/file_mode_string_to_flags.cc",
    "//starboard/shared/starboard/file_storage/storage_close_record.cc",
    "//starboard/shared/starboard/file_storage/storage_delete_record.cc",
    "//starboard/shared/starboard/file_storage/storage_get_record_size.cc",
    "//starboard/shared/starboard/file_storage/storage_open_record.cc",
    "//starboard/shared/starboard/file_storage/storage_read_record.cc",
    "//starboard/shared/starboard/file_storage/storage_write_record.cc",
    "//starboard/shared/starboard/log_message.cc",
    "//starboard/shared/starboard/log_raw_dump_stack.cc",
    "//starboard/shared/starboard/log_raw_format.cc",
    "//starboard/shared/starboard/media/codec_util.cc",
    "//starboard/shared/starboard/media/codec_util.h",
    "//starboard/shared/starboard/media/media_can_play_mime_and_key_system.cc",
    "//starboard/shared/starboard/media/media_get_audio_configuration_stereo_only.cc",
    "//starboard/shared/starboard/media/media_get_audio_output_count_stereo_only.cc",
    "//starboard/shared/starboard/media/media_is_audio_supported_aac_and_opus.cc",
    "//starboard/shared/starboard/media/media_is_output_protected.cc",
    "//starboard/shared/starboard/media/media_set_output_protection.cc",
    "//starboard/shared/starboard/media/media_util.cc",
    "//starboard/shared/starboard/media/media_util.h",
    "//starboard/shared/starboard/media/mime_type.cc",
    "//starboard/shared/starboard/media/mime_type.h",
    "//starboard/shared/starboard/new.cc",
    "//starboard/shared/starboard/player/decoded_audio_internal.cc",
    "//starboard/shared/starboard/player/decoded_audio_internal.h",
    "//starboard/shared/starboard/player/filter/audio_decoder_internal.h",
    "//starboard/shared/starboard/player/filter/audio_frame_tracker.cc",
    "//starboard/shared/starboard/player/filter/audio_frame_tracker.h",
    "//starboard/shared/starboard/player/filter/audio_renderer_internal.cc",
    "//starboard/shared/starboard/player/filter/audio_renderer_internal.h",
    "//starboard/shared/starboard/player/filter/audio_renderer_sink.h",
    "//starboard/shared/starboard/player/filter/audio_renderer_sink_impl.cc",
    "//starboard/shared/starboard/player/filter/audio_renderer_sink_impl.h",
    "//starboard/shared/starboard/player/filter/audio_resampler_impl.cc',
    "//starboard/shared/starboard/player/filter/audio_time_stretcher.cc",
    "//starboard/shared/starboard/player/filter/audio_time_stretcher.h",
    "//starboard/shared/starboard/player/filter/cpu_video_frame.cc",
    "//starboard/shared/starboard/player/filter/cpu_video_frame.h",
    "//starboard/shared/starboard/player/filter/decoded_audio_queue.cc",
    "//starboard/shared/starboard/player/filter/decoded_audio_queue.h",
    "//starboard/shared/starboard/player/filter/filter_based_player_worker_handler.cc",
    "//starboard/shared/starboard/player/filter/filter_based_player_worker_handler.h",
    "//starboard/shared/starboard/player/filter/media_time_provider.h",
    "//starboard/shared/starboard/player/filter/media_time_provider_impl.cc",
    "//starboard/shared/starboard/player/filter/media_time_provider_impl.h",
    "//starboard/shared/starboard/player/filter/player_components.h",
    "//starboard/shared/starboard/player/filter/punchout_video_renderer_sink.cc",
    "//starboard/shared/starboard/player/filter/punchout_video_renderer_sink.h",
    "//starboard/shared/starboard/player/filter/video_decoder_internal.h",
    "//starboard/shared/starboard/player/filter/video_frame_internal.h",
    "//starboard/shared/starboard/player/filter/video_renderer_internal.cc",
    "//starboard/shared/starboard/player/filter/video_renderer_internal.h",
    "//starboard/shared/starboard/player/filter/wsola_internal.cc",
    "//starboard/shared/starboard/player/filter/wsola_internal.h",
    "//starboard/shared/starboard/player/input_buffer_internal.cc",
    "//starboard/shared/starboard/player/input_buffer_internal.h",
    "//starboard/shared/starboard/player/job_queue.cc",
    "//starboard/shared/starboard/player/job_queue.h",
    "//starboard/shared/starboard/player/player_create.cc",
    "//starboard/shared/starboard/player/player_destroy.cc",
    "//starboard/shared/starboard/player/player_get_current_frame.cc",
    "//starboard/shared/starboard/player/player_get_info.cc",
    "//starboard/shared/starboard/player/player_internal.cc",
    "//starboard/shared/starboard/player/player_internal.h",
    "//starboard/shared/starboard/player/player_output_mode_supported.cc",
    "//starboard/shared/starboard/player/player_seek.cc",
    "//starboard/shared/starboard/player/player_set_bounds.cc",
    "//starboard/shared/starboard/player/player_set_playback_rate.cc",
    "//starboard/shared/starboard/player/player_set_volume.cc",
    "//starboard/shared/starboard/player/player_worker.cc",
    "//starboard/shared/starboard/player/player_worker.h",
    "//starboard/shared/starboard/player/player_write_end_of_stream.cc",
    "//starboard/shared/starboard/player/player_write_sample.cc",
    "//starboard/shared/starboard/queue_application.cc",
    "//starboard/shared/starboard/string_concat.cc",
    "//starboard/shared/starboard/string_concat_wide.cc",
    "//starboard/shared/starboard/string_copy.cc",
    "//starboard/shared/starboard/string_copy_wide.cc",
    "//starboard/shared/starboard/string_duplicate.cc",
    "//starboard/shared/starboard/system_get_random_uint64.cc",
    "//starboard/shared/starboard/system_request_pause.cc",
    "//starboard/shared/starboard/system_request_stop.cc",
    "//starboard/shared/starboard/system_request_suspend.cc",
    "//starboard/shared/starboard/system_request_unpause.cc",
    '//starboard/shared/starboard/system_supports_resume.cc',
    "//starboard/shared/starboard/window_set_default_options.cc",
    "//starboard/shared/stub/accessibility_get_display_settings.cc",
    "//starboard/shared/stub/accessibility_get_text_to_speech_settings.cc",
    "//starboard/shared/stub/cryptography_create_transformer.cc",
    "//starboard/shared/stub/cryptography_destroy_transformer.cc",
    "//starboard/shared/stub/cryptography_get_tag.cc",
    "//starboard/shared/stub/cryptography_set_authenticated_data.cc",
    "//starboard/shared/stub/cryptography_set_initialization_vector.cc",
    "//starboard/shared/stub/cryptography_transform.cc",
    "//starboard/shared/stub/drm_close_session.cc",
    "//starboard/shared/stub/drm_create_system.cc",
    "//starboard/shared/stub/drm_destroy_system.cc",
    "//starboard/shared/stub/drm_generate_session_update_request.cc",
    "//starboard/shared/stub/drm_is_server_certificate_updatable.cc",
    "//starboard/shared/stub/drm_system_internal.h",
    "//starboard/shared/stub/drm_update_server_certificate.cc",
    "//starboard/shared/stub/drm_update_session.cc",
    "//starboard/shared/stub/image_decode.cc",
    "//starboard/shared/stub/image_is_decode_supported.cc",
    "//starboard/shared/stub/media_is_supported.cc",
    "//starboard/shared/stub/media_is_transfer_characteristics_supported.cc",
    "//starboard/shared/stub/microphone_close.cc",
    "//starboard/shared/stub/microphone_create.cc",
    "//starboard/shared/stub/microphone_destroy.cc",
    "//starboard/shared/stub/microphone_get_available.cc",
    "//starboard/shared/stub/microphone_is_sample_rate_supported.cc",
    "//starboard/shared/stub/microphone_open.cc",
    "//starboard/shared/stub/microphone_read.cc",
    "//starboard/shared/stub/system_clear_platform_error.cc",
    "//starboard/shared/stub/system_get_total_gpu_memory.cc",
    "//starboard/shared/stub/system_get_used_gpu_memory.cc",
    "//starboard/shared/stub/system_hide_splash_screen.cc",
    "//starboard/shared/stub/system_raise_platform_error.cc",
  ]

  if (use_dlmalloc_allocator) {
    sources += [
      "//starboard/shared/dlmalloc/memory_allocate_aligned_unchecked.cc",
      "//starboard/shared/dlmalloc/memory_allocate_unchecked.cc",
      "//starboard/shared/dlmalloc/memory_free.cc",
      "//starboard/shared/dlmalloc/memory_free_aligned.cc",
      "//starboard/shared/dlmalloc/memory_reallocate_unchecked.cc",
      "//starboard/shared/dlmalloc/system_get_used_cpu_memory.cc",
    ]
  } else {
    sources += [
      "//starboard/shared/iso/memory_allocate_unchecked.cc",
      "//starboard/shared/iso/memory_free.cc",
      "//starboard/shared/iso/memory_reallocate_unchecked.cc",
      "//starboard/shared/linux/system_get_used_cpu_memory.cc",
      "//starboard/shared/posix/memory_allocate_aligned_unchecked.cc",
      "//starboard/shared/posix/memory_free_aligned.cc",
    ]
  }

  defines = [
    # This must be defined when building Starboard, and must not when
    # building Starboard client code.
    "STARBOARD_IMPLEMENTATION",
  ]

  deps = [
    "//starboard/common",
    ":starboard_base_symbolize",
    "//third_party/dlmalloc",
    "//third_party/libevent",
    "//third_party/libvpx",
  ]
}

source_set("starboard_base_symbolize") {
  sources = [
    "//base/third_party/symbolize/demangle.cc",
    "//base/third_party/symbolize/symbolize.cc",
  ]
}
