[a-element-xhtml.xhtml?exclude=(file|javascript|mailto)]
  [Parsing: <#i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <#x> against <data:,>]
    expected: FAIL

  [Parsing: <#x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <../i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc:sd/sd>]
    expected: FAIL

  [Parsing: <../i> against <sc:sd>]
    expected: FAIL

  [Parsing: <../path> against <non-spec:/.//p>]
    expected: FAIL

  [Parsing: </..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: </.//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <////> against <sc://x/>]
    expected: FAIL

  [Parsing: <////x/> against <sc://x/>]
    expected: FAIL

  [Parsing: <///> against <sc://x/>]
    expected: FAIL

  [Parsing: </i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: </i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: </i> against <sc:sd/sd>]
    expected: FAIL

  [Parsing: </i> against <sc:sd>]
    expected: FAIL

  [Parsing: <> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <?> against <about:blank>]
    expected: FAIL

  [Parsing: <?i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc:sd/sd>]
    expected: FAIL

  [Parsing: <?i> against <sc:sd>]
    expected: FAIL

  [Parsing: <?x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <\\\\\\.\\Y:> against <about:blank>]
    expected: FAIL

  [Parsing: <\\\\\\.\\y:> against <about:blank>]
    expected: FAIL

  [Parsing: <\\\\x\\hello> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <a/..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <a//> against <about:blank>]
    expected: FAIL

  [Parsing: <a/> against <about:blank>]
    expected: FAIL

  [Parsing: <a:\t foo.com> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <a> against <about:blank>]
    expected: FAIL

  [Parsing: <abc:/rooted> against <abc://host/path>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc://host/path>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc:/path>]
    expected: FAIL

  [Parsing: <about:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43|/> against <about:blank>]
    expected: FAIL

  [Parsing: <c:/foo> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <data:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <data:///test> against <about:blank>]
    expected: FAIL

  [Parsing: <data://:443> against <about:blank>]
    expected: FAIL

  [Parsing: <data://[:1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <data://example.com:8080/pathname?search#hash> against <about:blank>]
    expected: FAIL

  [Parsing: <data://test/a/../b> against <about:blank>]
    expected: FAIL

  [Parsing: <data://test:test> against <about:blank>]
    expected: FAIL

  [Parsing: <dns://fw.example.org:9999/foo.bar.org?type=TXT> against <about:blank>]
    expected: FAIL

  [Parsing: <foo:// !"$%&'()*+,-.;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://///////> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////bar.com/> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo:////://///> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://ho\tst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\nst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\rst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/# !"#$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/? !"$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://joe: !"$%&'()*+,-.:;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <ftp://example.com%80/> against <about:blank>]
    expected: FAIL

  [Parsing: <ftp://example.com%A0/> against <about:blank>]
    expected: FAIL

  [Parsing: <git+https://github.com/foo/bar> against <about:blank>]
    expected: FAIL

  [Parsing: <git://github.com/foo/bar.git> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:443/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:70/> against <about:blank>]
    expected: FAIL

  [Parsing: <h://.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://#> against <about:blank>]
    expected: FAIL

  [Parsing: <http://%25> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%3g%78%63%30%2e%30%32%35%30%2E.01> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%5B::1\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%ef%bc%85%ef%bc%90%ef%bc%90.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%zz%66%a.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://01.2.3.4.5.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://01.2.3.4.5> against <about:blank>]
    expected: FAIL

  [Parsing: <http://09.2.3.4.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://09.2.3.4> against <about:blank>]
    expected: FAIL

  [Parsing: <http://0x1.2.3.4.5.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://0x1.2.3.4.5> against <about:blank>]
    expected: FAIL

  [Parsing: <http://0x100.2.3.4.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://0x100.2.3.4> against <about:blank>]
    expected: FAIL

  [Parsing: <http://0xffffffff1> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://1.2.3.08.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://1.2.3.08> against <about:blank>]
    expected: FAIL

  [Parsing: <http://1.2.3.09> against <about:blank>]
    expected: FAIL

  [Parsing: <http://1.2.3.4.5.> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://1.2.3.4.5> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://10.0.0.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10000000000> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://192.168.0.1 hello> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://192.168.0.257> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://2001::1> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <http://2001::1\]:80> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <http://2001::1\]> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <http://256.256.256.256.256.> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://256.256.256.256.256> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://256.256.256.256> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://4294967296> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://?> against <about:blank>]
    expected: FAIL

  [Parsing: <http://@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http://@:www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http://GOO 　goo.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://Goo%20 goo%7C|.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[0:1:2:3:4:5:6:7:8\]> against <http://example.net/>]
    expected: FAIL

  [Parsing: <http://[1::2\]:3:4> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <http://[::%31\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::.1.2\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::.1\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.2.3.4x\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.2.3.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.2.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::127.0.0.0.1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <http://[::127.0.0.1.\]> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <http://[:\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[google.com\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://a\x00b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x01b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x02b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x03b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x04b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x05b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x06b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x07b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x08b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x0bb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x0cb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x0eb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x0fb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x10b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x11b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x12b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x13b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x14b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x15b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x16b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x17b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x18b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x19b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x1ab/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x1bb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x1cb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x1db/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x1eb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a\x1fb/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a%b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.Xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a^b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ab/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example example.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%00%51> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%41%7a> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e%2> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> against <about:blank>]
    expected: FAIL

  [Parsing: <http://f: /c> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <http://f: 21 / b ? d # e > against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <http://foo.09.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.09> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.0XFfFfFfFfFfFfFfFfFfAcE123> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.0x4.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.0x4> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.0x> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.1.2.3.4.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.1.2.3.4> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.2.3.4.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://foo.2.3.4> against <about:blank>]
    expected: FAIL

  [Parsing: <http://hello%00> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://ho%20st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%23st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Ast/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Est/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%40st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%5Bst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%5Dst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%7Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://www/foo%2Ehtml> against <about:blank>]
    expected: FAIL

  [Parsing: <http://﷐zyx.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://％００.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://％４１.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://💩.123/> against <about:blank>]
    expected: FAIL

  [Parsing: <http:/:@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http:/@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http:/@:www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http:/a:b@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http::@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http:@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http:@:www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <http:a:b@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <httpa://foo:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://\x00y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://%EF%BF%BD> against <about:blank>]
    expected: FAIL

  [Parsing: <https://[0:.0\]> against <about:blank>]
    expected: FAIL

  [Parsing: <https://[0:0:\]> against <about:blank>]
    expected: FAIL

  [Parsing: <https://[0:1.00.0.0.0\]> against <about:blank>]
    expected: FAIL

  [Parsing: <https://[0:1.23.23\]> against <about:blank>]
    expected: FAIL

  [Parsing: <https://[0:1.290.0.0.0\]> against <about:blank>]
    expected: FAIL

  [Parsing: <https://[0:1:2:3:4:5:6:7.0.0.0.1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <https://[0::0::0\]> against <about:blank>]
    expected: FAIL

  [Parsing: <https://example.com%80/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://example.com%A0/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x x:12> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/\x00y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/?#￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/?￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://xn--/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://­/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://�> against <about:blank>]
    expected: FAIL

  [Parsing: <https://￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https:@/www.example.com> against <about:blank>]
    expected: FAIL

  [Parsing: <i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <i> against <sc:sd/sd>]
    expected: FAIL

  [Parsing: <i> against <sc:sd>]
    expected: FAIL

  [Parsing: <intent:///test> against <about:blank>]
    expected: FAIL

  [Parsing: <intent://:443> against <about:blank>]
    expected: FAIL

  [Parsing: <intent://[:1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <intent://example.com:8080/pathname?search#hash> against <about:blank>]
    expected: FAIL

  [Parsing: <intent://test/a/../b> against <about:blank>]
    expected: FAIL

  [Parsing: <intent://test:test> against <about:blank>]
    expected: FAIL

  [Parsing: <irc://myserver.com:6999/channel?passwd> against <about:blank>]
    expected: FAIL

  [Parsing: <ldap://localhost:389/ou=People,o=JNDITutorial> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec://example.org/test?a#b\x00c> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://%E2%80%A0/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://H%4fSt/path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:0:0:0:3\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:5:0:0:0\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2::3\]:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://f:999999/c> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <non-special://test:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/?#￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/?￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <notspecial://host/?'> against <about:blank>]
    expected: FAIL

  [Parsing: <path> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <redis://foo:bar@somehost:6379/0?baz=bam&qux=baz> against <about:blank>]
    expected: FAIL

  [Parsing: <rsync://foo@host:911/sup> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://\x01\x02\x03\x04\x05\x06\x07\x08\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://#> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://%/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:12/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://?> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\x00b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a[b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\\b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\]b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a^b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://faß.ExAmPlE/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://te@s:t@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ#x> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ.test/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ?x> against <about:blank>]
    expected: FAIL

  [Parsing: <ssh://example.com/foo/bar.git> against <http://example.org/>]
    expected: FAIL

  [Parsing: <stun:///test> against <about:blank>]
    expected: FAIL

  [Parsing: <stun://:443> against <about:blank>]
    expected: FAIL

  [Parsing: <stun://[:1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <stun://example.com:8080/pathname?search#hash> against <about:blank>]
    expected: FAIL

  [Parsing: <stun://test/a/../b> against <about:blank>]
    expected: FAIL

  [Parsing: <stun://test:test> against <about:blank>]
    expected: FAIL

  [Parsing: <telnet://user:pass@foobar.com:23/> against <about:blank>]
    expected: FAIL

  [Parsing: <test-a-colon-b.html> against <a:b>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-b.html> against <a:/b>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <test-a-colon-slash-slash-b.html> against <a://b>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-slash.html> against <a://>]
    expected: FAIL

  [Parsing: <test-a-colon-slash.html> against <a:/>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <test-a-colon.html> against <a:>]
    expected: FAIL

  [Parsing: <tftp://foobar.com/someconfig;mode=netascii> against <about:blank>]
    expected: FAIL

  [Parsing: <turn:///test> against <about:blank>]
    expected: FAIL

  [Parsing: <turn://:443> against <about:blank>]
    expected: FAIL

  [Parsing: <turn://[:1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <turn://example.com:8080/pathname?search#hash> against <about:blank>]
    expected: FAIL

  [Parsing: <turn://test/a/../b> against <about:blank>]
    expected: FAIL

  [Parsing: <turn://test:test> against <about:blank>]
    expected: FAIL

  [Parsing: <urn:///test> against <about:blank>]
    expected: FAIL

  [Parsing: <urn://:443> against <about:blank>]
    expected: FAIL

  [Parsing: <urn://[:1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <urn://example.com:8080/pathname?search#hash> against <about:blank>]
    expected: FAIL

  [Parsing: <urn://test/a/../b> against <about:blank>]
    expected: FAIL

  [Parsing: <urn://test:test> against <about:blank>]
    expected: FAIL

  [Parsing: <ut2004://10.10.10.10:7777/Index.ut2> against <about:blank>]
    expected: FAIL

  [Parsing: <w://x:0> against <about:blank>]
    expected: FAIL

  [Parsing: <west://x:0> against <about:blank>]
    expected: FAIL

  [Parsing: <wow:￿> against <about:blank>]
    expected: FAIL

  [Parsing: <wss:// !"$%&'()*+,-.;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://joe: !"$%&'()*+,-.:;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <x> against <sc://ñ>]
    expected: FAIL


[a-element-xhtml.xhtml?include=file]
  [Parsing: <  File:c|////foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <..> against <file:///C:/>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: </////mouse> against <file:///elephant>]
    expected: FAIL

  [Parsing: <////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <//C:/> against <file://host/>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: <//d:/..> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <//d:> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <//localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: </> against <file:///C:/a/b>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: </> against <file://h/C:/a/b>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: </C:/> against <file://host/>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: </C|\\foo\\bar> against <file:///tmp/mock/path>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: </c:/foo/bar> against <file:///c:/baz/qux>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: </c:/foo/bar> against <file://host/path>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: </c|/foo/bar> against <file:///c:/baz/qux>]
    expected: FAIL

  [Parsing: <C|\n/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|#> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: <C|> against <file://host/D:/dir1/dir2/file>]
    expected: FAIL

  [Parsing: <C|> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|?> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\\> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|a> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <\\/localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <file:#frag> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:...> against <http://www.example.com/test>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:..> against <http://www.example.com/test>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:.//p> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:/.//p> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file://%43%3A> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43|> against <about:blank>]
    expected: FAIL

  [Parsing: <file:///./y:> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <file:///y:/> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:///y:> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file://C%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://C:/> against <file://host/>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: <file://C|/> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: <file://\\/localhost//cat> against <about:blank>]
    expected: FAIL

  [Parsing: <file://example%/> against <about:blank>]
    expected: FAIL

  [Parsing: <file://loC𝐀𝐋𝐇𝐨𝐬𝐭/usr/bin> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost//a//../..//> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost//a//../..//foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost/> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/test> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://xn--/p> against <about:blank>]
    expected: FAIL

  [Parsing: <file://­/p> against <about:blank>]
    expected: FAIL

  [Parsing: <file:/C:/> against <file://host/>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:/C|/> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): PASS
      FAIL

  [Parsing: <file:/example.com/> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:/example.com/> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:?q=v> against <about:blank>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:C:/> against <file://host/>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:\\\\//> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\#guppy> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\?fox> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\localhost//> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\c:\\foo\\bar> against <file:///c:/baz/qux>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:a> against <http://www.example.com/test>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL


[a-element-xhtml.xhtml?include=javascript]
  [Parsing: <javascript:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript:///test> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript://:443> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript://[:1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript://example.com:8080/pathname?search#hash> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript://test/a/../b> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript://test:test> against <about:blank>]
    expected: FAIL


[a-element-xhtml.xhtml?include=mailto]
  [Parsing: <mailto:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto:///test> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto://:443> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto://[:1\]> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto://example.com:8080/pathname?search#hash> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto://test/a/../b> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto://test:test> against <about:blank>]
    expected: FAIL
