1. Source Origin
Google Noto project
    a) https://www.google.com/get/noto/

2. LICENSE AND OPENSOURCE
    For license information, see the LICENSE_OFL.txt file

3. Reason:
Font file included with modifications to the sfnt 'name' table to enable testing
of fonts with localized (multiple) family names, and font subsetting to reduce
number of glyphs (only a few are needed for testing).

Explanation of modifications:

(a) The font file now includes multiple localizations of the Font Family name in
the sfnt 'name' table (see
https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6name.html).
One of these names includes non-ascii characters.  If you were to dump the info
from this font file with a tool like sfntly, you would see something like the
following:

Name Table Entries:
Platform          Encoding            Language                        Name                  Value
----------------  ------------------  ------------------------------  --------------------  ----------------------------------------------
Macintosh (id=1)  Roman (id=0)        Italian (id=3)                  FontFamilyName        Italian family name, first family name in file
Windows (id=3)    UnicodeUCS2 (id=1)  English_UnitedStates (id=1033)  FontFamilyName        ಠ_ಠNoto Monoಠ_ಠ
Windows (id=3)    UnicodeUCS2 (id=1)  French_France (id=1036)         FontFamilyName        French family name, last family name in file

Note the ordering of family names is:

[non-English]
English
[non-English]

This assists with testing that the English family name is used (as opposed to
e.g. the first family name) under circumstances where this is dictated by the
standard, e.g. https://drafts.csswg.org/css-fonts/#descdef-src.

Using non-ascii characters in the English font family name enables testing
correct handling of encoding.

(b) Font subsetting with pyftsubset to include only ASCII characters:

    $ pyftsubset NotoMono-Regular.ttf --unicodes=U+0041-005A,U+0061-007A

This is a simple optimization to reduce the number of glyphs in the file, given
we only need a small set for testing purposes.