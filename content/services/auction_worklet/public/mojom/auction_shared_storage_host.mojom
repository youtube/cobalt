// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module auction_worklet.mojom;

import "services/network/public/mojom/shared_storage.mojom";

enum AuctionWorkletFunction {
  kBidderGenerateBid,
  kBidderReportWin,
  kSellerScoreAd,
  kSellerReportResult,
};

// Interface implemented in the browser for auction worklets to forward shared
// storage requests. Auction worklets only have access to a subset of the shared
// storage API (i.e. the setter methods). We intentionally do not return the
// result of these calls to avoid leaking state to the worklet.
interface AuctionSharedStorageHost {
  // Handle the modifier method `method_with_options`.
  SharedStorageUpdate(
    network.mojom.SharedStorageModifierMethodWithOptions method_with_options,
    AuctionWorkletFunction source_auction_worklet_function);

  // Handle each modifier method within `methods_with_options`. If `with_lock`
  // is provided, the methods within the batch will be executed with a lock
  // acquired on the resource with name `with_lock`. `with_lock` shouldn't start
  // with '-'.
  SharedStorageBatchUpdate(
    array<network.mojom.SharedStorageModifierMethodWithOptions> methods_with_options,
    network.mojom.LockName? with_lock,
    AuctionWorkletFunction source_auction_worklet_function);
};
