# Copyright 2015 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//build/config/features.gni")
import("//build/config/ui.gni")
import("//chrome/common/extensions/api/api_sources.gni")
import("//chrome/common/features.gni")
import("//extensions/buildflags/buildflags.gni")
import("//tools/json_schema_compiler/json_features.gni")
import("//tools/json_schema_compiler/json_schema_api.gni")

assert(enable_extensions)

################################################################################
# Public Targets

group("api") {
  public_deps = [
    ":generated_api_json_strings",
    ":generated_api_types",
  ]
}

group("extensions_features") {
  public_deps = [
    ":api_features",
    ":manifest_features",
    ":permission_features",

    # TODO(devlin): It would be nicer to have this dependency hoisted up to
    # //extensions/common (since that's where it's consumed), but there's some
    # cycles to be resolved first.
    "//extensions/common/api:extensions_features",
  ]
}

################################################################################
# Private Targets

generated_json_strings("generated_api_json_strings") {
  sources = chrome_extensions_api_schema_sources +
            chrome_extensions_api_uncompiled_sources

  configs = [ "//build/config:precompiled_headers" ]
  bundle_name = "Chrome"
  schema_include_rules = chrome_extensions_api_schema_include_rules

  sources += [
    "app.json",
    "commands.json",
    "declarative_content.json",
    "dom.json",
    "privacy.json",
    "proxy.json",
    "tts.json",
    "tts_engine.json",
  ]
  if (is_chromeos) {
    sources += [ "file_browser_handler.json" ]
  }
  if (!is_chromeos_ash) {
    # On ChromeOS, input_method_private is fully compiled (as part of
    # schema_files), and so gets added to the bundle already. On other
    # platforms, we still need it added to the bundle.
    # TODO(devlin): That's weird. Investigate.
    sources += [ "input_method_private.json" ]
  }

  root_namespace = chrome_extensions_api_root_namespace
  deps = [ "//extensions/common/api" ]

  visibility = [ ":api" ]
}

generated_types("generated_api_types") {
  sources = chrome_extensions_api_schema_sources +
            chrome_extensions_manifest_only_schema_sources
  configs = [ "//build/config:precompiled_headers" ]
  schema_include_rules = chrome_extensions_api_schema_include_rules

  root_namespace = chrome_extensions_api_root_namespace
  deps = [ "//extensions/common/api" ]

  visibility = [ ":api" ]
}

json_features("api_features") {
  feature_type = "APIFeature"
  method_name = "AddChromeAPIFeatures"
  sources = [ "_api_features.json" ]
  visibility = [ ":extensions_features" ]
}

json_features("permission_features") {
  feature_type = "PermissionFeature"
  method_name = "AddChromePermissionFeatures"
  sources = [ "_permission_features.json" ]
  visibility = [ ":extensions_features" ]
}

json_features("manifest_features") {
  feature_type = "ManifestFeature"
  method_name = "AddChromeManifestFeatures"
  sources = [ "_manifest_features.json" ]
  visibility = [ ":extensions_features" ]
}
