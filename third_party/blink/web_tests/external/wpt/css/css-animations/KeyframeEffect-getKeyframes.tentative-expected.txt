This is a testharness.js-based test.
FAIL KeyframeEffect.getKeyframes() returns no frames for various kinds of empty animations assert_equals: number of frames when @keyframes has empty keyframes expected 0 but got 2
PASS KeyframeEffect.getKeyframes() returns expected frames for a simple animation
PASS KeyframeEffect.getKeyframes() returns frames with expected easing values, when the easing comes from animation-timing-function on the element
PASS KeyframeEffect.getKeyframes() returns frames with expected easing values, when the easing is specified on each keyframe
PASS KeyframeEffect.getKeyframes() returns frames with expected easing values, when the easing is specified on some keyframes
PASS KeyframeEffect.getKeyframes() returns frames with expected composite values, when the composite is set on the effect using animation-composition on the element
PASS KeyframeEffect.getKeyframes() returns frames with expected composite values, when the composite is specified on each keyframe
PASS KeyframeEffect.getKeyframes() returns frames with expected composite values, when the composite is specified on some keyframes
PASS KeyframeEffect.getKeyframes() returns expected frames for a simple animation that specifies a single shorthand property
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with a 0% keyframe and no 100% keyframe
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with a 100% keyframe and no 0% keyframe
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with no 0% or 100% keyframe but with a 50% keyframe
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with a partially complete 100% keyframe (because the !important rule is ignored)
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with different properties on different keyframes, all with the same easing function
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with different properties on different keyframes, with a different easing function on each
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with multiple keyframes for the same time, and all with the same easing function
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with multiple keyframes for the same time and with different easing functions
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with multiple keyframes for the same time and with different but equivalent easing functions
PASS KeyframeEffect.getKeyframes() returns expected frames for an animation with multiple keyframes for the same time and with different composite operations
FAIL KeyframeEffect.getKeyframes() returns expected frames for an animation with multiple keyframes for the same time and with different easing functions and composite operations assert_array_equals: properties on Keyframe #1 should match lengths differ, expected array ["composite", "computedOffset", "easing", "marginTop", "offset", "paddingLeft"] length 6, got ["composite", "computedOffset", "easing", "fontSize", "offset"] length 5
PASS KeyframeEffect.getKeyframes() returns expected frames for overlapping keyframes
FAIL KeyframeEffect.getKeyframes() returns expected values for animations with filter properties and missing keyframes assert_equals: value for 'filter' on Keyframe #1 should match expected "blur(5px) sepia(60%) saturate(30%)" but got "blur(5px) sepia(0.6) saturate(0.3)"
PASS KeyframeEffect.getKeyframes() returns expected values for animation with drop-shadow of filter property
PASS KeyframeEffect.getKeyframes() returns expected values for animations with text-shadow properties and missing keyframes
FAIL KeyframeEffect.getKeyframes() returns expected values for animations with background-size properties and missing keyframes assert_equals: value for 'backgroundSize' on ComputedKeyframe #1 should match expected "50% auto, 6px auto, contain" but got "50%, 6px, contain"
PASS KeyframeEffect.getKeyframes() returns expected values for animations with CSS variables as keyframe values
PASS KeyframeEffect.getKeyframes() returns expected values for animations with CSS variables as keyframe values in a shorthand property
PASS KeyframeEffect.getKeyframes() returns expected values for animations with a CSS variable which is overriden by the value in keyframe
PASS KeyframeEffect.getKeyframes() returns expected values for animations with only custom property in a keyframe
PASS KeyframeEffect.getKeyframes() reflects changes to @keyframes rules
PASS KeyframeEffect.getKeyframes() returns expected values for animations with implicit values and a non-default timingfunction specified for 0% and 100%
Harness: the test ran to completion.

