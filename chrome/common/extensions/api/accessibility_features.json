// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "accessibilityFeatures",
    "description": "Use the <code>chrome.accessibilityFeatures</code> API to manage Chrome's accessibility features. This API relies on the <a href='types#ChromeSetting'>ChromeSetting prototype of the type API</a> for getting and setting individual accessibility features. In order to get feature states the extension must request <code>accessibilityFeatures.read</code> permission. For modifying feature state, the extension needs <code>accessibilityFeatures.modify</code> permission. Note that <code>accessibilityFeatures.modify</code> does not imply <code>accessibilityFeatures.read</code> permission.",
    "properties": {
      "spokenFeedback": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Spoken feedback (text-to-speech). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["spokenFeedback", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "largeCursor": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Enlarged cursor. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["largeCursor", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "stickyKeys": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Sticky modifier keys (like shift or alt). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["stickyKeys", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "highContrast": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>High contrast rendering mode. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["highContrast", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "screenMagnifier": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Full screen magnification. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["screenMagnifier", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "autoclick": {
        "$ref": "types.ChromeSetting",
        "description":"<p><strong>ChromeOS only.</strong></p><p>Auto mouse click after mouse stops moving. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["autoclick", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "virtualKeyboard": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Virtual on-screen keyboard. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["virtualKeyboard", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "caretHighlight": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Caret highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["caretHighlight", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "cursorHighlight": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Cursor highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["cursorHighlight", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "cursorColor": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Cursor color. The value indicates whether the feature is enabled or not, doesn't indicate the color of it. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["cursorColor", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "dockedMagnifier": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Docked magnifier. The value indicates whether docked magnifier feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["dockedMagnifier", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "focusHighlight": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Focus highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["focusHighlight", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "selectToSpeak": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Select-to-speak. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["selectToSpeak", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "switchAccess": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Switch Access. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["switchAccess", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      },
      "animationPolicy": {
        "$ref": "types.ChromeSetting",
        "description": "<code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "value": [
          "animationPolicy", {
            "type": "string",
            "enum": [{
              "description": "Images are allowed to animate.",
              "name": "allowed"
            }, {
              "description": "Images are animated once.",
              "name": "once"
            }, {
              "description": "Images are not animated.",
              "name": "none"
            }]
          }
        ]
      },
      "dictation": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Dictation. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": ["dictation", {"type": "boolean"}],
        "platforms": ["chromeos", "lacros"]
      }
    }
  }
]
