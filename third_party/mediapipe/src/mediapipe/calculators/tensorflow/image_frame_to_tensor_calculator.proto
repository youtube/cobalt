// Copyright 2019 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";
import "tensorflow/core/framework/types.proto";

message ImageFrameToTensorCalculatorOptions {
  extend CalculatorOptions {
    optional ImageFrameToTensorCalculatorOptions ext = 120603667;
  }

  // If set, the output tensor will be of data type specified by this field.
  // Otherwise, the output tensor data type is equal to that of the input image
  // frame.
  optional tensorflow.DataType data_type = 1;

  // If set, the output tensor T is equal to (F - mean * J) / stddev, where F
  // and J are the input image frame and the all-ones matrix of the same size,
  // respectively.  Otherwise, T is equal to F.
  repeated float mean = 2;
  repeated float stddev = 3;
}
