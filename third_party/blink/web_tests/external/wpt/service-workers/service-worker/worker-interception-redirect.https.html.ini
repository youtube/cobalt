[worker-interception-redirect.https.html]
  [Case #1: network scope1->scope2 (classic DedicatedWorker)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [FAIL, PASS]

  [Case #1: network scope1->scope2 (classic DedicatedWorker, fetch())]
    expected: FAIL

  [Case #1: network scope1->scope2 (classic DedicatedWorker, importScripts())]
    expected: FAIL

  [Case #1: network scope1->scope2 (classic DedicatedWorker, location.href)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [FAIL, PASS]

  [Case #1: network scope1->scope2 (classic SharedWorker)]
    expected: FAIL

  [Case #1: network scope1->scope2 (classic SharedWorker, fetch())]
    expected: FAIL

  [Case #1: network scope1->scope2 (classic SharedWorker, importScripts())]
    expected: FAIL

  [Case #1: network scope1->scope2 (classic SharedWorker, location.href)]
    expected: FAIL

  [Case #1: network scope1->scope2 (module DedicatedWorker)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [FAIL, PASS]

  [Case #1: network scope1->scope2 (module DedicatedWorker, fetch())]
    expected: FAIL

  [Case #1: network scope1->scope2 (module DedicatedWorker, location.href)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [FAIL, PASS]

  [Case #1: network scope1->scope2 (module SharedWorker)]
    expected: FAIL

  [Case #1: network scope1->scope2 (module SharedWorker, fetch())]
    expected: FAIL

  [Case #1: network scope1->scope2 (module SharedWorker, location.href)]
    expected: FAIL

  [Case #2: network scope1->out-scope (classic DedicatedWorker, fetch())]
    expected: FAIL

  [Case #2: network scope1->out-scope (classic DedicatedWorker, importScripts())]
    expected: FAIL

  [Case #2: network scope1->out-scope (classic SharedWorker, fetch())]
    expected: FAIL

  [Case #2: network scope1->out-scope (classic SharedWorker, importScripts())]
    expected: FAIL

  [Case #2: network scope1->out-scope (module DedicatedWorker, fetch())]
    expected: FAIL

  [Case #2: network scope1->out-scope (module SharedWorker, fetch())]
    expected: FAIL

  [Case #3: sw scope1->scope2 (classic DedicatedWorker)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [PASS, FAIL]
      FAIL

  [Case #3: sw scope1->scope2 (module DedicatedWorker)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [PASS, FAIL]
      FAIL

  [Case #4: sw scope1->out-scope (classic DedicatedWorker)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [PASS, FAIL]
      FAIL

  [Case #4: sw scope1->out-scope (classic DedicatedWorker, fetch())]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [FAIL, PASS]

  [Case #4: sw scope1->out-scope (classic DedicatedWorker, importScripts())]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [FAIL, PASS]

  [Case #4: sw scope1->out-scope (classic SharedWorker, fetch())]
    expected: FAIL

  [Case #4: sw scope1->out-scope (classic SharedWorker, importScripts())]
    expected: FAIL

  [Case #4: sw scope1->out-scope (module DedicatedWorker)]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [PASS, FAIL]
      FAIL

  [Case #4: sw scope1->out-scope (module DedicatedWorker, fetch())]
    expected:
      if (product == "content_shell") and (virtual_suite == "plz-dedicated-worker"): [FAIL, PASS]

  [Case #4: sw scope1->out-scope (module SharedWorker, fetch())]
    expected: FAIL
