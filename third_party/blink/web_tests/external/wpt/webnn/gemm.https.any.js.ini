[gemm.https.any.html]
  [gemm both negative options.alpha and 1st float32 input tensor / async]
    expected: FAIL

  [gemm both negative options.alpha and 1st float32 input tensor / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 1st float32 input tensor / gpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / async]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / gpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / async]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / gpu / async]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / async]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / gpu / async]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / async]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / cpu / async]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / async]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors all options / async]
    expected: FAIL

  [gemm two float32 2D tensors all options / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors all options / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [5\] => [3, 5\] / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors default options / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.aTranspose being explicit false / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.aTranspose being true / async]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being true / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being true / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / async]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.bTranspose being explicit false / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.bTranspose being true / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.beta / async]
    expected: FAIL

  [gemm two float32 2D tensors options.beta / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.beta / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / async]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / gpu / async]
    expected: FAIL


[gemm.https.any.worker.html]
  [gemm both negative options.alpha and 1st float32 input tensor / async]
    expected: FAIL

  [gemm both negative options.alpha and 1st float32 input tensor / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 1st float32 input tensor / cpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and 1st float32 input tensor / gpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 1st float32 input tensor / gpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and 1st float32 input tensor / sync]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / async]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / cpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / gpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / gpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and 2nd float32 input tensor / sync]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / async]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / cpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / gpu / async]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / gpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and 3rd float32 input tensor (options.c) / sync]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / async]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / cpu / async]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / cpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / gpu / async]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / gpu / sync]
    expected: FAIL

  [gemm both negative options.alpha and options.beta / sync]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / async]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / cpu / async]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / cpu / sync]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / gpu / async]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / gpu / sync]
    expected: FAIL

  [gemm both negative options.beta and 3rd float32 input tensor (options.c) / sync]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / async]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors (b is non-constant) default options / sync]
    expected: FAIL

  [gemm two float32 2D tensors all options / async]
    expected: FAIL

  [gemm two float32 2D tensors all options / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors all options / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors all options / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors all options / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors all options / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 1\] => [3, 5\] / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1, 5\] => [3, 5\] / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [1\] => [3, 5\] / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [3, 1\] => [3, 5\] / sync]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [5\] => [3, 5\] / async]
    expected: FAIL

  [gemm two float32 2D tensors broadcast options.c [5\] => [3, 5\] / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors default options / async]
    expected: FAIL

  [gemm two float32 2D tensors default options / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.aTranspose being explicit false / async]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being explicit false / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.aTranspose being true / async]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being true / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being true / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being true / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being true / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.aTranspose being true / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / async]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.alpha / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.bTranspose being explicit false / async]
    expected: FAIL

  [gemm two float32 2D tensors options.bTranspose being explicit false / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.bTranspose being true / async]
    expected: FAIL

  [gemm two float32 2D tensors options.bTranspose being true / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [gemm two float32 2D tensors options.beta / async]
    expected: FAIL

  [gemm two float32 2D tensors options.beta / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.beta / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.beta / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.beta / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.beta / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.c / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.c / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.c / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors options.c and options.beta / sync]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / async]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / cpu / async]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / cpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / gpu / async]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / gpu / sync]
    expected: FAIL

  [gemm two float32 2D tensors scalar options.c / sync]
    expected: FAIL
