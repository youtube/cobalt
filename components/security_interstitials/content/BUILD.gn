# Copyright 2016 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//components/captive_portal/core/features.gni")
import("//third_party/protobuf/proto_library.gni")

static_library("security_interstitial_page") {
  sources = [
    "bad_clock_blocking_page.cc",
    "bad_clock_blocking_page.h",
    "blocked_interception_blocking_page.cc",
    "blocked_interception_blocking_page.h",
    "captive_portal_blocking_page.cc",
    "captive_portal_blocking_page.h",
    "captive_portal_helper.h",
    "cert_report_helper.cc",
    "cert_report_helper.h",
    "certificate_error_report.cc",
    "certificate_error_report.h",
    "common_name_mismatch_handler.cc",
    "common_name_mismatch_handler.h",
    "connection_help_ui.cc",
    "connection_help_ui.h",
    "content_metrics_helper.cc",
    "content_metrics_helper.h",
    "https_only_mode_blocking_page.cc",
    "https_only_mode_blocking_page.h",
    "insecure_form_blocking_page.cc",
    "insecure_form_blocking_page.h",
    "insecure_form_navigation_throttle.cc",
    "insecure_form_navigation_throttle.h",
    "insecure_form_tab_storage.cc",
    "insecure_form_tab_storage.h",
    "known_interception_disclosure_ui.cc",
    "known_interception_disclosure_ui.h",
    "mitm_software_blocking_page.cc",
    "mitm_software_blocking_page.h",
    "security_blocking_page_factory.h",
    "security_interstitial_controller_client.cc",
    "security_interstitial_controller_client.h",
    "security_interstitial_page.cc",
    "security_interstitial_page.h",
    "security_interstitial_tab_helper.cc",
    "security_interstitial_tab_helper.h",
    "settings_page_helper.h",
    "ssl_blocking_page.cc",
    "ssl_blocking_page.h",
    "ssl_blocking_page_base.cc",
    "ssl_blocking_page_base.h",
    "ssl_cert_reporter.h",
    "ssl_error_assistant.cc",
    "ssl_error_assistant.h",
    "ssl_error_handler.cc",
    "ssl_error_handler.h",
    "ssl_error_navigation_throttle.cc",
    "ssl_error_navigation_throttle.h",
    "stateful_ssl_host_state_delegate.cc",
    "stateful_ssl_host_state_delegate.h",
    "unsafe_resource_util.cc",
    "unsafe_resource_util.h",
    "urls.cc",
    "urls.h",
    "utils.cc",
    "utils.h",
  ]

  public_deps = [
    "//components/captive_portal/core:buildflags",
    "//components/safe_browsing/core/browser/db:hit_report",
  ]

  deps = [
    ":proto",
    "//base",
    "//build:branding_buildflags",
    "//build:chromeos_buildflags",
    "//components/captive_portal/core",
    "//components/content_settings/core/browser",
    "//components/content_settings/core/common",
    "//components/history/core/browser",
    "//components/keyed_service/core",
    "//components/network_time",
    "//components/omnibox/common:common",
    "//components/pref_registry",
    "//components/prefs:prefs",
    "//components/resources",
    "//components/safe_browsing/core/common:common",
    "//components/safe_browsing/core/common:safe_browsing_prefs",
    "//components/security_interstitials/core:core",
    "//components/security_interstitials/core:unsafe_resource",
    "//components/ssl_errors",
    "//components/strings:components_strings_grit",
    "//components/url_formatter",
    "//components/user_prefs",
    "//components/variations",
    "//components/version_info",
    "//content/public/browser",
    "//content/public/common",
    "//crypto",
    "//services/cert_verifier/public/mojom",
    "//services/network/public/cpp:cpp",
    "//third_party/protobuf:protobuf_lite",
    "//third_party/re2",
  ]

  if (enable_captive_portal_detection) {
    sources += [
      "captive_portal_metrics_recorder.cc",
      "captive_portal_metrics_recorder.h",
    ]
    deps += [ "//components/captive_portal/content" ]
  }

  if (is_win || is_mac || is_fuchsia) {
    deps += [ "//components/wifi" ]
  }

  if (is_win) {
    sources += [ "captive_portal_helper_win.cc" ]
  }

  if (is_android) {
    sources += [
      "captive_portal_helper_android.cc",
      "captive_portal_helper_android.h",
    ]
    deps +=
        [ "//components/security_interstitials/content/android:jni_headers" ]
  } else {
    deps += [ "//components/guest_view/browser" ]
  }
}

proto_library("proto") {
  sources = [
    "cert_logger.proto",
    "ssl_error_assistant.proto",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "certificate_error_report_unittest.cc",
    "security_interstitial_tab_helper_unittest.cc",
    "ssl_error_assistant_unittest.cc",
    "ssl_error_handler_unittest.cc",
    "ssl_error_navigation_throttle_unittest.cc",
  ]

  deps = [
    ":proto",
    ":security_interstitial_page",
    "//base",
    "//base/test:test_support",
    "//build:chromeos_buildflags",
    "//components/captive_portal/content",
    "//components/captive_portal/core:test_support",
    "//components/embedder_support",
    "//components/network_time",
    "//components/network_time:network_time_test_support",
    "//components/prefs:test_support",
    "//components/security_interstitials/core:core",
    "//components/version_info",
    "//content/public/browser",
    "//content/public/common",
    "//content/test:test_support",
    "//net:",
    "//net:test_support",
    "//services/network:test_support",
    "//testing/gtest",
  ]
}
