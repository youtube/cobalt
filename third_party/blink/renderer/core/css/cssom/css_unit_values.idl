// Copyright 2017 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// https://drafts.css-houdini.org/css-typed-om/#numeric-factory

[
  ImplementedAs=CSSUnitValues
] partial namespace CSS {
  [NewObject] CSSUnitValue number(double value);
  [NewObject] CSSUnitValue percent(double value);

  // <length>
  [NewObject] CSSUnitValue em(double value);
  [NewObject] CSSUnitValue ex(double value);
  [NewObject] CSSUnitValue ch(double value);
  [NewObject] CSSUnitValue rem(double value);
  [NewObject] CSSUnitValue vw(double value);
  [NewObject] CSSUnitValue vh(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue vi(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue vb(double value);
  [NewObject] CSSUnitValue vmin(double value);
  [NewObject] CSSUnitValue vmax(double value);

  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue svw(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue svh(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue svi(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue svb(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue svmin(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue svmax(double value);

  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue lvw(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue lvh(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue lvi(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue lvb(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue lvmin(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue lvmax(double value);

  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue dvw(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue dvh(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue dvi(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue dvb(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue dvmin(double value);
  [NewObject, RuntimeEnabled=CSSViewportUnits4] CSSUnitValue dvmax(double value);

  [NewObject] CSSUnitValue cqw(double value);
  [NewObject] CSSUnitValue cqh(double value);
  [NewObject] CSSUnitValue cqi(double value);
  [NewObject] CSSUnitValue cqb(double value);
  [NewObject] CSSUnitValue cqmin(double value);
  [NewObject] CSSUnitValue cqmax(double value);

  [NewObject] CSSUnitValue cm(double value);
  [NewObject] CSSUnitValue mm(double value);
  [NewObject] CSSUnitValue in(double value);
  [NewObject] CSSUnitValue pt(double value);
  [NewObject] CSSUnitValue pc(double value);
  [NewObject] CSSUnitValue px(double value);
  [NewObject] CSSUnitValue Q(double value);
  // TODO: Currently unsupported length units that are specified
  // [NewObject] CSSUnitValue ic(double value);
  // [NewObject] CSSUnitValue lh(double value);
  // [NewObject] CSSUnitValue rlh(double value);

  // <angle>
  [NewObject] CSSUnitValue deg(double value);
  [NewObject] CSSUnitValue grad(double value);
  [NewObject] CSSUnitValue rad(double value);
  [NewObject] CSSUnitValue turn(double value);

  // <time>
  [NewObject] CSSUnitValue s(double value);
  [NewObject] CSSUnitValue ms(double value);

  // <frequency>
  [NewObject] CSSUnitValue Hz(double value);
  [NewObject] CSSUnitValue kHz(double value);

  // <resolution>
  [NewObject] CSSUnitValue dpi(double value);
  [NewObject] CSSUnitValue dpcm(double value);
  [NewObject] CSSUnitValue dppx(double value);

  // <flex>
  [NewObject] CSSUnitValue fr(double value);
};
