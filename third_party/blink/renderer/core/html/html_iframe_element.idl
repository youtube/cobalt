/*
 * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

// https://html.spec.whatwg.org/multipage/iframe-embed-object.html#htmliframeelement

// The `HTMLString` references below are from Trusted Types:
// https://github.com/w3c/trusted-types/, which is still WIP.
// https://crbug.com/739170.
[
    Exposed=Window,
    HTMLConstructor
] interface HTMLIFrameElement : HTMLElement {
    [CEReactions, Reflect, URL] attribute USVString src;
    [CEReactions, Reflect, RaisesException=Setter] attribute HTMLString srcdoc;
    [CEReactions, Reflect] attribute DOMString name;
    [PutForwards=value] readonly attribute DOMTokenList sandbox;
    // Note: The seamless attribute was once supported, but was removed.
    [CEReactions, Reflect] attribute boolean allowFullscreen;
    [CEReactions, Reflect] attribute DOMString width;
    [CEReactions, Reflect] attribute DOMString height;

    [CheckSecurity=ReturnValue] readonly attribute Document? contentDocument;
    readonly attribute Window? contentWindow;
    [CheckSecurity=ReturnValue, RaisesException] Document? getSVGDocument();
    [CEReactions, Reflect, ReflectOnly=("","no-referrer","origin","no-referrer-when-downgrade","origin-when-cross-origin","unsafe-url"), ReflectMissing="", ReflectInvalid=""] attribute DOMString referrerPolicy;
    // https://w3c.github.io/webappsec-csp/embedded/#dom-htmliframeelement-csp
    [CEReactions, Reflect] attribute DOMString csp;

    // Feature Policy
    [CEReactions, Reflect] attribute DOMString allow;
    // https://w3c.github.io/webappsec-feature-policy/#the-policy-object
    readonly attribute FeaturePolicy featurePolicy;

    // Document Policy
    [RuntimeEnabled=DocumentPolicyNegotiation, CEReactions, Reflect] attribute DOMString policy;

    [RuntimeEnabled=LazyFrameLoading, CEReactions, Reflect, ReflectOnly=("lazy", "eager", "auto"), ReflectMissing="auto", ReflectInvalid="auto"] attribute DOMString loading;

    // Trust Tokens request parameters (https://github.com/wicg/trust-token-api)
    [RuntimeEnabled=PrivateStateTokens, SecureContext, Reflect, MeasureAs=TrustTokenIframe] attribute DOMString privateToken;

    // Topics API (https://github.com/patcg-individual-drafts/topics)
    [RuntimeEnabled=TopicsAPI, SecureContext, CEReactions, Reflect] attribute boolean browsingTopics;

    // Iframes credentialless
    // https://github.com/WICG/anonymous-iframe
    [CEReactions, Reflect, RuntimeEnabled=AnonymousIframe] attribute boolean credentialless;

    // obsolete members
    // https://html.spec.whatwg.org/C/#HTMLIFrameElement-partial
    [CEReactions, Reflect] attribute DOMString align;
    [CEReactions, Reflect] attribute DOMString scrolling;
    [CEReactions, Reflect] attribute DOMString frameBorder;
    [CEReactions, Reflect, URL] attribute USVString longDesc;

    [CEReactions, Reflect] attribute [TreatNullAs=EmptyString] DOMString marginHeight;
    [CEReactions, Reflect] attribute [TreatNullAs=EmptyString] DOMString marginWidth;
};
