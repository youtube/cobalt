/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   neon-animated-pages.html
 */

/// <reference path="../polymer/types/polymer.d.ts" />
/// <reference path="../iron-resizable-behavior/iron-resizable-behavior.d.ts" />
/// <reference path="../iron-selector/iron-selectable.d.ts" />
/// <reference path="neon-animation-runner-behavior.d.ts" />

/**
 * Material design: [Meaningful transitions](https://www.google.com/design/spec/animation/meaningful-transitions.html)
 *
 * `neon-animated-pages` manages a set of pages and runs an animation when switching between them. Its
 * children pages should implement `Polymer.NeonAnimatableBehavior` and define `entry` and `exit`
 * animations to be run when switching to or switching out of the page.
 */
interface NeonAnimatedPagesElement extends Polymer.Element, Polymer.IronResizableBehavior, Polymer.IronSelectableBehavior, Polymer.NeonAnimationRunnerBehavior {
  activateEvent: string|null|undefined;

  /**
   * if true, the initial page selection will also be animated according to its animation config.
   */
  animateInitialSelection: boolean|null|undefined;
  _onIronSelect(event: any): void;
  _completeSelectedChanged(oldPage?: object|null, selectedPage?: object|null): void;
  _onNeonAnimationFinish(event: any): void;
  _notifyPageResize(): void;
}

interface HTMLElementTagNameMap {
  "neon-animated-pages": NeonAnimatedPagesElement;
}
