# Copyright 2024 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Get the path to the starboard implementation and include its GN
# configuration.

declare_args() {
  # Temporary gn arg for work on base/net update.
  cobalt_pending_clean_up = true

  build_type = "devel"

  is_starboard = true

  # Used to guard any customizations to Chromium or third-party code for builds
  # where the Starboard porting layer is not used.
  is_native_target_build = false

  is_internal_build = getenv("COBALT_USE_INTERNAL_BUILD") == "1"

  using_old_compiler = false

  build_with_separate_cobalt_toolchain = target_os == "linux"
}

assert(!(is_starboard && is_native_target_build),
       "Targets should be built for Starboard or natively, but not both")

# Used to guard customizations to Chromium or third-party code. We historically
# used is_starboard for this, but we developed the need to distinguish between
# a) customizations that should only be used for Starboard builds and b)
# those that should only be used for native target builds (see
# is_native_target_build). use_cobalt_customizations is a convenience in the
# sense that it is functionally equivalent to
# (is_starboard || is_native_target_build), but it should be used in lieu of
# that since the intent is more clear.
use_cobalt_customizations = true

# TODO(b/371589344): Investigate if we need cobalt_is_debug which
# avoids overriding chrome's is_debug.
is_devel = build_type == "devel"
is_qa = build_type == "qa"
is_gold = build_type == "gold"

# TODO(b/372141961): Investigate setting chromium flag
# is_debug = true for debug builds
# assert(is_debug || is_devel || is_qa || is_gold)

if (is_mac) {
  declare_args() {
    use_system_xcode = true
  }
}

# Get the path to the starboard implementation and include its GN
# configuration.
import("//starboard/build/platform_path.gni")
if (build_with_separate_cobalt_toolchain) {
  starboard_toolchain = "//$starboard_path/toolchain:starboard"
} else {
  starboard_toolchain = cobalt_toolchain
}
