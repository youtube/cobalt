# Copyright 2014 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/buildflag_header.gni")
import("//build/config/chrome_build.gni")
import("//build/config/chromeos/ui_mode.gni")
import("//build/config/chromeos/ui_mode.gni")
import("//build/config/features.gni")
import("//build/toolchain/toolchain.gni")
import("//media/media_options.gni")
import("//third_party/widevine/cdm/widevine.gni")

if (bundle_widevine_cdm) {
  import("//media/cdm/library_cdm/cdm_paths.gni")
}

assert(!bundle_widevine_cdm || (enable_widevine && enable_library_cdms))

buildflag_header("buildflags") {
  header = "buildflags.h"

  flags = [
    "ENABLE_WIDEVINE=$enable_widevine",
    "BUNDLE_WIDEVINE_CDM=$bundle_widevine_cdm",
    "ENABLE_WIDEVINE_CDM_COMPONENT=$enable_widevine_cdm_component",
    "ENABLE_MEDIA_FOUNDATION_WIDEVINE_CDM=$enable_media_foundation_widevine_cdm",
  ]
}

if (bundle_widevine_cdm) {
  widevine_arch = target_cpu

  widevine_cdm_root = "${widevine_root}/${target_os}/${widevine_arch}"
  cdm_file_name = "${shlib_prefix}widevinecdm${shlib_extension}"
  widevine_cdm_binary_files = [ "${widevine_cdm_root}/${cdm_file_name}" ]
  widevine_cdm_manifest_and_license_files = [
    "${widevine_cdm_root}/manifest.json",
    "../LICENSE",
  ]

  if (enable_widevine_cdm_host_verification) {
    assert(is_win || is_mac)
    widevine_cdm_binary_files += [ "${widevine_cdm_root}/${cdm_file_name}.sig" ]
  }
}

source_set("headers") {
  public = [ "widevine_cdm_common.h" ]

  public_deps = [
    ":buildflags",
    "//base",
  ]
}

if (bundle_widevine_cdm) {
  copy("widevine_cdm_manifest_and_license") {
    sources = widevine_cdm_manifest_and_license_files
    outputs = [ "${root_out_dir}/WidevineCdm/{{source_file_part}}" ]
  }

  copy("widevine_cdm_binary") {
    sources = widevine_cdm_binary_files
    outputs = [ "${root_out_dir}/${widevine_cdm_path}/{{source_file_part}}" ]

    # TODO(jrummell)
    # 'COPY_PHASE_STRIP': 'NO',
  }

  group("cdm") {
    # Needed at run time by tests, e.g. swarming tests to generate isolate.
    # See https://crbug.com/824493 for context.
    data_deps = [
      ":widevine_cdm_binary",
      ":widevine_cdm_manifest_and_license",
    ]

    # Needed at build time e.g. for mac bundle (//chrome:chrome_framework).
    public_deps = [
      ":widevine_cdm_binary",
      ":widevine_cdm_manifest_and_license",
    ]
  }
} else {
  group("cdm") {
    # NOP
  }
}

# This target exists for tests to depend on that pulls in a runtime dependency
# on the license server.
group("widevine_test_license_server") {
  if (bundle_widevine_cdm && (is_linux || is_chromeos)) {
    data = [ "//third_party/widevine/test/license_server/" ]
  }
}
