--- base/BUILD.gn
+++ base/BUILD.gn
@@ -100,30 +100,6 @@
 assert(!is_win || is_clang,
        "only clang-cl is supported on Windows, see https://crbug.com/988071")
 
-<<<<<<< HEAD
-=======
-# Whether we should provide a `__libcpp_verbose_abort` handler that discards
-# `__VA_ARGS__` and just calls base::ImmediateCrash() for hardening failures.
-# This conditional matches `defined(OFFICIAL_BUILD) && !DCHECK_IS_ON()` in
-# base/check.h. I.e. we optimize `::std::__libcpp_verbose_abort(__VA_ARGS__)`
-# to discard `__VA_ARGS__` when we disable logging from CHECK() failures.
-use_nodebug_assertion =
-    use_custom_libcxx && is_official_build && !is_debug && !dcheck_always_on
-
-# TODO: b/384652502 - Cobalt: Fix compiler errors building hermetically.
-# ../../third_party/libevent/signal.c:43:10: fatal error: 'sys/queue.h' file not found
-# #include <sys/queue.h>
-# Determines whether libevent should be dep.
-if (is_cobalt && is_cobalt_hermetic_build) {
-  dep_libevent = false
-} else {
-  dep_libevent = !is_fuchsia && !is_win && !is_mac && !is_nacl
-}
-
-# Determines whether message_pump_libevent should be used.
-use_libevent = dep_libevent && !is_ios
-
->>>>>>> 404a4c892e2 (Build nplb hermetically (#4587))
 if (is_android || is_robolectric) {
   import("//build/config/android/rules.gni")
   import("//third_party/jni_zero/jni_zero.gni")
