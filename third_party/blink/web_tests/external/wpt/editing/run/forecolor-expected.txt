This is a testharness.js-based test.
Found 2247 tests; 2193 PASS, 54 FAIL, 0 TIMEOUT, 0 NOTRUN.
PASS [["forecolor","#0000FF"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") before
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") before assert_equals: Wrong result returned expected false but got true
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><span style=\"color:rgb(0, 0, 255)\">foo</span></p><p> <span style=\"color:rgb(0, 0, 255)\"><span>bar</span></span> </p><p><span style=\"color:rgb(0, 0, 255)\">baz</span></p>" but got "<p><span style=\"color:rgb(0, 0, 255)\">foo</span></p><p> <span style=\"color:rgb(0, 0, 255)\"><span>bar</span> </span></p><p><span style=\"color:rgb(0, 0, 255)\">baz</span></p>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><font color=\"#0000ff\">foo</font></p><p> <font color=\"#0000ff\"><span>bar</span></font> </p><p><font color=\"#0000ff\">baz</font></p>" but got "<p><font color=\"#0000ff\">foo</font></p><p> <font color=\"#0000ff\"><span>bar</span> </font></p><p><font color=\"#0000ff\">baz</font></p>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" compare innerHTML
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"]] "<b>foo[]bar</b>" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" compare innerHTML
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"]] "<i>foo[]bar</i>" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" compare innerHTML
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"]] "<span>foo</span>{}<span>bar</span>" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" compare innerHTML
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"]] "<span>foo[</span><span>]bar</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<p><p> <p>foo</p>}" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz": execCommand("forecolor", false, "blue") return value
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz": execCommand("forecolor", false, "blue") return value
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","blue"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["forecolor","f"]] "foo[bar]baz": execCommand("forecolor", false, "f") return value
PASS [["forecolor","f"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["forecolor","f"]] "foo[bar]baz" compare innerHTML
PASS [["forecolor","f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["forecolor","f"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["forecolor","f"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["forecolor","f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["forecolor","f"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["forecolor","f"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["forecolor","#f"]] "foo[bar]baz": execCommand("forecolor", false, "#f") return value
PASS [["forecolor","#f"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["forecolor","#f"]] "foo[bar]baz" compare innerHTML
PASS [["forecolor","#f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#f"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["forecolor","#f"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["forecolor","#f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#f"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["forecolor","#f"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz": execCommand("forecolor", false, "00f") return value
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz": execCommand("forecolor", false, "00f") return value
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","00f"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz": execCommand("forecolor", false, "#00f") return value
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz": execCommand("forecolor", false, "#00f") return value
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#00f"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz": execCommand("forecolor", false, "0000ff") return value
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz": execCommand("forecolor", false, "0000ff") return value
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz": execCommand("forecolor", false, "#0000ff") return value
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz": execCommand("forecolor", false, "#0000ff") return value
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000ff"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["forecolor","000000fff"]] "foo[bar]baz": execCommand("forecolor", false, "000000fff") return value
PASS [["forecolor","000000fff"]] "foo[bar]baz" checks for modifications to non-editable content
FAIL [["forecolor","000000fff"]] "foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foobarbaz" but got "foo<font color=\"#000fff\">bar</font>baz"
PASS [["forecolor","000000fff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["forecolor","000000fff"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["forecolor","000000fff"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["forecolor","000000fff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["forecolor","000000fff"]] "foo[bar]baz" queryCommandState("forecolor") after
FAIL [["forecolor","000000fff"]] "foo[bar]baz" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 0)" but got "rgb(0, 15, 255)"
PASS [["forecolor","#000000fff"]] "foo[bar]baz": execCommand("forecolor", false, "#000000fff") return value
PASS [["forecolor","#000000fff"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["forecolor","#000000fff"]] "foo[bar]baz" compare innerHTML
PASS [["forecolor","#000000fff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#000000fff"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["forecolor","#000000fff"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["forecolor","#000000fff"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#000000fff"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["forecolor","#000000fff"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb(0, 0, 255)") return value
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb(0, 0, 255)") return value
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(0, 0, 255)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb(0%, 0%, 100%)") return value
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb(0%, 0%, 100%)") return value
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(0%, 0%, 100%)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb( 0 ,0 ,255)") return value
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb( 0 ,0 ,255)") return value
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb( 0 ,0 ,255)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz": execCommand("forecolor", false, "rgba(0, 0, 255, 0.0)") return value
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz": execCommand("forecolor", false, "rgba(0, 0, 255, 0.0)") return value
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"color:rgba(0, 0, 0, 0)\">bar</span>baz" but got "foo<font color=\"rgba(0, 0, 255, 0)\">bar</font>baz"
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandState("forecolor") after
FAIL [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.0)"]] "foo[bar]baz" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 255, 0)" but got "rgb(0, 0, 85)"
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb(15, -10, 375)") return value
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz": execCommand("forecolor", false, "rgb(15, -10, 375)") return value
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgb(15, -10, 375)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz": execCommand("forecolor", false, "rgba(0, 0, 0, 1)") return value
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" compare innerHTML
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["forecolor","rgba(0, 0, 0, 1)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz": execCommand("forecolor", false, "rgba(255, 255, 255, 1)") return value
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz": execCommand("forecolor", false, "rgba(255, 255, 255, 1)") return value
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgba(255, 255, 255, 1)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz": execCommand("forecolor", false, "rgba(0, 0, 255, 0.5)") return value
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz": execCommand("forecolor", false, "rgba(0, 0, 255, 0.5)") return value
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"color:rgba(0, 0, 255, 0.5)\">bar</span>baz" but got "foo<font color=\"rgba(0, 0, 255, 0.501960784313726)\">bar</font>baz"
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandState("forecolor") after
FAIL [["stylewithcss","false"],["forecolor","rgba(0, 0, 255, 0.5)"]] "foo[bar]baz" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 255, 0.5)" but got "rgb(0, 0, 19)"
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz": execCommand("forecolor", false, "hsl(240, 100%, 50%)") return value
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz": execCommand("forecolor", false, "hsl(240, 100%, 50%)") return value
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","hsl(240, 100%, 50%)"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz": execCommand("forecolor", false, "cornsilk") return value
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz": execCommand("forecolor", false, "cornsilk") return value
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","cornsilk"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["forecolor","potato quiche"]] "foo[bar]baz": execCommand("forecolor", false, "potato quiche") return value
PASS [["forecolor","potato quiche"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["forecolor","potato quiche"]] "foo[bar]baz" compare innerHTML
PASS [["forecolor","potato quiche"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["forecolor","potato quiche"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["forecolor","potato quiche"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["forecolor","potato quiche"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["forecolor","potato quiche"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["forecolor","potato quiche"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz": execCommand("forecolor", false, "transparent") return value
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz": execCommand("forecolor", false, "transparent") return value
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"color:rgba(0, 0, 0, 0)\">bar</span>baz" but got "foo<font color=\"rgba(0, 0, 0, 0)\">bar</font>baz"
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandState("forecolor") after
FAIL [["stylewithcss","false"],["forecolor","transparent"]] "foo[bar]baz" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(186, 0, 0)"
FAIL [["forecolor","currentColor"]] "foo[bar]baz": execCommand("forecolor", false, "currentColor") return value assert_equals: expected false but got true
PASS [["forecolor","currentColor"]] "foo[bar]baz" checks for modifications to non-editable content
FAIL [["forecolor","currentColor"]] "foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foobarbaz" but got "foo<font color=\"rgba(0, 0, 0, 0)\">bar</font>baz"
PASS [["forecolor","currentColor"]] "foo[bar]baz" queryCommandIndeterm("forecolor") before
PASS [["forecolor","currentColor"]] "foo[bar]baz" queryCommandState("forecolor") before
PASS [["forecolor","currentColor"]] "foo[bar]baz" queryCommandValue("forecolor") before
PASS [["forecolor","currentColor"]] "foo[bar]baz" queryCommandIndeterm("forecolor") after
PASS [["forecolor","currentColor"]] "foo[bar]baz" queryCommandState("forecolor") after
FAIL [["forecolor","currentColor"]] "foo[bar]baz" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 0)" but got "rgb(186, 0, 0)"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("forecolor") after
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("forecolor") after
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("forecolor") after
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=blue>[bar]</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=blue>bar</font>}baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foobarbaz</span>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span><span style=\"color:rgb(0, 0, 255)\">bar</span><span style=\"color:rgb(0, 0, 255)\">baz</span>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foobarbaz</span>" but got "<font color=\"#0000ff\">foobarbaz</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foobarbaz</span>" but got "<font color=\"#0000ff\">foobarbaz</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #00f\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foobarbaz</span>" but got "<font color=\"#0000ff\">foobarbaz</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foobarbaz</span>" but got "<font color=\"#0000ff\">foobarbaz</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">[bar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"blue\">foobarbaz</font>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span><font style=\"color:rgb(0, 0, 255)\">bar</font><span style=\"color:rgb(0, 0, 255)\">baz</span>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"blue\">foobarbaz</font>" but got "<font color=\"#0000ff\">foo</font><font style=\"\" color=\"#0000ff\">bar</font><font color=\"#0000ff\">baz</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=blue>foo<font color=brown>[bar]</font>baz</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo<span style=\"color:rgb(165, 42, 42)\">b</span>arbaz</span>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span><span style=\"color:rgb(165, 42, 42)\">b</span><span style=\"color:rgb(0, 0, 255)\">arbaz</span>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo<font color=\"#a52a2a\">b</font>arbaz</span>" but got "<font color=\"#0000ff\">foo</font><span style=\"color:rgb(165, 42, 42)\">b</span><font color=\"#0000ff\">arbaz</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span style=\"color: brown\">b[ar]</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<span id=purple>ba[r</span>ba]z" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo<span id=\"purple\">b<span style=\"color:rgb(0, 0, 255)\">a</span>r</span>baz</span>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span><span id=\"purple\" style=\"\"><span style=\"color:rgb(0, 0, 255)\">bar</span></span><span style=\"color:rgb(0, 0, 255)\">baz</span>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo<span id=\"purple\">b<font color=\"#0000ff\">a</font>r</span>baz</span>" but got "<font color=\"#0000ff\">foo</font><span id=\"purple\" style=\"\"><font color=\"#0000ff\">bar</font></span><font color=\"#0000ff\">baz</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">foo<span id=purple>b[a]r</span>baz</span>" queryCommandValue("forecolor") after
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>": execCommand("forecolor", false, "blue") return value
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" checks for modifications to non-editable content
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" compare innerHTML
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandIndeterm("forecolor") before
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandState("forecolor") before
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandValue("forecolor") before
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandIndeterm("forecolor") after
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandState("forecolor") after
PASS [["forecolor","blue"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandValue("forecolor") after
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>": execCommand("forecolor", false, "#0000ff") return value
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" checks for modifications to non-editable content
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" compare innerHTML
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandState("forecolor") before
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandValue("forecolor") before
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandState("forecolor") after
PASS [["forecolor","#0000ff"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandValue("forecolor") after
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>": execCommand("forecolor", false, "rgb(0,0,255)") return value
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" checks for modifications to non-editable content
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" compare innerHTML
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandIndeterm("forecolor") before
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandState("forecolor") before
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandValue("forecolor") before
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandIndeterm("forecolor") after
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandState("forecolor") after
PASS [["forecolor","rgb(0,0,255)"]] "<a href=http://www.google.com>foo[bar]baz</a>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"blue\">[foo]</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo</span>" but got "<font color=\"0000ff\">foo</font>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"#0000ff\">foo</font>" but got "<font color=\"0000ff\">foo</font>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"0000ff\">[foo]</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo</span>" but got "<font color=\"#0000ff\">foo</font>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=\"#0000ff\">[foo]</font>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: blue\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: #0000ff\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0, 0, 255)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(0%, 0%, 100%)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb( 0 ,0 ,255)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.0)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgb(15, -10, 375)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 0, 1)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(255, 255, 255, 1)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: rgba(0, 0, 255, 0.5)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: hsl(240, 100%, 50%)\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: cornsilk\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: transparent\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=\"color: currentColor\">[foo]</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\"color:rgb(0, 0, 255)\">o</span><font color=\"brown\"><span style=\"color:rgb(0, 0, 255)\">b</span>ar</font>baz" but got "fo<span style=\"color:rgb(0, 0, 255)\">ob</span><font color=\"brown\">ar</font>baz"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<font color=\"#0000ff\">o</font><font color=\"brown\"><font color=\"#0000ff\">b</font>ar</font>baz" but got "fo<font color=\"#0000ff\">ob</font><font color=\"brown\">ar</font>baz"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"brown\">ba<span style=\"color:rgb(0, 0, 255)\">r</span></font><span style=\"color:rgb(0, 0, 255)\">b</span>az" but got "foo<font color=\"brown\">ba</font><span style=\"color:rgb(0, 0, 255)\">rb</span>az"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"brown\">ba<font color=\"#0000ff\">r</font></font><font color=\"#0000ff\">b</font>az" but got "foo<font color=\"brown\">ba</font><font color=\"#0000ff\">rb</font>az"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>b]az" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "fo[o<font color=brown>bar</font>b]az" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"brown\"><span style=\"color:rgb(0, 0, 255)\">b</span>ar</font>baz" but got "foo<span style=\"color:rgb(0, 0, 255)\">b</span><font color=\"brown\">ar</font>baz"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"brown\"><font color=\"#0000ff\">b</font>ar</font>baz" but got "foo<font color=\"#0000ff\">b</font><font color=\"brown\">ar</font>baz"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>b]ar</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"brown\">ba<span style=\"color:rgb(0, 0, 255)\">r</span></font>baz" but got "foo<font color=\"brown\">ba</font><span style=\"color:rgb(0, 0, 255)\">r</span>baz"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"brown\">ba<font color=\"#0000ff\">r</font></font>baz" but got "foo<font color=\"brown\">ba</font><font color=\"#0000ff\">r</font>baz"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>ba[r</font>]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo[<font color=brown>bar</font>]baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo<font color=brown>[bar]</font>baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" compare innerHTML
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" compare innerHTML
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "foo{<font color=brown>bar</font>}baz" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"brown\">fo<span style=\"color:rgb(0, 0, 255)\">o</span></font><span style=\"color:rgb(165, 42, 42)\"><span style=\"color:rgb(0, 0, 255)\">b</span>ar</span>" but got "<font color=\"brown\">fo</font><span style=\"color:rgb(0, 0, 255)\">ob</span><span style=\"color:rgb(165, 42, 42)\">ar</span>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"brown\">fo<font color=\"#0000ff\">o</font></font><span style=\"color:rgb(165, 42, 42)\"><font color=\"#0000ff\">b</font>ar</span>" but got "<font color=\"brown\">fo</font><font color=\"#0000ff\">ob</font><span style=\"color:rgb(165, 42, 42)\">ar</span>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<font color=brown>fo[o</font><span style=color:brown>b]ar</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(165, 42, 42)\">fo<span style=\"color:rgb(0, 0, 255)\">o</span></span><span style=\"color:rgb(0, 0, 255)\">bar</span>" but got "<span style=\"color:rgb(165, 42, 42)\">fo</span><span style=\"color:rgb(0, 0, 255)\">ob</span><span style=\"color:rgb(0, 0, 255)\">ar</span>"
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","true"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>": execCommand("forecolor", false, "#0000FF") return value
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(165, 42, 42)\">fo<font color=\"#0000ff\">o</font></span><span style=\"color:rgb(0, 0, 255)\">bar</span>" but got "<span style=\"color:rgb(165, 42, 42)\">fo</span><font color=\"#0000ff\">ob</font><span style=\"color:rgb(0, 0, 255)\">ar</span>"
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("forecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("forecolor") before
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandIndeterm("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandState("forecolor") after
PASS [["stylewithcss","false"],["forecolor","#0000FF"]] "<span style=color:brown>fo[o</span><span style=color:#0000ff>b]ar</span>" queryCommandValue("forecolor") after
Harness: the test ran to completion.

