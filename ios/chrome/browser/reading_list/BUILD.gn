# Copyright 2016 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("reading_list") {
  configs += [ "//build/config/compiler:enable_arc" ]
  sources = [
    "favicon_web_state_dispatcher_impl.h",
    "favicon_web_state_dispatcher_impl.mm",
    "offline_page_tab_helper.h",
    "offline_page_tab_helper.mm",
    "offline_url_utils.h",
    "offline_url_utils.mm",
    "reading_list_browser_agent.h",
    "reading_list_browser_agent.mm",
    "reading_list_constants.h",
    "reading_list_constants.mm",
    "reading_list_distiller_page.h",
    "reading_list_distiller_page.mm",
    "reading_list_distiller_page_factory.h",
    "reading_list_distiller_page_factory.mm",
    "reading_list_download_service.h",
    "reading_list_download_service.mm",
    "reading_list_download_service_factory.h",
    "reading_list_download_service_factory.mm",
    "reading_list_model_factory.h",
    "reading_list_model_factory.mm",
    "reading_list_web_state_observer.h",
    "reading_list_web_state_observer.mm",
    "url_downloader.h",
    "url_downloader.mm",
  ]
  deps = [
    ":reading_list_remover",
    "//base",
    "//components/browser_sync",
    "//components/dom_distiller/ios",
    "//components/favicon/core",
    "//components/favicon/ios",
    "//components/google/core/common",
    "//components/keyed_service/core",
    "//components/keyed_service/ios",
    "//components/pref_registry",
    "//components/prefs",
    "//components/reading_list/core",
    "//components/reading_list/features:flags",
    "//components/reading_list/ios",
    "//components/sync",
    "//components/ukm/ios:ukm_url_recorder",
    "//ios/chrome/app/strings:ios_strings_grit",
    "//ios/chrome/browser/application_context",
    "//ios/chrome/browser/browser_state",
    "//ios/chrome/browser/favicon",
    "//ios/chrome/browser/flags:system_flags",
    "//ios/chrome/browser/history",
    "//ios/chrome/browser/main:public",
    "//ios/chrome/browser/paths",
    "//ios/chrome/browser/shared/public/commands",
    "//ios/chrome/browser/shared/public/features",
    "//ios/chrome/browser/shared/ui/util",
    "//ios/chrome/browser/shared/ui/util:url_with_title",
    "//ios/chrome/browser/signin",
    "//ios/chrome/browser/sync:model_type_store_service_factory",
    "//ios/chrome/browser/url:constants",
    "//ios/chrome/browser/web_state_list",
    "//ios/chrome/common",
    "//ios/components/webui:url_constants",
    "//ios/third_party/material_components_ios",
    "//ios/web/common",
    "//ios/web/public",
    "//ios/web/public/js_messaging:js_messaging",
    "//ios/web/public/security",
    "//net",
    "//services/metrics/public/cpp:ukm_builders",
    "//services/network/public/cpp",
    "//services/network/public/mojom",
    "//ui/base",
    "//url",
  ]
  public_deps = [ "//ios/chrome/browser/dom_distiller" ]
  allow_circular_includes_from = [ ":reading_list_remover" ]
}

source_set("reading_list_remover") {
  configs += [ "//build/config/compiler:enable_arc" ]
  sources = [
    "reading_list_remover_helper.h",
    "reading_list_remover_helper.mm",
  ]
  deps = [
    "//base",
    "//components/reading_list/core",
    "//ios/chrome/browser/browser_state",
  ]
  public_deps = [
    # This is required because this target includes
    # reading_list_download_service.h from :reading_list that includes
    # a protobuf header from dom_distiller.
    # the inclusion of reading_list_download_service.h is allowed using
    # allow_circular_includes_from.
    "//ios/chrome/browser/dom_distiller",
  ]
}

source_set("test_support") {
  testonly = true
  sources = [
    "reading_list_test_utils.cc",
    "reading_list_test_utils.h",
  ]
  deps = [
    "//base",
    "//components/reading_list/core:test_support",
    "//components/sync/base",
  ]
  public_deps = [
    "//components/keyed_service/core",
    "//components/reading_list/core",
    "//ios/web/public",
  ]
}

source_set("unit_tests") {
  configs += [ "//build/config/compiler:enable_arc" ]
  testonly = true
  sources = [
    "favicon_web_state_dispatcher_impl_unittest.mm",
    "offline_page_tab_helper_unittest.mm",
    "offline_url_utils_unittest.mm",
    "reading_list_web_state_observer_unittest.mm",
    "url_downloader_unittest.mm",
  ]
  deps = [
    ":distilled_bundle_data",
    ":reading_list",
    ":test_support",
    "//base",
    "//base/test:test_support",
    "//components/favicon/ios",
    "//components/reading_list/core",
    "//components/reading_list/core:test_support",
    "//components/sync/base",
    "//ios/chrome/browser/browser_state:test_support",
    "//ios/chrome/browser/dom_distiller",
    "//ios/chrome/browser/paths",
    "//ios/web",
    "//ios/web/public",
    "//ios/web/public/test",
    "//ios/web/public/test/fakes",
    "//net",
    "//services/network:test_support",
    "//testing/gtest",
    "//url",
  ]
}

bundle_data("distilled_bundle_data") {
  testonly = true

  sources = [ "data/distilled.html" ]
  outputs = [
    "{{bundle_resources_dir}}/ios/testing/data/Offline/{{source_file_part}}",
  ]
}
