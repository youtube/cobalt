# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a .pyl, or "Python Literal", file. You can treat it just like a
# .json file, with the following exceptions:
# * all keys must be quoted (use single quotes, please);
# * comments are allowed, using '#' syntax; and
# * trailing commas are allowed.

# This is a trimmed version of tools/mb/mb_config.pyl with a dummy master and
# builder to be used with mb.py for creating a zip archive of the WebLayer
# instrumentation tests.
{
  'builder_groups': {
    'dummy.group': {
      'dummy.builder.google_webview_pkg_name': 'android_weblayer_with_google_webview_pkg_name',
      'dummy.builder.aosp_webview_pkg_name': 'android_weblayer_with_aosp_webview_pkg_name',
    }
  },

  'configs': {
    'android_weblayer_with_aosp_webview_pkg_name': [
      'android_release_bot_minimal_symbols_x86'
    ],

    'android_weblayer_with_google_webview_pkg_name': [
      'android_release_bot_minimal_symbols_x86_webview_google'
    ],
  },

  # This is a dict mapping a given 'mixin' name to a dict of settings that
  # mb should use. See //tools/mb/docs/user_guide.md for more information.
  'mixins': {
    # We build Android with codecs on most bots to ensure maximum test
    # coverage, but use 'android_without_codecs' on bots responsible for
    # building publicly advertised non-Official Android builds --
    # which are not allowed to have proprietary codecs enabled.
    'android': {
      'mixins': ['android_without_codecs', 'chrome_with_codecs'],
    },

    # Default webview package name is com.android.webview which
    # is necessary for skew tests to work on Android M and Anroid 10
    # x86 builders.
    'android_release_bot_minimal_symbols_x86': {
      'mixins': ['android', 'release_bot', 'minimal_symbols', 'x86',
                 'strip_debug_info', 'improved_debugging'],
    },

    'android_release_bot_minimal_symbols_x86_webview_google': {
      'mixins': ['android_release_bot_minimal_symbols_x86', 'webview_google'],
    },

    'android_without_codecs': {
      'gn_args': 'target_os="android"',
    },

    'chrome_with_codecs': {
      'mixins': ['ffmpeg_branding_chrome', 'proprietary_codecs'],
    },

    'ffmpeg_branding_chrome': {
      'gn_args': 'ffmpeg_branding="Chrome"',
    },

    'goma': {
      'gn_args': 'use_goma=true',
    },

    'minimal_symbols': {
      'gn_args': 'symbol_level=1',
    },

    # Note: This is probably not what you want to use. Instead use one of the
    # chrome_with_codecs or chromeos_with_codecs mixins.
    'proprietary_codecs': {
      'gn_args': 'proprietary_codecs=true',
    },

    'release': {
      'gn_args': 'is_debug=false',
    },

    'release_bot': {
      'mixins': ['release', 'static', 'goma'],
    },

    'static': {
      'gn_args': 'is_component_build=false',
    },

    'strip_debug_info': {
      'gn_args': 'strip_debug_info=true',
    },

    'webview_google': {
      'gn_args': 'system_webview_package_name="com.google.android.webview"',
    },

    'x86': {
      'gn_args': 'target_cpu="x86"',
    },

    'improved_debugging': {
      'gn_args': 'is_java_debug=true dcheck_always_on=true',
    },
  },
}
