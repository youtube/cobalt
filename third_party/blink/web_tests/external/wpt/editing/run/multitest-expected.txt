This is a testharness.js-based test.
Found 9214 tests; 7861 PASS, 1353 FAIL, 0 TIMEOUT, 0 NOTRUN.
PASS [["bold",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<b>a</b>bar" but got "foo<span style=\"font-weight:bold\">a</span>bar"
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after
FAIL [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["delete",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["bold",""],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["delete",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["delete",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["delete",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["delete",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["bold",""],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<b>a</b>bar" but got "foabar"
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["bold",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<b>a</b>bar</div>" but got "<div>fooabar</div>"
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["forwarddelete",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["bold",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<b>a</b>ar" but got "fooaar"
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["indent",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["bold",""],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["indent",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["indent",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["indent",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["bold",""],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<b>a</b>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["bold",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><b>a</b>bar" but got "foo<hr>abar"
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<b>a</b>bar" but got "fooab<b>c</b>dabar"
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["bold",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><b>a</b>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"font-weight:bold\"><br></span>bar"
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("bold") after
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("bold") after
FAIL [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["bold",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><b>a</b>bar" but got "foo<span style=\"font-weight:bold\"><br>a</span>bar"
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after
FAIL [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["bold",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<b>a</b>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["insertparagraph",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("bold") after
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandState("bold") after
FAIL [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["bold",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><b>a</b>bar</p>" but got "foo<div><span style=\"font-weight:bold\">a</span>bar</div>"
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after
FAIL [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["bold",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<b>a</b>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["justifycenter",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["bold",""],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["bold",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<b>a</b>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["justifyfull",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["bold",""],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["bold",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<b>a</b>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["justifyleft",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["bold",""],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["bold",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<b>a</b>bar" but got "fooabar"
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["justifyright",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["bold",""],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifyright",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifyright",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifyright",""]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifyright",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["bold",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["bold",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["bold",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["bold",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["bold",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<b>a</b>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
FAIL [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after assert_equals: Wrong result returned expected true but got false
FAIL [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["bold",""],["outdent",""]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["bold",""],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["bold",""],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["outdent",""]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("bold") after
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandState("bold") after
FAIL [["bold",""],["outdent",""]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["bold",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("bold", false, "") return value
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<b>a</b>bar" but got "foo<span style=\"font-weight:bold\">a</span>bar"
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") before
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") before
FAIL [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("bold") after
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("bold") after
FAIL [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("bold") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["bold",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<i>a</i>bar" but got "foo<span style=\"font-style:italic\">a</span>bar"
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after
FAIL [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["delete",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["italic",""],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["delete",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["delete",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["delete",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["delete",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["italic",""],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<i>a</i>bar" but got "foabar"
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["italic",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<i>a</i>bar</div>" but got "<div>fooabar</div>"
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["forwarddelete",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["italic",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<i>a</i>ar" but got "fooaar"
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["indent",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["italic",""],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["indent",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["indent",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["indent",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["italic",""],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<i>a</i>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["italic",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><i>a</i>bar" but got "foo<hr>abar"
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<i>a</i>bar" but got "fooab<b>c</b>dabar"
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["italic",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><i>a</i>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"font-style:italic\"><br></span>bar"
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("italic") after
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("italic") after
FAIL [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["italic",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><i>a</i>bar" but got "foo<span style=\"font-style:italic\"><br>a</span>bar"
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after
FAIL [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["italic",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<i>a</i>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["insertparagraph",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("italic") after
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandState("italic") after
FAIL [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["italic",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><i>a</i>bar</p>" but got "foo<div><span style=\"font-style:italic\">a</span>bar</div>"
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after
FAIL [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["italic",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<i>a</i>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["justifycenter",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["italic",""],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["italic",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<i>a</i>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["justifyfull",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["italic",""],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["italic",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<i>a</i>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["justifyleft",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["italic",""],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["italic",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<i>a</i>bar" but got "fooabar"
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["justifyright",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["italic",""],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifyright",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifyright",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifyright",""]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifyright",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["italic",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["italic",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["italic",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["italic",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["italic",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<i>a</i>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
FAIL [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after assert_equals: Wrong result returned expected true but got false
FAIL [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["italic",""],["outdent",""]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["italic",""],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["italic",""],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["outdent",""]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("italic") after
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandState("italic") after
FAIL [["italic",""],["outdent",""]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["italic",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("italic", false, "") return value
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<i>a</i>bar" but got "foo<span style=\"font-style:italic\">a</span>bar"
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") before
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") before
FAIL [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("italic") after
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("italic") after
FAIL [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("italic") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["italic",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<s>a</s>bar" but got "foo<span style=\"text-decoration-line:line-through\">a</span>bar"
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after
FAIL [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["delete",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["strikethrough",""],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["delete",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["strikethrough",""],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<s>a</s>bar" but got "foabar"
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["strikethrough",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<s>a</s>bar</div>" but got "<div>fooabar</div>"
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["strikethrough",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<s>a</s>ar" but got "fooaar"
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["indent",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["strikethrough",""],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["strikethrough",""],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<s>a</s>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["strikethrough",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><s>a</s>bar" but got "foo<hr>abar"
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<s>a</s>bar" but got "fooab<b>c</b>dabar"
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><s>a</s>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"text-decoration-line:line-through\"><br></span>bar"
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("strikethrough") after
FAIL [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["strikethrough",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><s>a</s>bar" but got "foo<span style=\"text-decoration-line:line-through\"><br>a</span>bar"
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after
FAIL [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["strikethrough",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<s>a</s>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandState("strikethrough") after
FAIL [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["strikethrough",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><s>a</s>bar</p>" but got "foo<div><span style=\"text-decoration-line:line-through\">a</span>bar</div>"
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after
FAIL [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["strikethrough",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<s>a</s>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["strikethrough",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<s>a</s>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["strikethrough",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<s>a</s>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["strikethrough",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<s>a</s>bar" but got "fooabar"
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["strikethrough",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<s>a</s>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
FAIL [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after assert_equals: Wrong result returned expected true but got false
FAIL [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["strikethrough",""],["outdent",""]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("strikethrough") after
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandState("strikethrough") after
FAIL [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["strikethrough",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("strikethrough", false, "") return value
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<s>a</s>bar" but got "foo<span style=\"text-decoration-line:line-through\">a</span>bar"
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") before
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") before
FAIL [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("strikethrough") after
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("strikethrough") after
FAIL [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("strikethrough") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["strikethrough",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "foo<span style=\"vertical-align:sub\">a</span>bar"
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["delete",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["subscript",""],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["delete",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["delete",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["delete",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["delete",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["subscript",""],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<sub><font size=\"3\">a</font></sub>bar" but got "foabar"
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["subscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<sub>a</sub>bar</div>" but got "<div>fooabar</div>"
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["subscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub><font size=\"3\">a</font></sub>ar" but got "fooaar"
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["indent",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["subscript",""],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["indent",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["indent",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["indent",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["subscript",""],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<sub>a</sub>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["subscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><sub>a</sub>bar" but got "foo<hr>abar"
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<sub>a</sub>bar" but got "fooab<b>c</b>dabar"
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["subscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><sub>a</sub>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"vertical-align:sub\"><br></span>bar"
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["subscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><sub>a</sub>bar" but got "foo<span style=\"vertical-align:sub\"><br>a</span>bar"
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["subscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<sub>a</sub>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["subscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><sub>a</sub>bar</p>" but got "foo<div><span style=\"vertical-align:sub\">a</span>bar</div>"
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["subscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<sub>a</sub>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["justifycenter",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["subscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<sub>a</sub>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["justifyfull",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["subscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<sub>a</sub>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["justifyleft",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["subscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "fooabar"
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["justifyright",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["subscript",""],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["subscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<sub>a</sub>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
FAIL [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["outdent",""]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["subscript",""],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["subscript",""],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["outdent",""]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["outdent",""]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["subscript",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "foo<span style=\"vertical-align:sub\">a</span>bar"
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>bar" but got "foo<span style=\"vertical-align:super\">a</span>bar"
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["delete",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["superscript",""],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["delete",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["delete",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["delete",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["delete",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["superscript",""],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<sup><font size=\"3\">a</font></sup>bar" but got "foabar"
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["superscript",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<sup>a</sup>bar</div>" but got "<div>fooabar</div>"
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["superscript",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup><font size=\"3\">a</font></sup>ar" but got "fooaar"
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["indent",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["superscript",""],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["indent",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["indent",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["indent",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["superscript",""],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<sup>a</sup>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["superscript",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><sup>a</sup>bar" but got "foo<hr>abar"
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<sup>a</sup>bar" but got "fooab<b>c</b>dabar"
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["superscript",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><sup>a</sup>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"vertical-align:super\"><br></span>bar"
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["superscript",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><sup>a</sup>bar" but got "foo<span style=\"vertical-align:super\"><br>a</span>bar"
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["superscript",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<sup>a</sup>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["superscript",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><sup>a</sup>bar</p>" but got "foo<div><span style=\"vertical-align:super\">a</span>bar</div>"
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["superscript",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<sup>a</sup>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["justifycenter",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["superscript",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<sup>a</sup>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["justifyfull",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["superscript",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<sup>a</sup>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["justifyleft",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["superscript",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>bar" but got "fooabar"
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["justifyright",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["superscript",""],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["superscript",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<sup>a</sup>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
FAIL [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after assert_equals: Wrong result returned expected true but got false
FAIL [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["outdent",""]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["superscript",""],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["superscript",""],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["outdent",""]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["outdent",""]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["superscript",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>bar" but got "foo<span style=\"vertical-align:super\">a</span>bar"
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<u>a</u>bar" but got "foo<span style=\"text-decoration-line:underline\">a</span>bar"
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["delete",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["underline",""],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["delete",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["delete",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["delete",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["delete",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["underline",""],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<u>a</u>bar" but got "foabar"
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["underline",""],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<u>a</u>bar</div>" but got "<div>fooabar</div>"
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["forwarddelete",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["underline",""],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<u>a</u>ar" but got "fooaar"
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["indent",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["underline",""],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["indent",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["indent",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["indent",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["underline",""],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<u>a</u>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["underline",""],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><u>a</u>bar" but got "foo<hr>abar"
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<u>a</u>bar" but got "fooab<b>c</b>dabar"
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["underline",""],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><u>a</u>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"text-decoration-line:underline\"><br></span>bar"
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["underline",""],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><u>a</u>bar" but got "foo<span style=\"text-decoration-line:underline\"><br>a</span>bar"
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["underline",""],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<u>a</u>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["insertparagraph",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["underline",""],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><u>a</u>bar</p>" but got "foo<div><span style=\"text-decoration-line:underline\">a</span>bar</div>"
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["underline",""],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<u>a</u>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["justifycenter",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["underline",""],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["underline",""],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<u>a</u>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["justifyfull",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["underline",""],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["underline",""],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<u>a</u>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["justifyleft",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["underline",""],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["underline",""],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<u>a</u>bar" but got "fooabar"
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["justifyright",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["underline",""],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifyright",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifyright",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifyright",""]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifyright",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["underline",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["underline",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["underline",""],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["underline",""],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["underline",""],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<u>a</u>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
FAIL [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after assert_equals: Wrong result returned expected true but got false
FAIL [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["outdent",""]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["underline",""],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["outdent",""]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["outdent",""]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["underline",""],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<u>a</u>bar" but got "foo<span style=\"text-decoration-line:underline\">a</span>bar"
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["backcolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foabar"
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div>fooabar</div>"
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>ar" but got "fooaar"
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["backcolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<hr>abar"
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "fooab<b>c</b>dabar"
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"background-color:rgb(0, 255, 255)\"><br></span>bar"
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<span style=\"background-color:rgb(0, 255, 255)\"><br>a</span>bar"
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</p>" but got "foo<div><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>"
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["backcolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["backcolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["backcolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "fooabar"
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["backcolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
FAIL [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgba(0, 0, 0, 0)"
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["backcolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "#00FFFF") return value
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fobar" but got "foobar"
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["createlink","http://www.google.com/"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<a href=\"http://www.google.com/\"><font color=\"#000000\">a</font></a>bar" but got "fooabar"
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foobar</div>" but got "<div>foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar</div>"
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooar" but got "foobar"
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#000000\">a</font></a>ar" but got "fooabar"
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar</blockquote>"
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["createlink","http://www.google.com/"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<a href=\"http://www.google.com/\">a</a>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foo<a href=\"http://www.google.com/\">a</a>bar</blockquote>"
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><a href=\"http://www.google.com/\">a</a>bar" but got "foo<hr>abar"
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<a href=\"http://www.google.com/\">a</a>bar" but got "fooab<b>c</b>dabar"
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><a href=\"http://www.google.com/\">a</a>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><a href=\"http://www.google.com/\">a</a>bar" but got "foo<br>abar"
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar<br></li></ol>"
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["createlink","http://www.google.com/"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<a href=\"http://www.google.com/\">a</a>bar</li></ol>" but got "<ol><li>foo<a href=\"http://www.google.com/\">a</a>bar<br></li></ol>"
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><a href=\"http://www.google.com/\">a</a>bar</p>" but got "foo<div>abar</div>"
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar<br></li></ul>"
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["createlink","http://www.google.com/"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<a href=\"http://www.google.com/\">a</a>bar</li></ul>" but got "<ul><li>foo<a href=\"http://www.google.com/\">a</a>bar<br></li></ul>"
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foobar</div>" but got "<div style=\"text-align:center\">foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar</div>"
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["createlink","http://www.google.com/"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foobar</div>" but got "<div style=\"text-align:justify\">foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar</div>"
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["createlink","http://www.google.com/"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foobar" but got "foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar"
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["createlink","http://www.google.com/"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foobar</div>" but got "<div style=\"text-align:right\">foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar</div>"
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["createlink","http://www.google.com/"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foobar" but got "foo<a href=\"http://www.google.com/\">http://www.google.com/</a>bar"
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["createlink","http://www.google.com/"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font face=\"sans-serif\">a</font>bar" but got "foo<span style=\"font-family:sans-serif\">a</span>bar"
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["fontname","sans-serif"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<font face=\"sans-serif\">a</font>bar" but got "foabar"
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["fontname","sans-serif"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<font face=\"sans-serif\">a</font>bar</div>" but got "<div>fooabar</div>"
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["fontname","sans-serif"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font face=\"sans-serif\">a</font>ar" but got "fooaar"
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["fontname","sans-serif"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<font face=\"sans-serif\">a</font>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><font face=\"sans-serif\">a</font>bar" but got "foo<hr>abar"
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<font face=\"sans-serif\">a</font>bar" but got "fooab<b>c</b>dabar"
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><font face=\"sans-serif\">a</font>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"font-family:sans-serif\"><br></span>bar"
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandState("fontname") after
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("fontname") after
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["fontname","sans-serif"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><font face=\"sans-serif\">a</font>bar" but got "foo<span style=\"font-family:sans-serif\"><br>a</span>bar"
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["fontname","sans-serif"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<font face=\"sans-serif\">a</font>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandState("fontname") after
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandValue("fontname") after
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["fontname","sans-serif"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><font face=\"sans-serif\">a</font>bar</p>" but got "foo<div><span style=\"font-family:sans-serif\">a</span>bar</div>"
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["fontname","sans-serif"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<font face=\"sans-serif\">a</font>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["fontname","sans-serif"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<font face=\"sans-serif\">a</font>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["fontname","sans-serif"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<font face=\"sans-serif\">a</font>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["fontname","sans-serif"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font face=\"sans-serif\">a</font>bar" but got "fooabar"
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["fontname","sans-serif"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<font face=\"sans-serif\">a</font>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
FAIL [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandState("fontname") after
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandValue("fontname") after
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["fontname","sans-serif"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("fontname", false, "sans-serif") return value
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font face=\"sans-serif\">a</font>bar" but got "foo<span style=\"font-family:sans-serif\">a</span>bar"
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontname") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontname") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontname") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontname","sans-serif"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>bar" but got "foo<span style=\"font-size:large\">a</span>bar"
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["delete",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["fontsize","4"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["delete",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["fontsize","4"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<font size=\"4\">a</font>bar" but got "foabar"
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["fontsize","4"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<font size=\"4\">a</font>bar</div>" but got "<div>fooabar</div>"
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["fontsize","4"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>ar" but got "fooaar"
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["indent",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["fontsize","4"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["fontsize","4"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<font size=\"4\">a</font>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["fontsize","4"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><font size=\"4\">a</font>bar" but got "foo<hr>abar"
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<font size=\"4\">a</font>bar" but got "fooab<b>c</b>dabar"
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><font size=\"4\">a</font>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"font-size:large\"><br></span>bar"
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><font size=\"4\">a</font>bar" but got "foo<span style=\"font-size:large\"><br>a</span>bar"
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<font size=\"4\">a</font>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><font size=\"4\">a</font>bar</p>" but got "foo<div><span style=\"font-size:large\">a</span>bar</div>"
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<font size=\"4\">a</font>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<font size=\"4\">a</font>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<font size=\"4\">a</font>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>bar" but got "fooabar"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<font size=\"4\">a</font>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>bar" but got "foo<span style=\"font-size:large\">a</span>bar"
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>bar"
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<font color=\"#0000ff\">a</font>bar" but got "foabar"
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div>fooabar</div>"
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>ar" but got "fooaar"
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<font color=\"#0000ff\">a</font>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><font color=\"#0000ff\">a</font>bar" but got "foo<hr>abar"
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<font color=\"#0000ff\">a</font>bar" but got "fooab<b>c</b>dabar"
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><font color=\"#0000ff\">a</font>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\"><br></span>bar"
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><font color=\"#0000ff\">a</font>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\"><br>a</span>bar"
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<font color=\"#0000ff\">a</font>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><font color=\"#0000ff\">a</font>bar</p>" but got "foo<div><span style=\"color:rgb(0, 0, 255)\">a</span>bar</div>"
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<font color=\"#0000ff\">a</font>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>bar" but got "fooabar"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>bar"
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foabar"
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div>fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>ar" but got "fooaar"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<hr>abar"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "fooab<b>c</b>dabar"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"background-color:rgb(0, 255, 255)\"><br></span>bar"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<span style=\"background-color:rgb(0, 255, 255)\"><br>a</span>bar"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</p>" but got "foo<div><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "fooabar"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "foo<span style=\"vertical-align:sub\">a</span>bar"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>bar" but got "foo<span style=\"vertical-align:super\">a</span>bar"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "blue") return value
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "blue") return value
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "brown") return value
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#a52a2a\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\" style=\"color:rgb(165, 42, 42)\">a</a>bar"
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "brown") return value
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#a52a2a\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\">a</a>bar"
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(165, 42, 42)" but got "rgb(0, 0, 255)"
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "black") return value
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#000000\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\" style=\"color:rgb(0, 0, 0)\">a</a>bar"
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "black") return value
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#000000\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\">a</a>bar"
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 0)" but got "rgb(0, 0, 255)"
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") first application return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") second application return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") first application return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") second application return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "2") return value
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "foo<span style=\"vertical-align:sub; font-size:small\">a</span>bar"
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["fontsize","2"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "2") return value
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "foo<span style=\"font-size:small; vertical-align:sub\">a</span>bar"
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","2"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "3") return value
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub><font size=\"3\">a</font></sub>bar" but got "foo<span style=\"vertical-align:sub\">a</span>bar"
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["fontsize","3"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "3") return value
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub><font size=\"3\">a</font></sub>bar" but got "foo<span style=\"vertical-align:sub\">a</span>bar"
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","3"],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "aqua") return value
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "tan") return value
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","aqua"],["backcolor","tan"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar": execCommand("backcolor", false, "tan") return value
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "aqua") return value
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") before
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") before
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") before
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("backcolor") after
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandState("backcolor") after
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandValue("backcolor") after
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["backcolor","tan"],["hilitecolor","aqua"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<b>a</b>baz" but got "foo<span style=\"font-weight:700\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar]</b>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<i>a</i>baz" but got "foo<span style=\"font-style:italic\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar]</i>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<s>a</s>baz" but got "foo<span style=\"text-decoration-line:line-through\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar]</s>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>baz" but got "foo<span style=\"font-size:13.3333px\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar]</sub>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>baz" but got "foo<span style=\"font-size:13.3333px\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar]</sup>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<u>a</u>baz" but got "foo<span style=\"text-decoration-line:underline\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar]</u>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>baz" but got "fooabaz"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar]</a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font face=\"sans-serif\">a</font>baz" but got "foo<span style=\"font-family:sans-serif\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar]</font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>baz" but got "foo<span style=\"font-size:large\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar]</font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>baz" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar]</font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar]</span>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>baz" but got "fooabaz"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar]</font></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>baz" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\"><font color=\"#a52a2a\">a</font></a>baz" but got "foo<span style=\"color:rgb(165, 42, 42)\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar]</font></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>baz" but got "fooabaz"
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar]</a></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\"><font color=\"#000000\">a</font></a>baz" but got "fooabaz"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar]</font></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>baz" but got "fooabaz"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar]</u></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>baz" but got "foo<span style=\"text-decoration-line:underline\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar]</a></u>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>baz" but got "foo<span style=\"font-size:small\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar]</font></sub>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub><font size=\"1\">a</font></sub>baz" but got "foo<span style=\"font-size:10.8333px\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar]</sub></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub><font size=\"3\">a</font></sub>baz" but got "fooabaz"
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar]</font></sub>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>baz" but got "foo<span style=\"font-size:13.3333px\">a</span>baz"
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar]</sub></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<b>bar]</b>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<i>bar]</i>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<s>bar]</s>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub>bar]</sub>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sup>bar]</sup>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<u>bar]</u>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com>bar]</a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font face=sans-serif>bar]</font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=4>bar]</font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=#0000FF>bar]</font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<span style=background-color:#00FFFF>bar]</span>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=blue>bar]</font></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=blue><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=brown>bar]</font></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font color=brown><a href=http://www.google.com>bar]</a></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><font color=black>bar]</font></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<a href=http://www.google.com><u>bar]</u></a>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<u><a href=http://www.google.com>bar]</a></u>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=2>bar]</font></sub>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=2><sub>bar]</sub></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<sub><font size=3>bar]</font></sub>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "[foo<font size=3><sub>bar]</sub></font>baz" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<b>a</b>" but got "foo<span style=\"font-weight:700\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<b>[bar</b>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<i>a</i>" but got "foo<span style=\"font-style:italic\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<i>[bar</i>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<s>a</s>" but got "foo<span style=\"text-decoration-line:line-through\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<s>[bar</s>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>" but got "foo<span style=\"font-size:13.3333px\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub>[bar</sub>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>" but got "foo<span style=\"font-size:13.3333px\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sup>[bar</sup>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<u>a</u>" but got "foo<span style=\"text-decoration-line:underline\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u>[bar</u>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>" but got "fooa"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com>[bar</a>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font face=\"sans-serif\">a</font>" but got "foo<span style=\"font-family:sans-serif\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font face=sans-serif>[bar</font>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>" but got "foo<span style=\"font-size:large\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=4>[bar</font>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=#0000FF>[bar</font>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" checks for modifications to non-editable content
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" compare innerHTML
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<span style=background-color:#00FFFF>[bar</span>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>" but got "fooa"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=blue>[bar</font></a>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=blue><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\"><font color=\"#a52a2a\">a</font></a>" but got "foo<span style=\"color:rgb(165, 42, 42)\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=brown>[bar</font></a>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>" but got "fooa"
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font color=brown><a href=http://www.google.com>[bar</a></font>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\"><font color=\"#000000\">a</font></a>" but got "fooa"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><font color=black>[bar</font></a>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>" but got "fooa"
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<a href=http://www.google.com><u>[bar</u></a>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com\">a</a>" but got "foo<span style=\"text-decoration-line:underline\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<u><a href=http://www.google.com>[bar</a></u>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>" but got "foo<span style=\"font-size:small\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=2>[bar</font></sub>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub><font size=\"1\">a</font></sub>" but got "foo<span style=\"font-size:10.8333px\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=2><sub>[bar</sub></font>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub><font size=\"3\">a</font></sub>" but got "fooa"
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<sub><font size=3>[bar</font></sub>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>" but got "foo<span style=\"font-size:13.3333px\">a</span>"
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "foo<font size=3><sub>[bar</sub></font>baz]" queryCommandValue("inserttext") after
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>": execCommand("delete", false, "") return value
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>": execCommand("inserttext", false, "a") return value
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" checks for modifications to non-editable content
FAIL [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote><font color=\"blue\">a</font></blockquote>" but got "<blockquote><span style=\"color:rgb(0, 0, 255)\">a</span></blockquote>"
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandIndeterm("delete") before
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandState("delete") before
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandValue("delete") before
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandIndeterm("delete") after
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandState("delete") after
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandValue("delete") after
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandIndeterm("inserttext") before
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandState("inserttext") before
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandValue("inserttext") before
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandIndeterm("inserttext") after
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandState("inserttext") after
PASS [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" queryCommandValue("inserttext") after
Harness: the test ran to completion.

