/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   animations/ripple-animation.html
 */

/// <reference path="../../polymer/types/polymer.d.ts" />
/// <reference path="../neon-shared-element-animation-behavior.d.ts" />

/**
 * `<ripple-animation>` scales and transform an element such that it appears to ripple from either
 * a shared element, or from a screen position, to full screen.
 *
 * If using as a shared element animation in `<neon-animated-pages>`, use this animation in an `exit`
 * animation in the source page and in an `entry` animation in the destination page. Also, define the
 * hero elements in the `sharedElements` property (not a configuration property, see
 * `Polymer.NeonSharedElementAnimatableBehavior`).
 *
 * If using a screen position, define the `gesture` property.
 *
 * Configuration:
 * ```
 * {
 *   name: 'ripple-animation`.
 *   id: <shared-element-id>, /* set this or gesture *\/
 *   gesture: {x: <page-x>, y: <page-y>}, /* set this or id *\/
 *   timing: <animation-timing>,
 *   toPage: <node>, /* define for the destination page *\/
 *   fromPage: <node>, /* define for the source page *\/
 * }
 * ```
 */
interface RippleAnimationElement extends Polymer.Element, Polymer.NeonSharedElementAnimationBehavior {
  complete(): void;
  configure(config: any): any;
}

interface HTMLElementTagNameMap {
  "ripple-animation": RippleAnimationElement;
}
