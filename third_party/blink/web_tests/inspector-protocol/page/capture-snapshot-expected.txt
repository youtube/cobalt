Tests capturing MHTML snapshots.

Capturing without specified format:
From: <Saved by Blink><Snapshot-Content-Location: >Subject: <Date: ><MIME-Version: >Content-Type: multipart/related;	type="text/html";<boundary="----MultipartBoundary--><------MultipartBoundary-->Content-Type: text/html<Content-ID: ><Content-Transfer-Encoding: ><Content-Location: ><html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset==3Dwindows-1252"><script src=3D"injected"></script></head><body><div id=3D"x" class=3D"container">      <p style=3D"color: red">Text</p>     =20    </div>    </body></html><------MultipartBoundary-->Content-Type: text/javascript<Content-Transfer-Encoding: ><Content-Location: >(()=3D>{function addCustomElement(def) {  if (def.is_autonomous) {      window.customElements.define(def.name, class extends HTMLElement{});  } else {    const templateElement =3D document.createElement(def.local_name);    const baseName =3D Object.getPrototypeOf(templateElement).constructor.n=ame;    const ElementBase =3D window[baseName];    window.customElements.define(def.name, class extends ElementBase {},      {extends: def.local_name});  }}function addCustomElements(metadata) {  for (const def of metadata.custom_elements) {    try {      addCustomElement(def);    } catch (e) {      console.log(e);    }  }}function main(metadata) {  addCustomElements(metadata);}main({"custom_elements":[]});})();<------MultipartBoundary-->

Capturing with format: foo
{
    error : {
        code : -32000
        message : Unsupported snapshot format
    }
    id : <number>
    sessionId : <string>
}

