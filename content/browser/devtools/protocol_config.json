{
    "use_snake_file_names": true,
    "use_title_case_methods": true,

    "protocol": {
        "package": "content/browser/devtools/protocol",
        "output": "protocol",
        "namespace": ["content", "protocol"],
        "export_macro": "CONTENT_EXPORT",
        "export_header": "content/common/content_export.h",
        "options": [
            {
                "domain": "Audits",
                "include": ["enable", "disable"]
            },
            {
                "domain": "BackgroundService",
                "async": ["startObserving"]
            },
            {
                "domain": "Browser",
                "include": ["getVersion", "getHistograms", "getHistogram", "getBrowserCommandLine", "grantPermissions", "setDownloadBehavior", "cancelDownload", "resetPermissions", "crash", "crashGpuProcess", "setPermission"]
            },
            {
                "domain": "DOM",
                "include": ["setFileInputFiles"],
                "include_events": []
            },
            {
              "domain": "DeviceOrientation",
              "async": [
                "setDeviceOrientationOverride"
              ]
            },
            {
                "domain": "Emulation",
                "include": [
                  "getOverriddenSensorInformation",
                  "setSensorOverrideEnabled",
                  "setSensorOverrideReadings",

                  "setDevicePostureOverride",
                  "clearDevicePostureOverride",

                  "setPressureSourceOverrideEnabled",
                  "setPressureStateOverride",

                  "setIdleOverride",
                  "clearIdleOverride",
                  "setGeolocationOverride",
                  "clearGeolocationOverride",
                  "setEmitTouchEventsForMouse",
                  "canEmulate",
                  "setDeviceMetricsOverride",
                  "clearDeviceMetricsOverride",
                  "setVisibleSize",
                  "setUserAgentOverride",
                  "setFocusEmulationEnabled",
                  "setEmulatedMedia"
                ],
                "async": [
                  "getOverriddenSensorInformation",
                  "setSensorOverrideReadings",
                  "setPressureStateOverride"
                ]
            },
            {
                "domain": "FedCm"
            },
            {
                "domain": "Input",
                "async": ["dispatchKeyEvent", "insertText", "imeSetComposition", "dispatchMouseEvent", "dispatchDragEvent", "dispatchTouchEvent", "cancelDragging", "synthesizePinchGesture", "synthesizeScrollGesture", "synthesizeTapGesture"]
            },
            {
                "domain": "Inspector"
            },
            {
                "domain": "IO",
                "async": ["read"],
                "exclude": ["resolveBlob"]
            },
            {
                "domain": "Log",
                "include": ["LogEntry", "entryAdded", "enable", "disable"]
            },
            {
                "domain": "Memory",
                "include": ["getBrowserSamplingProfile", "setPressureNotificationsSuppressed", "simulatePressureNotification", "prepareForLeakDetection", "getDOMCountersForLeakDetection"],
                "async": ["prepareForLeakDetection", "getDOMCountersForLeakDetection"]
            },
            {
                "domain": "NativeProfiling",
                "include": ["dumpProfilingDataOfAllProcesses"],
                "async": ["dumpProfilingDataOfAllProcesses"]
            },
            {
                "domain": "Network",
                "include": ["enable", "disable", "clearBrowserCache", "clearBrowserCookies", "getCookies", "getAllCookies", "deleteCookies", "setCookie", "setCookies", "setExtraHTTPHeaders", "canEmulateNetworkConditions", "emulateNetworkConditions", "setBypassServiceWorker", "setRequestInterception", "continueInterceptedRequest", "getResponseBody", "getResponseBodyForInterception", "setCacheDisabled", "takeResponseBodyForInterceptionAsStream", "getSecurityIsolationStatus", "loadNetworkResource", "setAcceptedEncodings", "clearAcceptedEncodingsOverride", "enableReportingApi"],
                "include_events": ["requestWillBeSent", "responseReceived", "loadingFinished", "loadingFailed", "requestIntercepted", "signedExchangeReceived", "requestWillBeSentExtraInfo", "responseReceivedExtraInfo", "responseReceivedEarlyHints", "trustTokenOperationDone", "subresourceWebBundleMetadataReceived", "subresourceWebBundleMetadataError", "subresourceWebBundleInnerResponseParsed", "subresourceWebBundleInnerResponseError", "policyUpdated", "reportingApiReportAdded", "reportingApiReportUpdated", "reportingApiEndpointsChangedForOrigin"],
                "async": ["clearBrowserCookies", "clearBrowserCache", "getCookies", "getAllCookies", "deleteCookies", "setCookie", "setCookies", "continueInterceptedRequest", "getResponseBody", "getResponseBodyForInterception", "takeResponseBodyForInterceptionAsStream", "loadNetworkResource"]
            },
            {
                "domain": "Overlay",
                "include": ["setInspectMode", "setPausedInDebuggerMessage"]
            },
            {
                "domain": "Page",
                "include": ["enable", "disable", "reload", "navigate", "stopLoading", "getNavigationHistory", "navigateToHistoryEntry", "resetNavigationHistory", "captureScreenshot",
                    "startScreencast", "stopScreencast", "screencastFrameAck", "handleJavaScriptDialog", "setColorPickerEnabled",
                    "bringToFront", "setDownloadBehavior", "getAppManifest", "crash", "close", "setWebLifecycleState", "captureSnapshot", "getInstallabilityErrors", "getManifestIcons", "setBypassCSP", "getAppId", "addCompilationCache", "setPrerenderingAllowed"],
                "include_events": ["frameDetached", "colorPicked", "interstitialShown", "interstitialHidden", "javascriptDialogOpening",
                     "javascriptDialogClosed", "downloadWillBegin", "downloadProgress", "screencastVisibilityChanged", "screencastFrame",
                     "backForwardCacheNotUsed", "frameStartedLoading", "frameStoppedLoading"],
                "async": ["captureScreenshot", "navigate", "getAppManifest", "reload", "captureSnapshot", "getInstallabilityErrors", "getManifestIcons", "getAppId"]
            },
            {
                "domain": "Preload",
                "include": ["enable", "disable"],
                "include_events": ["prefetchStatusUpdated", "prerenderStatusUpdated", "preloadEnabledStateUpdated"]
            },
            {
                "domain": "Runtime",
                "include_events": [],
                "include": []
            },
            {
                "domain": "Schema"
            },
            {
                "domain": "Security"
            },
            {
                "domain": "ServiceWorker",
                "async": ["stopAllWorkers"]
            },
            {
                "domain": "Storage",
                "exclude": ["runBounceTrackingMitigations", "getRelatedWebsiteSets"],
                "async": ["getUsageAndQuota", "clearDataForOrigin", "clearDataForStorageKey", "getCookies", "setCookies", "clearCookies", "overrideQuotaForOrigin", "getTrustTokens", "clearTrustTokens", "getInterestGroupDetails", "getSharedStorageMetadata", "getSharedStorageEntries", "setSharedStorageEntry", "deleteSharedStorageEntry", "clearSharedStorageEntries", "resetSharedStorageBudget", "getStorageBucketList", "setAttributionReportingLocalTestingMode", "sendPendingAttributionReports"]
            },
            {
                "domain": "SystemInfo",
                "include": ["getInfo", "getProcessInfo", "getFeatureState"],
                "async": ["getInfo", "getProcessInfo"]
            },
            {
                "domain": "Target",
                "async": ["createBrowserContext", "disposeBrowserContext", "setAutoAttach", "autoAttachRelated" ]
            },
            {
                "domain": "Tethering",
                "async": ["bind", "unbind"]
            },
            {
                "domain": "Tracing",
                "async": ["start", "getCategories", "requestMemoryDump"]
            },
            {
                "domain": "VisualDebugger",
                "include": ["filterStream", "startStream", "stopStream"],
                "include_events": ["frameResponse"]
            },
            {
                "domain": "Fetch",
                "async": ["enable", "continueRequest", "failRequest", "fulfillRequest", "continueWithAuth", "continueResponse", "getResponseBody", "takeResponseBodyAsStream"]
            },
            {
                "domain": "WebAuthn",
                "async": ["addCredential", "getCredential", "getCredentials"]
            },
            {
                "domain": "DeviceAccess",
                "include": ["enable", "disable", "selectPrompt", "cancelPrompt"],
                "include_events": ["deviceRequestPrompted"]
            },
            {
                "domain": "BluetoothEmulation",
                "async": [
                    "simulatePreconnectedPeripheral",
                    "simulateAdvertisement"
                ]
            }
        ]
    },

    "lib": {
        "package": "content/browser/devtools/protocol",
        "output": "protocol",
        "protocol_traits": "third_party/inspector_protocol/crdtp/chromium/protocol_traits.h",
        "export_macro": "CONTENT_EXPORT",
        "export_header": "content/common/content_export.h"
    },

    "crdtp": {
        "namespace": "crdtp"
    }
}
