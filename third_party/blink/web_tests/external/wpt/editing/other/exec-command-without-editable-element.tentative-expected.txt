This is a testharness.js-based test.
Found 34 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] ChildDocument.execCommand(cut, false, null) with ab[]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(cut, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(copy, false, null) with ab[]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(copy, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(paste, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(styleWithCSS, false, true): calling execCommand to initialize
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(styleWithCSS, false, true): calling execCommand to set state
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(styleWithCSS, false, true): calling queryCommandState on executed document
  assert_equals: queryCommandState should return undefined expected false but got true
[FAIL] ChildDocument.execCommand(styleWithCSS, false, true): calling queryCommandValue on executed document
  assert_equals: queryCommandValue should return false expected "true" but got ""
[FAIL] ChildDocument.execCommand(styleWithCSS, false, true): calling queryCommandState on executed document after making executed document editable
  assert_equals: queryCommandState should return undefined expected false but got true
[FAIL] ChildDocument.execCommand(defaultParagraphSeparator, false, div): calling execCommand to initialize
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(defaultParagraphSeparator, false, div): calling execCommand to set state
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(defaultParagraphSeparator, false, p): calling execCommand to initialize
  assert_equals: execCommand should return false expected false but got true
[FAIL] ChildDocument.execCommand(defaultParagraphSeparator, false, p): calling execCommand to set state
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(cut, false, null) with ab[]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(cut, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(copy, false, null) with ab[]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(copy, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(paste, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(undo, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(undo, false, null) with a[b]c: checking event on executed document
  assert_equals: "input" event should not be fired expected false but got true
[FAIL] ParentDocument.execCommand(redo, false, null) with a[b]c: calling execCommand
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(redo, false, null) with a[b]c: checking event on executed document
  assert_equals: "input" event should not be fired expected false but got true
[FAIL] ParentDocument.execCommand(styleWithCSS, false, true): calling execCommand to initialize
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(styleWithCSS, false, true): calling queryCommandState on focus document after initializing
  assert_equals: queryCommandState on focus document should return undefined expected false but got true
[FAIL] ParentDocument.execCommand(styleWithCSS, false, true): calling execCommand to set state
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(styleWithCSS, false, true): calling queryCommandState on executed document
  assert_equals: queryCommandState should return undefined expected false but got true
[FAIL] ParentDocument.execCommand(styleWithCSS, false, true): calling queryCommandState on focused document
  assert_equals: queryCommandState should return undefined expected false but got true
[FAIL] ParentDocument.execCommand(styleWithCSS, false, true): calling queryCommandValue on executed document
  assert_equals: queryCommandValue should return false expected "true" but got ""
[FAIL] ParentDocument.execCommand(styleWithCSS, false, true): calling queryCommandState on executed document after making executed document editable
  assert_equals: queryCommandState should return undefined expected false but got true
[FAIL] ParentDocument.execCommand(defaultParagraphSeparator, false, div): calling execCommand to initialize
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(defaultParagraphSeparator, false, div): calling execCommand to set state
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(defaultParagraphSeparator, false, p): calling execCommand to initialize
  assert_equals: execCommand should return false expected false but got true
[FAIL] ParentDocument.execCommand(defaultParagraphSeparator, false, p): calling execCommand to set state
  assert_equals: execCommand should return false expected false but got true
Harness: the test ran to completion.

