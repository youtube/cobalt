This is a testharness.js-based test.
[FAIL] Unloading an iframe by navigating it must abort the lock promise
  promise_test: Unhandled rejection with value: "error: Action click failed: element click intercepted (400): element click intercepted: Element <iframe allowfullscreen=\\"\\" src=\\"about:blank\\" cd_frame_id_=\\"a8c7af9bacdf7559580f53ea8ef0ddf3\\"></iframe> is not clickable at point (220, 44). Other element would receive the click: <iframe allowfullscreen=\\"\\" src=\\"./resources/nav_iframe.html\\" cd_frame_id_=\\"ec3afaa0ee6c307819e3c4517456ca45\\"></iframe>\\n  (Session info: chrome-headless-shell=134.0.6969.0)\\n\\nRemote-end stacktrace:\\n\\n0   chromedriver                        0x0000000104aed9ac base::debug::CollectStackTrace(base::span<void const*, 18446744073709551615ul, void const**>) + 28\\n1   chromedriver                        0x0000000104ae5294 base::debug::StackTrace::StackTrace() + 80\\n2   chromedriver                        0x00000001045ff828 Status::Status(StatusCode, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&) + 216\\n3   chromedriver                        0x00000001046420d8 (anonymous namespace)::VerifyElementClickable(Session const*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebPoint const&) + 496\\n4   chromedriver                        0x0000000104640948 (anonymous namespace)::ScrollElementRegionIntoViewHelper(Session const*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebRect const&, bool, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebPoint*) + 1672\\n5   chromedriver                        0x000000010463eff4 ScrollElementRegionIntoView(Session*, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebRect const&, bool, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebPoint*) + 1320\\n6   chromedriver                        0x000000010463e568 GetElementClickableLocation(Session*, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, WebPoint*) + 2204\\n7   chromedriver                        0x0000000104634e20 ExecuteClickElement(Session*, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*) + 524\\n8   chromedriver                        0x00000001046348c8 base::RepeatingCallback<Status (Session*, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)>::Run(Session*, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*) const & + 132\\n9   chromedriver                        0x00000001046348c8 base::RepeatingCallback<Status (Session*, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)>::Run(Session*, WebView*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*) const & + 132\\n10  chromedriver                        0x000000010467a664 ExecuteWindowCommand(base::RepeatingCallback<Status (Session*, WebView*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*, Timeout*)> const&, Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*) + 2100\\n11  chromedriver                        0x0000000104633d10 base::RepeatingCallback<Status (Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)>::Run(Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*) const & + 112\\n12  chromedriver                        0x00000001046330e4 (anonymous namespace)::ExecuteSessionCommandOnSessionThread(char const*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::RepeatingCallback<Status (Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)> const&, bool, bool, base::Value::Dict const&, scoped_refptr<base::SingleThreadTaskRunner>, base::RepeatingCallback<void (Status const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, bool)> const&) + 856\\n13  chromedriver                        0x0000000104633ae4 base::internal::Invoker<base::internal::FunctorTraits<void (*&&)(char const*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::RepeatingCallback<Status (Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)> const&, bool, bool, base::Value::Dict const&, scoped_refptr<base::SingleThreadTaskRunner>, base::RepeatingCallback<void (Status const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, bool)> const&), char const*&&, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>&&, base::RepeatingCallback<Status (Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)>&&, bool&&, bool&&, base::Value::Dict&&, scoped_refptr<base::SingleThreadTaskRunner>&&, base::RepeatingCallback<void (Status const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, bool)>&&>, base::internal::BindState<false, true, false, void (*)(char const*, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, base::RepeatingCallback<Status (Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)> const&, bool, bool, base::Value::Dict const&, scoped_refptr<base::SingleThreadTaskRunner>, base::RepeatingCallback<void (Status const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, bool)> const&), base::internal::UnretainedWrapper<char const, base::unretained_traits::MayNotDangle, (partition_alloc::internal::RawPtrTraits)0>, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>>, base::RepeatingCallback<Status (Session*, base::Value::Dict const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>*)>, bool, bool, base::Value::Dict, scoped_refptr<base::SingleThreadTaskRunner>, base::RepeatingCallback<void (Status const&, std::__Cr::unique_ptr<base::Value, std::__Cr::default_delete<base::Value>>, std::__Cr::basic_string<char, std::__Cr::char_traits<char>, std::__Cr::allocator<char>> const&, bool)>>, void ()>::RunOnce(base::internal::BindStateBase*) + 76\\n14  chromedriver                        0x0000000104a9c4f0 base::TaskAnnotator::RunTaskImpl(base::PendingTask&) + 320\\n15  chromedriver                        0x0000000104ab9138 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::LazyNow*) + 752\\n16  chromedriver                        0x0000000104ab8ce4 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() + 100\\n17  chromedriver                        0x0000000104a9e588 base::MessagePumpDefault::Run(base::MessagePump::Delegate*) + 152\\n18  chromedriver                        0x0000000104ab9784 base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) + 328\\n19  chromedriver                        0x0000000104a8e72c base::RunLoop::Run(base::Location const&) + 400\\n20  chromedriver                        0x0000000104ad6da8 base::Thread::Run(base::RunLoop*) + 60\\n21  chromedriver                        0x0000000104ad6f38 base::Thread::ThreadMain() + 384\\n22  chromedriver                        0x0000000104ae4ed8 base::(anonymous namespace)::ThreadFunc(void*) + 188\\n23  libsystem_pthread.dylib             0x0000000188c21f94 _pthread_start + 136\\n24  libsystem_pthread.dylib             0x0000000188c1cd34 thread_start + 8"
Harness: the test ran to completion.

