// Copyright 2020 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "third_party/blink/public/mojom/navigation/renderer_eviction_reason.mojom";

// This struct contains information about a blocking feature's usage, i.e. what feature
// is used, in what JavaScript file, in what function, at what line and column number.
struct BlockingDetails {
  // The index of the blocking feature.
  // See blink::SchedulingPolicy::Feature for the meaning of the individual bits.
  uint32 feature;
  // The URL of the JavaScript file where the feature is used. This will be empty when
  // when a flag is disabled to send this information, and will be null when a feature
  // is used from C++ in tests.
  string? url;
  // The function in the JavaScript file where the feature is used. This will be empty
  // when a flag is disabled to send this information, and will be null when a feature
  // is used from C++ in tests, or when a feature is used in anonymous functions.
  string? function_name;
  // The line number in JavaScript file where the feature is used. This will be zero
  // when a flag is disabled to send this information, and when a feature is used from
  // C++ in tests.
  uint64 line_number;
  // The column number in JavaScript file where the feature is used. This will be zero
  // when a flag is disabled to send this information, and when a feature is used from
  // C++ in tests.
  uint64 column_number;
};

// This interface defines back-forward cache related methods that will be
// invoked from the renderer process.
//
// Calls to any of the methods defined in this interface must be allowed while
// the frame is in the back-forward cache. Calls to other (associated) interface
// methods while the frame is in the back-forward cache are disallowed and may
// trigger a renderer kill, depending on policy.
interface BackForwardCacheControllerHost {
  // Evicts the page from the back/forward cache due to e.g., JavaScript
  // execution and network request redirect.
  EvictFromBackForwardCache(RendererEvictionReason reason);

  // Sent by the blink's FrameScheduler when a list of active features
  // the scheduler tracks changes.
  // `details` is the list of blocking features currently being used and their
  // information about where they were used in JavaScript.
  DidChangeBackForwardCacheDisablingFeatures(
    array<BlockingDetails> details);
};
