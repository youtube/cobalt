/* Copyright 2024 The Chromium Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 *
 * The default style sheet used to render <select> when the CustomizableSelect
 * feature is enabled.
 */

@namespace "http://www.w3.org/1999/xhtml";

select:not(:-internal-list-box) {
  font: -internal-appearance-auto-base-select(-webkit-small-control, inherit);
  color: -internal-appearance-auto-base-select(FieldText, inherit);
  background-color: -internal-appearance-auto-base-select(Field, color-mix(in lab, currentColor 10%, transparent));
}

/* These rules are intended to apply to appearance:base-select when the author
 * provides a child <button> element. They still apply when appearance computes
 * to auto, but the values provided in the
 * -internal-appearance-auto-base-select() value should make it the same as the
 * select rules in html.css for appearance:auto when the computed value of
 * appearance is auto. */
select:not(:-internal-list-box):-internal-select-has-child-button {
  background-color: -internal-appearance-auto-base-select(Field, transparent);
  border: -internal-appearance-auto-base-select(1px, 0px),
          -internal-appearance-auto-base-select(solid, none),
          -internal-appearance-auto-base-select(light-dark(#767676, #858585), transparent);
}

/* These rules are intended to apply to appearance:base-select when the author
 * does NOT provide a child <button> element. They still apply when appearance
 * computes to auto, but the values provided in the
 * -internal-appearance-auto-base-select() value should make it the same as the
 * select rules in html.css for appearance:auto when the computed value of
 * appearance is auto. */
select:not(:-internal-list-box):not(:-internal-select-has-child-button) {
  padding: -internal-appearance-auto-base-select(0, 0.25em);
  border: 1px solid -internal-appearance-auto-base-select(light-dark(#767676, #858585), currentColor);
  /* min-size rules ensure that we meet accessibility guidelines for minimum target size.
   * https://github.com/openui/open-ui/issues/1026
   * https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html */
  /* TODO(crbug.com/1511354): This might be able to be combined with the
   * default select option rules at some point. This should be re-evaluated
   * before StylableSelect is shipped. */
  min-inline-size: -internal-appearance-auto-base-select(auto, 24px);
  /* The 1.2em here makes sure that options with no text still make the button
   * have the same height as options with text. */
  min-block-size: -internal-appearance-auto-base-select(auto, max(24px, 1.2em));
  /* TODO(crbug.com/1511354): Make the UA stylesheet use something standardized
   * for the font property instead of -webkit-small-control. */
}

/* Without this rule, we would be changing the styles for disabled
 * appearance:auto selects. */
select:not(:-internal-list-box):disabled {
  color: -internal-appearance-auto-base-select(light-dark(GrayText, #aaa), inherit);
  border-color: -internal-appearance-auto-base-select(rgba(118, 118, 118, 0.3), inherit);
}

select:not(:-internal-list-box):not(:-internal-select-has-child-button):enabled:hover {
  background-color: -internal-appearance-auto-base-select(Field, color-mix(in lab, currentColor 20%, transparent));
}
select:not(:-internal-list-box):not(:-internal-select-has-child-button):enabled:active {
  background-color: -internal-appearance-auto-base-select(Field, color-mix(in lab, currentColor 30%, transparent));
}

/* Undo unwanted styles from select rules */
select:not(:-internal-list-box) > button,
select::picker(select) {
  white-space: normal;
}

select:not(:-internal-list-box)::picker(select) {
  box-sizing: border-box;
  overflow: auto;
  border: solid;
  padding-block: 0.25em;
  padding-inline: 0;
  color: CanvasText;
  background-color: Canvas;
  margin: 0;
  inset: auto;
  min-inline-size: anchor-size(self-inline);
  min-block-size: 1lh;
  /* Below and span-right, by default. */
  position-area: block-end span-inline-end;
  position-try-fallbacks:
    /* First try above and span-right. */
    block-start span-inline-end,
    /* Then below but span-left. */
    block-end span-inline-start,
    /* Then above and span-left. */
    block-start span-inline-start;
  /* TODO(crbug.com/363205525) Add a fallback block that adds scrollbars, for
     the case that none of the four options above fits in the viewport. */
}

/* This rule is here to ensure that we can get a ComputedStyle for
 * ::picker(select). Without this, the [popover] UA style would make it
 * display:none, which would mean that we wouldn't get a ComputedStyle, which
 * would mean that we can't detect the author opting in with
 * appearance:base-select on this element. This element is hidden when it isn't
 * popover open via LayoutFlexibleBox::IsChildAllowed. This also means that the
 * author can't force it to become visible while it is popover closed by
 * putting display:block on it, but hopefully that's OK.
 * TODO(crbug.com/364348901): Remove this.
 */
select::picker(select) {
  display: block !important;
}

/* TODO(crbug.com/1511354): These hover styles should only be applied when
 * the select has appearance:base-select. This will be challenging because
 * the selector is targeting an option rather than the select itself. However,
 * these hover rules don't seem to affect appearance:auto options in the popup
 * for now. */
select:not(:-internal-list-box) option:not(:disabled):hover {
  background-color: SelectedItem;
  color: SelectedItemText;
}

select:not(:-internal-list-box) option {
  /* min-size rules ensure that we meet accessibility guidelines for minimum target size.
   * https://github.com/openui/open-ui/issues/1026
   * https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html */
  /* TODO(crbug.com/1511354): This might be able to be combined with the
   * default select option rules at some point. This should be re-evaluted
   * before CustomizableSelect is shipped. */
  min-inline-size: 24px;
  min-block-size: max(24px, 1.2em);
  align-content: center;
  font-weight: -internal-appearance-auto-base-select(normal, inherit);
}


select:not(:-internal-list-box) option::check {
  content: '\2713' / '';
}
select option:not(:checked)::check {
  visibility: hidden;
}

select:-internal-autofill-selected,
select::-internal-select-autofill-preview[popover] {
  background-image: none;
  background-color: light-dark(#E8F0FE, rgba(70, 90, 126, 0.4));
  color: FieldText;
}
select::-internal-select-autofill-preview[popover]:popover-open {
  display: grid;
  align-items: center;
  position-area: center;
  height: calc(anchor-size(height) - 2px);
  width: calc(anchor-size(width) - 2px);
  margin: 0;
  padding: 0;
  border: 1px solid black;
}
select::-internal-select-autofill-preview-text {
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: center;
  white-space: nowrap;
}

select:not(-internal-list-box):not(:-internal-select-has-child-button)::select-arrow {
  /* We don't have to use -internal-appearance-auto-base-select() here because
   * the pseudo-element won't get generated unless the content property is set. */
  padding-inline-start: 0.5em;
  display: block;
}
select:not(:-internal-list-box):not(:-internal-select-has-child-button)::select-arrow {
  content: -internal-appearance-auto-base-select(none, counter(fake-counter-name, disclosure-open));
}

select:not(:-internal-list-box) optgroup {
  padding-inline: 2px;
}
/* This can be merged with the :-internal-list-box rule in html.css */
select:not(:-internal-list-box) optgroup option {
  padding-inline-start: 20px;
  font-weight: normal;
}

/* These styles are copied from optgroup's label attribute inline style properties */
select:not(:-internal-list-box) optgroup legend {
  padding: 0 2px 1px 2px;
  min-height: 1.2em;
}
