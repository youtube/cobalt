# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")

assert(is_chromeos_ash)

static_library("external_arc") {
  sources = [
    "keyboard/arc_input_method_surface_manager.cc",
    "keyboard/arc_input_method_surface_manager.h",
    "message_center/arc_notification_content_view.cc",
    "message_center/arc_notification_content_view.h",
    "message_center/arc_notification_delegate.cc",
    "message_center/arc_notification_delegate.h",
    "message_center/arc_notification_item.h",
    "message_center/arc_notification_item_impl.cc",
    "message_center/arc_notification_item_impl.h",
    "message_center/arc_notification_manager.cc",
    "message_center/arc_notification_manager.h",
    "message_center/arc_notification_surface.h",
    "message_center/arc_notification_surface_impl.cc",
    "message_center/arc_notification_surface_impl.h",
    "message_center/arc_notification_surface_manager.cc",
    "message_center/arc_notification_surface_manager.h",
    "message_center/arc_notification_surface_manager_impl.cc",
    "message_center/arc_notification_surface_manager_impl.h",
    "message_center/arc_notification_view.cc",
    "message_center/arc_notification_view.h",
    "message_center/metadata_utils.cc",
    "message_center/metadata_utils.h",
    "message_center/metrics_utils.cc",
    "message_center/metrics_utils.h",
    "overlay/arc_overlay_controller.cc",
    "overlay/arc_overlay_controller.h",
    "overlay/arc_overlay_controller_impl.cc",
    "overlay/arc_overlay_controller_impl.h",
    "overlay/arc_overlay_manager.cc",
    "overlay/arc_overlay_manager.h",
    "toast/arc_toast_surface_manager.cc",
    "toast/arc_toast_surface_manager.h",
  ]
  defines = [ "ASH_PUBLIC_IMPLEMENTATION" ]
  deps = [
    "//ash",
    "//ash/components/arc:arc_base_utils",
    "//ash/components/arc:arc_metrics_constants",
    "//ash/components/arc/mojom:notifications",
    "//ash/components/arc/session:connection_holder",
    "//ash/constants",
    "//ash/public/cpp",
    "//base",
    "//components/account_id",
    "//components/exo",
    "//mojo/public/cpp/system",
    "//ui/accessibility:accessibility",
    "//ui/accessibility:ax_base",
    "//ui/aura",
    "//ui/chromeos/styles:cros_tokens_color_mappings",
    "//ui/color",
    "//ui/message_center",
    "//ui/views",
    "//ui/wm",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "keyboard/arc_input_method_surface_manager_unittest.cc",
    "message_center/arc_notification_content_view_unittest.cc",
    "message_center/arc_notification_manager_unittest.cc",
    "message_center/arc_notification_surface_manager_impl_unittest.cc",
    "message_center/arc_notification_view_unittest.cc",
    "message_center/metadata_utils_unittest.cc",
    "overlay/arc_overlay_controller_impl_unittest.cc",
    "overlay/arc_overlay_manager_unittest.cc",
    "toast/arc_toast_surface_manager_unittest.cc",
  ]
  public_deps = [ "//ash:test_support" ]
  deps = [
    ":external_arc",
    ":test_support",
    "//ash",
    "//ash:test_support",
    "//ash/components/arc:notification_test_support",
    "//ash/components/arc/session:connection_holder",
    "//ash/public/cpp",
    "//base/test:test_support",
    "//components/exo",
    "//components/exo:test_support",
    "//testing/gmock",
    "//ui/aura:test_support",
    "//ui/base:test_support",
    "//ui/events:test_support",
    "//ui/message_center:test_support",
    "//ui/views:test_support",
  ]

  assert_no_deps = [ "//ash/compponents/arc:arc_base" ]
}

source_set("test_support") {
  testonly = true
  sources = [
    "message_center/mock_arc_notification_item.cc",
    "message_center/mock_arc_notification_item.h",
    "message_center/mock_arc_notification_surface.cc",
    "message_center/mock_arc_notification_surface.h",
    "overlay/test/fake_arc_overlay_controller_impl.cc",
    "overlay/test/fake_arc_overlay_controller_impl.h",
    "overlay/test/test_arc_overlay_manager.cc",
    "overlay/test/test_arc_overlay_manager.h",
  ]
  deps = [
    ":external_arc",
    "//ash/public/cpp",
    "//base",
    "//ui/aura",
  ]
}
