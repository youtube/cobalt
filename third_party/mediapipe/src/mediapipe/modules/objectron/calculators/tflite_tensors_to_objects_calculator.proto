// Copyright 2020 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The option proto for the TfLiteTensorsToObjectsCalculatorOptions.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";
import "mediapipe/modules/objectron/calculators/belief_decoder_config.proto";

message TfLiteTensorsToObjectsCalculatorOptions {
  extend CalculatorOptions {
    optional TfLiteTensorsToObjectsCalculatorOptions ext = 263667646;
  }

  // The number of output classes predicted by the detection model.
  optional int32 num_classes = 1;

  // The number of predicted keypoints.
  optional int32 num_keypoints = 2;
  // The dimension of each keypoint, e.g. number of values predicted for each
  // keypoint.
  optional int32 num_values_per_keypoint = 3 [default = 2];

  optional BeliefDecoderConfig decoder_config = 4;

  // Camera focal length along x, normalized by width/2.
  optional float normalized_focal_x = 5 [default = 1.0];

  // Camera focal length along y, normalized by height/2.
  optional float normalized_focal_y = 6 [default = 1.0];

  // Camera principle point x, normalized by width/2, origin is image center.
  optional float normalized_principal_point_x = 7 [default = 0.0];

  // Camera principle point y, normalized by height/2, origin is image center.
  optional float normalized_principal_point_y = 8 [default = 0.0];
}
