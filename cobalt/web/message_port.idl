// Copyright 2022 The Cobalt Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// https://html.spec.whatwg.org/multipage/web-messaging.html#messageport
// https://html.spec.whatwg.org/dev/web-messaging.html#message-ports
[Exposed = (Window,Worker)] interface MessagePort /* : EventTarget */ {
  // [RaisesException]
  void postMessage(any message);
  // TODO: Support sequence<object>: b/218501774
  // void postMessage(any message, sequence<object> transfer);
  // TODO: Support overloads with dictionary parameter: b/218506730
  // void postMessage(any message, optional StructuredSerializeOptions
  // options);
  void start();
  void close();

  // event handlers
  attribute EventHandler onmessage;
  attribute EventHandler onmessageerror;

  // From EventTarget.
  void addEventListener(DOMString type, EventListener? listener,
                        optional boolean useCapture = false);
  void removeEventListener(DOMString type, EventListener? listener,
                           optional boolean useCapture = false);

  [RaisesException] boolean dispatchEvent(Event event);
};
