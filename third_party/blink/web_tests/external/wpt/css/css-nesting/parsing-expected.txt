This is a testharness.js-based test.
[PASS] .foo { & { color: green; }}
[PASS] .foo { &.bar { color: green; }}
[PASS] .foo { & .bar { color: green; }}
[PASS] .foo { & > .bar { color: green; }}
[FAIL] .foo { > .bar { color: green; }}
  assert_equals: Inner rule's selector should be "& > .bar". expected "& > .bar" but got "> .bar"
[FAIL] .foo { > & .bar { color: green; }}
  assert_equals: Inner rule's selector should be "& > & .bar". expected "& > & .bar" but got "> & .bar"
[FAIL] .foo { + .bar & { color: green; }}
  assert_equals: Inner rule's selector should be "& + .bar &". expected "& + .bar &" but got "+ .bar &"
[FAIL] .foo { + .bar, .foo, > .baz { color: green; }}
  assert_equals: Inner rule's selector should be "& + .bar, .foo, & > .baz". expected "& + .bar, .foo, & > .baz" but got "+ .bar, .foo, > .baz"
[PASS] .foo { .foo { color: green; }}
[PASS] .foo { .test > & .bar { color: green; }}
[PASS] .foo { .foo, .foo & { color: green; }}
[PASS] .foo { :is(.bar, .baz) { color: green; }}
[PASS] .foo { &:is(.bar, .baz) { color: green; }}
[PASS] .foo { :is(.bar, &.baz) { color: green; }}
[PASS] .foo { &:is(.bar, &.baz) { color: green; }}
[PASS] .foo { div& { color: green; }}
[PASS] INVALID: .foo { &div { color: green; }}
[PASS] .foo { .class& { color: green; }}
[PASS] .foo { &.class { color: green; }}
[PASS] .foo { [attr]& { color: green; }}
[PASS] .foo { &[attr] { color: green; }}
[PASS] .foo { #id& { color: green; }}
[PASS] .foo { &#id { color: green; }}
[PASS] .foo { :hover& { color: green; }}
[PASS] .foo { &:hover { color: green; }}
[PASS] .foo { :is(div)& { color: green; }}
[PASS] .foo { &:is(div) { color: green; }}
[PASS] .foo { & .bar & .baz & .qux { color: green; }}
[PASS] .foo { && { color: green; }}
[PASS] .foo { & > section, & > article { color: green; }}
[PASS] .foo, .bar { & + .baz, &.qux { color: green; }}
Harness: the test ran to completion.

