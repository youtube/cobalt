Tests the data of CPU profiling trace events
Recording started
Tracing complete
Got a v8.compile event
Object: {
	args: {
		data: {
			columnNumber: number
			lineNumber: number
			url: string
		}
		fileName: string
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a V8.CompileCode event
Object: {
	args: {
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a V8.OptimizeCode event
Object: {
	args: {
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got an EvaluateScript event
Object: {
	args: {
		data: {
			columnNumber: number
			frame: string
			lineNumber: number
			url: string
		}
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a v8.produceCache event
Object: {
	args: {
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got an v8.compileModule event
Object: {
	args: {
		data: {
			columnNumber: number
			lineNumber: number
			url: string
		}
		fileName: string
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a v8.evaluateModule event
Object: {
	args: {
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a v8.produceModuleCache event
Object: {
	args: {
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a V8.Execute event
Object: {
	args: {
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a Profile event
Object: {
	args: {
		data: {
			startTime: number
		}
	}
	cat: string
	id: string
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a ProfileChunk event
CPU profile has:
nodes:
Object: {
	callFrame: {
		codeType: string
		functionName: string
		scriptId: number
	}
	id: number
}
samples: number
timeDeltas: number
Got a v8.parseOnBackground event
Object: {
	args: {
		data: {
			requestId: string
			url: string
		}
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}
Got a parseOnBackgroundParsing event
Object: {
	args: {
	}
	cat: string
	dur: number
	name: string
	ph: string
	pid: number
	tid: number
	ts: number
}

