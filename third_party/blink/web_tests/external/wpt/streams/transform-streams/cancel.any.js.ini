[cancel.any.html]
  [aborting the writable side should call transformer.abort()]
    expected: FAIL

  [aborting the writable side should reject if transformer.cancel() throws]
    expected: FAIL

  [cancelling the readable side should call transformer.cancel()]
    expected: FAIL

  [cancelling the readable side should reject if transformer.cancel() throws]
    expected: FAIL

  [closing the writable side should reject if a parallel transformer.cancel() throws]
    expected: FAIL

  [readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL

  [writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL


[cancel.any.serviceworker.html]
  [aborting the writable side should call transformer.abort()]
    expected: FAIL

  [aborting the writable side should reject if transformer.cancel() throws]
    expected: FAIL

  [cancelling the readable side should call transformer.cancel()]
    expected: FAIL

  [cancelling the readable side should reject if transformer.cancel() throws]
    expected: FAIL

  [closing the writable side should reject if a parallel transformer.cancel() throws]
    expected: FAIL

  [readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL

  [writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL


[cancel.any.shadowrealm.html]
  expected: ERROR

[cancel.any.sharedworker.html]
  [aborting the writable side should call transformer.abort()]
    expected: FAIL

  [aborting the writable side should reject if transformer.cancel() throws]
    expected: FAIL

  [cancelling the readable side should call transformer.cancel()]
    expected: FAIL

  [cancelling the readable side should reject if transformer.cancel() throws]
    expected: FAIL

  [closing the writable side should reject if a parallel transformer.cancel() throws]
    expected: FAIL

  [readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL

  [writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL


[cancel.any.worker.html]
  [aborting the writable side should call transformer.abort()]
    expected: FAIL

  [aborting the writable side should reject if transformer.cancel() throws]
    expected: FAIL

  [cancelling the readable side should call transformer.cancel()]
    expected: FAIL

  [cancelling the readable side should reject if transformer.cancel() throws]
    expected: FAIL

  [closing the writable side should reject if a parallel transformer.cancel() throws]
    expected: FAIL

  [readable.cancel() and a parallel writable.close() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL

  [writable.abort() and readable.cancel() should reject if a transformer.cancel() calls controller.error()]
    expected: FAIL
