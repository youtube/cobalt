# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//chrome/browser/buildflags.gni")

assert(!is_android)

source_set("link_capturing") {
  sources = [
    "apps_intent_picker_delegate.h",
    "intent_picker_info.cc",
    "intent_picker_info.h",
    "link_capturing_features.cc",
    "link_capturing_features.h",
    "link_capturing_navigation_throttle.cc",
    "link_capturing_navigation_throttle.h",
  ]

  if (is_mac) {
    sources += [
      "mac_intent_picker_helpers.h",
      "mac_intent_picker_helpers.mm",
    ]
  }

  deps = [
    "//base",
    "//chrome/browser/profiles:profile",
    "//chrome/browser/web_applications",
    "//components/keep_alive_registry",
    "//components/page_load_metrics/browser",
    "//components/webapps/common:common",
    "//content/public/browser",
    "//extensions/common",
    "//third_party/abseil-cpp:absl",
    "//url",
  ]

  if (is_chromeos) {
    sources += [
      "chromeos_apps_intent_picker_delegate.cc",
      "chromeos_apps_intent_picker_delegate.h",
      "chromeos_link_capturing_delegate.cc",
      "chromeos_link_capturing_delegate.h",
      "metrics/intent_handling_metrics.cc",
      "metrics/intent_handling_metrics.h",
    ]
    deps += [
      "//ash/webui/projector_app/public/cpp",
      "//chrome/browser/apps/app_service",
    ]
  } else {
    sources += [
      "enable_link_capturing_infobar_delegate.cc",
      "enable_link_capturing_infobar_delegate.h",
      "web_app_link_capturing_delegate.cc",
      "web_app_link_capturing_delegate.h",
      "web_apps_intent_picker_delegate.cc",
      "web_apps_intent_picker_delegate.h",
    ]
    deps += [
      "//chrome/app:generated_resources_grit",
      "//components/infobars/content",
      "//components/infobars/core",
      "//components/strings:components_strings_grit",
      "//components/vector_icons",
    ]
  }

  if (is_chromeos_ash) {
    deps += [ "//ash/components/arc:arc" ]
  }
}

source_set("test_support") {
  testonly = true
  sources = [
    "link_capturing_feature_test_support.cc",
    "link_capturing_feature_test_support.h",
  ]
  deps = [
    ":link_capturing",
    "//base/test:test_support",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [ "link_capturing_navigation_throttle_unittest.cc" ]
  deps = [
    ":link_capturing",
    "//base/test:test_support",
    "//testing/gtest",
    "//ui/base:base",
    "//url",
  ]

  if (is_chromeos) {
    sources += [ "metrics/intent_handling_metrics_unittest.cc" ]
    deps += [
      "//chrome/test:test_support",
      "//components/prefs:test_support",
      "//content/test:test_support",
    ]
  }
}

# Browser tests which require an Ash process with App Service to be running.
if (is_chromeos) {
  source_set("app_service_browser_tests") {
    testonly = true

    defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]

    sources = [ "chromeos_link_capturing_delegate_browsertest.cc" ]

    deps = [
      ":link_capturing",
      "//chrome/browser/ui",
      "//chrome/test:test_support_ui",
    ]
  }
}
