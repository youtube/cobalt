This is a testharness.js-based test.
Found 2541 tests; 2383 PASS, 158 FAIL, 0 TIMEOUT, 0 NOTRUN.
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><blockquote><p>baz</p></blockquote><p>extra</p>" but got "foobar<br><blockquote><p>baz</p></blockquote><p>extra</p>"
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><p>baz</p><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><blockquote><p>baz</p></blockquote><p>extra</p>" but got "foobar<br><blockquote style=\"margin-right:0px\" dir=\"ltr\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
FAIL [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before assert_equals: Wrong result returned expected false but got true
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><blockquote><p>baz</p></blockquote><p>extra</p>" but got "foobar<br><blockquote style=\"margin-right:0px\" dir=\"ltr\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><p>baz</p><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><p>baz</p><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote data-abc=\"def\">foobarbaz</blockquote>" but got "<blockquote>foobarbaz</blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote><p>foobar</p><blockquote><p>baz</p></blockquote></blockquote>" but got "<blockquote>foobar<br><blockquote><p>baz</p></blockquote></blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote data-abc=\"def\"><p>foobar</p><blockquote><p>baz</p></blockquote></blockquote>" but got "<blockquote>foobar<br><blockquote data-abc=\"def\"><p>baz</p></blockquote></blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote data-abc=\"def\"><p>foobar</p><blockquote><p>baz</p></blockquote></blockquote>" but got "<blockquote data-abc=\"def\">foobar<br><blockquote><p>baz</p></blockquote></blockquote>"
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote><div id=\"abc\"><p>baz</p></div></blockquote>"
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote id=\"abc\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote id=\"abc\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "<span style=\"color:rgb(0, 0, 255)\">foobar</span><br><blockquote style=\"color:rgb(0, 0, 255)\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "<span style=\"color:rgb(0, 0, 255)\">foobar</span><br><blockquote style=\"color:rgb(0, 0, 255)\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><b>foobar</b></p><blockquote><p>baz</p></blockquote>" but got "<b>foobar</b><br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><strong>foobar</strong></p><blockquote><p>baz</p></blockquote>" but got "<strong>foobar</strong><br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><span>foobar</span></p><blockquote><p>baz</p></blockquote>" but got "foobar<br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote style=\"color:rgb(0, 0, 255)\"><p>foobar</p></blockquote><blockquote><p>baz</p></blockquote>" but got "<blockquote><p>foobar</p></blockquote><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote style=\"color:rgb(0, 0, 255)\"><p>foobar</p><p>baz</p></blockquote>" but got "<blockquote style=\"color:rgb(0, 0, 255)\"><p>foobar</p></blockquote><blockquote style=\"color:rgb(0, 0, 255)\"><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><div>bar</div><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>bar</p><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><div>bar</div><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>bar</p><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" checks for modifications to non-editable content
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" compare innerHTML
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<br>bar</div><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo<br>bar</p><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<br>bar</div><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo<br>bar</p><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><div>bar</div><ol><li>baz</li></ol>" but got "<div style=\"display:inline !important\">foo</div>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><p>bar</p><ol><li>baz</li></ol>" but got "<div style=\"display:inline !important\">foo</div>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><ol><li>baz</li></ol><li>quz</li></ol>" but got "<ol><li>foo<li>bar<br></li><ol><li>baz</li></ol></li><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><ol><li>bar</li></ol><li>baz</li><li>quz</li></ol>" but got "<ol><li>foo<ol><li>bar</li></ol><li>baz<br></li></li><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><ol><li>baz</li></ol><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><ol><li>baz</li></ol><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>[bar]<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><ol><li>baz</li></ol><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><ol><li>baz</li></ol><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=0 data-end=1><li>bar<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><ol><li>bar</li></ol><li>baz</li><li>quz</li></ol>" but got "<ol><li>foo</li><ol><li>bar</li></ol><li>baz<br></li><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>[baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><ol><li>bar</li></ol><li>baz</li><li>quz</li></ol>" but got "<ol><li>foo</li><ol><li>bar</li></ol><li>baz<br></li><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol data-start=1 data-end=2><li>bar<li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo<li>bar<br></li></li><li>baz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>b[a]r</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li>b[a]r</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo{<ol><li>bar</ol>}<li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li>{<ol><li>bar</ol>}<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><ol><li>bar</li></ol><li>baz</li></ol>" but got "foo<ol><li>bar</li></ol><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><ol><li>bar</li></ol><li>baz</li></ol>" but got "foo<ol><li>bar</li></ol><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><ol><li>bar</li></ol><li>baz</li></ol>" but got "foo<br><ol><ol><li>bar</li></ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><ol><li>bar</li></ol><li>baz</li></ol>" but got "foo<br><ol><ol><li>bar</li></ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li><ol><li>bar</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><div>bar</div><ol><ol><li>baz</li></ol><li>quz</li></ol>" but got "<ol><li>foo</li></ol>bar<ol><li>baz</li></ol><ol><li>quz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>bar</p><ol><ol><li>baz</li></ol><li>quz</li></ol>" but got "<ol><li>foo</li></ol>bar<ol><li>baz</li></ol><ol><li>quz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><div>bar</div><ol><ol><li>baz</li></ol><li>quz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><ol><li>baz</li></ol><li>quz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>bar</p><ol><ol><li>baz</li></ol><li>quz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><ol><li>baz</li></ol><li>quz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]</li><ol><li>baz</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<ol><li>bar</li><li>baz</li></ol></li></ol><div>quz</div>" but got "<ol><li>foo<ol><li>bar</li><li>baz</li></ol></li></ol>quz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<ol><li>bar</li><li>baz</li></ol></li></ol><p>quz</p>" but got "<ol><li>foo<ol><li>bar</li><li>baz</li></ol></li></ol>quz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><ol><li>bar</li><li>baz</li></ol></ol><div>quz</div>" but got "<ol><li>foo</li><ol><li>bar</li><li>baz</li></ol></ol>quz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><ol><li>bar</li><li>baz</li></ol></ol><p>quz</p>" but got "<ol><li>foo</li><ol><li>bar</li><li>baz</li></ol></ol>quz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>bar<li>baz</ol><li>[quz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><div>bar</div><div>baz</div>" but got "<ol><li>foo</li></ol>bar<br>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>bar</p><p>baz</p>" but got "<ol><li>foo</li></ol>bar<br>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>b[ar<li>baz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><li>bar</li><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><li>bar</li><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><li>bar</li><li>baz</li></ol>" but got "foo<br><ol><li>bar<br></li><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><li>bar</li><li>baz</li></ol>" but got "foo<br><ol><li>bar<br></li><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li></ol><div>baz</div>" but got "<ol><li>foo<li>bar<br></li></li></ol>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li></ol><p>baz</p>" but got "<ol><li>foo<li>bar<br></li></li></ol>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li></ol><div>baz</div>" but got "<ol><li>foo</li><li>bar<br></li></ol>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li></ol><p>baz</p>" but got "<ol><li>foo</li><li>bar<br></li></ol>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo</li><ol><li>b[ar</ol><li>b]az</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><li>bar</li></ol><div>baz</div><p>extra</p>" but got "foo<br>bar<br>baz<br><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><li>bar</li></ol><p>baz</p><p>extra</p>" but got "foo<br>bar<br>baz<br><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><li>bar</li></ol><div>baz</div><p>extra</p>" but got "foo<br><ol><li>bar<br></li></ol>baz<br><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><li>bar</li></ol><p>baz</p><p>extra</p>" but got "foo<br><ol><li>bar<br></li></ol>baz<br><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo</li><ol><li>bar</ol><li>baz]</ol><p>extra" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><ol><li>bar</li></ol><li>baz</li></ol>" but got "foo<ol><li>bar</li></ol>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><ol><li>bar</li></ol><li>baz</li></ol>" but got "foo<ol><li>bar</li></ol>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<ol><li>bar</ol>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo<li>bar<br></li>baz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo<ol><li>[bar]</ol>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><ol><li>bar</li></ol></ol><div>baz</div>" but got "foo<ol><li>bar</li></ol>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><ol><li>bar</li></ol></ol><p>baz</p>" but got "foo<ol><li>bar</li></ol>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<ol><li>bar</ol>[baz]</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><ol><li>bar</li><li>baz</li></ol>" but got "foo<ol><li>bar</li></ol>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><ol><li>bar</li><li>baz</li></ol>" but got "foo<ol><li>bar</li></ol>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo<ol><li>bar]</ol>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div>bar</div>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>bar</p>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol start=5><li>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div id=\"abc\"><div>bar</div></div>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div id=\"abc\"><p>bar</p></div>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol id=abc><li>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"color:rgb(0, 0, 255)\"><div>bar</div></div>baz" but got "foo<br><span style=\"color:rgb(0, 0, 255)\">bar</span><br>baz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"color:rgb(0, 0, 255)\"><p>bar</p></div>baz" but got "foo<br><span style=\"color:rgb(0, 0, 255)\">bar</span><br>baz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol style=color:blue><li>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div value=\"5\">bar</div>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p value=\"5\">bar</p>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li value=5>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div id=\"abc\">bar</div>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p id=\"abc\">bar</p>baz" but got "foo<br>bar<br>baz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li id=abc>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"color:rgb(0, 0, 255)\">bar</div>baz" but got "foo<br><span style=\"color:rgb(0, 0, 255)\">bar</span><br>baz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p style=\"color:rgb(0, 0, 255)\">bar</p>baz" but got "foo<br><span style=\"color:rgb(0, 0, 255)\">bar</span><br>baz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "foo<ol><li style=color:blue>[bar]</ol>baz" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li value=\"5\">bar</li></ol>" but got "<ol><li>foo</li><li>bar<br></li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol><li value=5>[bar]</ol></ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo</li><li value=\"5\">bar</li></ul>" but got "<ul><li>foo</li><li>bar<br></li></ul>"
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ul><li>foo</li><ol><li value=5>[bar]</ol></ul>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li><span style=\"color:rgb(0, 0, 255)\">bar</span></li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li><font color=\"#0000ff\">bar</font></li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz</li></ol>"
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar]</ol><li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz<br></li><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol start=5><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz<br></li><li>quz</li></ol>"
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</li><ol id=abc><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li><span style=\"color:rgb(0, 0, 255)\">bar</span></li><li><span style=\"color:rgb(0, 0, 255)\">baz</span></li><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz<br></li><li>quz</li></ol>"
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li><font color=\"#0000ff\">bar</font></li><li><font color=\"#0000ff\">baz</font></li><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz<br></li><li>quz</li></ol>"
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=color:blue><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz<br></li><li>quz</li></ol>"
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li><li>bar</li><li>baz</li><li>quz</li></ol>" but got "<ol><li>foo</li><li>bar<br></li><li>baz<br></li><li>quz</li></ol>"
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<ol><li>foo</li><ol style=text-indent:1em><li>[bar<li>baz]</ol><li>quz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>extra</p>" but got "<blockquote>foo<br></blockquote><p>extra</p>"
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><ol><li>[foo]</ol></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo</blockquote><ol><li>bar</li></ol><blockquote>baz</blockquote><p>extra</p>" but got "<blockquote>foo<br>bar<br>baz</blockquote><p>extra</p>"
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote>foo<ol><li>[bar]</ol>baz</blockquote><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote><ol><li>foo</li><li>bar</li><li>baz</li></ol></blockquote><p>extra</p>" but got "<blockquote><ol><li>foo</li><li>bar<br></li><li>baz</li></ol></blockquote><p>extra</p>"
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><ol><li>foo</li><ol><li>[bar]</ol><li>baz</ol></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<h1>foo</h1>" but got "foo<br>"
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li><h1>[foo]</h1></ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<xmp>foo</xmp>" but got "foo<br>"
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li><xmp>[foo]</xmp></li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote><ol><li>foo</li><li>bar</li><li>baz</li></ol></blockquote>" but got "<blockquote><ol><li>foo<div><li>bar<br></li></div></li><li>baz</li></ol></blockquote>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote><ol><li>foo</li><li>bar</li><li>baz</li></ol></blockquote>" but got "<blockquote><ol><li>foo<div><li>bar<br></li></div></li><li>baz</li></ol></blockquote>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote><ol><li>foo<div><ol><li>[bar]</ol></div><li>baz</ol></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>[foo]</p> </blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> </blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <div>foo</div>" but got "foo<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <p>foo</p>" but got "foo<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div> " but got "foo<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p> " but got "foo<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]</li> </ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <div>foo</div> " but got "foo<br><ol> </ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <p>foo</p> " but got "foo<br><ol> </ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> </ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <div>foo</div>" but got "foo<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <p>foo</p>" but got "foo<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div> " but got "foo<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p> " but got "foo<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul><li>[foo]</li> </ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <div>foo</div> " but got "foo<br><ul> </ul>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <p>foo</p> " but got "foo<br><ul> </ul>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> </ul>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <p>foo</p><blockquote> <p>bar</p> <p>baz</p></blockquote>" but got "foo<br><blockquote>  <p>bar</p> <p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote> <p>[foo]</p> <p>bar</p> <p>baz</p></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote> <p>foo</p> </blockquote><p>bar</p><blockquote> <p>baz</p></blockquote>" but got "<blockquote> <p>foo</p> </blockquote>bar<br><blockquote> <p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>[bar]</p> <p>baz</p></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote> <p>foo</p> <p>bar</p> </blockquote><p>baz</p>" but got "<blockquote> <p>foo</p> <p>bar</p> </blockquote>baz<br>"
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote> <p>foo</p> <p>bar</p> <p>[baz]</p></blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <div>foo</div> <ol><li>bar</li> <li>baz</li></ol>" but got "foo<br><ol> <li>bar</li> <li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <p>foo</p> <ol><li>bar</li> <li>baz</li></ol>" but got "foo<br><ol> <li>bar</li> <li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>[foo]</li> <li>bar</li> <li>baz</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol> <li>foo</li></ol> <div>bar</div> <ol><li>baz</li></ol>" but got "<ol> <li>foo</li> </ol>bar<br><ol> <li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol> <li>foo</li></ol> <p>bar</p> <ol><li>baz</li></ol>" but got "<ol> <li>foo</li> </ol>bar<br><ol> <li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>[bar]</li> <li>baz</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol> <li>foo</li> <li>bar</li></ol> <div>baz</div>" but got "<ol> <li>foo</li> <li>bar</li> </ol>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol> <li>foo</li> <li>bar</li></ol> <p>baz</p>" but got "<ol> <li>foo</li> <li>bar</li> </ol>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol> <li>foo</li> <li>bar</li> <li>[baz]</li></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <div>foo</div> <ul><li>bar</li> <li>baz</li></ul>" but got "foo<br><ul> <li>bar</li> <li>baz</li></ul>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected " <p>foo</p> <ul><li>bar</li> <li>baz</li></ul>" but got "foo<br><ul> <li>bar</li> <li>baz</li></ul>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>[foo]</li> <li>bar</li> <li>baz</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul> <li>foo</li></ul> <div>bar</div> <ul><li>baz</li></ul>" but got "<ul> <li>foo</li> </ul>bar<br><ul> <li>baz</li></ul>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul> <li>foo</li></ul> <p>bar</p> <ul><li>baz</li></ul>" but got "<ul> <li>foo</li> </ul>bar<br><ul> <li>baz</li></ul>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>[bar]</li> <li>baz</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul> <li>foo</li> <li>bar</li></ul> <div>baz</div>" but got "<ul> <li>foo</li> <li>bar</li> </ul>baz<br>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul> <li>foo</li> <li>bar</li></ul> <p>baz</p>" but got "<ul> <li>foo</li> <li>bar</li> </ul>baz<br>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ul> <li>foo</li> <li>bar</li> <li>[baz]</li></ul>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>a</div><table><tbody><tr><td><br></td></tr></tbody></table>" but got "<ol><li><table><tbody><tr><td></td></tr></tbody></table></li></ol>a<table><tbody><tr><td><br></td></tr></tbody></table>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>a</p><table><tbody><tr><td><br></td></tr></tbody></table>" but got "<ol><li><table><tbody><tr><td></td></tr></tbody></table></li></ol>a<table><tbody><tr><td><br></td></tr></tbody></table>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[]a<table><tr><td><br></table></ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo</blockquote><span>bar</span>" but got "<blockquote></blockquote>bar<br><blockquote><span>foo<br></span></blockquote>"
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><span>foo<br>[bar]</span></blockquote>" queryCommandValue("outdent") after
Harness: the test ran to completion.

