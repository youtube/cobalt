/*
 * Copyright (C) 2007 Henry Mason <hmason@mac.com>
 * Copyright (C) 2011 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

// https://html.spec.whatwg.org/C/#the-messageevent-interface

[
    Exposed=(Window,Worker,AudioWorklet)
] interface MessageEvent : Event {
    [RaisesException] constructor(DOMString type, optional MessageEventInit eventInitDict = {});
    [CachedAttribute=IsDataDirty, CallWith=ScriptState] readonly attribute any data;
    readonly attribute DOMString origin;
    readonly attribute DOMString lastEventId;
    // TODO(bashi): |source| should be of type MessageEventSource.
    readonly attribute EventTarget? source;
    [CachedAttribute=isPortsDirty] readonly attribute FrozenArray<MessagePort> ports;
    readonly attribute UserActivation? userActivation;

    // TODO(foolip): |source| should be of type MessageEventSource.
    [MeasureAs=InitMessageEvent] void initMessageEvent(
        DOMString type,
        optional boolean bubbles = false,
        optional boolean cancelable = false,
        optional any data = null,
        optional USVString origin = "",
        optional DOMString lastEventId = "",
        optional EventTarget? source = null,
        optional sequence<MessagePort> ports = []);
};
