--- third_party/blink/renderer/platform/network/http_parsers.cc
+++ third_party/blink/renderer/platform/network/http_parsers.cc
@@ -196,25 +196,17 @@
 
   return blink::CSPSourceList::New(
       std::move(sources), std::move(nonces), std::move(hashes),
-<<<<<<< HEAD
       std::move(url_hashes), std::move(eval_hashes), source_list->allow_self,
       source_list->allow_star, source_list->allow_inline,
       source_list->allow_inline_speculation_rules, source_list->allow_eval,
       source_list->allow_wasm_eval, source_list->allow_wasm_unsafe_eval,
       source_list->allow_dynamic, source_list->allow_unsafe_hashes,
-      source_list->report_sample, source_list->report_hash_algorithm);
-=======
-      source_list->allow_self, source_list->allow_star,
-      source_list->allow_inline, source_list->allow_inline_speculation_rules,
-      source_list->allow_eval, source_list->allow_wasm_eval,
-      source_list->allow_wasm_unsafe_eval, source_list->allow_dynamic,
-      source_list->allow_unsafe_hashes,
 #if BUILDFLAG(IS_COBALT)
-      source_list->report_sample, source_list->cobalt_insecure_local_network);
+      source_list->report_sample, source_list->report_hash_algorithm,
+      source_list->cobalt_insecure_local_network);
 #else
-      source_list->report_sample);
+      source_list->report_sample, source_list->report_hash_algorithm);
 #endif
->>>>>>> ec4e2c2ce45 (Add custom cobalt-insecure-local-network csp source (#4958))
 }
 
 blink::ContentSecurityPolicyHeaderPtr ConvertToBlink(
