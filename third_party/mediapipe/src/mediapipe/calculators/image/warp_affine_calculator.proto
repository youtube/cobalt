// Copyright 2021 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";
import "mediapipe/gpu/gpu_origin.proto";

message WarpAffineCalculatorOptions {
  extend CalculatorOptions {
    optional WarpAffineCalculatorOptions ext = 373693895;
  }

  // Pixel extrapolation methods. See @border_mode.
  enum BorderMode {
    BORDER_UNSPECIFIED = 0;
    BORDER_ZERO = 1;
    BORDER_REPLICATE = 2;
  }

  // Pixel sampling interpolation methods. See @interpolation.
  enum Interpolation {
    INTER_UNSPECIFIED = 0;
    INTER_LINEAR = 1;
    INTER_CUBIC = 2;
  }

  // Pixel extrapolation method.
  // When converting image to tensor it may happen that tensor needs to read
  // pixels outside image boundaries. Border mode helps to specify how such
  // pixels will be calculated.
  //
  // BORDER_REPLICATE is used by default.
  optional BorderMode border_mode = 1;

  // For CONVENTIONAL mode for OpenGL, input image starts at bottom and needs
  // to be flipped vertically as tensors are expected to start at top.
  // (DEFAULT or unset interpreted as CONVENTIONAL.)
  optional GpuOrigin.Mode gpu_origin = 2;

  // Sampling method for neighboring pixels.
  // INTER_LINEAR (bilinear) linearly interpolates from the nearest 4 neighbors.
  // INTER_CUBIC (bicubic) interpolates a small neighborhood with cubic weights.
  // INTER_UNSPECIFIED or unset interpreted as INTER_LINEAR.
  optional Interpolation interpolation = 3;
}
