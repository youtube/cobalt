This is a testharness.js-based test.
Found 50 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///c:/foo/bar.html" but got "file:///tmp/mock/c:/foo/bar.html"
[FAIL] Parsing: <  File:c|////foo\\bar.html> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///c:////foo/bar.html" but got "file:///tmp/mock/c%7C////foo/bar.html"
[FAIL] Parsing: <C|/foo/bar> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///C:/foo/bar" but got "file:///tmp/mock/C%7C/foo/bar"
[FAIL] Parsing: </C|\\foo\\bar> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///C:/foo/bar" but got "file:///C%7C/foo/bar"
[FAIL] Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///C:/foo/bar" but got "//C|/foo/bar"
[FAIL] Parsing: <file://localhost> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///" but got "file://localhost/"
[FAIL] Parsing: <file://localhost/> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///" but got "file://localhost/"
[FAIL] Parsing: <file://localhost/test> against <file:///tmp/mock/path>
  assert_equals: href expected "file:///test" but got "file://localhost/test"
[FAIL] Parsing: <file:///w|m> against <about:blank>
  assert_equals: href expected "file:///w|m" but got "file:///w%7Cm"
[FAIL] Parsing: <file:///w||m> against <about:blank>
  assert_equals: href expected "file:///w||m" but got "file:///w%7C%7Cm"
[FAIL] Parsing: <file:///w|/m> against <about:blank>
  assert_equals: href expected "file:///w:/m" but got "file:///w%7C/m"
[FAIL] Parsing: <file:C|/m/> against <about:blank>
  assert_equals: href expected "file:///C:/m/" but got "file:///C%7C/m/"
[FAIL] Parsing: <file:C||/m/> against <about:blank>
  assert_equals: href expected "file:///C||/m/" but got "file:///C%7C%7C/m/"
[FAIL] Parsing: <..> against <file:///C:/>
  assert_equals: href expected "file:///C:/" but got "file:///"
[FAIL] Parsing: </> against <file:///C:/a/b>
  assert_equals: href expected "file:///C:/" but got "file:///"
[FAIL] Parsing: </> against <file://h/C:/a/b>
  assert_equals: href expected "file://h/C:/" but got "file://h/"
[FAIL] Parsing: <//d:> against <file:///C:/a/b>
  assert_equals: href expected "file:///d:" but got "//d:"
[FAIL] Parsing: <//d:/..> against <file:///C:/a/b>
  assert_equals: href expected "file:///d:/" but got "//d:/.."
[FAIL] Parsing: <file:\\\\//> against <about:blank>
  assert_equals: href expected "file:////" but got "file:///"
[FAIL] Parsing: <file:\\\\\\\\> against <about:blank>
  assert_equals: href expected "file:////" but got "file:///"
[FAIL] Parsing: <file:\\\\\\\\?fox> against <about:blank>
  assert_equals: href expected "file:////?fox" but got "file:///?fox"
[FAIL] Parsing: <file:\\\\\\\\#guppy> against <about:blank>
  assert_equals: href expected "file:////#guppy" but got "file:///#guppy"
[FAIL] Parsing: <file:\\\\localhost//> against <about:blank>
  assert_equals: href expected "file:////" but got "file://localhost//"
[FAIL] Parsing: <file://\\/localhost//cat> against <about:blank>
  assert_equals: href expected "file:////localhost//cat" but got "file:///localhost//cat"
[FAIL] Parsing: <file://localhost//a//../..//> against <about:blank>
  assert_equals: href expected "file://///" but got "file://localhost///"
[FAIL] Parsing: </////mouse> against <file:///elephant>
  assert_equals: href expected "file://///mouse" but got "file:///mouse"
[FAIL] Parsing: <\\/localhost//pig> against <file://lion/>
  assert_equals: href expected "file:////pig" but got "file://localhost//pig"
[FAIL] Parsing: <//localhost//pig> against <file://lion/>
  assert_equals: href expected "file:////pig" but got "file://localhost//pig"
[FAIL] Parsing: <C|> against <file://host/dir/file>
  assert_equals: href expected "file://host/C:" but got "file://host/dir/C%7C"
[FAIL] Parsing: <C|> against <file://host/D:/dir1/dir2/file>
  assert_equals: href expected "file://host/C:" but got "file://host/D:/dir1/dir2/C%7C"
[FAIL] Parsing: <C|#> against <file://host/dir/file>
  assert_equals: href expected "file://host/C:#" but got "file://host/dir/C%7C#"
[FAIL] Parsing: <C|?> against <file://host/dir/file>
  assert_equals: href expected "file://host/C:?" but got "file://host/dir/C%7C?"
[FAIL] Parsing: <C|/> against <file://host/dir/file>
  assert_equals: href expected "file://host/C:/" but got "file://host/dir/C%7C/"
[FAIL] Parsing: <C|\n/> against <file://host/dir/file>
  assert_equals: href expected "file://host/C:/" but got "file://host/dir/C%7C/"
[FAIL] Parsing: <C|\\> against <file://host/dir/file>
  assert_equals: href expected "file://host/C:/" but got "file://host/dir/C%7C/"
[FAIL] Parsing: <C|a> against <file://host/dir/file>
  assert_equals: href expected "file://host/dir/C|a" but got "file://host/dir/C%7Ca"
[FAIL] Parsing: </c|/foo/bar> against <file:///c:/baz/qux>
  assert_equals: href expected "file:///c:/foo/bar" but got "file:///c%7C/foo/bar"
[FAIL] Parsing: <C|/> against <file://host/>
  assert_equals: href expected "file://host/C:/" but got "file://host/C%7C/"
[FAIL] Parsing: <//C:/> against <file://host/>
  assert_equals: href expected "file:///C:/" but got "//C:/"
[FAIL] Parsing: <file://C:/> against <file://host/>
  assert_equals: href expected "file:///C:/" but got "file://C:/"
[FAIL] Parsing: <file:/C|/> against <about:blank>
  assert_equals: href expected "file:///C:/" but got "file:///C%7C/"
[FAIL] Parsing: <file://C|/> against <about:blank>
  assert_equals: href expected "file:///C:/" but got "file://C|/"
[FAIL] Parsing: <file://localhost//a//../..//foo> against <about:blank>
  assert_equals: href expected "file://///foo" but got "file://localhost///foo"
[FAIL] Parsing: <file://localhost////foo> against <about:blank>
  assert_equals: href expected "file://////foo" but got "file://localhost////foo"
[FAIL] Parsing: <file:////foo> against <about:blank>
  assert_equals: href expected "file:////foo" but got "file:///foo"
[FAIL] Parsing: <file:////one/two> against <file:///>
  assert_equals: href expected "file:////one/two" but got "file:///one/two"
[FAIL] Parsing: <////one/two> against <file:///>
  assert_equals: href expected "file:////one/two" but got "file:///one/two"
[FAIL] Parsing: <file://loC𝐀𝐋𝐇𝐨𝐬𝐭/usr/bin> against <about:blank>
  assert_equals: href expected "file:///usr/bin" but got "file://localhost/usr/bin"
[FAIL] Parsing: <file://xn--/p> against <about:blank>
  assert_unreached: Expected URL to fail parsing Reached unreachable code
[FAIL] Parsing: </\\//\\/a/../> against <file:///>
  assert_equals: href expected "file://////" but got "file:///"
Harness: the test ran to completion.

