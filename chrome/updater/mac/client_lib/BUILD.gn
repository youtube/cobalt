# Copyright 2024 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//chrome/updater/apply_updater_branding.gni")
import("//testing/test.gni")

apply_updater_branding("cruregistration_header_branding") {
  template_file = "CRURegistration.h.in"
  output = "$target_gen_dir/CRURegistration.h"
}

# CRURegistration is intended to be used outside of Chromium, so it imports
# headers by name only. However, the generated header (with brand substitution)
# will not end up in the same directory as the sources that import it, so the
# location it is generated into must be added as an include path.
config("cruregistration_include_path") {
  include_dirs = [ "$target_gen_dir" ]
}

source_set("cruregistration_base_sources") {
  sources = [
    "$target_gen_dir/CRURegistration.h",
    "CRURegistration-Private.h",
    "CRURegistration.m",
  ]
  public_deps = [ ":cruregistration_header_branding" ]
  assert_no_deps = [
    "//base:*",
    "//base/*",
    "//net:*",
    "//net/*",
    "//third_party/*",
  ]
  public_configs = [ ":cruregistration_include_path" ]
  frameworks = [ "Foundation.framework" ]
}

source_set("public_sources") {
  sources = [ "CRURegistrationPaths.m" ]
  public_deps = [ ":cruregistration_base_sources" ]
  frameworks = [ "Foundation.framework" ]
}

source_set("integration_test_sources") {
  sources = [ "CRURegistrationTestPaths.m" ]
  public_deps = [ ":cruregistration_base_sources" ]
  frameworks = [ "Foundation.framework" ]
}

source_set("unit_test_sources") {
  testonly = true
  sources = [ "CRURegistration_unittests.mm" ]
  deps = [
    ":public_sources",
    "//base",
    "//net/",
    "//testing/gtest",
    "//url/",
  ]
  data_deps = [ "//chrome/updater/mac/client_lib/test_helpers" ]
  frameworks = [ "Foundation.framework" ]
}

copy("archive_literal_sources") {
  sources = [
    "CRURegistration-Private.h",
    "CRURegistration.m",
    "CRURegistrationPaths.m",
  ]
  outputs = [ "$root_out_dir/CRURegistration/{{source_file_part}}" ]
}

copy("archive_interpolated_sources") {
  sources = [ "$target_gen_dir/CRURegistration.h" ]
  outputs = [ "$root_out_dir/CRURegistration/{{source_file_part}}" ]
  deps = [ ":cruregistration_header_branding" ]
}

group("archive_sources") {
  public_deps = [
    ":archive_interpolated_sources",
    ":archive_literal_sources",
  ]
}
