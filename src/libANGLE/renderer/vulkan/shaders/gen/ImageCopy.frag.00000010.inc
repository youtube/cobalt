// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000010.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000010[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x7b,0x6c,0xce,0x67,
    0x14,0xfe,0x9d,0xb7,0x37,0xea,0xd2,0xba,0x95,0x2e,0x73,0x2d,0x99,0xa9,0xb9,0x0d,
    0x23,0xa5,0xb4,0x4a,0x97,0x31,0x77,0x22,0x22,0xac,0xee,0x8c,0x9a,0x61,0xb2,0xcc,
    0x86,0xb1,0xcc,0x26,0x96,0x48,0x2c,0xc1,0x9a,0x85,0x6d,0x22,0x26,0x73,0xc9,0x26,
    0x36,0x86,0xbf,0xc4,0x42,0x76,0xf1,0xc7,0x22,0x13,0xb2,0xd1,0x64,0x89,0x4c,0xc8,
    0x36,0xcd,0x4c,0xb1,0xbd,0x4f,0xcf,0x73,0x7c,0xc7,0x97,0xc9,0xbe,0xe4,0xf5,0x7d,
    0xef,0x73,0xce,0x79,0xce,0x39,0xcf,0x7b,0xf9,0xfd,0x34,0x23,0x14,0xe5,0x24,0x89,
    0x24,0xb9,0x49,0xa3,0x64,0x49,0x48,0x1a,0x3e,0x2d,0x92,0x10,0x91,0x24,0x69,0x92,
    0x64,0x37,0x7c,0x57,0x8e,0x99,0x34,0xa6,0xd7,0x8a,0x95,0x73,0x7b,0xf5,0x1f,0xd0,
    0x07,0xf6,0xe6,0x49,0x46,0x83,0x1f,0x6c,0x79,0x49,0x4e,0x92,0x19,0xbf,0x31,0x96,
    0x56,0x2d,0xaa,0x06,0x5e,0x1f,0x47,0x9b,0x68,0xcc,0x8f,0x7e,0xc0,0x63,0x82,0xe4,
    0xd9,0x24,0x2b,0x19,0xa1,0xf4,0x49,0x11,0xbf,0x0d,0x13,0x62,0x8d,0x1c,0x16,0x88,
    0xe5,0x3b,0x2c,0x83,0x58,0x6b,0x87,0x65,0x12,0x6b,0xe7,0xb0,0x2c,0x62,0x8f,0x3b,
    0x2c,0x9b,0x58,0x27,0x87,0xe5,0x10,0xeb,0xea,0xb0,0x46,0xc4,0xba,0x3b,0xac,0x31,
    0xb1,0x9e,0x0e,0xcb,0x25,0xd6,0xc7,0x61,0x4d,0x88,0xf5,0x77,0x58,0x53,0x62,0x83,
    0x1c,0xd6,0x8c,0xd8,0x10,0x87,0x35,0x27,0x36,0x1c,0x7a,0xc7,0x4e,0x4d,0x83,0xca,
    0xd8,0x61,0x3d,0xb9,0xf3,0x38,0xcf,0x8c,0x82,0x75,0xa1,0x86,0x36,0xef,0xec,0xe6,
    0xd0,0xbe,0x03,0xe7,0xad,0x22,0x0b,0x78,0x3a,0x47,0xce,0x0c,0x72,0x16,0xc4,0x5f,
    0xd9,0xd4,0xa2,0x4d,0xf4,0xcf,0xe3,0x6f,0xac,0x43,0xdb,0x38,0xcf,0x67,0xae,0xc0,
    0x79,0x01,0xf5,0x83,0xd6,0xc5,0xf1,0x5f,0xfc,0x6e,0x0f,0x7d,0x7b,0x3d,0x5f,0xd2,
    0x3a,0x7a,0x75,0x70,0x38,0x7a,0x98,0xf8,0xe5,0xd8,0x32,0x9b,0x43,0xc7,0x29,0x53,
    0x7e,0x2c,0xb5,0x79,0x8f,0x38,0x86,0xe6,0xbe,0x3d,0xcc,0xe6,0xd0,0xf4,0x40,0x65,
    0xd5,0x50,0x9b,0xf7,0x8d,0xe3,0xd7,0x03,0xdd,0x1e,0xcc,0xa1,0xd1,0xce,0x1d,0x85,
    0xc3,0x51,0x67,0x39,0xeb,0xc4,0xa7,0x43,0xdc,0xa5,0x23,0xb8,0x3f,0xac,0x5e,0x1b,
    0xe5,0xff,0x33,0xcc,0xa7,0x53,0xe4,0xac,0xe0,0xfa,0x82,0xab,0x84,0xf3,0x91,0xc4,
    0x8a,0xa9,0xcd,0x28,0x6a,0x03,0xff,0x4a,0xda,0xf2,0x9d,0x7d,0x34,0xf7,0x1c,0xec,
    0x63,0x68,0x2f,0xa7,0x1d,0xdf,0xe3,0x58,0xb3,0xf9,0x4f,0xa3,0x9e,0x36,0x9f,0xc3,
    0xf5,0xb7,0x79,0x35,0xd7,0xdb,0xe6,0x1b,0xb9,0x57,0xb1,0x16,0x5b,0x18,0x9b,0xe1,
    0xec,0xdb,0xb8,0x6f,0x4d,0xb3,0x9a,0xb4,0x7c,0x87,0xb8,0x0f,0x6d,0x7e,0x9a,0x35,
    0x82,0xef,0x1c,0xf9,0x82,0xb3,0x9f,0xe7,0xfe,0xb6,0xf9,0x25,0xee,0x59,0xf4,0x77,
    0x99,0xb1,0x79,0xce,0x7e,0x25,0x2d,0xbe,0x36,0x2d,0xff,0xb5,0xb4,0xbd,0x73,0xab,
    0xc1,0xba,0x6e,0x18,0xf8,0xee,0x50,0xdb,0x02,0xea,0x7f,0x87,0xf7,0x07,0xb0,0xc2,
    0x98,0x29,0x88,0xd6,0x27,0xe4,0x4c,0xff,0x06,0x47,0x06,0x27,0xf0,0x2d,0xe1,0x3c,
    0x53,0x1e,0xae,0x21,0x57,0x54,0x33,0xf4,0xdc,0x4c,0xb4,0xfe,0x0c,0xc6,0xb7,0xa6,
    0xcd,0x6a,0xc0,0xbc,0x8d,0xa4,0x34,0x46,0xfe,0x09,0xb1,0xc1,0x65,0x7b,0x5f,0x7e,
    0xb0,0x6f,0x27,0xc6,0xf9,0xd6,0x0d,0x1f,0x0e,0x1d,0x18,0x57,0x3e,0xb0,0xbf,0x84,
    0x9c,0xb7,0x23,0x82,0xfd,0x30,0x94,0x67,0xe7,0x2e,0x7b,0x1a,0x17,0x57,0x11,0x7a,
    0xdf,0x23,0x76,0xd7,0xf5,0x52,0xcd,0x73,0x77,0x9f,0xf6,0xb2,0xc8,0x80,0xbd,0xd6,
    0x43,0x74,0x3f,0x8e,0x22,0x5f,0xc3,0xbe,0x13,0xc5,0xdf,0x8c,0x3e,0x98,0xf7,0x14,
    0x8d,0x03,0x8e,0x38,0xec,0xc1,0xa7,0x18,0x37,0x9a,0x71,0xd8,0x87,0xbd,0x44,0xf1,
    0xfd,0xd1,0x07,0x67,0xb6,0xb7,0x28,0x86,0xfd,0xf9,0x57,0xac,0x7c,0x00,0x35,0xbb,
    0x13,0xfd,0x61,0xeb,0x13,0x07,0x30,0xf4,0x83,0xdf,0x13,0x62,0x1c,0x74,0xeb,0x27,
    0x9a,0x13,0x9f,0x37,0xa8,0xef,0xd3,0xa2,0xf8,0xc4,0xa8,0x0e,0x6a,0xea,0x1d,0x14,
    0x33,0xbf,0xbf,0x23,0x87,0x71,0xe1,0xbb,0x2e,0x6a,0x01,0xbf,0x49,0x41,0x7d,0xb2,
    0x18,0xd3,0xc7,0xf5,0x30,0x90,0x3d,0x4c,0x73,0x3d,0x3c,0x23,0x8a,0x5b,0x0f,0x83,
    0x44,0x31,0xeb,0xa1,0xd4,0xf5,0x00,0xdb,0xe0,0x38,0x4a,0x99,0x77,0xb0,0xeb,0xa1,
    0x44,0x34,0xb7,0xb8,0x1e,0x86,0x88,0xe2,0xd6,0x43,0xbf,0xa0,0x98,0xf9,0xa1,0x07,
    0xe3,0x2a,0x75,0x3d,0x4c,0x0e,0xea,0x83,0xbe,0x10,0x33,0xd8,0xf5,0x30,0x8c,0x3d,
    0xcc,0x71,0x3d,0x0c,0x17,0xc5,0xad,0x87,0x32,0x51,0xcc,0x7a,0x18,0xe9,0x7a,0x80,
    0xad,0x1c,0x1c,0xcc,0x5b,0x2e,0xba,0x8f,0x90,0xb7,0x42,0x34,0xf7,0xe4,0x90,0x3a,
    0x0f,0xa8,0xd1,0x7c,0x47,0xba,0x1a,0xa7,0xd0,0x0f,0x75,0x57,0x90,0x13,0xf5,0xe0,
    0xcc,0x64,0xf1,0xbc,0xd8,0x9e,0xcb,0x66,0xcd,0xb5,0x6e,0xcf,0xe5,0x88,0xe2,0xeb,
    0xb8,0xe7,0x1a,0x8b,0x62,0xe0,0x45,0x1c,0xee,0x85,0x26,0x8c,0xcb,0x25,0x37,0x34,
    0x6d,0x2a,0x8a,0x9b,0xee,0xcd,0x45,0x63,0xf1,0x31,0x2c,0x8f,0x18,0xe0,0xf1,0x51,
    0x7b,0x9c,0xcf,0x7c,0x51,0x5f,0xd8,0x9a,0x4a,0x2a,0x47,0x0b,0xe6,0xb8,0x92,0xa4,
    0x72,0xb4,0x14,0xc5,0x67,0xc5,0x5e,0x71,0xde,0x5a,0xb1,0x27,0x70,0x04,0xda,0x6d,
    0x3d,0x26,0x30,0xbe,0xda,0xad,0xc7,0x44,0x51,0xdc,0xd6,0x63,0x92,0x28,0x66,0xeb,
    0x51,0xe5,0xd6,0x03,0xb6,0xc9,0x71,0x54,0x51,0xe3,0xc9,0xec,0x0d,0x77,0xc2,0x54,
    0xd1,0xdc,0x09,0xe3,0xce,0xf3,0x77,0x7d,0xfc,0x0d,0xae,0xd3,0x8c,0xc1,0xf7,0xd7,
    0xcc,0x75,0x46,0x34,0xae,0x3d,0x63,0x7e,0x70,0xb9,0x60,0xfb,0x26,0x8e,0x73,0x8c,
    0xc3,0x77,0xd3,0xd8,0x23,0x72,0x7d,0x4b,0xbd,0x1e,0x63,0x5e,0x3c,0x67,0xdf,0x62,
    0x1d,0xdf,0x89,0xda,0xf1,0xac,0xdd,0x40,0xec,0x7b,0x51,0xbc,0x27,0xf7,0xc8,0x79,
    0x72,0x82,0xdf,0xe2,0xce,0xb2,0x96,0xa2,0x34,0x1f,0xd4,0xf4,0x4f,0xcc,0x76,0x9b,
    0x58,0x1d,0x6b,0x98,0x1a,0x94,0x17,0x75,0x9d,0x65,0xad,0x38,0x3b,0x58,0x83,0x01,
    0x41,0xed,0xad,0xdc,0x5a,0x23,0x66,0x3a,0x35,0x12,0xf6,0x5b,0x9b,0xa6,0xd1,0x05,
    0xe6,0xbc,0xe0,0x34,0xfa,0x49,0x34,0xce,0x34,0xba,0xea,0x34,0x82,0xed,0x62,0x1c,
    0x97,0x19,0x77,0xd9,0x69,0xf4,0xb3,0xd3,0x68,0x7a,0x9a,0x46,0xbf,0x88,0xda,0xbd,
    0x46,0x57,0x44,0x71,0xd3,0xa8,0x96,0x9c,0x17,0x9d,0x46,0x97,0x58,0x4b,0x51,0x9a,
    0xcf,0x55,0xa7,0x51,0xad,0xd3,0x68,0x5a,0x50,0x5e,0xd4,0x75,0x89,0xb5,0x9a,0x46,
    0x83,0x82,0xda,0x07,0xf0,0xfc,0x9a,0x46,0x33,0xa9,0x51,0x60,0xbf,0x75,0x69,0x1a,
    0x5d,0x63,0xce,0x6b,0x4e,0xa3,0xdf,0x44,0xe3,0x4c,0xa3,0x5b,0x4e,0x23,0xd8,0xae,
    0xc7,0x71,0x93,0x71,0x37,0x9d,0x46,0xbf,0x3b,0x8d,0x66,0xa6,0x69,0xf4,0x87,0xa8,
    0xdd,0x6b,0xf4,0xa7,0x28,0x6e,0x1a,0xd5,0x91,0xf3,0xba,0xd3,0xe8,0x06,0x6b,0x29,
    0x4a,0xf3,0xb9,0xe5,0x34,0xaa,0x73,0x1a,0x4d,0x0f,0xca,0x8b,0xba,0x6e,0xb0,0x56,
    0xd3,0xa8,0x24,0xa8,0x1d,0x5a,0x05,0xf2,0xd9,0xd9,0xab,0x22,0x07,0xfc,0x66,0x70,
    0xaf,0xe1,0xce,0x43,0x4c,0x9d,0x3b,0xf3,0xb3,0x79,0xe6,0x37,0xba,0x33,0x3f,0x47,
    0x14,0xb7,0x33,0x3f,0x57,0x14,0xb3,0x33,0xbf,0xde,0xe9,0x07,0xdb,0xbc,0x38,0x96,
    0x32,0xef,0x52,0xc7,0x5d,0x4d,0xee,0x6d,0x8e,0x7b,0x99,0x28,0x6e,0xdc,0x2f,0x89,
    0x62,0xc6,0xbd,0xca,0x71,0xc3,0xb6,0x3c,0x8e,0x55,0xe4,0x5e,0xee,0xee,0x93,0x15,
    0xa2,0x7d,0xe1,0x9d,0xe2,0x18,0xb9,0x56,0x8a,0xe2,0x35,0xd4,0xc2,0xe2,0x56,0x51,
    0x0b,0xf8,0xbc,0x22,0x9a,0x13,0x75,0xae,0x24,0x3f,0xf2,0xae,0x73,0x79,0xe1,0xb3,
    0x1a,0xf7,0x39,0xe3,0x57,0xbb,0xbc,0xaf,0xba,0xbc,0xe3,0xe2,0x9b,0x25,0xde,0x39,
    0x5f,0x23,0x36,0x23,0xa4,0xde,0x59,0x02,0xef,0x6b,0xd8,0xd7,0x88,0xc6,0xd9,0xd8,
    0x14,0xb9,0x80,0xbf,0x2e,0x1a,0xbb,0xa6,0xa1,0xff,0xc6,0x0d,0x6b,0xb5,0x96,0x5c,
    0xb0,0x65,0xf2,0xdd,0xd9,0xde,0x69,0xd1,0x93,0xd5,0xb4,0xce,0xad,0xef,0x2c,0xe6,
    0x46,0x9f,0x6b,0x59,0x3b,0x7c,0xd7,0xd3,0x77,0x9e,0xab,0x7f,0xc1,0x7f,0xd4,0xbf,
    0xe8,0x11,0xf5,0xbf,0xc7,0x3a,0x17,0x8b,0xfa,0x2c,0x70,0x75,0x2e,0x61,0xcc,0xe2,
    0x47,0xd4,0x69,0xb9,0xd7,0xbb,0x3a,0x67,0x06,0xad,0x15,0xb5,0x2f,0xe1,0xbe,0xb1,
    0xbd,0xb2,0x89,0x7b,0xe5,0x90,0xdb,0x2b,0xef,0x88,0xe2,0xb6,0x57,0xde,0x15,0xc5,
    0x6c,0xaf,0x6c,0x77,0x6b,0x06,0xdb,0xe6,0x38,0xb6,0x33,0xef,0x66,0xd7,0xf3,0x16,
    0xd1,0xdc,0xf6,0xec,0xc9,0x09,0x0f,0xdf,0x19,0xf5,0x8c,0xa9,0x77,0x77,0xc6,0x3d,
    0xd1,0xb8,0xbe,0x8c,0xc9,0x0e,0xa9,0x5c,0xb0,0xdd,0xc7,0xdd,0x10,0x34,0x0e,0xdf,
    0xeb,0x99,0x2b,0x23,0x68,0x5c,0x4f,0x77,0x57,0x64,0x06,0xc5,0xf1,0x9e,0x6c,0x77,
    0x4b,0x56,0x48,0xdd,0x2d,0xb0,0x0f,0xa1,0x6e,0x39,0xe4,0xbc,0xef,0xee,0x8c,0x84,
    0x9c,0x78,0xaf,0xf6,0x3e,0xa8,0xc9,0xee,0x0c,0x60,0x76,0x67,0xbc,0x10,0xc8,0x1f,
    0x34,0xf6,0xbe,0xbb,0x33,0xca,0x82,0xda,0x4d,0x0f,0xd3,0x68,0x2b,0x35,0xb2,0x67,
    0x4f,0x61,0x9a,0x46,0xcd,0x98,0x13,0xdf,0xa6,0x51,0x5e,0xd0,0x38,0xd3,0xa8,0x9d,
    0xd3,0x08,0xb6,0x7c,0xdc,0x3b,0x8c,0x6b,0xe5,0x34,0x6a,0xc3,0x38,0xaf,0x51,0x41,
    0x50,0xdc,0x6b,0xd4,0xd6,0x69,0x54,0xe0,0x34,0x2a,0x24,0x27,0xf8,0x2d,0xbe,0x25,
    0x39,0x4d,0x23,0xf3,0x69,0xe7,0x34,0x2a,0x74,0x1a,0xcd,0x0e,0xca,0x8f,0xba,0x5a,
    0xb2,0x56,0xd3,0xa8,0x22,0xa8,0xbd,0x2c,0xed,0xd9,0xf3,0x3e,0x35,0xb2,0x67,0x4f,
    0x71,0x9a,0x46,0x1d,0x99,0xb3,0xa3,0xd3,0xa8,0x73,0xd0,0x38,0xd3,0xa8,0x87,0xd3,
    0x08,0xb6,0x2e,0x71,0x74,0x63,0x5c,0x37,0xa7,0xd1,0x13,0x8c,0xf3,0x1a,0x75,0x0f,
    0x8a,0x7b,0x8d,0x9e,0x74,0x1a,0x75,0x77,0x1a,0x15,0x93,0xb3,0x8b,0xd3,0xa8,0x2b,
    0x39,0x4d,0x23,0xf3,0xe9,0xe1,0x34,0x2a,0x76,0x1a,0xcd,0x0d,0xca,0x8f,0xba,0xba,
    0xb2,0x56,0xd3,0xa8,0x32,0xa8,0xbd,0xc2,0x3d,0x7b,0xec,0xec,0x6d,0x77,0x67,0x7e,
    0x3e,0xf7,0x1a,0xee,0x01,0xc4,0x14,0x87,0xd4,0x99,0xdf,0xc1,0x33,0x7f,0xda,0x9d,
    0xf9,0x9d,0xa2,0xb8,0x9d,0xf9,0x0f,0x44,0x31,0x3b,0xf3,0xa7,0xdc,0x99,0x87,0xad,
    0x26,0x8e,0xdd,0xcc,0xbb,0xdb,0xdd,0x27,0x1f,0x91,0xfb,0xbc,0xe3,0xfe,0x58,0x14,
    0x37,0xee,0x4f,0x44,0x31,0xe3,0x3e,0xe9,0xb8,0x61,0xdb,0x13,0xc7,0x3e,0x72,0xef,
    0x73,0xef,0xd9,0x9f,0x92,0xfb,0x92,0x7b,0xcf,0xde,0x2f,0x8a,0x9f,0xe1,0x7b,0xfb,
    0x67,0xa2,0x18,0xde,0xc5,0x2d,0xdf,0x01,0x51,0xbc,0x96,0xf9,0x0e,0xbb,0x7c,0xb0,
    0x1d,0x8c,0xe3,0x30,0xf3,0x1d,0x74,0x67,0x76,0x4c,0xd0,0x67,0xda,0x7c,0xf7,0x7f,
    0x2d,0xf3,0x3b,0xec,0xb4,0x5e,0x10,0xd4,0x07,0xb5,0x22,0xe6,0xa0,0xab,0xe7,0x73,
    0xd6,0x73,0xcd,0xd5,0xf3,0x85,0x28,0x6e,0xf5,0x1c,0x75,0xf5,0xc0,0x76,0x24,0x8e,
    0xa3,0xcc,0x73,0xc4,0xd5,0x33,0x96,0xf5,0x2c,0x70,0x6b,0x6f,0x7e,0x47,0x5d,0x3d,
    0x0b,0x83,0xfa,0xa0,0x46,0xc4,0x1c,0x71,0xf5,0x7c,0xc5,0x7a,0xb6,0xb9,0x7a,0x8e,
    0x89,0xe2,0x56,0xcf,0x09,0x57,0x0f,0x6c,0xc7,0xe3,0x38,0xc1,0x3c,0xc7,0x5d,0x3d,
    0xe3,0x83,0xfe,0xdd,0x64,0x61,0x48,0x3d,0x7f,0xcc,0xef,0x84,0xab,0xe7,0xc5,0xa0,
    0x3e,0xa8,0x11,0x31,0xc7,0xf9,0x9c,0x3c,0x49,0xdf,0x3d,0xee,0x99,0xb1,0x57,0x54,
    0x4b,0xf0,0x59,0x9e,0xe7,0x42,0x0a,0xb7,0xff,0x4f,0x5a,0xec,0x49,0x97,0x67,0x71,
    0xd0,0x5c,0xc8,0x8d,0x98,0x3d,0xcc,0x73,0x8a,0xbe,0x35,0xee,0x39,0xba,0x8b,0x7c,
    0x18,0xf6,0xf7,0xe0,0xe0,0x9e,0xa3,0x16,0x73,0xca,0xf1,0x2f,0x0a,0x9a,0x03,0x39,
    0x77,0xf1,0x0c,0x94,0xc6,0x08,0xfc,0x5d,0x06,0xb6,0x7b,0x71,0x97,0x0c,0x8a,0xe3,
    0x5f,0xac,0x76,0xb3,0xb4,0xc0,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out vec4 dst;
//
// #line 1 "shaders/src/ImageCopy.inc"
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//     int srcSampleCount;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// ivec2 transformImageCoords(ivec2 glFragCoords)
// {
//     ivec2 imageCoordsOut = glFragCoords - params . dstOffset;
//
//     if(params . flipX)
//     {
//         imageCoordsOut . x = - imageCoordsOut . x;
//     }
//     if(params . flipY)
//     {
//         imageCoordsOut . y = - imageCoordsOut . y;
//     }
//     if(params . rotateXY)
//     {
//         imageCoordsOut . xy = imageCoordsOut . yx;
//     }
//
//     return imageCoordsOut;
// }
//
//       vec4 transformSrcValue(vec4 srcValue)
// {
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//           vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     return dstValue;
// }
// #line 56 "shaders/src/ImageCopy.frag"
//
// void main()
// {
//     ivec2 srcSubImageCoords = transformImageCoords(ivec2(gl_FragCoord . xy));
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     dst = transformSrcValue(srcValue);
// }
