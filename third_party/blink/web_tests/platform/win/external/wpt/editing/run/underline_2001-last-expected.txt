This is a testharness.js-based test.
Found 21 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] [["stylewithcss","true"],["underline",""]] "foo<u>[bar]</u>baz" queryCommandState("underline") after
  assert_equals: Wrong result returned expected false but got true
[FAIL] [["stylewithcss","true"],["underline",""]] "foo<u>[bar]</u>baz" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","false"],["underline",""]] "foo<u>[bar]</u>baz" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","false"],["underline",""]] "foo<u>[bar]</u>baz" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["stylewithcss","true"],["underline",""]] "foo{<u>bar</u>}baz" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","true"],["underline",""]] "foo{<u>bar</u>}baz" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["stylewithcss","false"],["underline",""]] "foo{<u>bar</u>}baz" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","false"],["underline",""]] "foo{<u>bar</u>}baz" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["underline",""]] "fo[o<span style=text-decoration:underline>b]ar</span>baz" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\\"text-decoration:underline\\">obar</span>baz" but got "fo<u>ob</u><span style=\\"text-decoration:underline\\">ar</span>baz"
[FAIL] [["underline",""]] "fo[o<span style=text-decoration:underline>b]ar</span>baz" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["underline",""]] "fo[o<span style=text-decoration:underline>b]ar</span>baz" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","true"],["underline",""]] "<ins>fo[o</ins><u>b]ar</u>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ins>foo</ins>b<span style=\\"text-decoration:underline\\">ar</span>" but got "<ins>foo</ins>b<u>ar</u>"
[FAIL] [["stylewithcss","true"],["underline",""]] "<ins>fo[o</ins><u>b]ar</u>" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","true"],["underline",""]] "<ins>fo[o</ins><u>b]ar</u>" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["stylewithcss","false"],["underline",""]] "<ins>fo[o</ins><u>b]ar</u>" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","false"],["underline",""]] "<ins>fo[o</ins><u>b]ar</u>" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["stylewithcss","true"],["underline",""]] "<u>fo[o</u><ins>b]ar</ins>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"text-decoration:underline\\">fo</span>o<ins>bar</ins>" but got "<u>fo</u>o<ins>bar</ins>"
[FAIL] [["stylewithcss","true"],["underline",""]] "<u>fo[o</u><ins>b]ar</ins>" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","true"],["underline",""]] "<u>fo[o</u><ins>b]ar</ins>" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "false"
[FAIL] [["stylewithcss","false"],["underline",""]] "<u>fo[o</u><ins>b]ar</ins>" queryCommandValue("underline") before
  assert_equals: Wrong result returned expected "" but got "true"
[FAIL] [["stylewithcss","false"],["underline",""]] "<u>fo[o</u><ins>b]ar</ins>" queryCommandValue("underline") after
  assert_equals: Wrong result returned expected "" but got "false"
Harness: the test ran to completion.

