name: Build Cobalt
description: Builds Cobalt targets
inputs:
  targets:
    description: "List of ninja targets for Cobalt build."
    required: true
  test_root_target:
    description: "The root target from which to deduce what tests to run."
    required: true
  upload_on_host_test_artifacts:
    description: "Indicates if on-host test artifacts should be uploaded."
    required: true
  upload_on_device_test_artifacts:
    description: "Indicates if on-device test artifacts should be uploaded."
    required: true
  test_artifacts_key:
    description: "Artifact key used to store on-host test artifacts."
    required: true
runs:
  using: "composite"
  steps:
      - name: GN gen
        run: |
          cd src
          cobalt/build/gn.py -p ${{ matrix.platform }} -C ${{ matrix.config }}
        shell: bash
      - name: List GN args
        run: |
          cd src
          gn args --list --short --overrides-only out/${{ matrix.platform }}_${{ matrix.config }}
        shell: bash
      - name: Get list of changed files
        if: github.event_name == 'pull_request'
        id: changed-files
        run: |
          set -x
          cd src
          changed_files=($(git diff --name-only -r ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}))
          # Convert the bash array to a JSON array.
          changed_files_json=$(jq -nc '$ARGS.positional' --args ${changed_files[@]})
          echo "changed_files_json=${changed_files_json}" >> $GITHUB_OUTPUT
        shell: bash
      # TODO(b/382508397): Replace hardcoded list with dynamically generated one.
      - name: Calculate test targets
        if: matrix.config == 'devel' && inputs.test_root_target != 'null'
        id: calculate-test-targets
        env:
          CHANGED_FILES_JSON: ${{ steps.changed-files.outputs.changed_files_json }}
          ROOT_TARGET: ${{ inputs.test_root_target }}
          STATIC_TEST_TARGETS_JSON_FILE: cobalt/build/testing/targets/${{ matrix.platform }}/test_targets.json
          TEST_TARGETS_JSON_FILE: out/${{ matrix.platform }}_${{ matrix.config }}/test_targets.json
          DYN_TEST_TARGETS_JSON_FILE: out/${{ matrix.platform }}_${{ matrix.config }}/dyn_targets.json
        run: |
          set -x
          cd src
          gn desc out/${{ matrix.platform }}_${{ matrix.config }}/ "*" --format=json > gn_desc.json
          # Trim any warning gn printed before the json (all lines above the first curly brace).
          sed -n '/^{/,$p' -i gn_desc.json

          changed_files_arg=""
          if [[ -n "${CHANGED_FILES_JSON}" ]]; then
            changed_files_arg="--sources $(echo ${CHANGED_FILES_JSON} | jq -cr '. | join(",")')"
          fi

          vpython3 cobalt/build/test_targets.py \
              --root-target "${ROOT_TARGET}" \
              ${changed_files_arg} \
              --gn-json gn_desc.json \
              --json-output > "${DYN_TEST_TARGETS_JSON_FILE}"

          # Currently, override with static test targets, TODO(b/382508397)
          cp -av "${STATIC_TEST_TARGETS_JSON_FILE}" "${TEST_TARGETS_JSON_FILE}"

          echo "test_targets_json_file=${TEST_TARGETS_JSON_FILE}" >> $GITHUB_OUTPUT

          test_targets_json=$(cat ${TEST_TARGETS_JSON_FILE} | jq -cr '.test_targets')
          echo "test_targets_json=${test_targets_json}" >> $GITHUB_OUTPUT

          test_targets_count=$(echo ${test_targets_json} | jq -cr 'length')
          echo "test_targets_count=${test_targets_count}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Archive test target results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }} Test targets
          path: |
            src/out/${{ matrix.platform }}_${{ matrix.config }}/test_targets.json
            src/out/${{ matrix.platform }}_${{ matrix.config }}/dyn_targets.json
      - name: Ninja build test targets
        if: ${{ matrix.config == 'devel' && fromJSON(steps.calculate-test-targets.outputs.test_targets_count || 0) > 0 }}
        id: build-test-targets
        run: |
          set -ex
          cd src
          TEST_TARGETS=$(cat ${{ steps.calculate-test-targets.outputs.test_targets_json_file }} | jq -cr '.test_targets | join(" ")')
          time autoninja -C out/${{ matrix.platform }}_${{ matrix.config }} ${TEST_TARGETS}
        shell: bash
      - name: Ninja build
        env:
          TARGETS: ${{ inputs.targets }}
        run: |
          set -ex
          cd src
          time autoninja -C out/${{ matrix.platform }}_${{ matrix.config }} ${TARGETS}
        shell: bash
      - name: Archive Android APKs
        if: startsWith(matrix.platform, 'android') && matrix.config == 'qa'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }} APKs
          path: |
            src/out/${{ matrix.platform }}_qa/apks/*.apk
            src/out/${{ matrix.platform }}_qa/*_apk/*.apk
            src/out/${{ matrix.platform }}_qa/gen/build_info.json
      - name: Upload Test Artifacts
        if: steps.build-test-targets.outcome == 'success'
        uses: ./src/.github/actions/upload_test_artifacts
        with:
          test_artifacts_key: ${{ inputs.test_artifacts_key }}
          upload_on_host_test_artifacts: ${{ inputs.upload_on_host_test_artifacts }}
          upload_on_device_test_artifacts: ${{ inputs.upload_on_device_test_artifacts }}
          test_targets_json_file: '${{ steps.calculate-test-targets.outputs.test_targets_json_file }}'
outputs:
  test_targets_count:
    description: The number of test targets build.
    value: ${{ steps.calculate-test-targets.outputs.test_targets_count || 0 }}
  test_targets_json:
    description: The test targets in a JSON array.
    value: ${{ steps.calculate-test-targets.outputs.test_targets_json }}
  test_targets_json_file:
    description: The generated test targets json file path.
    value: ${{ steps.calculate-test-targets.outputs.test_targets_json_file }}
