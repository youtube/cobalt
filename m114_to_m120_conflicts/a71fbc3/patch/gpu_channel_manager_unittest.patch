--- gpu/ipc/service/gpu_channel_manager_unittest.cc
+++ gpu/ipc/service/gpu_channel_manager_unittest.cc
@@ -154,14 +154,9 @@
 // Tests that peak memory usage is only reported for valid sequence numbers,
 // and that polling shuts down the monitoring.
 TEST_F(GpuChannelManagerTest, GpuPeakMemoryOnlyReportedForValidSequence) {
-<<<<<<< HEAD
-#if BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY)
+#if BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY) && !BUILDFLAG(ENABLE_COBALT_HERMETIC_HACKS)
   base::test::TestTraceProcessor ttp;
   ttp.StartTrace("gpu");
-=======
-#if BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY) && !BUILDFLAG(ENABLE_COBALT_HERMETIC_HACKS)
-  std::unique_ptr<perfetto::TracingSession> session = StartNewTraceBlocking();
->>>>>>> 89dd8c4e511 (Build almost all linux targets hermetically (#6097))
 #else
   // TODO(crbug.com/1006541): Remove trace_analyzer usage after migration to the
   // SDK.
@@ -189,16 +184,8 @@
   EXPECT_EQ(0u, GetMonitorsPeakMemoryUsage(sequence_num));
   EXPECT_EQ(0u, GetManagersPeakMemoryUsage(sequence_num));
 
-<<<<<<< HEAD
-#if BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY)
-  absl::Status status = ttp.StopAndParseTrace();
-=======
 #if BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY) && !BUILDFLAG(ENABLE_COBALT_HERMETIC_HACKS)
-  std::vector<char> raw_trace = StopAndReadTraceBlocking(std::move(session));
-  ASSERT_FALSE(raw_trace.empty());
-  base::test::TestTraceProcessor trace_processor;
-  auto status = trace_processor.ParseTrace(raw_trace);
->>>>>>> 89dd8c4e511 (Build almost all linux targets hermetically (#6097))
+  absl::Status status = ttp.StopAndParseTrace();
   ASSERT_TRUE(status.ok()) << status.message();
   std::string query =
       R"(
