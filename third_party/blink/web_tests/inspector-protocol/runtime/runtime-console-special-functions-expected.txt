Tests ConsoleOM APIs with unique argument behavior.

Running test: testConsoleAssertNoContext
assert: 10
assert: console.assert

Running test: testConsoleTimeNoContext
console.time with duplicate label
warning: Timer '10' already exists
timeEnd: default
timeEnd: 10
timeEnd: NaN
console.timeEnd object label
timeEnd: [object Object]
console.timeEnd unused label
warning: Timer '9' does not exist
console.time/timeEnd multiple args
warning: Timer '[object Object]' does not exist
timeEnd: 5

Running test: testConsoleCountNoContext
warning: Count for 'default' does not exist
warning: Count for '2' does not exist
warning: Count for '3' does not exist
warning: Count for '4' does not exist
warning: Count for '10' does not exist
warning: Count for 'NaN' does not exist
warning: Count for '[object Object]' does not exist
blank label
count: default: 1
primitive label
count: 10: 1
unserializable label
count: NaN: 1
object label
count: [object Object]: 1
incrementing on NaN
count: NaN: 2
count: NaN: 3
count: NaN: 4
incrementing on "default" label
count: default: 2
count: default: 3
count: default: 4
console.countReset for default label
count: default: 1
console.countReset for primitive label
count: 10: 1
console.countReset for unserializable label
count: NaN: 1
console.countReset for object label
count: [object Object]: 1
console.count incrementing post reset
count: NaN: 2
console.count/countReset for multiple labels
count: 2: 1
count: 3: 1
count: 2: 2
count: 2: 1
count: 2: 2
count: 3: 2

Running test: testConsoleAssertPageContext
assert: 10
assert: console.assert

Running test: testConsoleTimePageContext
console.time with duplicate label
warning: Timer '10' already exists
timeEnd: default
timeEnd: 10
timeEnd: NaN
console.timeEnd object label
timeEnd: [object Object]
console.timeEnd unused label
warning: Timer '9' does not exist
console.time/timeEnd multiple args
warning: Timer '[object Object]' does not exist
timeEnd: 5

Running test: testConsoleCountPageContext
warning: Count for '4' does not exist
blank label
count: default: 1
primitive label
count: 10: 1
unserializable label
count: NaN: 1
object label
count: [object Object]: 1
incrementing on NaN
count: NaN: 2
count: NaN: 3
count: NaN: 4
incrementing on "default" label
count: default: 2
count: default: 3
count: default: 4
console.countReset for default label
count: default: 1
console.countReset for primitive label
count: 10: 1
console.countReset for unserializable label
count: NaN: 1
console.countReset for object label
count: [object Object]: 1
console.count incrementing post reset
count: NaN: 2
console.count/countReset for multiple labels
count: 2: 1
count: 3: 1
count: 2: 2
count: 2: 1
count: 2: 2
count: 3: 2

Running test: testConsoleAssertFrameContext
assert: 10
assert: console.assert

Running test: testConsoleTimeFrameContext
console.time with duplicate label
warning: Timer '10' already exists
timeEnd: default
timeEnd: 10
timeEnd: NaN
console.timeEnd object label
timeEnd: [object Object]
console.timeEnd unused label
warning: Timer '9' does not exist
console.time/timeEnd multiple args
warning: Timer '[object Object]' does not exist
timeEnd: 5

Running test: testConsoleCountFrameContext
warning: Count for 'default' does not exist
warning: Count for '2' does not exist
warning: Count for '3' does not exist
warning: Count for '4' does not exist
warning: Count for '10' does not exist
warning: Count for 'NaN' does not exist
warning: Count for '[object Object]' does not exist
blank label
count: default: 1
primitive label
count: 10: 1
unserializable label
count: NaN: 1
object label
count: [object Object]: 1
incrementing on NaN
count: NaN: 2
count: NaN: 3
count: NaN: 4
incrementing on "default" label
count: default: 2
count: default: 3
count: default: 4
console.countReset for default label
count: default: 1
console.countReset for primitive label
count: 10: 1
console.countReset for unserializable label
count: NaN: 1
console.countReset for object label
count: [object Object]: 1
console.count incrementing post reset
count: NaN: 2
console.count/countReset for multiple labels
count: 2: 1
count: 3: 1
count: 2: 2
count: 2: 1
count: 2: 2
count: 3: 2

