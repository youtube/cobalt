// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

package google.internal.remoting.cloud.v1alpha;

import "duration.proto";
import "session_policies.proto";

// Request message for the GenerateHostToken RPC.
message GenerateHostTokenRequest {}

// Response message for the GenerateHostToken RPC.
message GenerateHostTokenResponse {
  // A string opaque to the host and the client, which may contain or be linked
  // to trait information about the host.
  string host_token = 1;

  // A random string generated by the server to identify the session.
  string session_id = 2;
}

// Request message for the VerifySessionToken RPC.
message VerifySessionTokenRequest {
  // The session token received from the client.
  string session_token = 1;
}

// Response message for the VerifySessionToken RPC.
message VerifySessionTokenResponse {
  // The session ID generated by the server. Expected to match the ID returned
  // from GenerateHostToken.
  string session_id = 1;

  // The shared secret for SPAKE2 handshake.
  string shared_secret = 2;

  // A token opaque to the host. The host should call ReauthorizeHost
  // with this token after |session_reauth_token_lifetime|.
  string session_reauth_token = 3;

  // A duration specifying when |session_reauth_token| will expire.
  Duration session_reauth_token_lifetime = 4;

  // Policies to be applied to the host.
  optional SessionPolicies session_policies = 5;
}

// Request message for the ReauthorizeHost RPC.
message ReauthorizeHostRequest {
  // The token previously returned by VerifySession or ReauthorizeHost.
  string session_reauth_token = 1;

  // The session ID generated by the server.
  string session_id = 2;
}

// Response message for the ReauthorizeHost RPC.
message ReauthorizeHostResponse {
  // A token opaque to the caller. The caller should call ReauthorizeHost
  // with this token after |session_reauth_token_lifetime|.
  string session_reauth_token = 1;

  // A duration specifying when |session_reauth_token| will expire.
  Duration session_reauth_token_lifetime = 2;
}
