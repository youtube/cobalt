# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../gn/test.gni")

assert(enable_perfetto_trace_processor_sqlite)

source_set("sqlite") {
  sources = [
    "db_sqlite_table.cc",
    "db_sqlite_table.h",
<<<<<<< HEAD
    "module_state_manager.cc",
    "module_state_manager.h",
    "scoped_db.h",
    "sql_source.cc",
    "sql_source.h",
    "sql_stats_table.cc",
    "sql_stats_table.h",
    "sqlite_engine.cc",
    "sqlite_engine.h",
=======
    "query_cache.h",
    "sql_stats_table.cc",
    "sql_stats_table.h",
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "sqlite_utils.cc",
    "sqlite_utils.h",
    "stats_table.cc",
    "stats_table.h",
  ]
  deps = [
    "..:metatrace",
    "../../../gn:default_deps",
    "../../../gn:sqlite",
<<<<<<< HEAD
    "../../../include/perfetto/trace_processor",
    "../../../include/perfetto/trace_processor:basic_types",
    "../../../protos/perfetto/trace/ftrace:zero",
    "../../../protos/perfetto/trace_processor:zero",
    "../../base",
    "../containers",
    "../db",
    "../db/column",
    "../importers/common",
    "../importers/ftrace:ftrace_descriptors",
    "../perfetto_sql/intrinsics/table_functions:interface",
=======
    "../../../protos/perfetto/trace/ftrace:zero",
    "../../base",
    "../containers",
    "../db",
    "../importers/common",
    "../importers/ftrace:ftrace_descriptors",
    "../prelude/table_functions",
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "../storage",
    "../types",
    "../util",
    "../util:profile_builder",
<<<<<<< HEAD
    "../util:regex",
  ]
  public_deps = [ "bindings" ]
=======
  ]
  public_deps = [ ":sqlite_minimal" ]
}

source_set("sqlite_minimal") {
  sources = [
    "query_constraints.cc",
    "query_constraints.h",
    "scoped_db.h",
    "sqlite_table.cc",
    "sqlite_table.h",
    "sqlite_utils.h",
  ]
  deps = [
    "..:metatrace",
    "../../../gn:default_deps",
    "../../../gn:sqlite",
    "../../../include/perfetto/trace_processor",
    "../../base",
  ]
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
}

perfetto_unittest_source_set("unittests") {
  testonly = true
  sources = [
    "db_sqlite_table_unittest.cc",
<<<<<<< HEAD
    "sql_source_unittest.cc",
=======
    "query_constraints_unittest.cc",
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
    "sqlite_utils_unittest.cc",
  ]
  deps = [
    ":sqlite",
<<<<<<< HEAD
    "../../../gn:default_deps",
    "../../../gn:gtest_and_gmock",
    "../../../gn:sqlite",
    "../../../include/perfetto/trace_processor:basic_types",
    "../../base",
    "../../base:test_support",
    "../db",
=======
    ":sqlite_minimal",
    "../../../gn:default_deps",
    "../../../gn:gtest_and_gmock",
    "../../../gn:sqlite",
    "../../base",
>>>>>>> 4d68c88dac4 (Import perfetto from commit f2da6df2f144e (#6583))
  ]
}

if (enable_perfetto_benchmarks) {
  source_set("benchmarks") {
    testonly = true
    deps = [
      ":sqlite",
      "../../../gn:benchmark",
      "../../../gn:default_deps",
      "../../../gn:sqlite",
      "../../base",
    ]
    sources = [ "sqlite_vtable_benchmark.cc" ]
  }
}
