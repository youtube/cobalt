This is a testharness.js-based test.
Found 54 tests; 31 PASS, 23 FAIL, 0 TIMEOUT, 0 NOTRUN.
FAIL 'min(1px)' as a specified value should serialize as 'calc(1px)'. assert_equals: 'min(1px)' and 'calc(1px)' should serialize the same in specified values. expected "calc(1px)" but got "min(1px)"
PASS 'min(1px)' as a computed value should serialize as '1px'.
PASS 'min(1px)' as a used value should serialize as '1px'.
FAIL 'max(1px)' as a specified value should serialize as 'calc(1px)'. assert_equals: 'max(1px)' and 'calc(1px)' should serialize the same in specified values. expected "calc(1px)" but got "max(1px)"
PASS 'max(1px)' as a computed value should serialize as '1px'.
PASS 'max(1px)' as a used value should serialize as '1px'.
FAIL 'min(1% + 1px)' as a specified value should serialize as 'calc(1% + 1px)'. assert_equals: 'min(1% + 1px)' and 'calc(1% + 1px)' should serialize the same in specified values. expected "calc(1% + 1px)" but got "min(1% + 1px)"
FAIL 'min(1% + 1px)' as a computed value should serialize as 'calc(1% + 1px)'. assert_equals: 'min(1% + 1px)' and 'calc(1% + 1px)' should serialize the same in computed values. expected "calc(1% + 1px)" but got "min(1% + 1px)"
PASS 'min(1% + 1px)' as a used value should serialize as '2px'.
FAIL 'min(1px + 1%)' as a specified value should serialize as 'calc(1% + 1px)'. assert_equals: 'min(1px + 1%)' and 'calc(1% + 1px)' should serialize the same in specified values. expected "calc(1% + 1px)" but got "min(1px + 1%)"
FAIL 'min(1px + 1%)' as a computed value should serialize as 'calc(1% + 1px)'. assert_equals: 'min(1px + 1%)' and 'calc(1% + 1px)' should serialize the same in computed values. expected "calc(1% + 1px)" but got "min(1% + 1px)"
PASS 'min(1px + 1%)' as a used value should serialize as '2px'.
FAIL 'max(1px + 1%)' as a specified value should serialize as 'calc(1% + 1px)'. assert_equals: 'max(1px + 1%)' and 'calc(1% + 1px)' should serialize the same in specified values. expected "calc(1% + 1px)" but got "max(1px + 1%)"
FAIL 'max(1px + 1%)' as a computed value should serialize as 'calc(1% + 1px)'. assert_equals: 'max(1px + 1%)' and 'calc(1% + 1px)' should serialize the same in computed values. expected "calc(1% + 1px)" but got "max(1% + 1px)"
PASS 'max(1px + 1%)' as a used value should serialize as '2px'.
FAIL 'min(1px, 2px)' as a specified value should serialize as 'calc(1px)'. assert_equals: 'min(1px, 2px)' and 'calc(1px)' should serialize the same in specified values. expected "calc(1px)" but got "min(1px, 2px)"
PASS 'min(1px, 2px)' as a computed value should serialize as '1px'.
PASS 'min(1px, 2px)' as a used value should serialize as '1px'.
PASS 'min(20px, 10%)' as a specified value should serialize as 'min(20px, 10%)'.
FAIL 'min(20px, 10%)' as a computed value should serialize as 'min(20px, 10%)'. assert_equals: 'min(20px, 10%)' should round-trip exactly in computed values. expected "min(20px, 10%)" but got "min(0% + 20px, 10% + 0px)"
PASS 'min(20px, 10%)' as a used value should serialize as '10px'.
PASS 'min(1em, 10%)' as a specified value should serialize as 'min(1em, 10%)'.
FAIL 'min(1em, 10%)' as a computed value should serialize as 'min(16px, 10%)'. assert_equals: 'min(16px, 10%)' should round-trip exactly in computed values. expected "min(16px, 10%)" but got "min(0% + 16px, 10% + 0px)"
PASS 'min(1em, 10%)' as a used value should serialize as '10px'.
PASS 'min(10%, 20px)' as a specified value should serialize as 'min(10%, 20px)'.
FAIL 'min(10%, 20px)' as a computed value should serialize as 'min(10%, 20px)'. assert_equals: 'min(10%, 20px)' should round-trip exactly in computed values. expected "min(10%, 20px)" but got "min(10% + 0px, 0% + 20px)"
PASS 'min(10%, 20px)' as a used value should serialize as '10px'.
PASS 'min(10%, 1em)' as a specified value should serialize as 'min(10%, 1em)'.
FAIL 'min(10%, 1em)' as a computed value should serialize as 'min(10%, 16px)'. assert_equals: 'min(10%, 16px)' should round-trip exactly in computed values. expected "min(10%, 16px)" but got "min(10% + 0px, 0% + 16px)"
PASS 'min(10%, 1em)' as a used value should serialize as '10px'.
PASS 'max(20px, 10%)' as a specified value should serialize as 'max(20px, 10%)'.
FAIL 'max(20px, 10%)' as a computed value should serialize as 'max(20px, 10%)'. assert_equals: 'max(20px, 10%)' should round-trip exactly in computed values. expected "max(20px, 10%)" but got "max(0% + 20px, 10% + 0px)"
PASS 'max(20px, 10%)' as a used value should serialize as '20px'.
PASS 'max(1em, 10%)' as a specified value should serialize as 'max(1em, 10%)'.
FAIL 'max(1em, 10%)' as a computed value should serialize as 'max(16px, 10%)'. assert_equals: 'max(16px, 10%)' should round-trip exactly in computed values. expected "max(16px, 10%)" but got "max(0% + 16px, 10% + 0px)"
PASS 'max(1em, 10%)' as a used value should serialize as '16px'.
PASS 'max(10%, 20px)' as a specified value should serialize as 'max(10%, 20px)'.
FAIL 'max(10%, 20px)' as a computed value should serialize as 'max(10%, 20px)'. assert_equals: 'max(10%, 20px)' should round-trip exactly in computed values. expected "max(10%, 20px)" but got "max(10% + 0px, 0% + 20px)"
PASS 'max(10%, 20px)' as a used value should serialize as '20px'.
PASS 'max(10%, 1em)' as a specified value should serialize as 'max(10%, 1em)'.
FAIL 'max(10%, 1em)' as a computed value should serialize as 'max(10%, 16px)'. assert_equals: 'max(10%, 16px)' should round-trip exactly in computed values. expected "max(10%, 16px)" but got "max(10% + 0px, 0% + 16px)"
PASS 'max(10%, 1em)' as a used value should serialize as '16px'.
FAIL 'min(10% + 30px, 5em + 5%)' as a specified value should serialize as 'min(10% + 30px, 5% + 5em)'. assert_equals: 'min(10% + 30px, 5em + 5%)' and 'min(10% + 30px, 5% + 5em)' should serialize the same in specified values. expected "min(10% + 30px, 5% + 5em)" but got "min(10% + 30px, 5em + 5%)"
PASS 'min(10% + 30px, 5em + 5%)' as a computed value should serialize as 'min(10% + 30px, 5% + 80px)'.
PASS 'min(10% + 30px, 5em + 5%)' as a used value should serialize as '40px'.
FAIL 'max(10% + 30px, 5em + 5%)' as a specified value should serialize as 'max(10% + 30px, 5% + 5em)'. assert_equals: 'max(10% + 30px, 5em + 5%)' and 'max(10% + 30px, 5% + 5em)' should serialize the same in specified values. expected "max(10% + 30px, 5% + 5em)" but got "max(10% + 30px, 5em + 5%)"
PASS 'max(10% + 30px, 5em + 5%)' as a computed value should serialize as 'max(10% + 30px, 5% + 80px)'.
PASS 'max(10% + 30px, 5em + 5%)' as a used value should serialize as '85px'.
FAIL 'calc(min(10% + 1px) + max(1em + 10%) + min(10% + 20px))' as a specified value should serialize as 'calc(30% + 1em + 21px)'. assert_equals: 'calc(min(10% + 1px) + max(1em + 10%) + min(10% + 20px))' and 'calc(30% + 1em + 21px)' should serialize the same in specified values. expected "calc(30% + 1em + 21px)" but got "calc(min(10% + 1px) + max(1em + 10%) + min(10% + 20px))"
FAIL 'calc(min(10% + 1px) + max(1em + 10%) + min(10% + 20px))' as a computed value should serialize as 'calc(30% + 37px)'. assert_equals: 'calc(min(10% + 1px) + max(1em + 10%) + min(10% + 20px))' and 'calc(30% + 37px)' should serialize the same in computed values. expected "calc(30% + 37px)" but got "calc(min(10% + 1px) + max(10% + 16px) + min(10% + 20px))"
PASS 'calc(min(10% + 1px) + max(1em + 10%) + min(10% + 20px))' as a used value should serialize as '67px'.
FAIL 'calc(1em + max(10% + 20px) + 5% + min(1em + 10%) + 10px)' as a specified value should serialize as 'calc(25% + 2em + 30px)'. assert_equals: 'calc(1em + max(10% + 20px) + 5% + min(1em + 10%) + 10px)' and 'calc(25% + 2em + 30px)' should serialize the same in specified values. expected "calc(25% + 2em + 30px)" but got "calc(1em + max(10% + 20px) + 5% + min(1em + 10%) + 10px)"
FAIL 'calc(1em + max(10% + 20px) + 5% + min(1em + 10%) + 10px)' as a computed value should serialize as 'calc(25% + 62px)'. assert_equals: 'calc(1em + max(10% + 20px) + 5% + min(1em + 10%) + 10px)' and 'calc(25% + 62px)' should serialize the same in computed values. expected "calc(25% + 62px)" but got "calc(0% + 16px + max(10% + 20px) + 5% + 0px + min(10% + 16px) + 0% + 10px)"
PASS 'calc(1em + max(10% + 20px) + 5% + min(1em + 10%) + 10px)' as a used value should serialize as '87px'.
Harness: the test ran to completion.

