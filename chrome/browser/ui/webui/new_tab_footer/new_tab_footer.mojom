// Copyright 2025 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module new_tab_footer.mojom;

import "url/mojom/url.mojom";
import "ui/gfx/geometry/mojom/geometry.mojom";

// Enterprise browser management notice
struct ManagementNotice {
  // Human readable string for notice text. This will indicate that the browser
  // is managed and the entity managing the browser, which is  customizable via
  // the `EnterpriseCustomLabel` policy.
  string text;
  // Url to the management icon. This will be a default business icon or custom
  // icon set by policy.
  url.mojom.Url bitmap_data_url;
};

// Used by the WebUI document to bootstrap bidirectional communication.
interface NewTabFooterHandlerFactory {
  // The WebUI page's |BrowserProxy| singleton calls this method when the
  // document is first initialized.
  CreateNewTabFooterHandler(pending_remote<NewTabFooterDocument> document,
                            pending_receiver<NewTabFooterHandler> handler);
};

// Browser-side handler for requests from WebUI document.
interface NewTabFooterHandler {
  // Updates name of the extension overriding the new tab page.
  // Triggers a call to |SetExtensionName|.
  UpdateNtpExtensionName();
  // Updates the enterprise management notice for a managed
  // browser. Triggers a call to |SetManagementNotice|.
  UpdateManagementNotice();
  // Opens the options page for the extension identified by the last call
  // to |GetNtpExtensionName|. If that call did not determine a valid ID,
  // this opens the extension settings page.
  OpenExtensionOptionsPageWithFallback();
  // Shows context menu.
  ShowContextMenu(gfx.mojom.Point point);
};

// WebUI-side handler for requests from the browser.
interface NewTabFooterDocument {
  // Sets the name of the extension overriding the new tab page.
  SetNtpExtensionName(string name);
  // Sets the enterprise management notice for a managed browser.
  SetManagementNotice(ManagementNotice? notice);
};
