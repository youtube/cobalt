// Copyright 2024 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Rewriter API
// https://github.com/explainers-by-googlers/writing-assistance-apis

enum AIRewriterTone { "as-is", "more-formal", "more-casual" };
enum AIRewriterFormat { "as-is", "plain-text", "markdown" };
enum AIRewriterLength { "as-is", "shorter", "longer" };

dictionary AIRewriterCreateCoreOptions {
  AIRewriterTone tone = "as-is";
  AIRewriterFormat format = "as-is";
  AIRewriterLength length = "as-is";

  sequence<DOMString> expectedInputLanguages;
  sequence<DOMString> expectedContextLanguages;
  DOMString outputLanguage;
};

dictionary AIRewriterCreateOptions : AIRewriterCreateCoreOptions {
  AbortSignal signal;
  DOMString sharedContext;
};

[
  Exposed=(Window,Worker),
  RuntimeEnabled=AIRewriterAPI,
  SecureContext
]
interface AIRewriterFactory {
  [
    CallWith=ScriptState,
    RaisesException
  ]
  Promise<AIAvailability> availability(
    optional AIRewriterCreateCoreOptions options = {}
  );
  [
    Measure,
    CallWith=ScriptState,
    RaisesException
  ]
  Promise<AIRewriter> create(optional AIRewriterCreateOptions options = {});
};
