// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "mojo/public/mojom/base/values.mojom";

// Implementation of the proposed Digital Identity Credential API.
//
// Proposal: https://wicg.github.io/digital-identities

union RequestData {
  string str;
  mojo_base.mojom.Value value;
};

// The specification of the request to digital credentials.
struct DigitalCredentialGetRequest {
  string protocol;
  RequestData data;
};

// The specification of the creation request to digital credentials.
struct DigitalCredentialCreateRequest {
  string protocol;
  mojo_base.mojom.Value data;
};


// Represents the format of the request that should be used when communicating
// with the digital wallet via the Android platform. Renderer picks a format
// based on the request that was provided by the website when invoking the
// digital credential API.
enum GetRequestFormat {
  kLegacy,
  kModern,
};

// Represents the fetch result from a digital identity request. It is
// used to determine whether a JavaScript exception should be thrown, and what
// the error message of such exception should say.
enum RequestDigitalIdentityStatus {
  kSuccess,
  kError,
  kErrorTooManyRequests,
  kErrorCanceled,
  kErrorNoRequests,
  kErrorNoTransientUserActivation,
  kErrorInvalidJson,
};

// Create a digital identity request using the specified request data.
// This interface is called from a renderer process and is implemented in the
// browser process.
interface DigitalIdentityRequest {
  // Requests a token to be generated, given an array of DigitalCredentialGetRequest's.
  // Returns:
  // - Status of the request.
  // - Raw content of the token.
  // - Protocol of the selected request.
  //
  // Does not support concurrent requests. Throws an error on a new request if
  // there is a pending request.
  Get(array<DigitalCredentialGetRequest> digital_credential_requests, GetRequestFormat format) =>
      (RequestDigitalIdentityStatus status,
      string? protocol,
      mojo_base.mojom.Value? token);

  // Requests an issuance of digital credentials, given an array of DigitalCredentialCreateRequests.
  // Returns:
  // - Status of the request.
  // - Protocol-specific response.
  // - Protocol of the selected request.
  //
  // Does not support concurrent requests. Throws an error on a new request if
  // there is a pending request.
  Create(array<DigitalCredentialCreateRequest> digital_credential_requests) =>
      (RequestDigitalIdentityStatus status,
      string? protocol,
      mojo_base.mojom.Value? token);

  // Aborts the pending request, if any.
  Abort();
};
