include_rules = [
  "+components/browsing_topics/common",
  # components/download are needed for providing the download feature.
  # TODO(qinmin): move it to services/download when download becomes a service.
  "+components/download/public/common",
  "+components/file_access",
  "+components/services/storage/privileged",
  "+components/services/storage/public",
  "+components/viz/common",
  "+components/viz/host",
  "+device/vr/buildflags",
  "+device/vr/public/cpp",
  "+device/vr/public/mojom",
  "+services/audio/public",
  "+services/data_decoder/public",
  "+services/device/public",
  "+services/media_session/public",
  "+services/metrics/public/cpp",
  "+services/network/public/cpp",
  "+services/resource_coordinator/public",
  "+services/tracing/public/mojom",
  "+services/video_capture/public/mojom",
  "+services/viz/public/mojom",
  "+third_party/perfetto/protos/perfetto/config/chrome/scenario_config.gen.h",
]

specific_include_rules = {
  ".*\.cc": [
    "+content/browser",
    "+content/common/content_constants_internal.h",
    "+content/common/features.h",
    "-content/browser/loader",
  ],
  ".*\.mm": [
    "+content/browser",
  ],

  "authenticator_request_client_delegate\.*": [
    "+device/fido",
  ],

  "desktop_capture\.h": [
    # desktop_capture.h creates a DesktopCaptureOptions to share between
    # content/browser and chrome/browser.
    "+third_party/webrtc/modules/desktop_capture/desktop_capture_options.h",
  ],

  "gpu_utils\.cc": [
    # For using chromeos::BrowserParamsProxy which is needed on LaCrOS to decide
    # if the GPU process sandbox needs to be started early.
    "+chromeos/startup/browser_params_proxy.h",
  ],

  ".*unittest\.cc": [
    "+services/network/network_service.h",
  ],
}
