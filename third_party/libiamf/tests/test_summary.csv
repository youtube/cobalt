"test","base","primary_tested_spec_sections","is_valid","description"
"test_000000_3","None","3.2/num_samples_to_trim_at_end, 3.4/IA Sequence Header OBU Syntax and Semantics, 3.5/num_samples_per_frame, 6.2.2/ia_sample_duration",False,"A simple profile stereo IAMF stream with 1 substream. The final audio frame incorrectly has fewer samples than all other frames because it does not have sufficient `num_samples_to_trim_at_end`"
"test_000002","test_000000_3","3.8/Parameter Block OBU Syntax and Semantics, 3.8.1/animation_type == STEP, 6.1/FileTypeBox, 6.1/IASampleEntry, 6.2.1/Requirement of IA Sequence, 6.2.2/stts, 6.2.2/trun, 6.2.3/IASampleEntry, 6.2.3/channelcount, 6.2.3/samplerate, 6.2.4/IA Sample Format, 7/IAMF Processing, 7.4/animation_type == STEP",True,"A stereo IAMF stream with a no-op Parameter Block OBU added."
"test_000003","None","3.2/num_samples_to_trim_at_end, 3.6.2/num_layers, 3.6.2/loudspeaker_layout == Stereo, 3.7.4/default_mix_gain, 3.11.4/LPCM Specific, 4.1/Simple Profile, 5.1/IA Sequence, 5.1.1/Descriptor OBUs, 5.1.2/IA Data OBUs, 6.2.2/edst, 6.2.2/elst, 6.2.2/stts, 6.2.2/trun",True,"A simple example of a stereo IAMF stream with 1 substream and no parameter blocks."
"test_000005","test_000002","3.2/num_samples_to_trim_at_end",True,"A frame-aligned stereo IAMF stream with no trimming."
"test_000006","test_000005","3.4/IA Sequence Header OBU Syntax and Semantics, 3.10/Codec Specific, 4.2/temporal_delimiter_obu, 5.1/IA Sequence, 5.1.2/IA Data OBUs, 6.2.4/temporal_delimiter_obu",True,"A stereo base profile IAMF stream with temporal delimiters."
"test_000007","test_000005","3.4/ia_code",False,"A stereo IAMF stream with which is invalid because `ia_code` is case-sensitive and should be lowercase."
"test_000012","test_000005","3.2/num_samples_to_trim_at_end",True,"A stereo IAMF stream. Additional samples are trimmed from the end of input wav file to make it shorter."
"test_000013","test_000002","3.1/Immersive Audio OBU Syntax and Semantics, 3.6.1/param_definition_mode, 3.6.1/parameter_id",False,"A stereo IAMF stream with inconsistent values for `param_definition_mode` being used for the same parameter_id, which should fail."
"test_000014","test_000005","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/pre_skip",False,"A stereo IAMF stream with no trimming encoded using Opus. It is invalid because `pre_skip` is incorrectly set to 0."
"test_000015","test_000005","3.8/parameter_id",True,"A stereo IAMF stream that includes an extra parameter block which is not used by any audio element."
"test_000016","test_000005","3.5/num_samples_per_frame, 3.6.1/param_definition_mode, 3.8/duration, 3.8/constant_subblock_duration, 3.9/Audio Frame OBU Syntax and Semantics",False,"A stereo IAMF stream. It has a parameter block not aligned with the audio frames, ending 100 samples earlier. This is invalid because parameter blocks should cover the whole duration of the audio frames that use the parameter."
"test_000017","test_000005","3.2/num_samples_to_trim_at_end, 3.5/num_samples_per_frame",False,"A stereo IAMF stream. It is invalid because it has more than one frame of samples trimmed off the end."
"test_000018","test_000005","3.1/obu_type, 3.9/explicit_audio_substream_id",True,"A stereo IAMF stream. The substream has an ID larger than 21 which requires the ID to be explicitly listed in the OBU."
"test_000019","test_000005","3.8/Parameter Block OBU Syntax and Semantics",True,"A stereo IAMF stream that has two parameter blocks with the same ID occuring one after another."
"test_000020","test_000014","3.5/audio_roll_distance, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/num_samples_per_frame, 6.2.2/roll",True,"A stereo IAMF stream encoded using 20 ms Opus frames which encodes a 500 ms sine wav with a frequency of 1000 Hz."
"test_000021","test_000020","3.5/audio_roll_distance, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/num_samples_per_frame",True,"A stereo IAMF stream encoded using 40 ms Opus frames."
"test_000022","test_000020","3.5/audio_roll_distance, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/num_samples_per_frame",False,"A stereo IAMF stream encoded using 20 ms Opus frames, but the audio roll distance is incorrect."
"test_000023","test_000020","3.2/num_samples_to_trim_at_start, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/num_samples_per_frame",True,"A stereo IAMF stream encoded using 5 ms Opus frames which requires fully trimmed frames at the start."
"test_000024","test_000020","3.5/audio_roll_distance, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/num_samples_per_frame",True,"A stereo IAMF stream encoded using 60 ms Opus frames."
"test_000025","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/version",False,"A stereo IAMF stream encoded using Opus, with an incorrect Opus version."
"test_000026","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/output_channel_count",False,"A stereo IAMF stream encoded using Opus, with an incorrect `output_channel_count`."
"test_000027","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/output_gain",False,"A stereo IAMF stream encoded using Opus, with an incorrect `output_gain`."
"test_000028","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/channel_mapping_family",False,"A stereo IAMF stream encoded using Opus, with an incorrect `channel_mapping_family`."
"test_000029","test_000005","3.11.4/sample_rate",True,"A stereo IAMF stream encoded using LPCM with a sample rate of 48 kHz."
"test_000030","test_000029","3.11.4/sample_rate",True,"A stereo IAMF stream with a sample rate of 44.1 kHz."
"test_000031","test_000029","3.9/Audio Frame OBU Syntax and Semantics, 3.11.4/sample_size",True,"A stereo IAMF stream with a bit-depth of 24."
"test_000032","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/application, 3.11.1/target_bitrate",True,"A stereo IAMF stream encoded using a target bit rate of 24000 for libopus."
"test_000033","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/target_bitrate",True,"A stereo IAMF stream encoded using a target bit rate of 96000 for libopus."
"test_000034","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/application",True,"A stereo IAMF stream encoded using a VOIP mode for libopus."
"test_000035","test_000020","3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 3.11.1/application",True,"A stereo IAMF stream encoded using low-delay mode for libopus."
"test_000036","test_000005","3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/num_layers, 7/IAMF Processing, 7.2/non-scalable, 7.2.2/De-mixer",True,"A 2-layer IAMF stream with the last layer being 5.1."
"test_000037","test_000020","6/ISOBMFF IAMF Encapsulation",True,"A stereo IAMF stream encoding ~22 seconds of audio using Opus."
"test_000038","test_000005","3.6.3/ambisonics_mono_config, 3.7.3/headphones_rendering_mode == 0, 7/IAMF Processing, 7.1/channel_mapping, 7.3/Mix Presentation, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO` with `headphones_rendering_mode == 0`."
"test_000039","test_000038","3.6.3/ambisonics_mono_config, 7/IAMF Processing, 7.1/channel_mapping, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"A third-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO`."
"test_000040","test_000038","3.6.3/ambisonics_mono_config",False,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO`. That has a wrong number of channels for an ambisonic audio stream."
"test_000042","test_000038","3.6.3/ambisonics_projection_config, 7/IAMF Processing, 7.1/demixing_matrix, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000043","test_000038","3.6.3/ambisonics_projection_config, 7/IAMF Processing, 7.1/demixing_matrix, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"A third-order ambisonics IAMF stream encoded using `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000044","test_000043","3.6.3/ambisonics_projection_config, 7/IAMF Processing, 7.1/demixing_matrix, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"An IAMF stream encoded using `ambisonics_mode` = `PROJECTION`. This test vector tests mixed-order ambisonics representation by using third-order ambisonics to represent a lower order (first-order) ambisonics by using a demixing matrix."
"test_000045","test_000038","3.6.3/ambisonics_mono_config, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A first-order ambisonics IAMF stream encoded using Opus and`ambisonics_mode` = `MONO`."
"test_000046","test_000043","3.6.3/ambisonics_mono_config, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A third-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `MONO` with an (almost) identity demixing matrix."
"test_000048","test_000042","3.6.3/ambisonics_projection_config, 7/IAMF Processing, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `PROJECTION` and Opus with coupled stereo channels"
"test_000049","test_000036","3.6/num_parameters, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A 2-layer IAMF stream encoded using Opus with the last layer being 5.1."
"test_000050","test_000037","3.6/default_w, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 7.1.2, 3.6.2/loudspeaker_layout == 7.1.4, 3.6.2/num_layers, 3.7.3/headphones_rendering_mode == 0, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 6/ISOBMFF IAMF Encapsulation, 7/IAMF Processing, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers",True,"A 4-layer IAMF stream encoded using Opus with the last layer being 7.1.4 and `default_w == 0` with `headphones_rendering_mode == 0`."
"test_000051","test_000050","3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 7.1.2, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A 3-layer IAMF stream encoded using Opus with the last layer being 7.1.2."
"test_000052","test_000051","3.6.2/channel_audio_layer_config, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 7/IAMF Processing, 7.2/scalable, 7.2/demixing, 7.2/recon_gain, 7.2.3/Recon Gain, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers",True,"A 2-layer IAMF stream encoded using Opus with the last layer being 3.1.2."
"test_000053","test_000051","3.6/param_definition_type, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 7.1, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A 2-layer IAMF stream encoded using Opus with the last layer being 7.1."
"test_000054","test_000050","3.6/default_w, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/loudspeaker_layout == 5.1.4, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A 4-layer IAMF stream encoded using Opus with the last layer being 5.1.4 and `default_w == 0`."
"test_000055","test_000054","3.6/param_definition_type, 3.6.2/channel_audio_layer_config, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A 3-layer IAMF stream encoded using Opus with the last layer being 5.1.2."
"test_000056","test_000055","3.6/num_parameters, 3.6.2/channel_audio_layer_config, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A 2-layer IAMF stream encoded using Opus with the last layer being 5.1.0."
"test_000058","test_000005","3.7/num_audio_elements, 4.2/Base Profile, 7/IAMF Processing, 7.3.3/Mixing Audio Elements",True,"An IAMF stream with a mix presentation which mixes 2 stereo audio elements."
"test_000059","test_000056","3.6/default_w, 3.6.2/Scalable Channel Layout Config Syntax and Semantics, 3.8.3/Recon Gain Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.2/recon_gain, 7.2.3/Recon Gain, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers",True,"A 2-layer IAMF stream encoded using Opus, with Parameter Block OBUs defining non-default recon gains and `default_w == 0`."
"test_000060","test_000005","3.7/count_label, 3.7/language_label, 3.7/mix_presentation_annotations, 3.7.1/Mix Presentation Annotations Syntax and Semantics, 3.7.2/Mix Presentation Element Annotations Syntax and Semantics",True,"A stereo IAMF stream with two language labels."
"test_000061","test_000056","3.6.1/param_definition_mode, 3.6.1/parameter_rate, 3.6.2/channel_audio_layer_config, 3.8/demixing_info_parameter_data, 3.8.2/Demixing Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.2/demixing, 7.2.2/De-mixer, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers",True,"A 2-layer IAMF stream encoded using Opus with the last layer being 5.1.0 with Demixing Parameter Block OBUs."
"test_000062","test_000005","3.7.7/integrated_loudness, 3.7.7/digital_peak, 3.7.7/info_type, 3.7.7/num_anchored_loudness",True,"A stereo IAMF stream with anchored loudness provided with 2 different anchor elements."
"test_000063","test_000062","3.7.7/integrated_loudness, 3.7.7/digital_peak, 3.7.7/info_type, 3.7.7/num_anchored_loudness",False,"A stereo IAMF stream with anchored loudness provided. It is invalid because anchor elements must be unique."
"test_000064","test_000003","3.7/element_mix_config, 3.7.4/default_mix_gain",True,"A simple example of a stereo IAMF stream with non-zero default mix gain and no parameter blocks."
"test_000065","test_000038","3.6.3/ambisonics_mono_config, 3.8.1/animation_type == LINEAR, 7/IAMF Processing, 7.4/animation_type == LINEAR",True,"A first-order ambisonics IAMF stream encoded with a linear mix gain."
"test_000066","test_000065","3.6.1/param_definition_mode, 3.6.3/ambisonics_mono_config, 3.8/duration, 3.8/num_subblocks, 3.8/subblock_duration, 3.8.1/animation_type == LINEAR, 3.8.1/animation_type == BEZIER, 7/IAMF Processing, 7.4/animation_type == LINEAR, 7.4/animation_type == BEZIER",True,"A first-order ambisonics IAMF stream encoded with the first frame using a bezier-animation mix gain and subsequnt frames using linear-animation."
"test_000067","test_000005","3.7.3/rendering_config_extension_bytes",True,"A frame-aligned stereo IAMF stream with extra bytes in `rendering_config_extension`."
"test_000068","test_000065","3.6.1/param_definition_mode, 3.6.3/ambisonics_mono_config, 3.6/duration, 3.6/num_subblocks, 3.6/constant_subblock_duration, 3.8.1/animation_type == LINEAR, 7/IAMF Processing, 7.4/animation_type == LINEAR",True,"A first-order ambisonics IAMF stream encoded with a linear mix gain with 2 different duration subblocks with `constant_subblock_duration != 0`. The last subblock duration is calculated implicitly."
"test_000069","test_000204","3.6.2/loudspeaker_layout == 5.1.2, 3.7/loudness_layout == Stereo, 3.7/loudness_layout == 3.1.2, 3.7/loudness_layout == 5.1.2, 3.7.6/Layout Syntax and Semantics",True,"A simple example of a 5.1.2 IAMF stream and no parameter blocks, where the loudness is measured in Stereo, 3.1.2, and 5.1.2."
"test_000070","test_000209","3.6/demixing_info, 3.6/default_demixing_info_parameter_data, 3.6/default_w, 3.6/num_parameters, 3.6.2/loudspeaker_layout == 7.1.4, 3.7/loudness_layout == Stereo, 3.7/loudness_layout == 7.1.2, 3.7/loudness_layout == 7.1.4, 3.7.6/Layout Syntax and Semantics, 7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A 7.1.4 IAMF stream using `default_demixing_info_parameter_data`, where the loudness is measured in Stereo, 7.1.2, and 7.1.4."
"test_000071","test_000005","3.6.1/parameter_id, 3.6.1/parameter_rate, 3.6.1/param_definition_mode, 3.6.1/constant_subblock_duration, 3.6.1/num_subblocks, 3.7.4/Element Mix Config Syntax and Semantics, 3.7.5/Output Mix Config Syntax and Semantics, 3.8.1/animation_type == STEP, 5.1/IA Sequence, 5.1.2/IA Data OBUs, 7/IAMF Processing, 7.4/animation_type == STEP",True,"A stereo IAMF stream with two mix gain parameters with different `param_definition_modes`."
"test_000072","test_000005","3.5/Codec Config OBU Syntax and Semantics, 3.11.3/FLAC Specific",True,"A frame-aligned stereo IAMF stream encoded with FLAC."
"test_000073","test_000036","3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.3/FLAC Specific",True,"A 2-layer IAMF stream encoded using FLAC with the last layer being 5.1."
"test_000074","test_000038","3.6.3/ambisonics_mono_config, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.3/FLAC Specific",True,"A first-order ambisonics IAMF stream encoded using FLAC and `ambisonics_mode` = `MONO`."
"test_000075","test_000039","3.6.3/ambisonics_mono_config, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.3/FLAC Specific",True,"A third-order ambisonics IAMF stream encoded using FLAC and `ambisonics_mode` = `MONO`."
"test_000076","test_000005","3.5/Codec Config OBU Syntax and Semantics, 3.11.2/AAC-LC Specific",True,"A frame-aligned stereo IAMF stream encoded with AAC."
"test_000077","test_000005","3.3/Reserved OBU Syntax and Semantics",True,"An IAMF stream with an extra OBU using a reserved ID inserted after the descriptor OBUs."
"test_000078","test_000003","3.2/obu_redundant_copy",True,"A simple example of a stereo IAMF stream with an extra redundant sequence header inserted after the initial descriptor OBUs."
"test_000079","test_000078","3.2/obu_redundant_copy",True,"A simple example of a stereo IAMF stream with an extra redundant sequence header inserted before the initial descriptor OBUs."
"test_000080","test_000054","3.6/default_w, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/loudspeaker_layout == 5.1.4, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific",True,"A 4-layer IAMF stream encoded using Opus with the last layer being 5.1.4 and `default_w == 10`."
"test_000081","test_000054","3.6/default_w, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/loudspeaker_layout == 5.1.4, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 7/IAMF Processing, 7.2.2/De-mixer, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers",True,"A 4-layer IAMF stream encoded using Opus with the last layer being 5.1.4 and `default_w == 7`."
"test_000082","test_000210","3.6/num_parameters, 3.6/default_w, 3.8/demixing_info_parameter_data, 3.8.2/Demixing Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers",True,"A 7.1.4 IAMF stream with demixing parameter blocks which means the `default_w` is ignored."
"test_000083","test_000038","3.6.3/ambisonics_mono_config, 3.7.3/headphones_rendering_mode == 1, 7/IAMF Processing, 7.3.2/Rendering an Audio Element, 7.3.2.4/Rendering a Scene-Based Audio Element to Headphones",True,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO` with `headphones_rendering_mode == 1`."
"test_000084","test_000072","3.5/audio_roll_distance != 0, 3.11.3/FLAC Specific",False,"A frame-aligned stereo IAMF stream encoded with FLAC with an invalid roll distance."
"test_000085","test_000005","3.2/num_samples_to_trim_at_end, 3.5/audio_roll_distance != 0, 3.11.4/LPCM Specific",False,"A frame-aligned LPCM stereo IAMF stream with no trimming with an invalid roll distance."
"test_000086","test_000300","3.6.2/loudspeaker_layout == 5.1.2, 3.6.3/ambisonics_mono_config, 3.7.4/default_mix_gain, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A first-order ambisonics + a 2 layer 5.1.2 base profile IAMF stream."
"test_000087","test_000405","3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.7.4/default_mix_gain, 3.11.1/OPUS Specific, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A simple example of a two-layer 5.1 + stereo base profile IAMF stream encoded using Opus."
"test_000088","test_000071","3.6.1/parameter_id, 3.6.1/parameter_rate, 3.6.1/param_definition_mode, 3.6.1/constant_subblock_duration == 0, 3.6.1/num_subblocks, 3.6.1/subblock_duration, 3.7.4/Element Mix Config Syntax and Semantics, 3.7.5/Output Mix Config Syntax and Semantics, 3.8.1/animation_type == STEP, 3.8.1/animation_type == LINEAR, 3.8.1/animation_type == BEZIER, 5.1/IA Sequence, 5.1.2/IA Data OBUs, 7/IAMF Processing, 7.4/animation_type == STEP, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A stereo IAMF stream with one mix gain parameter using default value. A different mix gain parameter uses `param_definition_mode == 0` with non-constant subblock duration."
"test_000089","test_000050","3.6/default_w, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 7.1.2, 3.6.2/loudspeaker_layout == 7.1.4, 3.6.2/num_layers, 3.7.3/headphones_rendering_mode == 1, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 6/ISOBMFF IAMF Encapsulation, 7/IAMF Processing, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers",True,"A 4-layer IAMF stream encoded using Opus with the last layer being 7.1.4 and `default_w == 0` with `headphones_rendering_mode == 1`."
"test_000090","test_000076","3.2/num_samples_to_trim_at_end, 3.5/Codec Config OBU Syntax and Semantics, 3.11.2/AAC-LC Specific",True,"A stereo IAMF stream encoded with AAC and `num_samples_to_trim_at_end != 0`."
"test_000091","test_000076","3.5/audio_roll_distance != -1, 3.11.2/AAC-LC Specific",False,"A frame-aligned stereo IAMF stream encoded with AAC with an invalid roll distance."
"test_000092","test_000049","3.6/num_parameters, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/num_layers, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.2/AAC-LC Specific",True,"A 2-layer IAMF stream encoded using AAC with the last layer being 5.1."
"test_000093","test_000038","3.6.3/ambisonics_mono_config, 3.7.3/headphones_rendering_mode == 0, 3.11.2/AAC-LC Specific, 7/IAMF Processing, 7.1/channel_mapping, 7.3/Mix Presentation, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO` with `headphones_rendering_mode == 0`."
"test_000094","test_000039","3.6.3/ambisonics_mono_config, 3.11.2/AAC-LC Specific, 7/IAMF Processing, 7.1/channel_mapping, 7.3.2/Rendering an Audio Element, 7.3.2.2/Rendering a Scene-Based Audio Element to Loudspeakers",True,"A third-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO`."
"test_000095","test_000050","3.6/default_w, 3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 7.1.2, 3.6.2/loudspeaker_layout == 7.1.4, 3.6.2/num_layers, 3.7.3/headphones_rendering_mode == 1, 3.7.6/layout_type == BINAURAL, 3.9/Audio Frame OBU Syntax and Semantics, 3.11.1/OPUS Specific, 6/ISOBMFF IAMF Encapsulation, 7/IAMF Processing, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.3.2.3/Rendering a Channel-Based Audio Element to Headphones",True,"A 4-layer IAMF stream encoded using Opus with the last layer being 7.1.4 and a binaural layout."
"test_000096","test_000103","3.6.3/ambisonics_mono_config, 3.7.3/headphones_rendering_mode == 1, 3.7.6/layout_type == BINAURAL, 7.3.2.4/Rendering a Scene-Based Audio Element to Headphones, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A third-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO` and a binaural layout."
"test_000100","test_000038","3.6.3/ambisonics_mono_config, 4.1/Simple Profile, 5.1/IA Sequence",True,"A zero-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO`."
"test_000101","test_000038","3.6.3/ambisonics_mono_config, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO`."
"test_000102","test_000038","3.6.3/ambisonics_mono_config, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A second-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO`."
"test_000103","test_000039","3.6.3/ambisonics_mono_config, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A third-order ambisonics IAMF stream encoded using `ambisonics_mode` = `MONO`."
"test_000104","test_000042","3.6.3/ambisonics_projection_config",True,"A zero-order ambisonics IAMF stream encoded using `ambisonics_mode` = `PROJECTION`."
"test_000105","test_000042","3.6.3/ambisonics_projection_config, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A first-order ambisonics IAMF stream encoded using `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000106","test_000042","3.6.3/ambisonics_projection_config, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A second-order ambisonics IAMF stream encoded using `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000107","test_000043","3.6.3/ambisonics_projection_config, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A third-order ambisonics IAMF stream encoded using `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000108","test_000100","3.6.3/ambisonics_mono_config, 3.11.1/OPUS Specific",True,"A zero-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `MONO`."
"test_000109","test_000101","3.6.3/ambisonics_mono_config, 3.11.1/OPUS Specific, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A first-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `MONO`."
"test_000110","test_000102","3.6.3/ambisonics_mono_config, 3.11.1/OPUS Specific, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A second-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `MONO`."
"test_000111","test_000103","3.6.3/ambisonics_mono_config, 3.11.1/OPUS Specific, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A third-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `MONO`."
"test_000112","test_000104","3.6.3/ambisonics_projection_config, 3.11.1/OPUS Specific",True,"A zero-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `PROJECTION`."
"test_000113","test_000105","3.6.3/ambisonics_projection_config, 3.11.1/OPUS Specific, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A first-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000114","test_000106","3.6.3/ambisonics_projection_config, 3.11.1/OPUS Specific, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A second-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000115","test_000107","3.6.3/ambisonics_projection_config, 3.11.1/OPUS Specific, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A third-order ambisonics IAMF stream encoded using Opus and `ambisonics_mode` = `PROJECTION` with an (almost) identity demixing matrix."
"test_000200","test_000003","3.6.2/loudspeaker_layout == Mono",True,"A simple example of a mono IAMF stream and no parameter blocks."
"test_000201","test_000003","3.6.2/loudspeaker_layout == Stereo",True,"A simple example of a stereo IAMF stream and no parameter blocks."
"test_000202","test_000201","3.6.2/loudspeaker_layout == 3.1.2",True,"A simple example of a 3.1.2 IAMF stream and no parameter blocks."
"test_000203","test_000202","3.6.2/loudspeaker_layout == 5.1",True,"A simple example of a 5.1 IAMF stream and no parameter blocks."
"test_000204","test_000203","3.6.2/loudspeaker_layout == 5.1.2",True,"A simple example of a 5.1.2 IAMF stream and no parameter blocks."
"test_000205","test_000204","3.6.2/loudspeaker_layout == 5.1.4, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A simple example of a 5.1.4 IAMF stream and no parameter blocks."
"test_000206","test_000205","3.6.2/loudspeaker_layout == 7.1",True,"A simple example of a 7.1 IAMF stream and no parameter blocks."
"test_000207","test_000206","3.6.2/loudspeaker_layout == 7.1.2",True,"A simple example of a 7.1.2 IAMF stream and no parameter blocks."
"test_000208","test_000207","3.6.2/loudspeaker_layout == 7.1.4, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A simple example of a 7.1.4 IAMF stream and no parameter blocks."
"test_000209","test_000208","3.6/demixing_info, 3.6/default_demixing_info_parameter_data, 3.6/default_w, 7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.5.1/Loudness Normalization, 7.5.2/Limiter, 9.1.2.1/Annex A2.1: Down-mix parameter and Loudness",True,"A 7.1.4 IAMF stream using `default_demixing_info_parameter_data`."
"test_000210","test_000209","3.6/num_parameters, 3.8/demixing_info_parameter_data, 3.8.2/Demixing Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.5.1/Loudness Normalization, 7.5.2/Limiter, 9.1.2.1/Annex A2.1: Down-mix parameter and Loudness",True,"A 7.1.4 IAMF stream with demixing parameter blocks which means the `default_w` is ignored."
"test_000211","test_000208","7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.5.1/Loudness Normalization, 7.5.2/Limiter, 7.6.2/Static Down-mix Matrix",True,"A 7.1.4 IAMF stream to use libear or static down-mix matrix for demixing"
"test_000212","test_000200","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == Mono, 3.11.1/OPUS Specific, 3.11.1/pre_skip",True,"A simple example of an Opus mono IAMF stream with 1 substream and no parameter blocks."
"test_000213","test_000201","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == Stereo, 3.11.1/OPUS Specific, 3.11.1/pre_skip",True,"A simple example of an Opus stereo IAMF stream with 1 substream and no parameter blocks."
"test_000214","test_000202","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == 3.1.2, 3.11.1/OPUS Specific, 3.11.1/pre_skip",True,"A simple example of an Opus 3.1.2 IAMF stream and no parameter blocks."
"test_000215","test_000203","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == 5.1, 3.11.1/OPUS Specific, 3.11.1/pre_skip",True,"A simple example of a 5.1 IAMF stream and no parameter blocks."
"test_000216","test_000204","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == 5.1.2, 3.11.1/OPUS Specific, 3.11.1/pre_skip",True,"A simple example of a 5.1.2 IAMF stream and no parameter blocks."
"test_000217","test_000205","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == 5.1.4, 3.11.1/OPUS Specific, 3.11.1/pre_skip, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A simple example of a 5.1.4 IAMF stream and no parameter blocks."
"test_000218","test_000206","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == 7.1, 3.11.1/OPUS Specific, 3.11.1/pre_skip",True,"A simple example of a 7.1 IAMF stream and no parameter blocks."
"test_000219","test_000207","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == 7.1.2, 3.11.1/OPUS Specific, 3.11.1/pre_skip",True,"A simple example of a 7.1.2 IAMF stream and no parameter blocks."
"test_000220","test_000208","3.2/num_samples_to_trim_at_end, 3.2/num_samples_to_trim_at_start, 3.6.2/loudspeaker_layout == 7.1.4, 3.11.1/OPUS Specific, 3.11.1/pre_skip, 7.5.1/Loudness Normalization, 7.5.2/Limiter",True,"A simple example of a 7.1.4 IAMF stream and no parameter blocks."
"test_000221","test_000209","3.6/default_demixing_info_parameter_data, 3.6.2/loudspeaker_layout == 7.1.4, 7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.5.1/Loudness Normalization, 7.5.2/Limiter, 9.1.2.1/Annex A2.1: Down-mix parameter and Loudness",True,"A 7.1.4 IAMF stream to use default demixing parameter."
"test_000222","test_000221","3.6.2/loudspeaker_layout == 7.1.4, 3.8/demixing_info_parameter_data, 3.8.2/Demixing Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.5.1/Loudness Normalization, 7.5.2/Limiter, 9.1.2.1/Annex A2.1: Down-mix parameter and Loudness",True,"A 7.1.4 IAMF stream with demixing parameter blocks."
"test_000223","test_000223","3.6.2/loudspeaker_layout == 7.1.4, 7/IAMF Processing, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.5.1/Loudness Normalization, 7.5.2/Limiter, 9.1.2.1/Annex A2.1: Down-mix parameter and Loudness",True,"A 7.1.4 IAMF stream to use libear or static down-mix matrix for demixing."
"test_000224","test_000204","3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/output_gain_is_present_flag, 3.6.2/output_gain_flags, 3.6.2/output_gain, 3.6.2.1/Channel Layout Generation Rule, 7.2.1/Gain, 7.6.1/Dynamic Down-mix Matrix, 9.1.2.2/Annex A2.2: Down-mix Mechanism, 9.1.2.4/Annex A2.4: Channel Group Generation Rule",True,"A 2-layer IAMF stream scalable encoded with the channel layouts: 3.1.2ch/5.1.2ch"
"test_000225","test_0000211","3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/loudspeaker_layout == 7.1.4, 3.6.2/output_gain_is_present_flag, 3.6.2/output_gain_flags, 3.6.2/output_gain, 3.6.2.1/Channel Layout Generation Rule, 7/IAMF Processing, 7.2.1/Gain, 7.2.2/De-mixer, 7.3.2/Rendering an Audio Element, 7.3.2.1/Rendering a Channel-Based Audio Element to Loudspeakers, 7.6.1/Dynamic Down-mix Matrix, 9.1.2.1/Annex A2.1: Down-mix parameter and Loudness, 9.1.2.2/Annex A2.2: Down-mix Mechanism, 9.1.2.4/Annex A2.4: Channel Group Generation Rule",True,"A 3-layer IAMF stream scalable encoded with the channel layouts: 3.1.2ch/5.1.2ch/7.1.4ch"
"test_000226","test_000225","3.6.2/channel_audio_layer_config, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/loudspeaker_layout == 7.1.4, 3.6.2/output_gain_is_present_flag, 3.6.2/output_gain_flags, 3.6.2/output_gain, 3.6.2.1/Channel Layout Generation Rule, 7.2.1/Gain, 7.6.1/Dynamic Down-mix Matrix, 7.6.2/Static Down-mix Matrix, 9.1.2.2/Annex A2.2: Down-mix Mechanism, 9.1.2.4/Annex A2.4: Channel Group Generation Rule",True,"A 2-layer IAMF stream scalable encoded with the channel layouts: 5.1.2ch/7.1.4ch"
"test_000227","test_000224","3.6/num_parameters, 3.6.2/Scalable Channel Layout Config Syntax and Semantics, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/output_gain_is_present_flag, 3.6.2/output_gain_flags, 3.6.2/output_gain, 3.8/recon_gain_info_parameter_data, 3.8.3/Recon Gain Info Parameter Data Syntax and Semantics, 3.6.2.1/Channel Layout Generation Rule, 7/IAMF Processing, 7.2.1/Gain, 7.2.3/Recon Gain, 7.6.1/Dynamic Down-mix Matrix, 9.1.2.2/Annex A2.2: Down-mix Mechanism, 9.1.2.3/Annex A2.3: Recon Gain Generation, 9.1.2.4/Annex A2.4: Channel Group Generation Rule",True,"A 2-layer IAMF stream scalable encoded using Opus with the channel layouts: 3.1.2ch/5.1.2ch"
"test_000228","test_000225","3.6/num_parameters, 3.6.2/Scalable Channel Layout Config Syntax and Semantics, 3.6.2/loudspeaker_layout == 3.1.2, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/loudspeaker_layout == 7.1.4, 3.6.2/output_gain_is_present_flag, 3.6.2/output_gain_flags, 3.6.2/output_gain, 3.6.2.1/Channel Layout Generation Rule, 3.8/recon_gain_info_parameter_data, 3.8.3/Recon Gain Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.2.1/Gain, 7.2.3/Recon Gain, 7.6.1/Dynamic Down-mix Matrix, 9.1.2.2/Annex A2.2: Down-mix Mechanism, 9.1.2.3/Annex A2.3: Recon Gain Generation, 9.1.2.4/Annex A2.4: Channel Group Generation Rule",True,"A 3-layer IAMF stream scalable encoded using Opus with the channel layouts: 3.1.2ch/5.1.2ch/7.1.4ch"
"test_000229","test_000226","3.6/num_parameters, 3.6/recon_gain_info, 3.6.2/Scalable Channel Layout Config Syntax and Semantics, 3.6.2/loudspeaker_layout == 5.1.2, 3.6.2/loudspeaker_layout == 7.1.4, 3.6.2/output_gain_is_present_flag, 3.6.2/output_gain_flags, 3.6.2/output_gain, 3.6.2.1/Channel Layout Generation Rule, 3.8/recon_gain_info_parameter_data, 3.8.3/Recon Gain Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.2.1/Gain, 7.2.3/Recon Gain, 7.6.1/Dynamic Down-mix Matrix, 9.1.2.2/Annex A2.2: Down-mix Mechanism, 9.1.2.3/Annex A2.3: Recon Gain Generation, 9.1.2.4/Annex A2.4: Channel Group Generation Rule",True,"A 2-layer IAMF stream scalable encoded using Opus with the channel layouts: 5.1.2ch/7.1.4ch"
"test_000230","test_000226","3.6/num_parameters, 3.6/param_definition_type, 3.6.2/Scalable Channel Layout Config Syntax and Semantics, 3.6.2/loudspeaker_layout == Mono, 3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.6.2/output_gain_is_present_flag, 3.6.2/output_gain_flags, 3.6.2/output_gain, 3.6.2.1/Channel Layout Generation Rule, 3.8/recon_gain_info_parameter_data, 3.8.3/Recon Gain Info Parameter Data Syntax and Semantics, 7/IAMF Processing, 7.2.1/Gain, 7.2.3/Recon Gain, 7.6.1/Dynamic Down-mix Matrix, 9.1.2.2/Annex A2.2: Down-mix Mechanism, 9.1.2.3/Annex A2.3: Recon Gain Generation, 9.1.2.4/Annex A2.4: Channel Group Generation Rule",True,"A 3-layer IAMF stream scalable encoded using Opus with the channel layouts: Mono/Stereo/5.1ch"
"test_000231","test_000201","3.11.4/sample_size",True,"A simple example of a 32bit stereo IAMF stream and no parameter blocks."
"test_000300","test_000101","3.6.2/loudspeaker_layout == Stereo, 3.6.3/ambisonics_mono_config, 3.7.4/default_mix_gain, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A first-order ambisonics + stereo base profile IAMF stream."
"test_000301","test_000102","3.6.2/loudspeaker_layout == Stereo, 3.6.3/ambisonics_mono_config, 3.7.4/default_mix_gain, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A second-order ambisonics + stereo base profile IAMF stream."
"test_000302","test_000103","3.6.2/loudspeaker_layout == Stereo, 3.6.3/ambisonics_mono_config, 3.7.4/default_mix_gain, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A third-order ambisonics + stereo base profile IAMF stream."
"test_000303","test_000109","3.6/num_parameters, 3.6.2/loudspeaker_layout == Stereo, 3.6.3/ambisonics_mono_config, 3.7.4/default_mix_gain, 3.11.1/OPUS Specific, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A first-order ambisonics + stereo base profile IAMF stream encoded using Opus."
"test_000304","test_000110","3.6.2/loudspeaker_layout == Stereo, 3.6.3/ambisonics_mono_config, 3.7.4/default_mix_gain, 3.11.1/OPUS Specific, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A second-order ambisonics + stereo base profile IAMF stream encoded using Opus."
"test_000305","test_000111","3.6.2/loudspeaker_layout == Stereo, 3.6.3/ambisonics_mono_config, 3.7.4/default_mix_gain, 3.11.1/OPUS Specific, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A third-order ambisonics + stereo base profile IAMF stream encoded using Opus."
"test_000400","test_000300","3.6.2/loudspeaker_layout == Stereo, 3.7.4/default_mix_gain, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A simple example of a stereo + stereo base profile IAMF stream."
"test_000401","test_000400","3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 3.1.2, 3.7.4/default_mix_gain, 4.2/Base Profile, 5.1.2/IA Data OBUs, 8.5.1/Loudness Information",True,"A simple example of a 3.1.2 + stereo base profile IAMF stream."
"test_000402","test_000401","3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.7.4/default_mix_gain, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A simple example of a 5.1 + stereo base profile IAMF stream."
"test_000403","test_000303","3.6.2/loudspeaker_layout == Stereo, 3.7.4/default_mix_gain, 3.11.1/OPUS Specific, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A simple example of a stereo + stereo base profile IAMF stream encoded using Opus."
"test_000404","test_000403","3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 3.1.2, 3.7.4/default_mix_gain, 3.11.1/OPUS Specific, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A simple example of a 3.1.2 + stereo base profile IAMF stream encoded using Opus."
"test_000405","test_000404","3.6.2/loudspeaker_layout == Stereo, 3.6.2/loudspeaker_layout == 5.1, 3.7.4/default_mix_gain, 3.11.1/OPUS Specific, 4.2/Base Profile, 8.5.1/Loudness Information",True,"A simple example of a 5.1 + stereo base profile IAMF stream encoded using Opus."
"test_000406","test_000400","3.8.1/animation_type == LINEAR",True,"A simple example of a stereo + stereo base profile IAMF stream using linear gain."
"test_000407","test_000400","3.8.1/animation_type == BEZIER, 7/IAMF Processing, 7.4/animation_type == BEZIER",True,"A simple example of a stereo + stereo base profile IAMF stream using bezier gain."
"test_000408","test_000400","3.6.1/Parameter Definition Syntax and Semantics, 3.6.1/parameter_id, 3.8/num_subblocks, 3.8.1/Mix Gain Parameter Data Syntax and Semantics, 3.8.1/animation_type == LINEAR, 7/IAMF Processing, 7.4/animation_type == LINEAR",True,"A simple example of a stereo + stereo base profile IAMF stream has two subblocks in the parameter block."
"test_000409","test_000400","7/IAMF Processing, 7.3/Mix Presentation, 7.3.1/Selecting a Mix Presentation",True,"A simple example of a stereo + stereo base profile IAMF stream has 2 Mix Presentation OBUs."
