// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.screens_login.mojom;

import "mojo/public/mojom/base/string16.mojom";

// Interface for the arc vm data migration screen.
// Lives in the browser process. A renderer uses this to invoke
// methods that are implemented in the browser process.
interface ArcVmDataMigrationPageHandler {
  // Emits a resume button clicked.
  OnResumeClicked();

  // Emits an update button clicked.
  OnUpdateClicked();

  // Emits a finish button clicked.
  OnFinishClicked();

  // Emits a skip button clicked.
  OnSkipClicked();

  // Emits a report button clicked.
  OnReportClicked();
};

// Interface for the arc vm data migration screen.
// Lives in the render process. Implemented in Typescript and
// used by the page handler to send updates.
interface ArcVmDataMigrationPage {
  // Describes the consumer update screen step.
  enum ArcVmUIState {
    kLoading,
    kWelcome,
    kResume,
    kProgress,
    kSuccess,
    kFailure,
  };

  // Invoked to set the UI state.
  SetUIState(ArcVmUIState state);

  // Invoked to set required free disk space.
  SetRequiredFreeDiskSpace(int64 required_space);

  // Invoked to set minimum battery percent.
  SetMinimumBatteryPercent(double percent);

  // Invoked to set battery state.
  SetBatteryState(bool enough, bool connected);

  // Invoked to set migration progress.
  SetMigrationProgress(double progress);

  // Invoked to set remaining time estimated.
  SetEstimatedRemainingTime(mojo_base.mojom.String16 remaining_time);
};

// Interface for the encryption migration screen.
// Lives in the browser process. A renderer uses this to invoke
// methods that are implemented in the browser process.
interface EncryptionMigrationPageHandler {
  // Emits a start migration button clicked.
  OnStartMigration();

  // Emits a skip migration button clicked.
  OnSkipMigration();

  // Emits a restart on low storage.
  OnRequestRestartOnLowStorage();

  // Emits a restart on failure.
  OnRequestRestartOnFailure();

  // Emits open feedback dialog..
  OnOpenFeedbackDialog();
};

// Interface for the encryption migration screen.
// Lives in the render process. Implemented in Typescript and
// used by the page handler to send updates.
interface EncryptionMigrationPage {
  // Describes the migration UI state.
  enum UIState {
    kInitial,
    kReady,
    kMigrating,
    kMigratingFailed,
    kNotEnoughStorage,
  };

  // Invoked to set the UI state.
  SetUIState(UIState state);

  // Invoked to set migration progress.
  SetMigrationProgress(double progress);

  // Invoked to set resuming option.
  SetIsResuming(bool is_resuming);

  // Invoked to set battery state.
  SetBatteryState(double percent, bool is_enough, bool is_charging);

  // Invoked to set minimum battery percent.
  SetNecessaryBatteryPercent(double percent);

  // Invoked to set space information.
  SetSpaceInfoInString(mojo_base.mojom.String16 available_space,
                       mojo_base.mojom.String16 required_space);
};
