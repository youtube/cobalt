--- base/test/BUILD.gn
+++ base/test/BUILD.gn
@@ -189,8 +189,9 @@
 
   if (enable_base_tracing) {
     public_deps += [ "//third_party/perfetto:perfetto_test_support" ]
-<<<<<<< HEAD
-    public_deps += [ ":test_trace_processor" ]
+    if (!is_cobalt_hermetic_build) {
+      public_deps += [ ":test_trace_processor" ]
+    }
     sources += [
       "test_trace_processor.cc",
       "test_trace_processor.h",
@@ -204,18 +205,6 @@
         ":test_trace_processor+bundle",
         ":test_trace_processor+link",
       ]
-=======
-    if (!is_chromeos && !is_cobalt_hermetic_build) {
-      # TODO(rasikan): Add to ios and chromeos when unblocked by the chromiumos
-      # change to add the shared lib to the chrome-binary-tests directory.
-      public_deps += [ ":test_trace_processor" ]
-      if (is_ios) {
-        deps += [
-          ":test_trace_processor+bundle",
-          ":test_trace_processor+link",
-        ]
-      }
->>>>>>> 1ffb38d9246 (Build base_unittests hermetically. (#4935))
     }
   }
 
@@ -553,8 +542,7 @@
 }
 }
 
-<<<<<<< HEAD
-if (enable_base_tracing) {
+if (enable_base_tracing && !is_cobalt_hermetic_build) {
   perfetto_cc_proto_descriptor("gen_cc_chrome_track_event_descriptor") {
     descriptor_name = "chrome_track_event.descriptor"
     descriptor_target = "//base/tracing/protos:chrome_track_event"
@@ -576,9 +564,6 @@
            ] + rebase_path(sources, root_build_dir)
   }
 
-=======
-if (enable_base_tracing && !is_cobalt_hermetic_build) {
->>>>>>> 1ffb38d9246 (Build base_unittests hermetically. (#4935))
   # We encapsulate the trace processor in a separate shared library to prevent
   # any duplicate symbol issues. Perfetto symbols are exported by chromiumâ€™s
   # base via a public_dep on libperfetto; libtrace_processor also depends on
