// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// DISCLAIMER: Please keep messages and enums in this file in sync with
// chrome/cros/dpanel/data/devices/proto/requests.proto file in google3
// repository.

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

package support_tool;

// DataCollectorType represent each DataCollector that can be added to
// SupportToolHandler to collect data.
enum DataCollectorType {
  DATA_COLLECTOR_TYPE_UNSPECIFIED = 0;
  CHROME_INTERNAL = 1;
  CRASH_IDS = 2;
  MEMORY_DETAILS = 3;
  CHROMEOS_UI_HIERARCHY = 4;
  CHROMEOS_COMMAND_LINE = 5;
  CHROMEOS_DEVICE_EVENT = 6;
  CHROMEOS_IWL_WIFI_DUMP = 7;
  CHROMEOS_TOUCH_EVENTS = 8;
  CHROMEOS_CROS_API = 9;
  CHROMEOS_LACROS = 10;
  CHROMEOS_REVEN = 11;
  CHROMEOS_DBUS = 12;
  CHROMEOS_NETWORK_ROUTES = 13;
  CHROMEOS_SHILL = 14;
  POLICIES = 15;
  CHROMEOS_SYSTEM_STATE = 16;
  CHROMEOS_SYSTEM_LOGS = 17;
  CHROMEOS_CHROME_USER_LOGS = 18;
  CHROMEOS_BLUETOOTH_FLOSS = 19;
  CHROMEOS_CONNECTED_INPUT_DEVICES = 20;
  CHROMEOS_TRAFFIC_COUNTERS = 21;
  CHROMEOS_VIRTUAL_KEYBOARD = 22;
  CHROMEOS_NETWORK_HEALTH = 23;
}

// PiiType represent the different known categories of PII that can exist in
// logs. The types here are based on PII types listed in
// components/feedback/pii_types.h.
enum PiiType {
  PII_TYPE_UNSPECIFIED = 0;
  ANDROID_APP_STORAGE_PATH = 1;
  EMAIL = 2;
  GAIA_ID = 3;
  IPP_ADDRESS = 4;
  IP_ADDRESS = 5;
  LOCATION_INFO = 6;
  MAC_ADDRESS = 7;
  UI_HIEARCHY_WINDOW_TITLE = 8;
  URL = 9;
  SERIAL = 10;
  SSID = 11;
  STABLE_IDENTIFIER = 12;
  VOLUME_LABEL = 13;
  EAP = 14;
}

// Used for storing the information about which data colllectors will be used
// when Support Tool creates the support packet.
message DataCollectionModule {
  // List of DataCollectors that will be used when Support Tool collects data.
  repeated DataCollectorType included_data_collectors = 1;
}

// Used for storing the support packet details that's requested in "Remote Log
// Capture" device command.
message SupportPacketDetails {
  optional string issue_case_id = 1;
  optional string issue_description = 2;
  repeated DataCollectorType requested_data_collectors = 3;
  repeated PiiType requested_pii_types = 4;
  // Metadata that will be echoed back to the server with the remote command
  // response. The client should not attempt to parse it.
  optional string requester_metadata = 5;
}
