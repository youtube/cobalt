// Copyright 2024 The Cobalt Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef STARBOARD_ELF_LOADER_BINARY_PATCH_FILE_IMPL_H_
#define STARBOARD_ELF_LOADER_BINARY_PATCH_FILE_IMPL_H_

#include <vector>

#include "starboard/elf_loader/file_impl.h"

namespace starboard {
namespace elf_loader {

class BinaryPatchFileImpl : public FileImpl {
 public:
  BinaryPatchFileImpl();
  ~BinaryPatchFileImpl();

  // Opens the patch at the given file path and applies it to the system image
  // binary to generate a new binary, which is kept in memory.
  bool Open(const char* name) override;

  bool ReadFromOffset(int64_t offset, char* buffer, int size) override;

 private:
  bool LoadContents(const char* file_path, std::vector<char>& buffer);

  // The new binary, generated by patching the old one.
  std::vector<char> new_binary_;
};

}  // namespace elf_loader
}  // namespace starboard

#endif  // STARBOARD_ELF_LOADER_BINARY_PATCH_FILE_IMPL_H_
