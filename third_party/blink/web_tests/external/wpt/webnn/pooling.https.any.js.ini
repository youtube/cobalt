[pooling.https.any.html]
  [averagePool2d float32 4D tensor all negative default options / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all negative default options / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all negative default options / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor default options / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor default options / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations with options.strides / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nhwc / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / async]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations with options.strides / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nhwc / async]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / gpu / async]
    expected: FAIL


[pooling.https.any.worker.html]
  [averagePool2d float32 4D tensor all negative default options / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all negative default options / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all negative default options / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor all negative default options / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all negative default options / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor all negative default options / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor all positive default options / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor default options / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor default options / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor default options / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor default options / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=explicit / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations with options.strides / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.dilations with options.strides / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nchw / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nhwc / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.layout=nhwc / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.padding / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=ceil / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.roundingType=floor / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.strides / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / cpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / cpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / gpu / async]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / gpu / sync]
    expected: FAIL

  [averagePool2d float32 4D tensor options.windowDimensions / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / async]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor default options / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=explicit / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-lower ignores options.padding / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.autoPad=same-upper ignores options.padding / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations with options.strides / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.dilations with options.strides / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nchw / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nhwc / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.layout=nhwc / sync]
    expected:
      if (product == "content_shell") and (os == "mac"): FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=ceil / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.outputSizes ignores options.roundingType=floor / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.padding / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=ceil / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.roundingType=floor / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.strides / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / cpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / cpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / gpu / async]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / gpu / sync]
    expected: FAIL

  [maxPool2d float32 4D tensor options.windowDimensions / sync]
    expected: FAIL
