This is a testharness.js-based test.
[FAIL] .floating-flexbox 1
  assert_equals: \n<div class="floating-flexbox" data-expected-width="200">\n      <!-- min contribution: 100 -->\n      <!-- desired fraction: -0.5 -->\n      <!-- chosen fraction <=0 and desired fraction <=0 and item can shrink, so it contributes its min-content contribution -->\n      <div style="flex: 1 1 200px; width:50px; min-width:0px;">\n        <div></div>\n      </div>\n      <!-- chosen fraction <=0 and desired fraction <=0 and item can shrink, so it contributes its min-content contribution -->\n      <div style="flex: 1 1 400px; width:50px;">\n        <div></div>\n      </div>\n    </div>\nwidth expected 200 but got 100
[FAIL] .floating-flexbox 2
  assert_equals: \n<div class="floating-flexbox" data-expected-width="200">\n      <!-- min contribution: 100 -->\n      <!-- min contribution - flex basis: -100 -->\n      <!-- desired fraction: -0.5 -->\n      <!-- chosen fraction <=0 and desired fraction <=0 and item can shrink, so it contributes its min-content contribution -->\n      <div style="flex: 1 1 200px; width:50px;">\n        <div></div>\n      </div>\n      <!-- min contribution: 100 -->\n      <!-- min contribution - flex basis: -300 -->\n      <!-- desired fraction: -300/(2*400) = -0.375 -->\n      <!-- chosen fraction <=0 and desired fraction <=0 and item can shrink, so it contributes its min-content contribution -->\n      <div style="flex: 1 2 400px; width:50px;">\n        <div></div>\n      </div>\n    </div>\nwidth expected 200 but got 100
[FAIL] .floating-flexbox 3
  assert_equals: \n<div class="floating-flexbox" data-expected-width="200">\n      <div style="flex: 1 1 200px; width:50px; min-width: 0px;">\n        <div></div>\n      </div>\n      <div style="flex: 1 2 400px; width:50px; min-width: 0px;">\n        <div></div>\n      </div>\n    </div>\nwidth expected 200 but got 100
[FAIL] .floating-flexbox 4
  assert_equals: \n<div class="floating-flexbox" data-expected-width="300">\n      <!-- min contribution: 100 -->\n      <!-- desired fraction: -inf -->\n      <!-- chosen fraction <= 0 and item can't shrink, so contribute flex basis -->\n      <div style="flex: 1 0 200px; width:50px;">\n        <div></div>\n      </div>\n      <!-- min contribution: 100 -->\n      <!-- desired fraction: -0.75 -->\n      <!-- chosen fraction <= 0 and item CAN shrink, so contribute min contribution -->\n      <div style="flex: 1 1 400px; width:50px;">\n        <div></div>\n      </div>\n    </div>\nwidth expected 300 but got 250
[FAIL] .floating-flexbox 6
  assert_equals: \n<div class="floating-flexbox" data-expected-width="600">\n      <!-- min contribution: 200 -->\n      <!-- desired fraction: 150px -->\n      <!-- 50 + 1*150 = 200 -->\n      <div style="flex: 1 0 50px; width: 200px;">\n        <div></div>\n      </div>\n      <!-- min contribution: 200 -->\n      <!-- desired fraction: 100px -->\n      <!-- 100 + 2*150 = 400 -->\n      <div style="flex: 2 0 100px; width: 200px;">\n        <div></div>\n      </div>\n    </div>\nwidth expected 600 but got 400
[FAIL] .floating-flexbox 7
  assert_equals: \n<div class="floating-flexbox" data-expected-width="400">\n      <!-- min contribution: 100 -->\n      <!-- desired fraction: -0.5 -->\n      <!-- final contribution = flex base size + product = 200px + 50px*0 = 200px -->\n      <div style="flex: 0 1 200px; width: 50px;">\n        <div></div>\n      </div>\n      <!-- min contribution: 200 -->\n      <!-- desired fraction: (200px - 100px) / 2 = 50px -->\n      <!-- final contribution = flex base size + product = 100px + 50px*2 = 200px -->\n      <div style="flex: 2 0 100px; width: 200px;">\n        <div></div>\n      </div>\n    </div>\nwidth expected 400 but got 250
Harness: the test ran to completion.

