# Copyright 2022 Comcast Cable Communications Management, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2021 The Cobalt Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

config("platform_configuration") {
  if (current_toolchain == default_toolchain &&
      build_with_separate_cobalt_toolchain) {
    configs = [
      "//starboard/build/config/sabi",
      "//starboard/build/config/modular/arm/${rdk_arm_call_convention}"
    ]
    cflags = [
      "-fvisibility=hidden",
      # Suppress warnings related to unused compilation flags in clang.
      "-Wno-unused-command-line-argument",
      # Let older Clangs ignore newer Clangs' warnings.
      "-Wno-unknown-warning-option",
    ]
    ldflags = [
      "-Wl,-Bsymbolic-functions"
    ]
  } else {
    configs = [
      "$rdk_starboard_root/third_party/starboard/rdk/shared/platform_configuration",
    ]

    if (!rdk_build_with_yocto) {
      rdk_arm_gnueabi = "gnueabihf"
      if (rdk_arm_call_convention == "softfp") {
        rdk_arm_gnueabi = "gnueabi"
      }

      cflags = [
        # Specify the sysroot with all your include dependencies.
        "--sysroot=$rdk_sysroot",

        "-I$rdk_sysroot/usr/include",
        "-I$rdk_sysroot/usr/include/api",
      ]
      ldflags = [
        "--sysroot=$rdk_sysroot",

        "-L$rdk_sysroot/usr/lib/arm-rdkmllib32-linux-$rdk_arm_gnueabi",
        "-Wl,-rpath=$rdk_sysroot/usr/lib/arm-rdkmllib32-linux-$rdk_arm_gnueabi",
      ]
    }
  }
}
