// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     third_party/jni_zero/jni_generator.py
// For
//     org/jni_zero/samples/SampleProxyEdgeCases

#ifndef org_jni_zero_samples_SampleProxyEdgeCases_JNI
#define org_jni_zero_samples_SampleProxyEdgeCases_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_helper.h"


// Step 1: Forward declarations.

JNI_ZERO_COMPONENT_BUILD_EXPORT extern const char
    kClassPath_org_jni_1zero_samples_SampleProxyEdgeCases[];
const char kClassPath_org_jni_1zero_samples_SampleProxyEdgeCases[] =
    "org/jni_zero/samples/SampleProxyEdgeCases";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_ZERO_COMPONENT_BUILD_EXPORT std::atomic<jclass>
    g_org_jni_1zero_samples_SampleProxyEdgeCases_clazz(nullptr);
#ifndef org_jni_1zero_samples_SampleProxyEdgeCases_clazz_defined
#define org_jni_1zero_samples_SampleProxyEdgeCases_clazz_defined
inline jclass org_jni_1zero_samples_SampleProxyEdgeCases_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_jni_1zero_samples_SampleProxyEdgeCases,
      &g_org_jni_1zero_samples_SampleProxyEdgeCases_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static jint JNI_SampleProxyEdgeCases_AddStructB(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& caller,
    const base::android::JavaParamRef<jobject>& b);

JNI_BOUNDARY_EXPORT jint
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1addStructB(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jobject b) {
  return JNI_SampleProxyEdgeCases_AddStructB(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, b));
}

static base::android::ScopedJavaLocalRef<jobjectArray> JNI_SampleProxyEdgeCases_ArrayTypes1(JNIEnv*
    env, const base::android::JavaParamRef<jintArray>& a,
    const base::android::JavaParamRef<jobjectArray>& b);

JNI_BOUNDARY_EXPORT jobjectArray
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1arrayTypes1(
    JNIEnv* env,
    jclass jcaller,
    jintArray a,
    jobjectArray b) {
  return JNI_SampleProxyEdgeCases_ArrayTypes1(env, base::android::JavaParamRef<jintArray>(env, a),
      base::android::JavaParamRef<jobjectArray>(env, b)).Release();
}

static base::android::ScopedJavaLocalRef<jintArray> JNI_SampleProxyEdgeCases_ArrayTypes2(JNIEnv*
    env, const base::android::JavaParamRef<jintArray>& a,
    const base::android::JavaParamRef<jobjectArray>& b);

JNI_BOUNDARY_EXPORT jintArray
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1arrayTypes2(
    JNIEnv* env,
    jclass jcaller,
    jintArray a,
    jobjectArray b) {
  return JNI_SampleProxyEdgeCases_ArrayTypes2(env, base::android::JavaParamRef<jintArray>(env, a),
      base::android::JavaParamRef<jobjectArray>(env, b)).Release();
}

static void JNI_SampleProxyEdgeCases_FooForTest(JNIEnv* env);

JNI_BOUNDARY_EXPORT void
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1fooForTest(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_SampleProxyEdgeCases_FooForTest(env);
}

static void JNI_SampleProxyEdgeCases_FooForTesting(JNIEnv* env);

JNI_BOUNDARY_EXPORT void
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1fooForTesting(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_SampleProxyEdgeCases_FooForTesting(env);
}

static void JNI_SampleProxyEdgeCases_FooForTests(JNIEnv* env);

JNI_BOUNDARY_EXPORT void
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1fooForTests(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_SampleProxyEdgeCases_FooForTests(env);
}

static void JNI_SampleProxyEdgeCases_Foo__weirdly__escaped_name1(JNIEnv* env);

JNI_BOUNDARY_EXPORT void
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1foo_11_11weirdly_11_11escaped_11name1(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_SampleProxyEdgeCases_Foo__weirdly__escaped_name1(env);
}

static base::android::ScopedJavaLocalRef<jobjectArray>
    JNI_SampleProxyEdgeCases_GenericsWithNestedClassArray(JNIEnv* env, const
    base::android::JavaParamRef<jobjectArray>& arg);

JNI_BOUNDARY_EXPORT jobjectArray
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1genericsWithNestedClassArray(
    JNIEnv* env,
    jclass jcaller,
    jobjectArray arg) {
  return JNI_SampleProxyEdgeCases_GenericsWithNestedClassArray(env,
      base::android::JavaParamRef<jobjectArray>(env, arg)).Release();
}

static void JNI_SampleProxyEdgeCases_SetBool(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& b,
    const base::android::JavaParamRef<jobject>& i);

JNI_BOUNDARY_EXPORT void
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1setBool(
    JNIEnv* env,
    jclass jcaller,
    jobject b,
    jobject i) {
  return JNI_SampleProxyEdgeCases_SetBool(env, base::android::JavaParamRef<jobject>(env, b),
      base::android::JavaParamRef<jobject>(env, i));
}

static jboolean JNI_SampleProxyEdgeCases_SetStringBuilder(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& sb);

JNI_BOUNDARY_EXPORT jboolean
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1setStringBuilder(
    JNIEnv* env,
    jclass jcaller,
    jobject sb) {
  return JNI_SampleProxyEdgeCases_SetStringBuilder(env, base::android::JavaParamRef<jobject>(env,
      sb));
}

static jint JNI_SampleProxyEdgeCases_SetStringBuilder(JNIEnv* env, jint sb);

JNI_BOUNDARY_EXPORT jint
    Java_org_jni_1zero_GEN_1JNI_org_1jni_11zero_1samples_1SampleProxyEdgeCases_1setStringBuilder(
    JNIEnv* env,
    jclass jcaller,
    jint sb) {
  return JNI_SampleProxyEdgeCases_SetStringBuilder(env, sb);
}

JNI_BOUNDARY_EXPORT void Java_org_jni_1zero_samples_SampleProxyEdgeCases_nativeInstanceMethod(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeInstance) {
  Instance* native = reinterpret_cast<Instance*>(nativeInstance);
  CHECK_NATIVE_PTR(env, jcaller, native, "InstanceMethod");
  return native->InstanceMethod(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

static void JNI_SampleProxyEdgeCases_StaticMethod(JNIEnv* env);

JNI_BOUNDARY_EXPORT void Java_org_jni_1zero_samples_SampleProxyEdgeCases_nativeStaticMethod(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_SampleProxyEdgeCases_StaticMethod(env);
}


#endif  // org_jni_zero_samples_SampleProxyEdgeCases_JNI
