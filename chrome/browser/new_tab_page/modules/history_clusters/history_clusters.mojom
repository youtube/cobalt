// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ntp.history_clusters.mojom;

import "chrome/browser/new_tab_page/modules/history_clusters/cart/cart.mojom";
import "components/history_clusters/public/mojom/history_cluster_types.mojom";
import "url/mojom/url.mojom";

// Available module UI layouts. This enum must match the numbering for
// NTPHistoryClustersModuleDisplayLayout in enums.xml. These values are
// persisted to logs. Entries should not be renumbered, removed or reused.
enum LayoutType {
  kNone,
  kLayout1,  // 2 image visits
  kLayout2,  // 1 image visit & 2 non-image visits
  kLayout3,  // 2 image visits & 2 non-image visits
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // Get a series of relevant history clusters.
  GetClusters() => (array<history_clusters.mojom.Cluster> clusters);

  // Get the most relevant cart for given `cluster`.
  GetCartForCluster(history_clusters.mojom.Cluster cluster)
    => (ntp.history_clusters.cart.mojom.Cart? cart);

  // Open or make visible the Journeys UI on the Side Panel.
  ShowJourneysSidePanel(string query);

  // Open the URLs as a new tab group and clobber the existing NTP.
  OpenUrlsInTabGroup(array<url.mojom.Url> urls);

  // Dismisses a cluster by marking its associated visits as not relevant.
  DismissCluster(array<history_clusters.mojom.URLVisit> visits);

  // Records that the cluster with `cluster_id` was clicked.
  RecordClick(int64 cluster_id);

  // Records the layout type for the cluster with `cluster_id`.
  RecordLayoutTypeShown(LayoutType layout_type, int64 cluster_id);
};
