{% from 'templates/macros.tmpl' import source_files_for_generated_file, trie_length_switch %}
// Copyright 2016 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

{{source_files_for_generated_file(template_file, input_files)}}

#include "third_party/blink/renderer/core/css/css_primitive_value.h"

namespace blink {

namespace {

template<typename CharacterType>
CSSPrimitiveValue::UnitType CssPrimitiveValueUnitFromTrie(
    base::span<const CharacterType> chars) {
  const CharacterType* data = chars.data();
  unsigned length = static_cast<unsigned>(chars.size());
  DCHECK(data);
  DCHECK(length);
  {% macro trie_return_expression(unit_name) %}CSSPrimitiveValue::UnitType::{{unit_name}}{% endmacro %}
  {{ trie_length_switch(length_tries, trie_return_expression, True) | indent(2) }}
  return CSSPrimitiveValue::UnitType::kUnknown;
}

} // namespace

CSSPrimitiveValue::UnitType CSSPrimitiveValue::StringToUnitType(
    base::span<const LChar> chars) {
  return CssPrimitiveValueUnitFromTrie(chars);
}

CSSPrimitiveValue::UnitType CSSPrimitiveValue::StringToUnitType(
    base::span<const UChar> chars) {
  return CssPrimitiveValueUnitFromTrie(chars);
}

} // namespace blink

