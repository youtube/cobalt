/*
 * Copyright (C) 2013 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// https://w3c.github.io/media-source/#idl-def-mediasource

enum EndOfStreamError {
    "network",
    "decode"
};

[
    ActiveScriptWrappable,
    Exposed=(Window, DedicatedWorker)
] interface MediaSource : EventTarget {
    [CallWith=ExecutionContext] constructor();
    // All the source buffers created by this object.
    readonly attribute SourceBufferList sourceBuffers;

    // Subset of sourceBuffers that provide data for the selected/enabled tracks.
    readonly attribute SourceBufferList activeSourceBuffers;

    [RaisesException=Setter] attribute unrestricted double duration;
    attribute EventHandler onsourceopen;
    attribute EventHandler onsourceended;
    attribute EventHandler onsourceclose;

    [RaisesException] SourceBuffer addSourceBuffer(DOMString type);

    // For MSE-for-WebCodecs. Explainer:
    // https://github.com/wolenetz/mse-for-webcodecs/blob/main/explainer.md
    [
        RaisesException,
        RuntimeEnabled=MediaSourceExtensionsForWebCodecs,
        ImplementedAs=AddSourceBufferUsingConfig,
        MeasureAs=AddSourceBufferUsingConfig,
        CallWith=ExecutionContext
    ] SourceBuffer addSourceBuffer(SourceBufferConfig config);

    [RaisesException] void removeSourceBuffer(SourceBuffer buffer);
    readonly attribute DOMString readyState;
    [RaisesException] void endOfStream(optional EndOfStreamError error);

    [RaisesException] void setLiveSeekableRange(double start, double end);
    [RaisesException] void clearLiveSeekableRange();

    // Initially for just MSE-in-Workers (https://crbug.com/878133). See also
    // discussion on https://github.com/w3c/media-source/issues/175,
    // https://github.com/w3c/media-source/pull/305,
    // https://github.com/w3c/media-source/pull/306 and
    // https://github.com/w3c/media-source/pull/317.
    [
        MeasureAs=MediaSourceGetHandle,
        Exposed=DedicatedWorker,
        SameObject
    ] readonly attribute MediaSourceHandle handle;

    // TODO(crbug.com/1144908): Consider adding an overload which is given a
    // SourceBufferConfig.
    [CallWith=ExecutionContext] static boolean isTypeSupported(DOMString type);

    // Enables proactive feature-detection of MSE-in-Workers support from the
    // main thread (or anywhere this interface is exposed.) If the attribute is
    // available, and if it is true, then the implementation claims it can
    // support usage of the MSE API from dedicated worker contexts. See also
    // https://github.com/w3c/media-source/issues/175 and
    // https://crbug.com/878133.
    [CallWith=ExecutionContext] static readonly attribute boolean canConstructInDedicatedWorker;
};
