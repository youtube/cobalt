This is a testharness.js-based test.
FAIL Constructing a CSSHSL with a number for the hue works as intended. Failed to construct 'CSSHSL': parameter 1 is not of type 'CSSNumericValue'.
FAIL CSSHSL.h can be updated with a a number. Failed to set the 'h' property on 'CSSHSL': Failed to convert value to 'CSSNumericValue'.
PASS Constructing a CSSHSL with degrees for the hue works as intended.
PASS CSSHSL.h can be updated with a degrees.
PASS Constructing a CSSHSL with radians for the hue works as intended.
PASS CSSHSL.h can be updated with a radians.
PASS Constructing a CSSHSL with gradians for the hue works as intended.
PASS CSSHSL.h can be updated with a gradians.
FAIL Constructing a CSSHSL with undefined for the hue works as intended. Failed to construct 'CSSHSL': parameter 1 is not of type 'CSSNumericValue'.
FAIL CSSHSL.h can be updated with a undefined. Failed to set the 'h' property on 'CSSHSL': Failed to convert value to 'CSSNumericValue'.
FAIL Constructing a CSSHSL with css pixels for hue throws a SyntaxError. assert_throws_dom: function "() => new CSSHSL(hue, 0, 0)" threw object "TypeError: Failed to construct 'CSSHSL': Hue must be a CSS angle type." that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
FAIL Constructing a CSSHSL with css em for hue throws a SyntaxError. assert_throws_dom: function "() => new CSSHSL(hue, 0, 0)" threw object "TypeError: Failed to construct 'CSSHSL': Hue must be a CSS angle type." that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS CSSHSL can be constructed from three numbers and will get an alpha of 100%.
PASS CSSHSL can be constructed from four numbers.
FAIL Constructing a CSSHSL with CSS.number for s, l or alpha throws a TypeError assert_throws_dom: function "() => new CSSHSL(CSS.deg(0), CSS.number(1), 0, 0)" threw object "TypeError: Failed to construct 'CSSHSL': Saturation, lightness and alpha must be interpretable as percentages." that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
FAIL Updating a CSSHSL with CSS.number for s throws a SyntaxError assert_throws_dom: function "() => result[attr] = CSS.number(1)" threw object "TypeError: Failed to set the 's' property on 'CSSHSL': Saturation must be interpretable as a percentage." that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS CSSHSL.s can be updated to a number.
PASS CSSHSL.s can be updated with a CSS percent.
FAIL Updating a CSSHSL with CSS.number for l throws a SyntaxError assert_throws_dom: function "() => result[attr] = CSS.number(1)" threw object "TypeError: Failed to set the 'l' property on 'CSSHSL': Lightness must be interpretable as a percentage." that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS CSSHSL.l can be updated to a number.
PASS CSSHSL.l can be updated with a CSS percent.
FAIL Updating a CSSHSL with CSS.number for alpha throws a SyntaxError assert_throws_dom: function "() => result[attr] = CSS.number(1)" threw object "TypeError: Failed to set the 'alpha' property on 'CSSHSL': Alpha must be interpretable as a percentage." that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS CSSHSL.alpha can be updated to a number.
PASS CSSHSL.alpha can be updated with a CSS percent.
Harness: the test ran to completion.

