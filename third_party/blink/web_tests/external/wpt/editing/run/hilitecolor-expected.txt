This is a testharness.js-based test.
Found 203 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") before
  assert_equals: Wrong result returned expected false but got true
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span></p><p> <span style=\\"background-color:rgb(0, 255, 255)\\"><span>bar</span></span> </p><p><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span></p>" but got "<p><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span></p><p> <span style=\\"background-color:rgb(0, 255, 255)\\"><span>bar</span> </span></p><p><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span></p>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span></p><p> <span style=\\"background-color:rgb(0, 255, 255)\\"><span>bar</span></span> </p><p><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span></p>" but got "<p><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span></p><p> <span style=\\"background-color:rgb(0, 255, 255)\\"><span>bar</span> </span></p><p><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span></p>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: rgb(0, 255, 255)\\">foo[bar]baz</p>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\\"background-color:rgb(0, 255, 255)\\">foobarbaz</p>" but got "<p style=\\"\\"><span style=\\"background-color:rgb(0, 255, 255)\\">foobarbaz</span></p>"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: rgb(0, 255, 255)\\">foo[bar]baz</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: rgb(0, 255, 255)\\">foo[bar]baz</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: #00ffff\\">foo[bar]baz</p>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\\"background-color:rgb(0, 255, 255)\\">foobarbaz</p>" but got "<p style=\\"\\"><span style=\\"background-color:rgb(0, 255, 255)\\">foobarbaz</span></p>"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: #00ffff\\">foo[bar]baz</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: #00ffff\\">foo[bar]baz</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: aqua\\">foo[bar]baz</p>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\\"background-color:rgb(0, 255, 255)\\">foobarbaz</p>" but got "<p style=\\"\\"><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span><span style=\\"background-color:rgb(0, 255, 255)\\">bar</span><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span></p>"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: aqua\\">foo[bar]baz</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: aqua\\">foo[bar]baz</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\\"background-color:rgb(0, 255, 255)\\">foo</p><p><span style=\\"background-color:rgb(0, 255, 255)\\">bar</span></p>" but got "<p style=\\"\\"><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span></p><p><span style=\\"background-color:rgb(0, 255, 255)\\">bar</span></p>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\\"background-color:rgb(0, 255, 255)\\">foo</p><p><span style=\\"background-color:rgb(0, 255, 255)\\">bar</span></p>" but got "<p style=\\"\\"><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span></p><p><span style=\\"background-color:rgb(0, 255, 255)\\">bar</span></p>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\\"background-color: aqua\\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(0, 255, 255)\\">foobarbaz</span>" but got "<span style=\\"background-color:rgb(0, 255, 255)\\">foo</span><span style=\\"background-color:rgb(0, 255, 255)\\">bar</span><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(0, 255, 255)\\">foobarbaz</span>" but got "<span style=\\"background-color:rgb(0, 255, 255)\\">foo</span><span style=\\"background-color:rgb(0, 255, 255)\\">bar</span><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #00ffff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #00ffff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #00ffff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #00ffff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #0ff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #0ff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #0ff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: #0ff\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: rgb(0, 255, 255)\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: rgb(0, 255, 255)\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: rgb(0, 255, 255)\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"background-color: rgb(0, 255, 255)\\">foo<span style=\\"background-color: tan\\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">b[ar]</span>baz</span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(0, 255, 255)\\">foo<span style=\\"background-color:rgb(210, 180, 140)\\">b</span>arbaz</span>" but got "<span style=\\"background-color:rgb(0, 255, 255)\\">foo</span><span style=\\"background-color:rgb(210, 180, 140)\\">b</span><span style=\\"background-color:rgb(0, 255, 255)\\">ar</span><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span>"
[FAIL] [["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">b[ar]</span>baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<span style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">b[ar]</span>baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">b[ar]</span>baz</p>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\\"background-color:rgb(0, 255, 255)\\">foo<span style=\\"background-color:rgb(210, 180, 140)\\">b</span>arbaz</p>" but got "<p style=\\"\\"><span style=\\"background-color:rgb(0, 255, 255)\\">foo</span><span style=\\"background-color:rgb(210, 180, 140)\\">b</span><span style=\\"background-color:rgb(0, 255, 255)\\">ar</span><span style=\\"background-color:rgb(0, 255, 255)\\">baz</span></p>"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">b[ar]</span>baz</p>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "<p style=\\"background-color: aqua\\">foo<span style=\\"background-color: tan\\">b[ar]</span>baz</p>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\\"background-color: aqua\\"><p style=\\"background-color: tan\\">b[ar]</p></div>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\\"background-color:rgb(0, 255, 255)\\"><p style=\\"background-color:rgb(210, 180, 140)\\">b<span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></p></div>" but got "<div style=\\"\\"><p style=\\"\\"><span style=\\"background-color:rgb(210, 180, 140)\\">b</span><span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></p></div>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\\"background-color: aqua\\"><p style=\\"background-color: tan\\">b[ar]</p></div>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\\"background-color: aqua\\"><p style=\\"background-color: tan\\">b[ar]</p></div>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\\"background-color: aqua\\"><p style=\\"background-color: tan\\">b[ar]</p></div>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\\"background-color:rgb(0, 255, 255)\\"><p style=\\"background-color:rgb(210, 180, 140)\\">b<span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></p></div>" but got "<div style=\\"\\"><p style=\\"\\"><span style=\\"background-color:rgb(210, 180, 140)\\">b</span><span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></p></div>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\\"background-color: aqua\\"><p style=\\"background-color: tan\\">b[ar]</p></div>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\\"background-color: aqua\\"><p style=\\"background-color: tan\\">b[ar]</p></div>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"display: block; background-color: aqua\\"><span style=\\"display: block; background-color: tan\\">b[ar]</span></span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"display:block; background-color:rgb(0, 255, 255)\\"><span style=\\"display:block; background-color:rgb(210, 180, 140)\\">b<span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></span></span>" but got "<span style=\\"display:block\\"><span style=\\"display:block\\"><span style=\\"background-color:rgb(210, 180, 140)\\">b</span><span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></span></span>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"display: block; background-color: aqua\\"><span style=\\"display: block; background-color: tan\\">b[ar]</span></span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\\"display: block; background-color: aqua\\"><span style=\\"display: block; background-color: tan\\">b[ar]</span></span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"display: block; background-color: aqua\\"><span style=\\"display: block; background-color: tan\\">b[ar]</span></span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"display:block; background-color:rgb(0, 255, 255)\\"><span style=\\"display:block; background-color:rgb(210, 180, 140)\\">b<span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></span></span>" but got "<span style=\\"display:block\\"><span style=\\"display:block\\"><span style=\\"background-color:rgb(210, 180, 140)\\">b</span><span style=\\"background-color:rgb(0, 255, 255)\\">ar</span></span></span>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"display: block; background-color: aqua\\"><span style=\\"display: block; background-color: tan\\">b[ar]</span></span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\\"display: block; background-color: aqua\\"><span style=\\"display: block; background-color: tan\\">b[ar]</span></span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span><span style=\\"background-color:rgb(210, 180, 140)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>baz" but got "fo<span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgb(210, 180, 140)\\">ar</span>baz"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span><span style=\\"background-color:rgb(210, 180, 140)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>baz" but got "fo<span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgb(210, 180, 140)\\">ar</span>baz"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba<span style=\\"background-color:rgb(0, 255, 255)\\">r</span></span><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>az" but got "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba</span><span style=\\"background-color:rgb(0, 255, 255)\\">rb</span>az"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba<span style=\\"background-color:rgb(0, 255, 255)\\">r</span></span><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>az" but got "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba</span><span style=\\"background-color:rgb(0, 255, 255)\\">rb</span>az"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(210, 180, 140)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>baz" but got "foo<span style=\\"background-color:rgb(0, 255, 255)\\">b</span><span style=\\"background-color:rgb(210, 180, 140)\\">ar</span>baz"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(210, 180, 140)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>baz" but got "foo<span style=\\"background-color:rgb(0, 255, 255)\\">b</span><span style=\\"background-color:rgb(210, 180, 140)\\">ar</span>baz"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba<span style=\\"background-color:rgb(0, 255, 255)\\">r</span></span>baz" but got "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba</span><span style=\\"background-color:rgb(0, 255, 255)\\">r</span>baz"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba<span style=\\"background-color:rgb(0, 255, 255)\\">r</span></span>baz" but got "foo<span style=\\"background-color:rgb(210, 180, 140)\\">ba</span><span style=\\"background-color:rgb(0, 255, 255)\\">r</span>baz"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(210, 180, 140)\\">fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span></span><span style=\\"background-color:rgb(255, 255, 0)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>" but got "<span style=\\"background-color:rgb(210, 180, 140)\\">fo</span><span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgb(255, 255, 0)\\">ar</span>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(210, 180, 140)\\">fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span></span><span style=\\"background-color:rgb(255, 255, 0)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>" but got "<span style=\\"background-color:rgb(210, 180, 140)\\">fo</span><span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgb(255, 255, 0)\\">ar</span>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("hilitecolor") before
  assert_equals: Wrong result returned expected true but got false
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(210, 180, 140)\\">fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span></span><span style=\\"background-color:rgb(210, 180, 140)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>" but got "<span style=\\"background-color:rgb(210, 180, 140)\\">fo</span><span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgb(210, 180, 140)\\">ar</span>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(210, 180, 140)\\">fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span></span><span style=\\"background-color:rgb(210, 180, 140)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span>" but got "<span style=\\"background-color:rgb(210, 180, 140)\\">fo</span><span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgb(210, 180, 140)\\">ar</span>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(210, 180, 140)\\">fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span><span style=\\"background-color:rgba(0, 0, 0, 0)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span></span>" but got "<span style=\\"background-color:rgb(210, 180, 140)\\">fo</span><span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgba(0, 0, 0, 0)\\">ar</span>"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" compare innerHTML
  assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\\"background-color:rgb(210, 180, 140)\\">fo<span style=\\"background-color:rgb(0, 255, 255)\\">o</span><span style=\\"background-color:rgba(0, 0, 0, 0)\\"><span style=\\"background-color:rgb(0, 255, 255)\\">b</span>ar</span></span>" but got "<span style=\\"background-color:rgb(210, 180, 140)\\">fo</span><span style=\\"background-color:rgb(0, 255, 255)\\">ob</span><span style=\\"background-color:rgba(0, 0, 0, 0)\\">ar</span>"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") before
  assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
[FAIL] [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") after
  assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
Harness: the test ran to completion.

