<!--
Copyright 2022 The Chromium Authors
Use of this source code is governed by a BSD-style license that can be
found in the LICENSE file.
-->

<!--
This file is used to generate a comprehensive list of Views histograms
along with a detailed description for each histogram.

For best practices on writing histogram descriptions, see
https://chromium.googlesource.com/chromium/src.git/+/HEAD/tools/metrics/histograms/README.md

Please follow the instructions in the OWNERS file in this directory to find a
reviewer. If no OWNERS file exists, please consider signing up at
go/reviewing-metrics (Googlers only), as all subdirectories are expected to
have an OWNERS file. As a last resort you can send the CL to
chromium-metrics-reviews@google.com.
-->

<histogram-configuration>

<histograms>

<variants name="BubbleName">
  <variant name="All" summary="Aggregated metrics for all bubbles"/>
  <variant name="DownloadBubbleContentsView"
      summary="Aggregated metrics DownloadBubbleContentsView bubbles"/>
  <variant name="ExtensionsMenuView"
      summary="Aggregated metrics for ExtensionsMenuView bubbles"/>
  <variant name="PageInfoBubbleViewBase"
      summary="Aggregated metrics for PageInfoBubbleViewBase bubbles"/>
  <variant name="PermissionPromptBaseView"
      summary="Aggregated metrics for PermissionPromptBaseView bubbles"/>
  <variant name="ProfileMenuViewBase"
      summary="Aggregated metrics for ProfileMenuViewBase bubbles"/>
</variants>

<variants name="ContextMenuAndroidTypes">
  <variant name="" summary=""/>
  <variant name=".Image"
      summary="The context menu was shown for a (non-link) image."/>
  <variant name=".ImageLink"
      summary="The context menu was shown for an image which is also a link."/>
  <variant name=".Link"
      summary="The context menu was shown for a (non-image) link"/>
  <variant name=".Page" summary="The context menu was shown for a page."/>
  <variant name=".SharedHighlightingInteraction"
      summary="The context menu was shown from tap on highlighted text."/>
  <variant name=".Video" summary="The context menu was shown for a video"/>
</variants>

<!-- LINT.IfChange(TopChromeWebUIName) -->

<variants name="TopChromeWebUIName">
  <variant name=""/>
  <variant name=".BookmarksSidePanel"/>
  <variant name=".CompanionSidePanelUntrusted"/>
  <variant name=".Compose"/>
  <variant name=".CustomizeChrome"/>
  <variant name=".DataSharingBubble"/>
  <variant name=".Emoji"/>
  <variant name=".ExtensionsWebStoreZeroStatePromo"/>
  <variant name=".Feed"/>
  <variant name=".HistoryClustersSidePanel"/>
  <variant name=".HistorySidePanel"/>
  <variant name=".LensOverlayUntrusted"/>
  <variant name=".LensSidePanelUntrusted"/>
  <variant name=".MakoUntrusted"/>
  <variant name=".NewTabFooter"/>
  <variant name=".PerformanceSidePanel"/>
  <variant name=".ReadAnythingUntrusted"/>
  <variant name=".ReadingList"/>
  <variant name=".ShoppingInsightsSidePanel"/>
  <variant name=".TabSearch"/>
  <variant name=".UserEducation"/>
  <variant name=".UserNotesSidePanel"/>
</variants>

<!-- LINT.ThenChange(//tools/metrics/histograms/metadata/page/histograms.xml:TopChromeWebUIName) -->

<!-- LINT.IfChange(WebUIHostname) -->

<variants name="WebUIHostname">
  <variant name="Bookmarks"/>
  <variant name="BookmarksSidePanel"/>
  <variant name="CustomizeChromeSidePanel"/>
  <variant name="Downloads"/>
  <variant name="History"/>
  <variant name="HistoryClustersSidePanel"/>
  <variant name="HistorySidePanel"/>
  <variant name="NewTabPage"/>
  <variant name="NewTabPageThirdParty"/>
  <variant name="ReadAnythingSidePanel"/>
  <variant name="ReadLater"/>
  <variant name="Resources"/>
  <variant name="Settings"/>
  <variant name="TabSearch"/>
  <variant name="Theme"/>
  <variant name="TopChrome"/>
</variants>

<!-- LINT.ThenChange(//tools/metrics/histograms/metadata/others/histograms.xml:WebUIHostnameForCodeCache) -->

<variants name="WebUITabStripTabCount">
  <variant name=".01_05" summary="1 to 5 tabs"/>
  <variant name=".06_20" summary="6 to 20 tabs"/>
  <variant name=".21_" summary="21 or more tabs"/>
</variants>

<histogram name="Bubble.{BubbleName}.CloseReason" enum="WidgetClosedReason"
    expires_after="2025-11-16">
  <owner>kerenzhu@chromium.org</owner>
  <owner>dayeung@chromium.org</owner>
  <owner>temao@chromium.org</owner>
  <owner>yuhengh@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>Records the reason a bubble was closed.</summary>
  <token key="BubbleName" variants="BubbleName"/>
</histogram>

<histogram name="Bubble.{BubbleName}.CreateToPresentationTime" units="ms"
    expires_after="2025-11-16">
  <owner>temao@chromium.org</owner>
  <owner>yuhengh@chromium.org</owner>
  <owner>kerenzhu@chromium.org</owner>
  <owner>dayeung@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Records the time it takes from a bubble construction to when the compositor
    finishes the first presentation.
  </summary>
  <token key="BubbleName" variants="BubbleName"/>
</histogram>

<histogram name="Bubble.{BubbleName}.CreateToVisibleTime" units="ms"
    expires_after="2025-11-16">
  <owner>temao@chromium.org</owner>
  <owner>yuhengh@chromium.org</owner>
  <owner>kerenzhu@chromium.org</owner>
  <owner>dayeung@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Records the time it takes from a bubble construction to when the bubble
    becomes visible.
  </summary>
  <token key="BubbleName" variants="BubbleName"/>
</histogram>

<histogram name="Bubble.{BubbleName}.TimeVisible" units="ms"
    expires_after="2025-11-16">
  <owner>yuhengh@chromium.org</owner>
  <owner>kerenzhu@chromium.org</owner>
  <owner>dayeung@chromium.org</owner>
  <owner>temao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>Records the time a bubble is visible.</summary>
  <token key="BubbleName" variants="BubbleName"/>
</histogram>

<histogram name="ContextMenu.LensSupportStatus" enum="LensSupportStatus"
    expires_after="2025-11-16">
  <owner>benwgold@google.com</owner>
  <owner>lens-chrome@google.com</owner>
  <summary>
    Whether the user supports the Lens intent and if not, the reason why.
    Recorded only if the feature is enabled when the long-press context menu is
    shown for an image.
  </summary>
</histogram>

<histogram name="ContextMenu.SelectedOptionAndroid{Type}"
    enum="ContextMenuOptionAndroid" expires_after="never">
<!-- expires-never: part of top-line metric (internal: go/chrome-browser-nsm) -->

  <owner>twellington@chromium.org</owner>
  <owner>clank-app-team@google.com</owner>
  <summary>
    {Type}

    The option that the user selected from a context menu on Android. This is
    logged on Android only; check out ContextMenu.SelectedOptionIOS for iOS, and
    ContextMenu.SelectedOptionDesktop for desktop. Note that if a menu is
    invoked on mixed content, only one of the submetrics receives the log; read
    the code to determine which one.
  </summary>
  <token key="Type" variants="ContextMenuAndroidTypes"/>
</histogram>

<histogram name="ContextMenu.SelectedOptionDesktop{ContextMenuTypeDesktop}"
    enum="ContextMenuOptionDesktop" expires_after="2025-11-16">
  <owner>avi@chromium.org</owner>
  <owner>mpearson@chromium.org</owner>
  <summary>
    The option that the user selected from a context menu on desktop. This is
    logged on desktop only; check out ContextMenu.SelectedOptionIOS for iOS, and
    ContextMenu.SelectedOptionAndroid for Android. Note that if a menu is
    invoked on mixed content, only one of the submetrics receives the log; read
    the code to determine which one. {ContextMenuTypeDesktop}
  </summary>
  <token key="ContextMenuTypeDesktop">
    <variant name=".Image"
        summary="The context menu was shown for a (non-link) image"/>
    <variant name=".ImageLink"
        summary="The context menu was shown for an image which is also a link"/>
    <variant name=".MisspelledWord"
        summary="The context menu was shown for a misspelt word"/>
    <variant name=".Other"
        summary="The context menu was shown in a context other than those
                 explicitly enumerated"/>
    <variant name=".SelectedText"
        summary="The context menu was shown for a text selection"/>
    <variant name=".Video" summary="The context menu was shown for a video"/>
  </token>
</histogram>

<histogram name="ContextMenu.Shown{Type}" enum="BooleanPresent"
    expires_after="2025-10-26">
  <owner>mpearson@chromium.org</owner>
  <owner>twellington@chromium.org</owner>
  <owner>clank-app-team@google.com</owner>
  <summary>
    {Type}

    Recorded when a context menu is shown, sliced by whether a web contents was
    present. (It generally should be; indeed, this code path should not be
    followed when it is absent. For instance, invoking a context menu from the
    new tab page or from the sad tab page will not cause an emission to this
    histogram.) Note that this refers to link context menus, not the
    cut-copy-paste context menus that can appear during long presses on text on
    a web page or long presses in the omnibox. This is an Android-only metric;
    compare with RenderViewContextMenu.Shown and RenderViewContextMenu.Used on
    desktop.
  </summary>
  <token key="Type" variants="ContextMenuAndroidTypes"/>
</histogram>

<histogram name="ContextMenu.TimeToSelectShare" units="ms"
    expires_after="2023-02-19">
  <owner>jeffreycohen@chromium.org</owner>
  <owner>chrome-shared-highlighting@google.com</owner>
  <summary>
    Records how long it takes to press on &quot;Share&quot; from the time
    context menu is shown. Android only.
  </summary>
</histogram>

<histogram name="ContextMenu.ViewsTextServices.Emoji" enum="Boolean"
    expires_after="2023-10-08">
  <owner>yyushkina@chromium.org</owner>
  <summary>
    Number of times the emoji item in the views text services context menu is
    used.
  </summary>
</histogram>

<histogram name="DefaultBrowser.AppMenu.DefaultChipShown" enum="BooleanShown"
    expires_after="2025-07-13">
  <owner>agale@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Whether the default browser app menu chip has been shown when it is eligible
    to be shown. This is logged every time the ToolbarView renders the app menu
    and the default browser prompt is eligible to be shown. This is a proxy for
    how often the default chip gets pre-empted. This is emitted each time the
    type and severity of the app menu is updated.
  </summary>
</histogram>

<histogram name="DefaultBrowser.AppMenu.TimesShownBeforeAccept" units="count"
    expires_after="2025-07-27">
  <owner>agale@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Times the default browser app menu chip has been shown before the user
    accepted the prompt. This is emitted each time a user accepts the prompt by
    clicking the chip and then the associated menu item.
  </summary>
</histogram>

<histogram name="DefaultBrowser.AppMenu.TimeToSetDefault" units="ms"
    expires_after="2025-07-13">
  <owner>agale@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Time duration between when the prompt was shown and when it was accepted.
    Only logged when the prompt is accepted.
  </summary>
</histogram>

<histogram name="DefaultBrowser.InfoBar.TimesShownBeforeAccept" units="count"
    expires_after="2025-11-16">
  <owner>agale@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Times the default browser info bar has been shown before the user accepted
    the prompt.
  </summary>
</histogram>

<histogram name="DefaultBrowser.InfoBar.UserInteraction"
    enum="DefaultBrowserInfoBarUserInteraction" expires_after="2025-11-16">
  <owner>pmonette@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Possible user interactions with the default browser info bar.
  </summary>
</histogram>

<histogram name="DefaultBrowser.State" enum="DefaultBrowserState"
    expires_after="never">
<!-- expires-never: Used to keep track of desktop browser ecosystem. -->

  <owner>gab@chromium.org</owner>
  <owner>pmonette@chromium.org</owner>
  <summary>
    Whether Chrome was the default browser when it started up.

    Only logged correctly on Windows and Mac. Logged incorrectly on other
    platforms. On Linux, this histogram is no longer logged as of 2021/10/18 due
    to browser test hangs. See crbug.com/1216328.

    For ChromeOS, no histogram is necessary because Chrome is always the default
    browser.

    For Android, see Mobile.DefaultBrowser.State.

    For iOS, in the future Chrome will be allowed to be the default browser. How
    that will be logged is to be decided at the time of writing this
    description.
  </summary>
</histogram>

<histogram name="RenderTextHarfBuzz.GetFallbackFontsTime" units="ms"
    expires_after="2025-09-14">
  <owner>dayeung@chromium.org</owner>
  <owner>etienneb@chromium.org</owner>
  <summary>
    Time retrieve the fallback fonts on the system used for
    RenderTextHarfBuzz::ShapeRuns. This metric is known to be quite slow on bad
    cases.
  </summary>
</histogram>

<histogram name="RenderTextHarfBuzz.GetFallbackFontTime" units="ms"
    expires_after="2025-11-16">
  <owner>dayeung@chromium.org</owner>
  <owner>etienneb@chromium.org</owner>
  <summary>
    Time retrieve the preferred fallback font on the system used for
    RenderTextHarfBuzz::ShapeRuns. Fallback font is determined based on the
    input text and locale.
  </summary>
</histogram>

<histogram name="RenderTextHarfBuzz.MissingGlyphCount" units="count"
    expires_after="2025-07-13">
  <owner>dayeung@chromium.org</owner>
  <owner>etienneb@chromium.org</owner>
  <summary>Count of missing glyphs at the end of text shaping.</summary>
</histogram>

<histogram name="RenderTextHarfBuzz.ShapeRunsFallback" enum="ShapeRunFallback"
    expires_after="2025-11-16">
  <owner>dayeung@chromium.org</owner>
  <owner>etienneb@chromium.org</owner>
  <summary>
    This metric records the fallback font mechanism required to complete the
    shaping of a text.
  </summary>
</histogram>

<histogram name="RenderTextHarfBuzz.ShapeRunsWithFallbackFontsTime" units="ms"
    expires_after="2025-09-14">
  <owner>dayeung@chromium.org</owner>
  <owner>etienneb@chromium.org</owner>
  <summary>
    Time to perform RenderTextHarfBuzz::ShapeRuns with retrieved the fallback
    fonts. This metric is known to be quite slow on bad cases.
  </summary>
</histogram>

<histogram name="RenderViewContextMenu.OpenLinkAsProfile" enum="OpenLinkAs"
    expires_after="2025-10-12">
  <owner>droger@chromium.org</owner>
  <owner>chrome-signin-team@google.com</owner>
  <summary>
    Count the clicks and displays of renderer view context menu item Open Link
    as Profile, as well as Open Link in Incognito Window for comparison. If Open
    Link as Profile is a submenu, it is counted as displayed even if the submenu
    is not open, and only counted one time regardless the amount of items in the
    submenu.
  </summary>
</histogram>

<histogram name="RenderViewContextMenu.Shown" enum="RenderViewContextMenuItem"
    expires_after="2025-11-16">
  <owner>avi@chromium.org</owner>
  <owner>edwardjung@chromium.org</owner>
  <owner>mpearson@chromium.org</owner>
  <summary>Count of renderer view context menu items shown.</summary>
</histogram>

<histogram name="RenderViewContextMenu.Used" enum="RenderViewContextMenuItem"
    expires_after="never">
<!-- expires-never: part of top-line metric (internal: go/chrome-browser-nsm) -->

  <owner>avi@chromium.org</owner>
  <owner>mpearson@chromium.org</owner>
  <owner>chrome-analysis-team@google.com</owner>
  <summary>
    Count of renderer view context menu items (Only commands now) used. Note
    that this counts cases where the context menu item is used, but the item has
    no effect (eg. autofill commands have no effect if the RenderFrameHost is
    null). Update: as of M122, setting text direction via the context menu may
    also have no effect if the RFH is null, though we will continue to count in
    this case.

    The user action RenderViewContextMenu.Used.IDC_CONTENT_CONTEXT_SEARCHWEBFOR
    is also logged in case that IDC_CONTENT_CONTEXT_SEARCHWEBFOR is logged to
    this histogram.

    This histogram is of special interest to the chrome-analysis-team@. Do not
    change its semantics or retire it without talking to them first.
  </summary>
</histogram>

<histogram name="Snackbar.Shown" enum="SnackbarIdentifier"
    expires_after="never">
<!-- expires-never: Required as long as snackbars exist. -->

  <owner>pavely@chromium.org</owner>
  <owner>src/chrome/browser/ui/messages/OWNERS</owner>
  <summary>
    Records the identifier of a snackbar every time one is shown.
  </summary>
</histogram>

<histogram name="Toolbar.ChromeLabs.{State}LabAction"
    enum="ChromeLabsSelectedLab" expires_after="never">
<!-- expires-never: Chrome Labs is a feature that allows teams to add their
experimental features for users to try out and give feedback on before it is
fully rolled out. We want teams that add their features to Chrome Labs to
continue to have access to metrics on how many users enable (or disable) their
features through Chrome Labs. -->

  <owner>elainechien@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    Chrome Labs features user-facing experiments through a button in the
    toolbar.

    This metric tracks which experiment (also called lab in the context of
    Chrome Labs) a user selects {State} for. This histogram is emitted to when
    {State} is selected in the combobox of the ChromeLabs dialog.
  </summary>
  <token key="State">
    <variant name="Default" summary="Default state selected for lab"/>
    <variant name="Disable" summary="Disabled state selected for lab"/>
    <variant name="Enable" summary="Enabled state selected for lab"/>
  </token>
</histogram>

<histogram name="Views.ColorProviderCacheSize" units="entries"
    expires_after="2025-11-09">
  <owner>tluk@chromium.org</owner>
  <owner>skau@chromium.org</owner>
  <summary>
    Records the size of the ColorProviderManager cache when a new ColorProvider
    is generated. New entries are generated when a client requests a
    ColorProvider with a Key that is not in the cache. Since the cache size is
    capped, a distribution with too many results at the tail indicate that the
    cache is too small.
  </summary>
</histogram>

<histogram name="Views.InvalidatesDuringLayout" units="count"
    expires_after="2025-11-09">
  <owner>dpranke@chromium.org</owner>
  <owner>elainechien@chromium.org</owner>
  <owner>kylixrd@chromium.org</owner>
  <summary>
    Records the number of times a view's InvalidateLayout() method is called
    during a Layout() call. Calling InvalidateLayout() during a layout call
    should never be necessary.
  </summary>
</histogram>

<histogram name="Views.LayoutCallDepth" units="count"
    expires_after="2025-07-06">
  <owner>dpranke@chromium.org</owner>
  <owner>elainechien@chromium.org</owner>
  <owner>kylixrd@chromium.org</owner>
  <summary>
    The maximum reentrant call depth seen during a view's layout. Normally this
    value will be one (Layout() was not reentered). But, we know Layout() is
    reentered sometimes in some views (where the value will be two), and want to
    measure how often that is. We also want to know if Layout() is ever
    reentered more than two deep.
  </summary>
</histogram>

<histogram name="Views.UnnecessaryLayouts" units="count"
    expires_after="2025-07-06">
  <owner>elainechien@chromium.org</owner>
  <owner>kylixrd@chromium.org</owner>
  <owner>pkasting@chromium.org</owner>
  <summary>
    Records excess layouts of a view that will not be visible. This includes
    doing more than one layout between paints, or any layouts after the final
    paint. While some such layouts might be unavoidable in computing
    layout-related properties during other operations, these mostly represent
    unnecessary work. The zero bucket counts cases where all the layouts we did
    were necessary, i.e. paints that had a single preceding layout.
  </summary>
</histogram>

<histogram
    name="Views.{Process}.NumColorProvidersInitializedDuringOnNativeThemeUpdated"
    units="providers" expires_after="2025-11-09">
  <owner>pkasting@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>skau@chromium.org</owner>
  <summary>
    Records the number of ColorProvider instances constructed and initialized by
    the ColorProviderManager following a NativeTheme update in a {Process}
    process. Emitted after the NotifyOnNativeThemeUpdated() event has been
    processed.
  </summary>
  <token key="Process">
    <variant name="Browser"/>
    <variant name="NonBrowser"/>
  </token>
</histogram>

<histogram name="Views.{Process}.TimeSpentInitializingColorProvider" units="ms"
    expires_after="2025-11-09">
  <owner>pkasting@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>skau@chromium.org</owner>
  <summary>
    Records the time spent initializing a newly constructed ColorProvider
    instance in a {Process} process. The timer starts immediately before the
    ColorProvider is constructed and emitted immediately after initialization
    (i.e. all mixers are run and the ColorMap is created).
  </summary>
  <token key="Process">
    <variant name="Browser"/>
    <variant name="NonBrowser"/>
  </token>
</histogram>

<histogram name="Views.{Process}.TimeSpentProcessingOnNativeThemeUpdatedEvent"
    units="ms" expires_after="2025-11-09">
  <owner>pkasting@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>skau@chromium.org</owner>
  <summary>
    Records the time spent synchronously processing the the
    NotifyOnNativeThemeUpdated() event in a {Process} process. The timer starts
    as soon as the event handler is entered and emitted when code returns from
    the event handler.
  </summary>
  <token key="Process">
    <variant name="Browser"/>
    <variant name="NonBrowser"/>
  </token>
</histogram>

<histogram name="WebUI.ColorsStylesheetServingDuration" units="ms"
    expires_after="2025-09-28">
  <owner>skau@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <improvement direction="LOWER_IS_BETTER"/>
  <summary>
    The time in milliseconds to generate chrome://theme/colors.css and queue it
    to be sent to the renderer for WebUI. Does not include url parsing time.
    Recorded for every request for colors.css. Lower is better.

    Expired Jan 2024. Revived M124.
  </summary>
</histogram>

<histogram name="WebUI.CreatedForUrl" enum="WebUIUrlHashes"
    expires_after="2025-11-09">
  <owner>dpapad@chromium.org</owner>
  <owner>chrome-webui@google.com</owner>
  <summary>URLs for which Chrome creates WebUIControllers.</summary>
</histogram>

<histogram name="WebUI.Settings.PathVisited" enum="WebUISettingsPathHashes"
    expires_after="2025-10-26">
  <owner>dschuyler@chromium.org</owner>
  <owner>tbuckley@chromium.org</owner>
  <owner>bettes@chromium.org</owner>
  <summary>
    Paths within chrome://settings visited. For evaluating popularity and
    priorities for chrome://settings GUI. Note that this metric used to include
    paths that were part of OS settings, but starting with M-81, this metric
    only records browser settings paths.

    For Android settings usage check Settings.FragmentAttached.
  </summary>
</histogram>

<histogram name="WebUI.ShownUrl" enum="WebUIUrlHashes"
    expires_after="2025-09-28">
  <owner>kerenzhu@chromium.org</owner>
  <owner>dpapad@chromium.org</owner>
  <owner>chrome-webui@google.com</owner>
  <summary>
    WebUI URLs that are shown to the user. For WebUIs that don't have a WebUI
    object (e.g. chrome://dino), recorded on the network request. For others,
    recorded on commit if not preloaded. For preloaded WebUIs, recorded when
    WebUIContentsPreloadManager::Request() is invoked. This differs from
    WebUI.CreatedForUrl as it only logs WebUIs that are actually shown (i.e., a
    preloaded WebUI may never be shown).
  </summary>
</histogram>

<histogram name="WebUI.TopChrome.Preload.Reason" enum="WebUIPreloadReason"
    expires_after="2025-11-23">
  <owner>kerenzhu@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    The reason of preloading a WebUI. Logged when a preloaded WebUI is created.
  </summary>
</histogram>

<histogram name="WebUI.TopChrome.Preload.Result" enum="WebUIPreloadResult"
    expires_after="2025-09-21">
  <owner>kerenzhu@chromium.org</owner>
  <owner>dayeung@chromium.org</owner>
  <owner>elainechien@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <owner>robliao@chromium.org</owner>
  <summary>
    The result of attempting to use a preloaded WebUI when a new Top Chrome
    WebUI is requested.
  </summary>
</histogram>

<histogram name="WebUI.TopChrome.RequestToFCP{WebUIName}" units="ms"
    expires_after="2025-10-12">
  <owner>kerenzhu@chromium.org</owner>
  <owner>chrome-webui-for-features@google.com</owner>
  <summary>
    Measures the time elapsed from the initiation of a WebUI request to its
    first contentful paint. This metric applies to the main frame documents of
    top-chrome WebUI pages, such as side-panel content. The request initiation
    is marked by the call to WebUIContentsPreloadManager::Request().
  </summary>
  <token key="WebUIName" variants="TopChromeWebUIName"/>
</histogram>

<histogram name="WebUI.TopChrome.RequestToLCP{WebUIName}" units="ms"
    expires_after="2025-10-12">
  <owner>kerenzhu@chromium.org</owner>
  <owner>chrome-webui-for-features@google.com</owner>
  <summary>
    Measures the time elapsed from the initiation of a WebUI request to its
    largest contentful paint. This metric applies to the main frame documents of
    top-chrome WebUI pages, such as side-panel content. The request initiation
    is marked by the call to WebUIContentsPreloadManager::Request().
  </summary>
  <token key="WebUIName" variants="TopChromeWebUIName"/>
</histogram>

<histogram name="WebUI.WebUIURLLoaderFactory.URLRequestLoadTime" units="ms"
    expires_after="2022-10-30">
  <owner>dpapad@chromium.org</owner>
  <owner>etienneb@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    The elapsed time for URL requests made through the WebUIURLLoaderFactory.
    The reported duration is the time spent in the browser process from the
    reception of the mojo request up to the content delivery through mojo call.
  </summary>
</histogram>

<histogram name="WebUICodeCache.FeatureEnabled" enum="Boolean"
    expires_after="2025-06-08">
  <owner>temao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    True if WebUICodeCache feature is enabled. This counts the number of times
    generated WebUICodeCache JS code cache is instantiated.
  </summary>
</histogram>

<histogram name="WebUITabStrip.CloseAction" enum="WebUITabStripCloseActions"
    expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    The WebUI tab strip is a more touch-friendly tab strip used in place of
    Chrome's native tab strip in some cases. It can be opened and closed. This
    records how a user closed it.
  </summary>
</histogram>

<histogram name="WebUITabStrip.CloseTabAction"
    enum="WebUITabStripCloseTabActions" expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    The WebUI tab strip is a more touch-friendly tab strip used in place of
    Chrome's native tab strip in some cases. This records how a user closed a
    tab within the WebUI tab strip.
  </summary>
</histogram>

<histogram name="WebUITabStrip.LoadCompletedTime" units="ms"
    expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    The amount of time between the RenderFrameHost StartProvisionalLoad event
    and the RenderFrameHost DocumentOnLoadCompleted event for the WebUI tab
    strip page. This happens once when a browser window with WebUI tab strip
    enabled is created. WebUITabStrip.LoadDocumentTime should be smaller or
    equal to WebUITabStrip.LoadCoimpletedTime.
  </summary>
</histogram>

<histogram name="WebUITabStrip.LoadDocumentTime" units="ms"
    expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    The amount of time between the RenderFrameHost StartProvisionalLoad and
    DidFinishDocumentLoad events for the WebUI tab strip page. This happens once
    when a browser window with WebUI tab strip enabled is created.
    WebUITabStrip.LoadDocumentTime should be smaller or equal to
    WebUITabStrip.LoadCoimpletedTime.
  </summary>
</histogram>

<histogram name="WebUITabStrip.OpenAction" enum="WebUITabStripOpenActions"
    expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    The WebUI tab strip is a more touch-friendly tab strip used in place of
    Chrome's native tab strip in some cases. It can be opened and closed. This
    records how a user opened it.
  </summary>
</histogram>

<histogram name="WebUITabStrip.OpenDuration" units="ms"
    expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    The WebUI tab strip is a more touch-friendly tab strip used in place of
    Chrome's native tab strip in some cases. It can be opened and closed. This
    records how long it was open when closing.
  </summary>
</histogram>

<histogram name="WebUITabStrip.TabActivation" units="ms"
    expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    WebUI Tabstrip: Time from activating a tab from WebUI to receiving an
    activation notification in WebUI.
  </summary>
</histogram>

<histogram name="WebUITabStrip.TabCreation{WebUITabStripTabCount}" units="ms"
    expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    WebUI Tabstrip: Time needed to create all of the tab elements at launch.
    {WebUITabStripTabCount}
  </summary>
</histogram>

<histogram name="WebUITabStrip.TabDataReceived{WebUITabStripTabCount}"
    units="ms" expires_after="2025-11-12">
  <owner>robliao@chromium.org</owner>
  <owner>tluk@chromium.org</owner>
  <summary>
    WebUI Tabstrip: Time from requesting the tab data to receiving the data.
    {WebUITabStripTabCount}
  </summary>
</histogram>

<histogram name="WrenchMenu.MenuAction" enum="WrenchMenuAction"
    expires_after="2025-10-26">
  <owner>ainslie@chromium.org</owner>
  <owner>edwardjung@chromium.org</owner>
  <summary>Number of times that each menu item is clicked.</summary>
</histogram>

<histogram name="WrenchMenu.TimeToAction.{Action}" units="ms"
    expires_after="2025-10-26">
  <owner>ainslie@chromium.org</owner>
  <owner>edwardjung@chromium.org</owner>
  <summary>
    The time a user takes to select a menu item after opening the menu.
  </summary>
  <token key="Action">
    <variant name="About"/>
    <variant name="AddNewProfile"/>
    <variant name="AppInfo"/>
    <variant name="BetaForum"/>
    <variant name="BookmarkAllTabs"/>
    <variant name="BookmarkPage"/>
    <variant name="Cast"/>
    <variant name="ChromeOSRestart"/>
    <variant name="ChromeTips"/>
    <variant name="ClearBrowsingData"/>
    <variant name="CloseProfile"/>
    <variant name="Copy"/>
    <variant name="CopyUrl"/>
    <variant name="CreateHostedApp"/>
    <variant name="CreateQrCode"/>
    <variant name="CustomizeChrome"/>
    <variant name="Cut"/>
    <variant name="DeclutterTabs"/>
    <variant name="DevTools"/>
    <variant name="DevToolsConsole"/>
    <variant name="DevToolsDevices"/>
    <variant name="DistillPage"/>
    <variant name="EnterFullScreen"/>
    <variant name="Exit"/>
    <variant name="Feedback"/>
    <variant name="Find"/>
    <variant name="FindExtensions"/>
    <variant name="HelpPage"/>
    <variant name="ImportSettings"/>
    <variant name="InstallPwa"/>
    <variant name="LoginForDeviceTabs"/>
    <variant name="ManageChromeProfiles"/>
    <variant name="ManageExtensions"/>
    <variant name="ManageGoogleAccount"/>
    <variant name="NewIncognitoWindow"/>
    <variant name="NewTab"/>
    <variant name="NewWindow"/>
    <variant name="OpenBookmark"/>
    <variant name="OpenGuestProfile"/>
    <variant name="OpenInChrome"/>
    <variant name="OpenInPwaWindow"/>
    <variant name="OpenRecentTab"/>
    <variant name="PasswordManager"/>
    <variant name="Paste"/>
    <variant name="Print"/>
    <variant name="ProfilingEnabled"/>
    <variant name="ReadingListAddTab"/>
    <variant name="ReadingListShowUi"/>
    <variant name="RequestTabletSite"/>
    <variant name="RestoreTab"/>
    <variant name="SafetyHubNotificationManageExtensions"/>
    <variant name="SafetyHubNotificationOpenSafetyHub"/>
    <variant name="SafetyHubNotificationPasswordCheck"/>
    <variant name="SavePage"/>
    <variant name="SendToDevices"/>
    <variant name="SetBrowserAsDefault"/>
    <variant name="Settings"/>
    <variant name="ShowAddresses"/>
    <variant name="ShowBookmarkBar"/>
    <variant name="ShowBookmarkMgr"/>
    <variant name="ShowBookmarkSidePanel"/>
    <variant name="ShowChromeLabs"/>
    <variant name="ShowCustomizeChromeSidePanel"/>
    <variant name="ShowDownloads"/>
    <variant name="ShowHistory"/>
    <variant name="ShowHistoryClustersSidePanel"/>
    <variant name="ShowKaleidoscope"/>
    <variant name="ShowLensOverlay"/>
    <variant name="ShowPasswordManager"/>
    <variant name="ShowPaymentMethods"/>
    <variant name="ShowPerformanceSettings"/>
    <variant name="ShowReadingModeSidePanel"/>
    <variant name="ShowSavedTabGroups"/>
    <variant name="ShowSigninWhenPaused"/>
    <variant name="ShowSyncSettings"/>
    <variant name="ShowTranslate"/>
    <variant name="ShowTurnOnSync"/>
    <variant name="SiteSettings"/>
    <variant name="SwitchToAnotherProfile"/>
    <variant name="TaskManager"/>
    <variant name="ViewSource"/>
    <variant name="VisitChromeWebStore"/>
    <variant name="Win8MetroRestart"/>
    <variant name="WinDesktopRestart"/>
    <variant name="ZoomMinus"/>
    <variant name="ZoomPlus"/>
  </token>
</histogram>

</histograms>

</histogram-configuration>
