[user-activation.html]
  [3 user activations let you have 2 close watchers with 1 cancel event, even if the first cancel event is prevented]
    expected: FAIL

  [3 user activations let you have 3 + 1 = 4 ungrouped close watchers/0 cancel events]
    expected: FAIL

  [CloseWatchers created without user activation, but close()d via user activation, fires cancel]
    expected: FAIL

  [CloseWatchers created without user activation, but close()d via user activation, fires cancel, which can be preventDefault()ed]
    expected: FAIL

  [CloseWatchers created without user activation, but closed via a close signal after user activation, fires cancel]
    expected: FAIL

  [CloseWatchers created without user activation, but closed via a close signal after user activation, fires cancel, which can be preventDefault()ed]
    expected: FAIL

  [Creating a CloseWatcher from user activation keeps it separate from the free CloseWatcher, but they don't fire cancel]
    expected: FAIL

  [Creating a CloseWatcher from user activation, and close()ing CloseWatchers with user activation, fires cancel]
    expected: FAIL

  [Creating a CloseWatcher from user activation, and closing CloseWatchers with a close signal after user activation, fires cancel]
    expected: FAIL

  [Multiple CloseWatchers created with user activation close in reverse order]
    expected: FAIL

  [Multiple CloseWatchers created without user activation close together (with no cancel)]
    expected: FAIL

  [The second watcher can be the free watcher, if the first is created with user activation]
    expected: FAIL

  [The third watcher can be the free watcher, if the first two are created with user activation]
    expected: FAIL

  [close()ing the free CloseWatcher allows a new free one to be created without user activation, and it receives the close signal]
    expected: FAIL

  [closing the free CloseWatcher via a close signal allows a new free one to be created without user activation, and it receives a second close signal]
    expected: FAIL

  [destroy()ing the free CloseWatcher allows a new free one to be created without user activation, and it receives the close signal]
    expected: FAIL
