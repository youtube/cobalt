// Copyright 2020 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator_options.proto";

message FaceGeometryEffectRendererCalculatorOptions {
  extend CalculatorOptions {
    optional FaceGeometryEffectRendererCalculatorOptions ext = 323693808;
  }

  // Defines a path for the visual effect texture file. The effect texture is
  // later rendered on top of the effect mesh.
  //
  // Please be aware about the difference between the CPU texture memory layout
  // and the GPU texture sampler coordinate space. This renderer follows
  // conventions discussed here: https://open.gl/textures
  //
  // The texture file format must be supported by the OpenCV image decoder. It
  // must also define either an RGB or an RGBA texture.
  optional string effect_texture_path = 1;

  // Defines a path for the visual effect mesh 3D file. The effect mesh is later
  // "attached" to the face and is driven by the face pose transformation
  // matrix.
  //
  // The mesh 3D file format must be the binary `face_system.Mesh3d` proto.
  //
  // If is not present, the runtime face mesh will be used as the effect mesh
  // - this mode is handy for facepaint effects.
  optional string effect_mesh_3d_path = 2;
}
