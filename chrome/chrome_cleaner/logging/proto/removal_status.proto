// Copyright 2018 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package chrome_cleaner;

// Removal status for files and folder.
enum RemovalStatus {
  reserved 9;
  reserved "REMOVAL_STATUS_NOT_REMOVED_INACTIVE_EXTENSION";
  // Default value found in logs for records sent by cleaner versions that don't
  // write removal_status fields, and should never be used in the cleaner code.
  REMOVAL_STATUS_UNSPECIFIED = 0;
  // File or folder matched and no removal attempt has been made.
  REMOVAL_STATUS_MATCHED_ONLY = 1;
  // File or folder blocklisted for removal and the cleaner didn't try to
  // delete it. Example: the file is part of the cleaner itself.
  REMOVAL_STATUS_BLOCKLISTED_FOR_REMOVAL = 2;
  // File or folder removed immediately.
  REMOVAL_STATUS_REMOVED = 3;
  // File or folder couldn't be removed.
  REMOVAL_STATUS_FAILED_TO_REMOVE = 4;
  // File or folder scheduled for removal after reboot.
  REMOVAL_STATUS_SCHEDULED_FOR_REMOVAL = 5;
  // File or folder couldn't be scheduled for removal.
  REMOVAL_STATUS_FAILED_TO_SCHEDULE_FOR_REMOVAL = 6;
  // File or folder not found when tried to delete.
  REMOVAL_STATUS_NOT_FOUND = 7;
  // File registered for post-reboot removal after failed regular deletion.
  REMOVAL_STATUS_SCHEDULED_FOR_REMOVAL_FALLBACK = 8;
  // There is an error in the archiver.
  REMOVAL_STATUS_ERROR_IN_ARCHIVER = 10;
}

// Quarantine status for file.
enum QuarantineStatus {
  QUARANTINE_STATUS_UNSPECIFIED = 0;
  // The quarantine feature is disabled.
  QUARANTINE_STATUS_DISABLED = 1;
  // The file is quarantined.
  QUARANTINE_STATUS_QUARANTINED = 2;
  // Removal of the file is done without quarantining.
  QUARANTINE_STATUS_SKIPPED = 3;
  // There is an error and the quarantine operation failed.
  QUARANTINE_STATUS_ERROR = 4;
}
