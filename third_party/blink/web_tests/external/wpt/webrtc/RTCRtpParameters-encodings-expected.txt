This is a testharness.js-based test.
[FAIL] addTransceiver(video) with undefined sendEncodings should have default encoding parameter with active set to true and scaleResolutionDownBy set to 1
  assert_equals: expected (number) 1 but got (undefined) undefined
[FAIL] addTransceiver(video) with empty list sendEncodings should have default encoding parameter with active set to true and scaleResolutionDownBy set to 1
  assert_equals: expected (number) 1 but got (undefined) undefined
[FAIL] addTransceiver(video) should auto-set scaleResolutionDownBy to 1 when some encodings have it, but not all
  assert_equals: expected (number) 1 but got (undefined) undefined
[FAIL] addTransceiver should auto-set scaleResolutionDownBy to powers of 2 (descending) when absent
  assert_equals: expected (number) 2 but got (undefined) undefined
[FAIL] addTransceiver with duplicate rid and multiple encodings throws TypeError
  assert_throws_js: function "() => pc.addTransceiver('video', { sendEncodings: [{rid: "foo"}, {rid: "foo"}] })" did not throw
[FAIL] addTransceiver with missing rid and multiple encodings throws TypeError
  assert_throws_js: function "() => pc.addTransceiver('video', { sendEncodings: [{rid: "foo"}, {}] })" threw object "InvalidAccessError: Failed to execute 'addTransceiver' on 'RTCPeerConnection': RIDs must be provided for either all or none of the send encodings." ("InvalidAccessError") expected instance of function "function TypeError() { [native code] }" ("TypeError")
[FAIL] addTransceiver with empty rid throws TypeError
  assert_throws_js: function "() => pc.addTransceiver('video', { sendEncodings: [{rid: ""}] })" did not throw
[FAIL] addTransceiver with invalid rid characters throws TypeError
  assert_throws_js: function "() => pc.addTransceiver('video', { sendEncodings: [{rid: "foo-bar"}] })" threw object "InvalidAccessError: Failed to execute 'addTransceiver' on 'RTCPeerConnection': Invalid RID value provided." ("InvalidAccessError") expected instance of function "function TypeError() { [native code] }" ("TypeError")
[FAIL] setParameters() with encoding.scaleResolutionDownBy field set to less than 1.0 should reject with RangeError
  promise_rejects_js: function "function() { throw e }" threw object "InvalidStateError: Failed to execute 'setParameters' on 'RTCRtpSender': getParameters() needs to be called before setParameters()." ("InvalidStateError") expected instance of function "function RangeError() { [native code] }" ("RangeError")
[FAIL] setParameters() with missing encoding.scaleResolutionDownBy field should succeed, and set the value back to 1
  assert_equals: expected (number) 1 but got (undefined) undefined
Harness: the test ran to completion.

