This is a testharness.js-based test.
Found 35 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] Parsing: <http://example.com/foo/%2e%2> without base
  assert_equals: href expected "http://example.com/foo/%2e%2" but got "http://example.com/foo/.%2"
[FAIL] Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> without base
  assert_equals: href expected "http://example.com/%2e.bar" but got "http://example.com/..bar"
[FAIL] Parsing: <http://www/foo%2Ehtml> without base
  assert_equals: href expected "http://www/foo%2Ehtml" but got "http://www/foo.html"
[FAIL] Parsing: <http://example example.com> against <http://other.com/>
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://GOO 　goo.com> against <http://other.com/>
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://a.b.c.xn--pokxncvks> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://10.0.0.xn--pokxncvks> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://a.b.c.XN--pokxncvks> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://a.b.c.Xn--pokxncvks> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://10.0.0.XN--pokxncvks> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://10.0.0.xN--pokxncvks> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://％４１.com> against <http://other.com/>
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://192.168.0.1 hello> against <http://other.com/>
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <https://x x:12> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://[::%31]> against <http://other.com/>
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://%5B::1]> against <http://other.com/>
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <notspecial://host/?'> without base
  assert_equals: href expected "notspecial://host/?'" but got "notspecial://host/?%27"
[FAIL] Parsing: <http://a b/> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://ho%20st/> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <http://!"$&'()*+,-.;=_`{}~/> without base
  assert_equals: href expected "http://!\\"$&'()*+,-.;=_`{}~/" but got "http://!\\"$&'()%2A+,-.;=_`{}~/"
[FAIL] Parsing: <foo:// !"$%&'()*+,-.;<=>@[\\]^_`{|}~@host/> without base
  assert_equals: href expected "foo://%20!%22$%&'()*+,-.%3B%3C%3D%3E%40%5B%5C%5D%5E_%60%7B%7C%7D~@host/" but got "foo://%20!%22$%&%27()*+,-.%3B%3C%3D%3E%40%5B%5C%5D%5E_%60%7B%7C%7D~@host/"
[FAIL] Parsing: <wss:// !"$%&'()*+,-.;<=>@[]^_`{|}~@host/> without base
  assert_equals: href expected "wss://%20!%22$%&'()*+,-.%3B%3C%3D%3E%40%5B%5D%5E_%60%7B%7C%7D~@host/" but got "wss://%20!%22$%&%27()*+,-.%3B%3C%3D%3E%40%5B%5D%5E_%60%7B%7C%7D~@host/"
[FAIL] Parsing: <foo://joe: !"$%&'()*+,-.:;<=>@[\\]^_`{|}~@host/> without base
  assert_equals: href expected "foo://joe:%20!%22$%&'()*+,-.%3A%3B%3C%3D%3E%40%5B%5C%5D%5E_%60%7B%7C%7D~@host/" but got "foo://joe:%20!%22$%&%27()*+,-.%3A%3B%3C%3D%3E%40%5B%5C%5D%5E_%60%7B%7C%7D~@host/"
[FAIL] Parsing: <wss://joe: !"$%&'()*+,-.:;<=>@[]^_`{|}~@host/> without base
  assert_equals: href expected "wss://joe:%20!%22$%&'()*+,-.%3A%3B%3C%3D%3E%40%5B%5D%5E_%60%7B%7C%7D~@host/" but got "wss://joe:%20!%22$%&%27()*+,-.%3A%3B%3C%3D%3E%40%5B%5D%5E_%60%7B%7C%7D~@host/"
[FAIL] Parsing: <wss://!"$&'()*+,-.;=_`{}~/> without base
  assert_equals: href expected "wss://!\\"$&'()*+,-.;=_`{}~/" but got "wss://!\\"$&'()%2A+,-.;=_`{}~/"
[FAIL] Parsing: <foo://host/ !"$%&'()*+,-./:;<=>@[\\]^_`{|}~> without base
  assert_equals: href expected "foo://host/%20!%22$%&'()*+,-./:;%3C=%3E@[\\\\]^_%60%7B|%7D~" but got "foo://host/%20!%22$%&'()*+,-./:;%3C=%3E@[\\\\]%5E_%60%7B%7C%7D~"
[FAIL] Parsing: <wss://host/ !"$%&'()*+,-./:;<=>@[\\]^_`{|}~> without base
  assert_equals: href expected "wss://host/%20!%22$%&'()*+,-./:;%3C=%3E@[/]^_%60%7B|%7D~" but got "wss://host/%20!%22$%&'()*+,-./:;%3C=%3E@[/]%5E_%60%7B%7C%7D~"
[FAIL] Parsing: <foo://host/dir/? !"$%&'()*+,-./:;<=>?@[\\]^_`{|}~> without base
  assert_equals: href expected "foo://host/dir/?%20!%22$%&'()*+,-./:;%3C=%3E?@[\\\\]^_`{|}~" but got "foo://host/dir/?%20!%22$%&%27()*+,-./:;%3C=%3E?@[\\\\]^_`{|}~"
[FAIL] Parsing: <https://xn--/> without base
  assert_throws_js: function "function() {\n          new URL(expected.input, base);\n        }" did not throw
[FAIL] Parsing: <android://x:0/a> without base
  assert_equals: host expected "x:0" but got ""
[FAIL] Parsing: <drivefs://x:0/a> without base
  assert_equals: host expected "x:0" but got ""
[FAIL] Parsing: <chromeos-steam://x:0/a> without base
  assert_equals: host expected "x:0" but got ""
[FAIL] Parsing: <steam://x:0/a> without base
  assert_equals: host expected "x:0" but got ""
[FAIL] Parsing: <materialized-view://x:0/a> without base
  assert_equals: host expected "x:0" but got ""
Harness: the test ran to completion.

