# Copyright 2018 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/android/rules.gni")

# Targets are declared inside a template in autorolled/BUILD.gn so they can be
# imported here and be part of this BUILD.gn from gn's point of view.
import("//third_party/android_deps/autorolled/BUILD.gn")
define_autorolled_targets("unused") {
}

if (!limit_android_deps) {
  java_group("dagger_java") {
    preferred_dep = true
    if (defined(dagger_java_target)) {
      deps = [ dagger_java_target ]
    } else {
      deps = [ "//third_party/android_deps:com_google_dagger_dagger_java" ]
    }
  }

  java_annotation_processor("dagger_processor") {
    main_class = "dagger.internal.codegen.ComponentProcessor"
    if (defined(dagger_annotation_processor_target)) {
      deps = [ dagger_annotation_processor_target ]
    } else {
      deps = [ "//third_party/android_build_tools/dagger_compiler:dagger_compiler_java" ]
    }
  }

  java_group("espresso_java") {
    preferred_dep = true
    testonly = true

    proguard_configs = [ "//third_party/androidx/espresso_proguard.flags" ]

    deps = [
      "//third_party/accessibility_test_framework:accessibility_core_java",
      "//third_party/androidx:androidx_test_espresso_espresso_contrib_java",
      "//third_party/androidx:androidx_test_espresso_espresso_core_java",
      "//third_party/androidx:androidx_test_espresso_espresso_idling_resource_java",
      "//third_party/androidx:androidx_test_espresso_espresso_intents_java",
      "//third_party/androidx:androidx_test_espresso_espresso_web_java",
    ]
  }

  java_group("guava_android_java") {
    preferred_dep = true
    if (defined(guava_android_target)) {
      deps = [ guava_android_target ]
    } else {
      deps = [ "//third_party/android_deps:com_google_guava_guava_java" ]
    }
  }

  java_group("robolectric_all_java") {
    preferred_dep = true
    testonly = true

    deps = [
      ":org_robolectric_annotations_java",
      ":org_robolectric_junit_java",
      ":org_robolectric_pluginapi_java",
      ":org_robolectric_resources_java",
      ":org_robolectric_robolectric_java",
      ":org_robolectric_sandbox_java",
      ":org_robolectric_shadowapi_java",
      ":org_robolectric_shadows_framework_java",
      ":org_robolectric_utils_java",
      ":org_robolectric_utils_reflector_java",
    ]
  }

  java_group("material_design_java") {
    preferred_dep = true
    if (defined(material_design_target)) {
      deps = [ material_design_target ]
    } else {
      deps = [
        "//third_party/android_deps:com_google_android_material_material_java",
      ]
    }
  }

  java_group("protobuf_lite_runtime_java") {
    preferred_dep = true
    if (defined(android_proto_runtime)) {
      deps = [ android_proto_runtime ]
    } else {
      deps = [ ":com_google_protobuf_protobuf_javalite_java" ]
    }
  }

  android_library("chromium_play_services_availability_java") {
    sources = [ "util/org/chromium/gms/ChromiumPlayServicesAvailability.java" ]
    deps = [ "$google_play_services_package:google_play_services_base_java" ]
  }

  robolectric_library("chromium_play_services_availability_shadows_java") {
    sources = [ "util/org/chromium/gms/shadows/ShadowChromiumPlayServicesAvailability.java" ]
    deps = [ ":chromium_play_services_availability_java" ]
  }

  java_group("playcore_java") {
    preferred_dep = true
    if (defined(playcore_target)) {
      deps = [ playcore_target ]
    } else {
      deps = [ "//third_party/android_deps:com_google_android_play_feature_delivery_java" ]
    }
  }
}

# The section below is generated by running
# `//tools/android/roll/android_deps/fetch_all.py`

# === Generated Code Start ===
# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
java_prebuilt("com_android_tools_common_java") {
  jar_path = "cipd/libs/com_android_tools_common/common-30.2.0-beta01.jar"
  output_name = "com_android_tools_common"
  enable_bytecode_checks = false

  # This target does not come with most of its dependencies and is
  # only meant to be used by the resources shrinker. If you wish to use
  # this for other purposes, change buildCompileNoDeps in build.gradle.
  visibility = [ "//build/android/unused_resources:*" ]
}

# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
java_prebuilt("com_android_tools_layoutlib_layoutlib_api_java") {
  jar_path = "cipd/libs/com_android_tools_layoutlib_layoutlib_api/layoutlib-api-30.2.0-beta01.jar"
  output_name = "com_android_tools_layoutlib_layoutlib_api"
  enable_bytecode_checks = false

  # This target does not come with most of its dependencies and is
  # only meant to be used by the resources shrinker. If you wish to use
  # this for other purposes, change buildCompileNoDeps in build.gradle.
  visibility = [ "//build/android/unused_resources:*" ]
}

# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
java_prebuilt("com_android_tools_sdk_common_java") {
  jar_path =
      "cipd/libs/com_android_tools_sdk_common/sdk-common-30.2.0-beta01.jar"
  output_name = "com_android_tools_sdk_common"
  enable_bytecode_checks = false

  # This target does not come with most of its dependencies and is
  # only meant to be used by the resources shrinker. If you wish to use
  # this for other purposes, change buildCompileNoDeps in build.gradle.
  visibility = [ "//build/android/unused_resources:*" ]
}

# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
java_prebuilt("com_google_code_gson_gson_java") {
  jar_path = "cipd/libs/com_google_code_gson_gson/gson-2.8.0.jar"
  output_name = "com_google_code_gson_gson"
  enable_bytecode_checks = false
}

# This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
java_prebuilt("com_squareup_javapoet_java") {
  jar_path = "cipd/libs/com_squareup_javapoet/javapoet-1.13.0.jar"
  output_name = "com_squareup_javapoet"
  enable_bytecode_checks = false
}
if (!limit_android_deps) {
  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("com_android_support_support_annotations_java") {
    jar_path = "cipd/libs/com_android_support_support_annotations/support-annotations-28.0.0.jar"
    output_name = "com_android_support_support_annotations"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  android_aar_prebuilt(
      "com_google_android_apps_common_testing_accessibility_framework_accessibility_test_framework_java") {
    aar_path = "cipd/libs/com_google_android_apps_common_testing_accessibility_framework_accessibility_test_framework/accessibility-test-framework-4.0.0.aar"
    info_path = "libs/com_google_android_apps_common_testing_accessibility_framework_accessibility_test_framework/com_google_android_accessibility_test_framework.info"
    enable_bytecode_checks = false
    testonly = true
    deps = [
      ":com_google_errorprone_error_prone_annotations_java",
      ":org_checkerframework_checker_qual_java",
      ":org_jsoup_jsoup_java",
      "//third_party/android_deps:guava_android_java",
      "//third_party/android_deps:material_design_java",
      "//third_party/android_deps:protobuf_lite_runtime_java",
      "//third_party/androidx:androidx_core_core_java",
      "//third_party/androidx:androidx_test_services_storage_java",
      "//third_party/hamcrest:hamcrest_core_java",
      "//third_party/hamcrest:hamcrest_library_java",
    ]
    proguard_configs =
        [ "local_modifications/accessibility_test_framework.pcfg" ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_play_services_ads_identifier_java") {
      aar_path = "cipd/libs/com_google_android_gms_play_services_ads_identifier/play-services-ads-identifier-18.1.0.aar"
      info_path = "libs/com_google_android_gms_play_services_ads_identifier/com_google_android_gms_play_services_ads_identifier.info"
      enable_bytecode_checks = false
      deps =
          [ "$google_play_services_package:google_play_services_basement_java" ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  android_aar_prebuilt("com_google_ar_impress_java") {
    aar_path = "cipd/libs/com_google_ar_impress/impress-0.0.2.aar"
    info_path = "libs/com_google_ar_impress/com_google_ar_impress.info"
    enable_bytecode_checks = false
    deps =
        [ "//third_party/androidx:androidx_concurrent_concurrent_futures_java" ]

    # Rules are unnecessary.
    ignore_proguard_configs = true

    # Chrome does not use the APIs that require the native library.
    ignore_native_libraries = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (!defined(dagger_java_target)) {
    java_prebuilt("com_google_dagger_dagger_java") {
      jar_path = "cipd/libs/com_google_dagger_dagger/dagger-2.52.jar"
      output_name = "com_google_dagger_dagger"
      supports_android = true
      requires_android = true
      enable_bytecode_checks = false

      # Target is swapped out when internal code is enabled.
      # Please depend on //third_party/android_deps:dagger_java instead.
      visibility = [ "//third_party/android_deps:*" ]
      deps = [
        ":jakarta_inject_jakarta_inject_api_java",
        ":javax_inject_javax_inject_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_datatransport_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_datatransport/firebase-datatransport-19.0.0.aar"
      info_path = "libs/com_google_firebase_firebase_datatransport/com_google_firebase_firebase_datatransport.info"
      enable_bytecode_checks = false
      deps = [
        ":google_android_datatransport_transport_api_java",
        ":google_android_datatransport_transport_backend_cct_java",
        ":google_android_datatransport_transport_runtime_java",
        "$google_play_services_package:google_firebase_firebase_common_java",
        "$google_play_services_package:google_firebase_firebase_components_java",
        "//third_party/androidx:androidx_annotation_annotation_java",
        "//third_party/kotlin_stdlib:kotlin_stdlib_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_iid_java") {
      aar_path =
          "cipd/libs/com_google_firebase_firebase_iid/firebase-iid-21.1.0.aar"
      info_path = "libs/com_google_firebase_firebase_iid/com_google_firebase_firebase_iid.info"
      enable_bytecode_checks = false
      deps = [
        "$google_play_services_package:google_firebase_firebase_common_java",
        "$google_play_services_package:google_firebase_firebase_components_java",
        "$google_play_services_package:google_firebase_firebase_iid_interop_java",
        "$google_play_services_package:google_firebase_firebase_installations_interop_java",
        "$google_play_services_package:google_firebase_firebase_installations_java",
        "$google_play_services_package:google_play_services_basement_java",
        "$google_play_services_package:google_play_services_cloud_messaging_java",
        "$google_play_services_package:google_play_services_stats_java",
        "$google_play_services_package:google_play_services_tasks_java",
        "//third_party/androidx:androidx_collection_collection_java",
        "//third_party/androidx:androidx_core_core_java",
        "//third_party/androidx:androidx_legacy_legacy_support_core_utils_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt(
        "google_firebase_firebase_measurement_connector_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_measurement_connector/firebase-measurement-connector-20.0.1.aar"
      info_path = "libs/com_google_firebase_firebase_measurement_connector/com_google_firebase_firebase_measurement_connector.info"
      enable_bytecode_checks = false
      deps = [
        "$google_play_services_package:google_firebase_firebase_annotations_java",
        "$google_play_services_package:google_play_services_basement_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_messaging_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_messaging/firebase-messaging-24.1.0.aar"
      info_path = "libs/com_google_firebase_firebase_messaging/com_google_firebase_firebase_messaging.info"
      enable_bytecode_checks = false
      deps = [
        ":com_google_errorprone_error_prone_annotations_java",
        ":google_android_datatransport_transport_api_java",
        ":google_android_datatransport_transport_backend_cct_java",
        ":google_android_datatransport_transport_runtime_java",
        "$google_play_services_package:google_firebase_firebase_common_java",
        "$google_play_services_package:google_firebase_firebase_common_ktx_java",
        "$google_play_services_package:google_firebase_firebase_components_java",
        "$google_play_services_package:google_firebase_firebase_datatransport_java",
        "$google_play_services_package:google_firebase_firebase_encoders_java",
        "$google_play_services_package:google_firebase_firebase_encoders_json_java",
        "$google_play_services_package:google_firebase_firebase_encoders_proto_java",
        "$google_play_services_package:google_firebase_firebase_iid_interop_java",
        "$google_play_services_package:google_firebase_firebase_installations_interop_java",
        "$google_play_services_package:google_firebase_firebase_installations_java",
        "$google_play_services_package:google_firebase_firebase_measurement_connector_java",
        "$google_play_services_package:google_play_services_base_java",
        "$google_play_services_package:google_play_services_basement_java",
        "$google_play_services_package:google_play_services_cloud_messaging_java",
        "$google_play_services_package:google_play_services_stats_java",
        "$google_play_services_package:google_play_services_tasks_java",
        "//third_party/androidx:androidx_annotation_annotation_java",
        "//third_party/kotlin_stdlib:kotlin_stdlib_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("com_googlecode_java_diff_utils_diffutils_java") {
    jar_path =
        "cipd/libs/com_googlecode_java_diff_utils_diffutils/diffutils-1.3.0.jar"
    output_name = "com_googlecode_java_diff_utils_diffutils"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("com_squareup_moshi_moshi_adapters_java") {
    jar_path =
        "cipd/libs/com_squareup_moshi_moshi_adapters/moshi-adapters-1.15.0.jar"
    output_name = "com_squareup_moshi_moshi_adapters"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
    deps = [
      ":com_squareup_moshi_moshi_java",
      "//third_party/kotlin_stdlib:kotlin_stdlib_java",
    ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("net_bytebuddy_byte_buddy_java") {
    jar_path = "cipd/libs/net_bytebuddy_byte_buddy/byte-buddy-1.14.12.jar"
    output_name = "net_bytebuddy_byte_buddy"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false

    # Please depend on //third_party/byte_buddy:byte_buddy_android_java instead.
    visibility = [ "//third_party/byte_buddy:*" ]
    testonly = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_ccil_cowan_tagsoup_tagsoup_java") {
    jar_path = "cipd/libs/org_ccil_cowan_tagsoup_tagsoup/tagsoup-1.2.1.jar"
    output_name = "org_ccil_cowan_tagsoup_tagsoup"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_checkerframework_checker_compat_qual_java") {
    jar_path = "cipd/libs/org_checkerframework_checker_compat_qual/checker-compat-qual-2.5.5.jar"
    output_name = "org_checkerframework_checker_compat_qual"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_checkerframework_checker_util_java") {
    jar_path =
        "cipd/libs/org_checkerframework_checker_util/checker-util-3.25.0.jar"
    output_name = "org_checkerframework_checker_util"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    deps = [ ":org_checkerframework_checker_qual_java" ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_codehaus_mojo_animal_sniffer_annotations_java") {
    jar_path = "cipd/libs/org_codehaus_mojo_animal_sniffer_annotations/animal-sniffer-annotations-1.17.jar"
    output_name = "org_codehaus_mojo_animal_sniffer_annotations"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_jetbrains_kotlin_kotlin_parcelize_runtime_java") {
    jar_path = "cipd/libs/org_jetbrains_kotlin_kotlin_parcelize_runtime/kotlin-parcelize-runtime-1.9.22.jar"
    output_name = "org_jetbrains_kotlin_kotlin_parcelize_runtime"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    deps = [
      ":org_jetbrains_kotlin_kotlin_android_extensions_runtime_java",
      "//third_party/kotlin_stdlib:kotlin_stdlib_java",
    ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_jetbrains_kotlinx_atomicfu_jvm_java") {
    jar_path =
        "cipd/libs/org_jetbrains_kotlinx_atomicfu_jvm/atomicfu-jvm-0.23.2.jar"
    output_name = "org_jetbrains_kotlinx_atomicfu_jvm"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    deps = [ "//third_party/kotlin_stdlib:kotlin_stdlib_java" ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_jetbrains_kotlinx_kotlinx_coroutines_guava_java") {
    jar_path = "cipd/libs/org_jetbrains_kotlinx_kotlinx_coroutines_guava/kotlinx-coroutines-guava-1.8.1.jar"
    output_name = "org_jetbrains_kotlinx_kotlinx_coroutines_guava"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    deps = [
      ":org_jetbrains_kotlinx_kotlinx_coroutines_core_java",
      "//third_party/kotlin_stdlib:kotlin_stdlib_java",
    ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_jsoup_jsoup_java") {
    jar_path = "cipd/libs/org_jsoup_jsoup/jsoup-1.15.1.jar"
    output_name = "org_jsoup_jsoup"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_mockito_mockito_android_java") {
    jar_path =
        "cipd/libs/org_mockito_mockito_android/mockito-android-5.11.0.jar"
    output_name = "org_mockito_mockito_android"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
    deps = [
      ":org_mockito_mockito_core_java",
      "//third_party/byte_buddy:byte_buddy_android_java",
    ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_mockito_mockito_core_java") {
    jar_path = "cipd/libs/org_mockito_mockito_core/mockito-core-5.11.0.jar"
    output_name = "org_mockito_mockito_core"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
    deps = [
      ":net_bytebuddy_byte_buddy_agent_java",
      ":org_objenesis_objenesis_java",
      "//third_party/byte_buddy:byte_buddy_android_java",
    ]

    # Uses java.time which does not exist until API 26.
    # Modifications are added in third_party/mockito.
    jar_excluded_patterns = [
      "org/mockito/internal/junit/ExceptionFactory*",
      "org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues*",
    ]

    # Because of dep on byte_buddy_android_java.
    bypass_platform_checks = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_mockito_mockito_subclass_java") {
    jar_path =
        "cipd/libs/org_mockito_mockito_subclass/mockito-subclass-5.11.0.jar"
    output_name = "org_mockito_mockito_subclass"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false
    testonly = true
    deps = [ ":org_mockito_mockito_core_java" ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_play_services_cloud_messaging_java") {
      aar_path = "cipd/libs/com_google_android_gms_play_services_cloud_messaging/play-services-cloud-messaging-17.2.0.aar"
      info_path = "libs/com_google_android_gms_play_services_cloud_messaging/com_google_android_gms_play_services_cloud_messaging.info"
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [
        "$google_play_services_package:google_play_services_basement_java",
        "$google_play_services_package:google_play_services_tasks_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    java_prebuilt("google_firebase_firebase_annotations_java") {
      jar_path = "cipd/libs/com_google_firebase_firebase_annotations/firebase-annotations-16.2.0.jar"
      output_name = "com_google_firebase_firebase_annotations"
      supports_android = true
      requires_android = true
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [ ":javax_inject_javax_inject_java" ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_common_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_common/firebase-common-21.0.0.aar"
      info_path = "libs/com_google_firebase_firebase_common/com_google_firebase_firebase_common.info"
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [
        ":org_jetbrains_kotlinx_kotlinx_coroutines_play_services_java",
        "$google_play_services_package:google_firebase_firebase_annotations_java",
        "$google_play_services_package:google_firebase_firebase_components_java",
        "$google_play_services_package:google_play_services_basement_java",
        "$google_play_services_package:google_play_services_tasks_java",
        "//third_party/androidx:androidx_annotation_annotation_java",
        "//third_party/androidx:androidx_concurrent_concurrent_futures_java",
        "//third_party/kotlin_stdlib:kotlin_stdlib_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_common_ktx_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_common_ktx/firebase-common-ktx-21.0.0.aar"
      info_path = "libs/com_google_firebase_firebase_common_ktx/com_google_firebase_firebase_common_ktx.info"
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [
        "$google_play_services_package:google_firebase_firebase_annotations_java",
        "$google_play_services_package:google_firebase_firebase_common_java",
        "$google_play_services_package:google_firebase_firebase_components_java",
        "//third_party/kotlin_stdlib:kotlin_stdlib_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_components_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_components/firebase-components-18.0.0.aar"
      info_path = "libs/com_google_firebase_firebase_components/com_google_firebase_firebase_components.info"
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [
        ":com_google_errorprone_error_prone_annotations_java",
        "$google_play_services_package:google_firebase_firebase_annotations_java",
        "//third_party/androidx:androidx_annotation_annotation_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_iid_interop_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_iid_interop/firebase-iid-interop-17.1.0.aar"
      info_path = "libs/com_google_firebase_firebase_iid_interop/com_google_firebase_firebase_iid_interop.info"
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [
        "$google_play_services_package:google_play_services_basement_java",
        "$google_play_services_package:google_play_services_tasks_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt("google_firebase_firebase_installations_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_installations/firebase-installations-17.2.0.aar"
      info_path = "libs/com_google_firebase_firebase_installations/com_google_firebase_firebase_installations.info"
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [
        "$google_play_services_package:google_firebase_firebase_annotations_java",
        "$google_play_services_package:google_firebase_firebase_common_java",
        "$google_play_services_package:google_firebase_firebase_common_ktx_java",
        "$google_play_services_package:google_firebase_firebase_components_java",
        "$google_play_services_package:google_firebase_firebase_installations_interop_java",
        "$google_play_services_package:google_play_services_tasks_java",
        "//third_party/kotlin_stdlib:kotlin_stdlib_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  if (google_play_services_package == "//third_party/android_deps") {
    android_aar_prebuilt(
        "google_firebase_firebase_installations_interop_java") {
      aar_path = "cipd/libs/com_google_firebase_firebase_installations_interop/firebase-installations-interop-17.1.1.aar"
      info_path = "libs/com_google_firebase_firebase_installations_interop/com_google_firebase_firebase_installations_interop.info"
      enable_bytecode_checks = false

      # To remove visibility constraint, add this dependency to
      # //third_party/android_deps/build.gradle.
      visibility = [
        ":*",
        "//third_party/androidx:*",
      ]
      deps = [
        "$google_play_services_package:google_firebase_firebase_annotations_java",
        "$google_play_services_package:google_play_services_tasks_java",
      ]
    }
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("jakarta_inject_jakarta_inject_api_java") {
    jar_path = "cipd/libs/jakarta_inject_jakarta_inject_api/jakarta.inject-api-2.0.1.jar"
    output_name = "jakarta_inject_jakarta_inject_api"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false

    # To remove visibility constraint, add this dependency to
    # //third_party/android_deps/build.gradle.
    visibility = [
      ":*",
      "//third_party/androidx:*",
    ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("net_bytebuddy_byte_buddy_agent_java") {
    jar_path =
        "cipd/libs/net_bytebuddy_byte_buddy_agent/byte-buddy-agent-1.14.12.jar"
    output_name = "net_bytebuddy_byte_buddy_agent"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false

    # To remove visibility constraint, add this dependency to
    # //third_party/android_deps/build.gradle.
    visibility = [
      ":*",
      "//third_party/androidx:*",
    ]
    testonly = true
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_jetbrains_kotlin_kotlin_android_extensions_runtime_java") {
    jar_path = "cipd/libs/org_jetbrains_kotlin_kotlin_android_extensions_runtime/kotlin-android-extensions-runtime-1.9.22.jar"
    output_name = "org_jetbrains_kotlin_kotlin_android_extensions_runtime"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false

    # To remove visibility constraint, add this dependency to
    # //third_party/android_deps/build.gradle.
    visibility = [
      ":*",
      "//third_party/androidx:*",
    ]
    deps = [ "//third_party/kotlin_stdlib:kotlin_stdlib_java" ]
  }

  # This is generated, do not edit. Update BuildConfigGenerator.groovy instead.
  java_prebuilt("org_objenesis_objenesis_java") {
    jar_path = "cipd/libs/org_objenesis_objenesis/objenesis-3.3.jar"
    output_name = "org_objenesis_objenesis"
    supports_android = true
    requires_android = true
    enable_bytecode_checks = false

    # To remove visibility constraint, add this dependency to
    # //third_party/android_deps/build.gradle.
    visibility = [
      ":*",
      "//third_party/androidx:*",
    ]
    testonly = true
  }
}
# === Generated Code End ===
