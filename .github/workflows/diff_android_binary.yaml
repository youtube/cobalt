name: Android Binary Size Diff

on:
  workflow_run:
    workflows: ["android"]
    types:
      - completed

jobs:
  check_apk_size:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'pull_request'
    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-arm APKs
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          path: artifact_pr/
      - name: List PR Artifacts
        shell: bash
        run: |
          set -x
          ls artifact_pr/
      - name: 'Download artifact from main branch'
        id: download-artifact
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get the latest successful workflow run on the main branch.
            const workflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'android.yaml',
              branch: 'main',
              status: 'success',
              per_page: 1
            });

            const latestRun = workflowRuns.data.workflow_runs[0].id;

            // Get the artifact uploaded on the latest successful workflow run on the main branch.
            let allArtifacts = [];
            let page = 1;
            let hasNextPage = true;
            while (hasNextPage) {
              const response = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: latestRun,
                page: page
              });

              allArtifacts = allArtifacts.concat(response.data.artifacts);

              if (response.data.artifacts.length === 0) {
                hasNextPage = false;
              } else {
                page++;
              }
            }

            const matchArtifacts = allArtifacts.filter((artifact) => {
              return artifact.name == 'android-arm APKs';
            });

            if (matchArtifacts.length == 1) {
              console.log(`Found the latest uploaded artifact android-arm APKs on the main branch.`);

              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: matchArtifacts[0].id,
                archive_format: 'zip',
              });

              const downloadDir = path.join(process.env.GITHUB_WORKSPACE, 'artifact_baseline');
              const archiveName = 'android-arm.zip';

              fs.mkdirSync(downloadDir);
              fs.writeFileSync(path.join(downloadDir, archiveName), Buffer.from(download.data));

              core.setOutput("downloadDir", downloadDir);
              core.setOutput("zipArchive", archiveName);
            } else {
              core.setFailed(`Expected one artifact with name android-arm APKs. Found ${matchArtifacts.length}.`);
            }

      - name: 'Unzip artifact from main branch'
        id: unzip-downloaded-artifact
        shell: bash
        run: |
          unzip "${{ steps.download-artifact.outputs.downloadDir }}/${{ steps.download-artifact.outputs.zipArchive }}" -d "${{ steps.download-artifact.outputs.downloadDir }}"
      - name: Compare APK sizes
        id: size-diff
        shell: bash
        run: |
          # This is an example. You'll need to adjust the file names if there are multiple APKs.
          PR_APK_PATH=$(find artifact_pr -name "*.apk" | head -n 1)
          MAIN_APK_PATH=$(find ${{ steps.download-artifact.outputs.downloadDir }} -name "*.apk" | head -n 1)

          if [[ -z "$PR_APK_PATH" || -z "$MAIN_APK_PATH" ]]; then
            echo "Could not find APK in one of the artifacts."
            # Consider this a soft fail, or use `exit 1` for a hard fail.
            echo "comparison_report='Could not find APK to compare.'" >> $GITHUB_OUTPUT
            exit 0
          fi

          PR_SIZE=$(stat -c%s "$PR_APK_PATH")
          MAIN_SIZE=$(stat -c%s "$MAIN_APK_PATH")
          DIFF=$((PR_SIZE - MAIN_SIZE))
          DIFF_FORMATTED=$(printf "%+d" $DIFF)

          REPORT="### ðŸ¤– Android APK Size Report\n\n"
          REPORT+="| Branch | Size (bytes) |\n"
          REPORT+="|---|---|\n"
          REPORT+="| PR Branch | \`$PR_SIZE\` |\n"
          REPORT+="| main | \`$MAIN_SIZE\` |\n"
          REPORT+="| **Difference** | **\`$DIFF_FORMATTED\`** |\n"

          echo "comparison_report<<EOF" >> $GITHUB_OUTPUT
          echo -e "$REPORT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Comment on PR
        uses: actions/github-script@v7
        if: github.event.workflow_run.event == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const report = `${{ steps.size-diff.outputs.comparison_report }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.workflow_run.pull_requests[0].number }},
              body: report
            });
