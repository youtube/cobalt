
src/demux/anim_decode.c,4552
#define NUM_CHANNELS NUM_CHANNELS24,685
typedef void (*BlendRowFunc)(uint32_t* const, const uint32_t* const, int);BlendRowFunc26,709
static void BlendPixelRowNonPremult(uint32_t* const src,BlendPixelRowNonPremult27,784
static void BlendPixelRowPremult(uint32_t* const src, const uint32_t* const dst,BlendPixelRowPremult29,921
struct WebPAnimDecoder {WebPAnimDecoder32,1053
  WebPDemuxer* demux_;             // Demuxer created from given WebP bitstream.demux_33,1078
  WebPDemuxer* demux_;             // Demuxer created from given WebP bitstream.WebPAnimDecoder::demux_33,1078
  WebPDecoderConfig config_;       // Decoder config.config_34,1159
  WebPDecoderConfig config_;       // Decoder config.WebPAnimDecoder::config_34,1159
  BlendRowFunc blend_func_;        // Pointer to the chose blend row function.blend_func_37,1354
  BlendRowFunc blend_func_;        // Pointer to the chose blend row function.WebPAnimDecoder::blend_func_37,1354
  WebPAnimInfo info_;              // Global info about the animation.info_38,1433
  WebPAnimInfo info_;              // Global info about the animation.WebPAnimDecoder::info_38,1433
  uint8_t* curr_frame_;            // Current canvas (not disposed).curr_frame_39,1504
  uint8_t* curr_frame_;            // Current canvas (not disposed).WebPAnimDecoder::curr_frame_39,1504
  uint8_t* prev_frame_disposed_;   // Previous canvas (properly disposed).prev_frame_disposed_40,1573
  uint8_t* prev_frame_disposed_;   // Previous canvas (properly disposed).WebPAnimDecoder::prev_frame_disposed_40,1573
  int prev_frame_timestamp_;       // Previous frame timestamp (milliseconds).prev_frame_timestamp_41,1648
  int prev_frame_timestamp_;       // Previous frame timestamp (milliseconds).WebPAnimDecoder::prev_frame_timestamp_41,1648
  WebPIterator prev_iter_;         // Iterator object for previous frame.prev_iter_42,1727
  WebPIterator prev_iter_;         // Iterator object for previous frame.WebPAnimDecoder::prev_iter_42,1727
  int prev_frame_was_keyframe_;    // True if previous frame was a keyframe.prev_frame_was_keyframe_43,1801
  int prev_frame_was_keyframe_;    // True if previous frame was a keyframe.WebPAnimDecoder::prev_frame_was_keyframe_43,1801
  int next_frame_;                 // Index of the next frame to be decodednext_frame_44,1878
  int next_frame_;                 // Index of the next frame to be decodedWebPAnimDecoder::next_frame_44,1878
static void DefaultDecoderOptions(WebPAnimDecoderOptions* const dec_options) {DefaultDecoderOptions48,2015
int WebPAnimDecoderOptionsInitInternal(WebPAnimDecoderOptions* dec_options,WebPAnimDecoderOptionsInitInternal53,2168
static int ApplyDecoderOptions(const WebPAnimDecoderOptions* const dec_options,ApplyDecoderOptions63,2473
WebPAnimDecoder* WebPAnimDecoderNewInternal(WebPAnimDecoderNewInternal85,3284
int WebPAnimDecoderGetInfo(const WebPAnimDecoder* dec, WebPAnimInfo* info) {WebPAnimDecoderGetInfo131,4917
static int IsFullFrame(int width, int height, int canvas_width,IsFullFrame138,5129
static int ZeroFillCanvas(uint8_t* buf, uint32_t canvas_width,ZeroFillCanvas144,5337
static void ZeroFillFrameRect(uint8_t* buf, int buf_stride, int x_offset,ZeroFillFrameRect154,5684
static int CopyCanvas(const uint8_t* src, uint8_t* dst,CopyCanvas166,6096
static int IsKeyFrame(const WebPIterator* const curr,IsKeyFrame176,6452
static uint8_t BlendChannelNonPremult(uint32_t src, uint8_t src_a,BlendChannelNonPremult197,7298
static uint32_t BlendPixelNonPremult(uint32_t src, uint32_t dst) {BlendPixelNonPremult208,7848
static void BlendPixelRowNonPremult(uint32_t* const src,BlendPixelRowNonPremult238,8911
static WEBP_INLINE uint32_t ChannelwiseMultiply(uint32_t pix, uint32_t scale) {ChannelwiseMultiply250,9302
static uint32_t BlendPixelPremult(uint32_t src, uint32_t dst) {BlendPixelPremult258,9611
static void BlendPixelRowPremult(uint32_t* const src, const uint32_t* const dst,BlendPixelRowPremult265,9864
static void FindBlendRangeAtRow(const WebPIterator* const src,FindBlendRangeAtRow278,10345
int WebPAnimDecoderGetNext(WebPAnimDecoder* dec,WebPAnimDecoderGetNext309,11336
int WebPAnimDecoderHasMoreFrames(const WebPAnimDecoder* dec) {WebPAnimDecoderHasMoreFrames426,15620
void WebPAnimDecoderReset(WebPAnimDecoder* dec) {WebPAnimDecoderReset431,15775
const WebPDemuxer* WebPAnimDecoderGetDemuxer(const WebPAnimDecoder* dec) {WebPAnimDecoderGetDemuxer441,16060
void WebPAnimDecoderDelete(WebPAnimDecoder* dec) {WebPAnimDecoderDelete446,16192

src/demux/demux.c,8771
#define DMUX_MAJ_VERSION DMUX_MAJ_VERSION26,761
#define DMUX_MIN_VERSION DMUX_MIN_VERSION27,788
#define DMUX_REV_VERSION DMUX_REV_VERSION28,815
  size_t start_;        // start location of the datastart_31,860
  size_t start_;        // start location of the data__anon1::start_31,860
  size_t end_;          // end locationend_32,914
  size_t end_;          // end location__anon1::end_32,914
  size_t riff_end_;     // riff chunk end location, can be > end_.riff_end_33,954
  size_t riff_end_;     // riff chunk end location, can be > end_.__anon1::riff_end_33,954
  size_t buf_size_;     // size of the bufferbuf_size_34,1021
  size_t buf_size_;     // size of the buffer__anon1::buf_size_34,1021
  const uint8_t* buf_;buf_35,1067
  const uint8_t* buf_;__anon1::buf_35,1067
} MemBuffer;MemBuffer36,1090
  size_t offset_;offset_39,1121
  size_t offset_;__anon2::offset_39,1121
  size_t size_;size_40,1139
  size_t size_;__anon2::size_40,1139
} ChunkData;ChunkData41,1155
typedef struct Frame {Frame43,1169
  int x_offset_, y_offset_;x_offset_44,1192
  int x_offset_, y_offset_;Frame::x_offset_44,1192
  int x_offset_, y_offset_;y_offset_44,1192
  int x_offset_, y_offset_;Frame::y_offset_44,1192
  int width_, height_;width_45,1220
  int width_, height_;Frame::width_45,1220
  int width_, height_;height_45,1220
  int width_, height_;Frame::height_45,1220
  int has_alpha_;has_alpha_46,1243
  int has_alpha_;Frame::has_alpha_46,1243
  int duration_;duration_47,1261
  int duration_;Frame::duration_47,1261
  WebPMuxAnimDispose dispose_method_;dispose_method_48,1278
  WebPMuxAnimDispose dispose_method_;Frame::dispose_method_48,1278
  WebPMuxAnimBlend blend_method_;blend_method_49,1316
  WebPMuxAnimBlend blend_method_;Frame::blend_method_49,1316
  int frame_num_;frame_num_50,1350
  int frame_num_;Frame::frame_num_50,1350
  int complete_;   // img_components_ contains a full image.complete_51,1368
  int complete_;   // img_components_ contains a full image.Frame::complete_51,1368
  ChunkData img_components_[2];  // 0=VP8{,L} 1=ALPHimg_components_52,1429
  ChunkData img_components_[2];  // 0=VP8{,L} 1=ALPHFrame::img_components_52,1429
  struct Frame* next_;next_53,1482
  struct Frame* next_;Frame::next_53,1482
} Frame;Frame54,1505
typedef struct Chunk {Chunk56,1515
  ChunkData data_;data_57,1538
  ChunkData data_;Chunk::data_57,1538
  struct Chunk* next_;next_58,1557
  struct Chunk* next_;Chunk::next_58,1557
} Chunk;Chunk59,1580
struct WebPDemuxer {WebPDemuxer61,1590
  MemBuffer mem_;mem_62,1611
  MemBuffer mem_;WebPDemuxer::mem_62,1611
  WebPDemuxState state_;state_63,1629
  WebPDemuxState state_;WebPDemuxer::state_63,1629
  int is_ext_format_;is_ext_format_64,1654
  int is_ext_format_;WebPDemuxer::is_ext_format_64,1654
  uint32_t feature_flags_;feature_flags_65,1676
  uint32_t feature_flags_;WebPDemuxer::feature_flags_65,1676
  int canvas_width_, canvas_height_;canvas_width_66,1703
  int canvas_width_, canvas_height_;WebPDemuxer::canvas_width_66,1703
  int canvas_width_, canvas_height_;canvas_height_66,1703
  int canvas_width_, canvas_height_;WebPDemuxer::canvas_height_66,1703
  int loop_count_;loop_count_67,1740
  int loop_count_;WebPDemuxer::loop_count_67,1740
  uint32_t bgcolor_;bgcolor_68,1759
  uint32_t bgcolor_;WebPDemuxer::bgcolor_68,1759
  int num_frames_;num_frames_69,1780
  int num_frames_;WebPDemuxer::num_frames_69,1780
  Frame* frames_;frames_70,1799
  Frame* frames_;WebPDemuxer::frames_70,1799
  Frame** frames_tail_;frames_tail_71,1817
  Frame** frames_tail_;WebPDemuxer::frames_tail_71,1817
  Chunk* chunks_;  // non-image chunkschunks_72,1841
  Chunk* chunks_;  // non-image chunksWebPDemuxer::chunks_72,1841
  Chunk** chunks_tail_;chunks_tail_73,1880
  Chunk** chunks_tail_;WebPDemuxer::chunks_tail_73,1880
  PARSE_OK,PARSE_OK77,1923
  PARSE_NEED_MORE_DATA,PARSE_NEED_MORE_DATA78,1935
  PARSE_ERRORPARSE_ERROR79,1959
} ParseStatus;ParseStatus80,1973
typedef struct ChunkParser {ChunkParser82,1989
  uint8_t id[4];id83,2018
  uint8_t id[4];ChunkParser::id83,2018
  ParseStatus (*parse)(WebPDemuxer* const dmux);parse84,2035
  ParseStatus (*parse)(WebPDemuxer* const dmux);ChunkParser::parse84,2035
  int (*valid)(const WebPDemuxer* const dmux);valid85,2084
  int (*valid)(const WebPDemuxer* const dmux);ChunkParser::valid85,2084
} ChunkParser;ChunkParser86,2131
static ParseStatus ParseSingleImage(WebPDemuxer* const dmux);ParseSingleImage88,2147
static ParseStatus ParseVP8X(WebPDemuxer* const dmux);ParseVP8X89,2209
static int IsValidSimpleFormat(const WebPDemuxer* const dmux);IsValidSimpleFormat90,2264
static int IsValidExtendedFormat(const WebPDemuxer* const dmux);IsValidExtendedFormat91,2327
static const ChunkParser kMasterChunks[] = {kMasterChunks93,2393
int WebPGetDemuxVersion(void) {WebPGetDemuxVersion102,2787
static int RemapMemBuffer(MemBuffer* const mem,RemapMemBuffer109,2997
static int InitMemBuffer(MemBuffer* const mem,InitMemBuffer118,3256
static WEBP_INLINE size_t MemDataSize(const MemBuffer* const mem) {MemDataSize125,3495
static WEBP_INLINE int SizeIsInvalid(const MemBuffer* const mem, size_t size) {SizeIsInvalid130,3662
static WEBP_INLINE void Skip(MemBuffer* const mem, size_t size) {Skip134,3793
static WEBP_INLINE void Rewind(MemBuffer* const mem, size_t size) {Rewind138,3885
static WEBP_INLINE const uint8_t* GetBuffer(MemBuffer* const mem) {GetBuffer142,3979
static WEBP_INLINE uint8_t ReadByte(MemBuffer* const mem) {ReadByte147,4128
static WEBP_INLINE int ReadLE16s(MemBuffer* const mem) {ReadLE16s153,4269
static WEBP_INLINE int ReadLE24s(MemBuffer* const mem) {ReadLE24s160,4447
static WEBP_INLINE uint32_t ReadLE32(MemBuffer* const mem) {ReadLE32167,4625
static void AddChunk(WebPDemuxer* const dmux, Chunk* const chunk) {AddChunk177,4921
static int AddFrame(WebPDemuxer* const dmux, Frame* const frame) {AddFrame185,5205
static void SetFrameInfo(size_t start_offset, size_t size,SetFrameInfo195,5497
static ParseStatus StoreFrame(int frame_num, uint32_t min_size,StoreFrame210,6109
static ParseStatus NewFrame(const MemBuffer* const mem,NewFrame294,9308
static ParseStatus ParseAnimationFrame(ParseAnimationFrame307,9911
static int StoreChunk(WebPDemuxer* const dmux,StoreChunk353,11620
static ParseStatus ReadHeader(MemBuffer* const mem) {ReadHeader367,12043
static ParseStatus ParseSingleImage(WebPDemuxer* const dmux) {ParseSingleImage392,12874
static ParseStatus ParseVP8XChunks(WebPDemuxer* const dmux) {ParseVP8XChunks438,14504
static ParseStatus ParseVP8X(WebPDemuxer* const dmux) {ParseVP8X529,17427
static int IsValidSimpleFormat(const WebPDemuxer* const dmux) {IsValidSimpleFormat563,18670
static int CheckFrameBounds(const Frame* const frame, int exact,CheckFrameBounds576,19202
static int IsValidExtendedFormat(const WebPDemuxer* const dmux) {IsValidExtendedFormat593,19757
static void InitDemux(WebPDemuxer* const dmux, const MemBuffer* const mem) {InitDemux651,21690
static ParseStatus CreateRawImageDemuxer(MemBuffer* const mem,CreateRawImageDemuxer662,22059
WebPDemuxer* WebPDemuxInternal(const WebPData* data, int allow_partial,WebPDemuxInternal697,23272
void WebPDemuxDelete(WebPDemuxer* dmux) {WebPDemuxDelete756,25268
uint32_t WebPDemuxGetI(const WebPDemuxer* dmux, WebPFormatFeature feature) {WebPDemuxGetI776,25716
static const Frame* GetFrame(const WebPDemuxer* const dmux, int frame_num) {GetFrame793,26376
static const uint8_t* GetFramePayload(const uint8_t* const mem_buf,GetFramePayload801,26586
static int SynthesizeFrame(const WebPDemuxer* const dmux,SynthesizeFrame826,27521
static int SetFrame(int frame_num, WebPIterator* const iter) {SetFrame851,28473
int WebPDemuxGetFrame(const WebPDemuxer* dmux, int frame, WebPIterator* iter) {WebPDemuxGetFrame864,28887
int WebPDemuxNextFrame(WebPIterator* iter) {WebPDemuxNextFrame872,29099
int WebPDemuxPrevFrame(WebPIterator* iter) {WebPDemuxPrevFrame877,29223
void WebPDemuxReleaseIterator(WebPIterator* iter) {WebPDemuxReleaseIterator883,29385
static int ChunkCount(const WebPDemuxer* const dmux, const char fourcc[4]) {ChunkCount890,29555
static const Chunk* GetChunk(const WebPDemuxer* const dmux,GetChunk901,29907
static int SetChunk(const char fourcc[4], int chunk_num,SetChunk914,30341
int WebPDemuxGetChunk(const WebPDemuxer* dmux,WebPDemuxGetChunk936,31085
int WebPDemuxNextChunk(WebPChunkIterator* iter) {WebPDemuxNextChunk946,31384
int WebPDemuxPrevChunk(WebPChunkIterator* iter) {WebPDemuxPrevChunk955,31622
void WebPDemuxReleaseChunkIterator(WebPChunkIterator* iter) {WebPDemuxReleaseChunkIterator964,31883

src/dec/common_dec.h,1650
#define WEBP_DEC_COMMON_DEC_H_WEBP_DEC_COMMON_DEC_H_15,601
enum { B_DC_PRED = 0,   // 4x4 modesB_DC_PRED18,659
       B_TM_PRED = 1,B_TM_PRED19,696
       B_VE_PRED = 2,B_VE_PRED20,718
       B_HE_PRED = 3,B_HE_PRED21,740
       B_RD_PRED = 4,B_RD_PRED22,762
       B_VR_PRED = 5,B_VR_PRED23,784
       B_LD_PRED = 6,B_LD_PRED24,806
       B_VL_PRED = 7,B_VL_PRED25,828
       B_HD_PRED = 8,B_HD_PRED26,850
       B_HU_PRED = 9,B_HU_PRED27,872
       NUM_BMODES = B_HU_PRED + 1 - B_DC_PRED,  // = 10NUM_BMODES28,894
       DC_PRED = B_DC_PRED, V_PRED = B_VE_PRED,DC_PRED31,980
       DC_PRED = B_DC_PRED, V_PRED = B_VE_PRED,V_PRED31,980
       H_PRED = B_HE_PRED, TM_PRED = B_TM_PRED,H_PRED32,1028
       H_PRED = B_HE_PRED, TM_PRED = B_TM_PRED,TM_PRED32,1028
       B_PRED = NUM_BMODES,   // refined I4x4 modeB_PRED33,1076
       NUM_PRED_MODES = 4,NUM_PRED_MODES34,1127
       B_DC_PRED_NOTOP = 4,B_DC_PRED_NOTOP37,1179
       B_DC_PRED_NOLEFT = 5,B_DC_PRED_NOLEFT38,1207
       B_DC_PRED_NOTOPLEFT = 6,B_DC_PRED_NOTOPLEFT39,1236
       NUM_B_DC_MODES = 7 };NUM_B_DC_MODES40,1268
enum { MB_FEATURE_TREE_PROBS = 3,MB_FEATURE_TREE_PROBS42,1298
       NUM_MB_SEGMENTS = 4,NUM_MB_SEGMENTS43,1332
       NUM_REF_LF_DELTAS = 4,NUM_REF_LF_DELTAS44,1360
       NUM_MODE_LF_DELTAS = 4,    // I4x4, ZERO, *, SPLITNUM_MODE_LF_DELTAS45,1390
       MAX_NUM_PARTITIONS = 8,MAX_NUM_PARTITIONS46,1448
       NUM_TYPES = 4,   // 0: i16-AC,  1: i16-DC,  2:chroma-AC,  3:i4-ACNUM_TYPES48,1503
       NUM_BANDS = 8,NUM_BANDS49,1576
       NUM_CTX = 3,NUM_CTX50,1598
       NUM_PROBAS = 11NUM_PROBAS51,1618

src/dec/frame_dec.c,2317
static const uint16_t kScan[16] = {kScan21,760
static int CheckMode(int mb_x, int mb_y, int mode) {CheckMode28,1039
static void Copy32b(uint8_t* const dst, const uint8_t* const src) {Copy32b39,1304
static WEBP_INLINE void DoTransform(uint32_t bits, const int16_t* const src,DoTransform43,1398
static void DoUVTransform(uint32_t bits, const int16_t* const src,DoUVTransform60,1763
static void ReconstructRow(const VP8Decoder* const dec,ReconstructRow71,2127
static const uint8_t kFilterExtraRows[3] = { 0, 2, 8 };kFilterExtraRows201,6891
static void DoFilter(const VP8Decoder* const dec, int mb_x, int mb_y) {DoFilter203,6948
static void FilterRow(const VP8Decoder* const dec) {FilterRow253,8765
static void PrecomputeFilterStrengths(VP8Decoder* const dec) {PrecomputeFilterStrengths265,9175
#define MIN_DITHER_AMP MIN_DITHER_AMP320,10895
#define DITHER_AMP_TAB_SIZE DITHER_AMP_TAB_SIZE322,10921
static const uint8_t kQuantToDitherAmp[DITHER_AMP_TAB_SIZE] = {kQuantToDitherAmp323,10952
void VP8InitDithering(const WebPDecoderOptions* const options,VP8InitDithering328,11092
static void Dither8x8(VP8Random* const rg, uint8_t* dst, int bps, int amp) {Dither8x8363,12337
static void DitherRow(VP8Decoder* const dec) {DitherRow372,12591
#define MACROBLOCK_VPOS(MACROBLOCK_VPOS400,13994
static int FinishRow(VP8Decoder* const dec, VP8Io* const io) {FinishRow403,14149
#undef MACROBLOCK_VPOSMACROBLOCK_VPOS497,17140
int VP8ProcessRow(VP8Decoder* const dec, VP8Io* const io) {VP8ProcessRow501,17246
VP8StatusCode VP8EnterCritical(VP8Decoder* const dec, VP8Io* const io) {VP8EnterCritical549,18891
int VP8ExitCritical(VP8Decoder* const dec, VP8Io* const io) {VP8ExitCritical604,21192
#define MT_CACHE_LINES MT_CACHE_LINES640,22845
#define ST_CACHE_LINES ST_CACHE_LINES641,22870
static int InitThreadContext(VP8Decoder* const dec) {InitThreadContext644,22984
int VP8GetThreadMethod(const WebPDecoderOptions* const options,VP8GetThreadMethod663,23590
#undef MT_CACHE_LINESMT_CACHE_LINES685,24170
#undef ST_CACHE_LINESST_CACHE_LINES686,24192
static int AllocateMemory(VP8Decoder* const dec) {AllocateMemory691,24313
static void InitIo(VP8Decoder* const dec, VP8Io* io) {InitIo793,27971
int VP8InitFrame(VP8Decoder* const dec, VP8Io* const io) {VP8InitFrame804,28234

src/dec/webp_dec.c,2657
static VP8StatusCode ParseRIFF(const uint8_t** const data,ParseRIFF54,2348
static VP8StatusCode ParseVP8X(const uint8_t** const data,ParseVP8X93,3911
static VP8StatusCode ParseOptionalChunks(const uint8_t** const data,ParseOptionalChunks146,5816
static VP8StatusCode ParseVP8Header(const uint8_t** const data_ptr,ParseVP8Header222,8631
static VP8StatusCode ParseHeadersInternal(const uint8_t* data,ParseHeadersInternal277,11012
VP8StatusCode WebPParseHeaders(WebPHeaderStructure* const headers) {WebPParseHeaders414,15825
void WebPResetDecParams(WebPDecParams* const params) {WebPResetDecParams437,16748
static VP8StatusCode DecodeInto(const uint8_t* const data, size_t data_size,DecodeInto447,16997
static uint8_t* DecodeIntoRGBABuffer(WEBP_CSP_MODE colorspace,DecodeIntoRGBABuffer526,19556
uint8_t* WebPDecodeRGBInto(const uint8_t* data, size_t data_size,WebPDecodeRGBInto550,20282
uint8_t* WebPDecodeRGBAInto(const uint8_t* data, size_t data_size,WebPDecodeRGBAInto555,20502
uint8_t* WebPDecodeARGBInto(const uint8_t* data, size_t data_size,WebPDecodeARGBInto560,20725
uint8_t* WebPDecodeBGRInto(const uint8_t* data, size_t data_size,WebPDecodeBGRInto565,20948
uint8_t* WebPDecodeBGRAInto(const uint8_t* data, size_t data_size,WebPDecodeBGRAInto570,21168
uint8_t* WebPDecodeYUVInto(const uint8_t* data, size_t data_size,WebPDecodeYUVInto575,21391
static uint8_t* Decode(WEBP_CSP_MODE mode, const uint8_t* const data,Decode604,22410
uint8_t* WebPDecodeRGB(const uint8_t* data, size_t data_size,WebPDecodeRGB633,23364
uint8_t* WebPDecodeRGBA(const uint8_t* data, size_t data_size,WebPDecodeRGBA638,23544
uint8_t* WebPDecodeARGB(const uint8_t* data, size_t data_size,WebPDecodeARGB643,23727
uint8_t* WebPDecodeBGR(const uint8_t* data, size_t data_size,WebPDecodeBGR648,23910
uint8_t* WebPDecodeBGRA(const uint8_t* data, size_t data_size,WebPDecodeBGRA653,24090
uint8_t* WebPDecodeYUV(const uint8_t* data, size_t data_size,WebPDecodeYUV658,24273
static void DefaultFeatures(WebPBitstreamFeatures* const features) {DefaultFeatures676,24872
static VP8StatusCode GetFeatures(const uint8_t* const data, size_t data_size,GetFeatures681,25014
int WebPGetInfo(const uint8_t* data, size_t data_size,WebPGetInfo698,25690
int WebPInitDecoderConfigInternal(WebPDecoderConfig* config,WebPInitDecoderConfigInternal719,26146
VP8StatusCode WebPGetFeaturesInternal(const uint8_t* data, size_t data_size,WebPGetFeaturesInternal733,26533
VP8StatusCode WebPDecode(const uint8_t* data, size_t data_size,WebPDecode745,26985
int WebPIoInitFromOptions(const WebPDecoderOptions* const options,WebPIoInitFromOptions788,28389

src/dec/vp8_dec.h,4833
#define WEBP_DEC_VP8_DEC_H_WEBP_DEC_VP8_DEC_H_15,574
typedef struct VP8Io VP8Io;VP8Io42,1230
typedef int (*VP8IoPutHook)(const VP8Io* io);VP8IoPutHook43,1258
typedef int (*VP8IoSetupHook)(VP8Io* io);VP8IoSetupHook44,1304
typedef void (*VP8IoTeardownHook)(const VP8Io* io);VP8IoTeardownHook45,1346
struct VP8Io {VP8Io47,1399
  int width, height;         // picture dimensions, in pixels (invariable).width49,1442
  int width, height;         // picture dimensions, in pixels (invariable).VP8Io::width49,1442
  int width, height;         // picture dimensions, in pixels (invariable).height49,1442
  int width, height;         // picture dimensions, in pixels (invariable).VP8Io::height49,1442
  int mb_y;                  // position of the current rows (in pixels)mb_y55,1756
  int mb_y;                  // position of the current rows (in pixels)VP8Io::mb_y55,1756
  int mb_w;                  // number of columns in the samplemb_w56,1829
  int mb_w;                  // number of columns in the sampleVP8Io::mb_w56,1829
  int mb_h;                  // number of rows in the samplemb_h57,1893
  int mb_h;                  // number of rows in the sampleVP8Io::mb_h57,1893
  const uint8_t* y, *u, *v;  // rows to copy (in yuv420 format)y58,1954
  const uint8_t* y, *u, *v;  // rows to copy (in yuv420 format)VP8Io::y58,1954
  const uint8_t* y, *u, *v;  // rows to copy (in yuv420 format)u58,1954
  const uint8_t* y, *u, *v;  // rows to copy (in yuv420 format)VP8Io::u58,1954
  const uint8_t* y, *u, *v;  // rows to copy (in yuv420 format)v58,1954
  const uint8_t* y, *u, *v;  // rows to copy (in yuv420 format)VP8Io::v58,1954
  int y_stride;              // row stride for lumay_stride59,2018
  int y_stride;              // row stride for lumaVP8Io::y_stride59,2018
  int uv_stride;             // row stride for chromauv_stride60,2070
  int uv_stride;             // row stride for chromaVP8Io::uv_stride60,2070
  void* opaque;              // user dataopaque62,2125
  void* opaque;              // user dataVP8Io::opaque62,2125
  VP8IoPutHook put;put69,2508
  VP8IoPutHook put;VP8Io::put69,2508
  VP8IoSetupHook setup;setup75,2808
  VP8IoSetupHook setup;VP8Io::setup75,2808
  VP8IoTeardownHook teardown;teardown79,2963
  VP8IoTeardownHook teardown;VP8Io::teardown79,2963
  int fancy_upsampling;fancy_upsampling84,3210
  int fancy_upsampling;VP8Io::fancy_upsampling84,3210
  size_t data_size;data_size87,3254
  size_t data_size;VP8Io::data_size87,3254
  const uint8_t* data;data88,3274
  const uint8_t* data;VP8Io::data88,3274
  int bypass_filtering;bypass_filtering94,3561
  int bypass_filtering;VP8Io::bypass_filtering94,3561
  int use_cropping;use_cropping97,3612
  int use_cropping;VP8Io::use_cropping97,3612
  int crop_left, crop_right, crop_top, crop_bottom;crop_left98,3632
  int crop_left, crop_right, crop_top, crop_bottom;VP8Io::crop_left98,3632
  int crop_left, crop_right, crop_top, crop_bottom;crop_right98,3632
  int crop_left, crop_right, crop_top, crop_bottom;VP8Io::crop_right98,3632
  int crop_left, crop_right, crop_top, crop_bottom;crop_top98,3632
  int crop_left, crop_right, crop_top, crop_bottom;VP8Io::crop_top98,3632
  int crop_left, crop_right, crop_top, crop_bottom;crop_bottom98,3632
  int crop_left, crop_right, crop_top, crop_bottom;VP8Io::crop_bottom98,3632
  int use_scaling;use_scaling101,3710
  int use_scaling;VP8Io::use_scaling101,3710
  int scaled_width, scaled_height;scaled_width102,3729
  int scaled_width, scaled_height;VP8Io::scaled_width102,3729
  int scaled_width, scaled_height;scaled_height102,3729
  int scaled_width, scaled_height;VP8Io::scaled_height102,3729
  const uint8_t* a;a107,3947
  const uint8_t* a;VP8Io::a107,3947
int VP8InitIoInternal(VP8Io* const, int);VP8InitIoInternal111,4013
int WebPISetIOHooks(WebPIDecoder* const idec,WebPISetIOHooks116,4276
typedef struct VP8Decoder VP8Decoder;VP8Decoder123,4543
VP8Decoder* VP8New(void);VP8New126,4614
static WEBP_INLINE int VP8InitIo(VP8Io* const io) {VP8InitIo131,4846
int VP8GetHeaders(VP8Decoder* const dec, VP8Io* const io);VP8GetHeaders137,5086
int VP8Decode(VP8Decoder* const dec, VP8Io* const io);VP8Decode141,5255
VP8StatusCode VP8Status(VP8Decoder* const dec);VP8Status144,5352
const char* VP8StatusMessage(VP8Decoder* const dec);VP8StatusMessage147,5461
void VP8Clear(VP8Decoder* const dec);VP8Clear151,5632
void VP8Delete(VP8Decoder* const dec);VP8Delete154,5702
WEBP_EXTERN int VP8CheckSignature(const uint8_t* const data, size_t data_size);VP8CheckSignature160,5950
WEBP_EXTERN int VP8GetInfo(VP8GetInfo165,6205
WEBP_EXTERN int VP8LCheckSignature(const uint8_t* const data, size_t size);VP8LCheckSignature172,6482
WEBP_EXTERN int VP8LGetInfo(VP8LGetInfo177,6749

src/dec/webpi_dec.h,5633
#define WEBP_DEC_WEBPI_DEC_H_WEBP_DEC_WEBPI_DEC_H_15,615
typedef struct WebPDecParams WebPDecParams;WebPDecParams27,909
typedef int (*OutputFunc)(const VP8Io* const io, WebPDecParams* const p);OutputFunc28,953
typedef int (*OutputAlphaFunc)(const VP8Io* const io, WebPDecParams* const p,OutputAlphaFunc29,1027
typedef int (*OutputRowFunc)(WebPDecParams* const p, int y_pos,OutputRowFunc31,1165
struct WebPDecParams {WebPDecParams34,1279
  WebPDecBuffer* output;             // output buffer.output35,1302
  WebPDecBuffer* output;             // output buffer.WebPDecParams::output35,1302
  uint8_t* tmp_y, *tmp_u, *tmp_v;    // cache for the fancy upsamplertmp_y36,1357
  uint8_t* tmp_y, *tmp_u, *tmp_v;    // cache for the fancy upsamplerWebPDecParams::tmp_y36,1357
  uint8_t* tmp_y, *tmp_u, *tmp_v;    // cache for the fancy upsamplertmp_u36,1357
  uint8_t* tmp_y, *tmp_u, *tmp_v;    // cache for the fancy upsamplerWebPDecParams::tmp_u36,1357
  uint8_t* tmp_y, *tmp_u, *tmp_v;    // cache for the fancy upsamplertmp_v36,1357
  uint8_t* tmp_y, *tmp_u, *tmp_v;    // cache for the fancy upsamplerWebPDecParams::tmp_v36,1357
  int last_y;                 // coordinate of the line that was last outputlast_y39,1494
  int last_y;                 // coordinate of the line that was last outputWebPDecParams::last_y39,1494
  const WebPDecoderOptions* options;  // if not NULL, use alt decoding featuresoptions40,1571
  const WebPDecoderOptions* options;  // if not NULL, use alt decoding featuresWebPDecParams::options40,1571
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersscaler_y42,1652
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersWebPDecParams::scaler_y42,1652
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersscaler_u42,1652
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersWebPDecParams::scaler_u42,1652
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersscaler_v42,1652
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersWebPDecParams::scaler_v42,1652
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersscaler_a42,1652
  WebPRescaler* scaler_y, *scaler_u, *scaler_v, *scaler_a;  // rescalersWebPDecParams::scaler_a42,1652
  void* memory;                  // overall scratch memory for the output work.memory43,1725
  void* memory;                  // overall scratch memory for the output work.WebPDecParams::memory43,1725
  OutputFunc emit;               // output RGB or YUV samplesemit45,1806
  OutputFunc emit;               // output RGB or YUV samplesWebPDecParams::emit45,1806
  OutputAlphaFunc emit_alpha;    // output alpha channelemit_alpha46,1868
  OutputAlphaFunc emit_alpha;    // output alpha channelWebPDecParams::emit_alpha46,1868
  OutputRowFunc emit_alpha_row;  // output one line of rescaled alpha valuesemit_alpha_row47,1925
  OutputRowFunc emit_alpha_row;  // output one line of rescaled alpha valuesWebPDecParams::emit_alpha_row47,1925
void WebPResetDecParams(WebPDecParams* const params);WebPResetDecParams51,2077
  const uint8_t* data;         // input bufferdata58,2313
  const uint8_t* data;         // input buffer__anon6::data58,2313
  size_t data_size;            // input buffer sizedata_size59,2360
  size_t data_size;            // input buffer size__anon6::data_size59,2360
  int have_all_data;           // true if all data is known to be availablehave_all_data60,2412
  int have_all_data;           // true if all data is known to be available__anon6::have_all_data60,2412
  size_t offset;               // offset to main data chunk (VP8 or VP8L)offset61,2488
  size_t offset;               // offset to main data chunk (VP8 or VP8L)__anon6::offset61,2488
  const uint8_t* alpha_data;   // points to alpha chunk (if present)alpha_data62,2562
  const uint8_t* alpha_data;   // points to alpha chunk (if present)__anon6::alpha_data62,2562
  size_t alpha_data_size;      // alpha chunk sizealpha_data_size63,2631
  size_t alpha_data_size;      // alpha chunk size__anon6::alpha_data_size63,2631
  size_t compressed_size;      // VP8/VP8L compressed data sizecompressed_size64,2682
  size_t compressed_size;      // VP8/VP8L compressed data size__anon6::compressed_size64,2682
  size_t riff_size;            // size of the riff payload (or 0 if absent)riff_size65,2746
  size_t riff_size;            // size of the riff payload (or 0 if absent)__anon6::riff_size65,2746
  int is_lossless;             // true if a VP8L chunk is presentis_lossless66,2822
  int is_lossless;             // true if a VP8L chunk is present__anon6::is_lossless66,2822
} WebPHeaderStructure;WebPHeaderStructure67,2888
VP8StatusCode WebPParseHeaders(WebPHeaderStructure* const headers);WebPParseHeaders75,3339
void WebPInitCustomIo(WebPDecParams* const params, VP8Io* const io);WebPInitCustomIo82,3645
int WebPIoInitFromOptions(const WebPDecoderOptions* const options,WebPIoInitFromOptions86,3837
VP8StatusCode WebPAllocateDecBuffer(int width, int height,WebPAllocateDecBuffer102,4806
VP8StatusCode WebPFlipBuffer(WebPDecBuffer* const buffer);WebPFlipBuffer107,5068
void WebPCopyDecBuffer(const WebPDecBuffer* const src,WebPCopyDecBuffer111,5264
void WebPGrabDecBuffer(WebPDecBuffer* const src, WebPDecBuffer* const dst);WebPGrabDecBuffer115,5446
VP8StatusCode WebPCopyDecBufferPixels(const WebPDecBuffer* const src,WebPCopyDecBufferPixels119,5672
int WebPAvoidSlowMemory(const WebPDecBuffer* const output,WebPAvoidSlowMemory124,5907

src/dec/buffer_dec.c,1153
static const uint8_t kModeBpp[MODE_LAST] = {kModeBpp24,818
static int IsValidColorspace(int webp_csp_mode) {IsValidColorspace32,1139
#define MIN_BUFFER_SIZE(MIN_BUFFER_SIZE38,1350
static VP8StatusCode CheckDecBuffer(const WebPDecBuffer* const buffer) {CheckDecBuffer41,1458
#undef MIN_BUFFER_SIZEMIN_BUFFER_SIZE84,3163
static VP8StatusCode AllocateBuffer(WebPDecBuffer* const buffer) {AllocateBuffer86,3187
VP8StatusCode WebPFlipBuffer(WebPDecBuffer* const buffer) {WebPFlipBuffer152,5228
VP8StatusCode WebPAllocateDecBuffer(int width, int height,WebPAllocateDecBuffer177,6005
int WebPInitDecBufferInternal(WebPDecBuffer* buffer, int version) {WebPInitDecBufferInternal230,7727
void WebPFreeDecBuffer(WebPDecBuffer* buffer) {WebPFreeDecBuffer239,7988
void WebPCopyDecBuffer(const WebPDecBuffer* const src,WebPCopyDecBuffer248,8195
void WebPGrabDecBuffer(WebPDecBuffer* const src, WebPDecBuffer* const dst) {WebPGrabDecBuffer260,8591
VP8StatusCode WebPCopyDecBufferPixels(const WebPDecBuffer* const src_buf,WebPCopyDecBufferPixels270,8874
int WebPAvoidSlowMemory(const WebPDecBuffer* const output,WebPAvoidSlowMemory303,10322

src/dec/quant_dec.c,234
static WEBP_INLINE int clip(int v, int M) {clip16,571
static const uint8_t kDcTable[128] = {kDcTable21,672
static const uint16_t kAcTable[128] = {kAcTable40,1386
void VP8ParseQuant(VP8Decoder* const dec) {VP8ParseQuant62,2200

src/dec/idec_dec.c,7078
#define CHUNK_SIZE CHUNK_SIZE25,828
#define MAX_MB_SIZE MAX_MB_SIZE26,852
  STATE_WEBP_HEADER,  // All the data before that of the VP8/VP8L chunk.STATE_WEBP_HEADER36,1266
  STATE_VP8_HEADER,   // The VP8 Frame header (within the VP8 chunk).STATE_VP8_HEADER37,1339
  STATE_VP8_PARTS0,STATE_VP8_PARTS038,1409
  STATE_VP8_DATA,STATE_VP8_DATA39,1429
  STATE_VP8L_HEADER,STATE_VP8L_HEADER40,1447
  STATE_VP8L_DATA,STATE_VP8L_DATA41,1468
  STATE_DONE,STATE_DONE42,1487
  STATE_ERRORSTATE_ERROR43,1501
} DecState;DecState44,1515
  MEM_MODE_NONE = 0,MEM_MODE_NONE48,1580
  MEM_MODE_APPEND,MEM_MODE_APPEND49,1601
  MEM_MODE_MAPMEM_MODE_MAP50,1620
} MemBufferMode;MemBufferMode51,1635
  MemBufferMode mode_;  // Operation modemode_55,1738
  MemBufferMode mode_;  // Operation mode__anon9::mode_55,1738
  size_t start_;        // start location of the data to be decodedstart_56,1780
  size_t start_;        // start location of the data to be decoded__anon9::start_56,1780
  size_t end_;          // end locationend_57,1848
  size_t end_;          // end location__anon9::end_57,1848
  size_t buf_size_;     // size of the allocated bufferbuf_size_58,1888
  size_t buf_size_;     // size of the allocated buffer__anon9::buf_size_58,1888
  uint8_t* buf_;        // We don't own this buffer in case WebPIUpdate()buf_59,1944
  uint8_t* buf_;        // We don't own this buffer in case WebPIUpdate()__anon9::buf_59,1944
  size_t part0_size_;         // size of partition #0part0_size_61,2019
  size_t part0_size_;         // size of partition #0__anon9::part0_size_61,2019
  const uint8_t* part0_buf_;  // buffer to store partition #0part0_buf_62,2073
  const uint8_t* part0_buf_;  // buffer to store partition #0__anon9::part0_buf_62,2073
} MemBuffer;MemBuffer63,2135
struct WebPIDecoder {WebPIDecoder65,2149
  DecState state_;         // current decoding statestate_66,2171
  DecState state_;         // current decoding stateWebPIDecoder::state_66,2171
  WebPDecParams params_;   // Params to store output infoparams_67,2224
  WebPDecParams params_;   // Params to store output infoWebPIDecoder::params_67,2224
  int is_lossless_;        // for down-casting 'dec_'.is_lossless_68,2282
  int is_lossless_;        // for down-casting 'dec_'.WebPIDecoder::is_lossless_68,2282
  void* dec_;              // either a VP8Decoder or a VP8LDecoder instancedec_69,2337
  void* dec_;              // either a VP8Decoder or a VP8LDecoder instanceWebPIDecoder::dec_69,2337
  VP8Io io_;io_70,2413
  VP8Io io_;WebPIDecoder::io_70,2413
  MemBuffer mem_;          // input memory buffer.mem_72,2427
  MemBuffer mem_;          // input memory buffer.WebPIDecoder::mem_72,2427
  WebPDecBuffer output_;   // output buffer (when no external one is supplied,output_73,2478
  WebPDecBuffer output_;   // output buffer (when no external one is supplied,WebPIDecoder::output_73,2478
  WebPDecBuffer* final_output_;  // Slow-memory output to copy to eventually.final_output_75,2627
  WebPDecBuffer* final_output_;  // Slow-memory output to copy to eventually.WebPIDecoder::final_output_75,2627
  size_t chunk_size_;      // Compressed VP8/VP8L size extracted from Header.chunk_size_76,2705
  size_t chunk_size_;      // Compressed VP8/VP8L size extracted from Header.WebPIDecoder::chunk_size_76,2705
  int last_mb_y_;          // last row reached for intra-mode decodinglast_mb_y_78,2784
  int last_mb_y_;          // last row reached for intra-mode decodingWebPIDecoder::last_mb_y_78,2784
  VP8MB left_;left_83,2929
  VP8MB left_;__anon10::left_83,2929
  VP8MB info_;info_84,2944
  VP8MB info_;__anon10::info_84,2944
  VP8BitReader token_br_;token_br_85,2959
  VP8BitReader token_br_;__anon10::token_br_85,2959
} MBContext;MBContext86,2985
static WEBP_INLINE size_t MemDataSize(const MemBuffer* mem) {MemDataSize91,3118
static int NeedCompressedAlpha(const WebPIDecoder* const idec) {NeedCompressedAlpha97,3318
static void DoRemap(WebPIDecoder* const idec, ptrdiff_t offset) {DoRemap112,3921
static int AppendToMemBuffer(WebPIDecoder* const idec,AppendToMemBuffer165,6191
static int RemapMemBuffer(WebPIDecoder* const idec,RemapMemBuffer204,7724
static void InitMemBuffer(MemBuffer* const mem) {InitMemBuffer220,8252
static void ClearMemBuffer(MemBuffer* const mem) {ClearMemBuffer228,8443
static int CheckMemBufferMode(MemBuffer* const mem, MemBufferMode expected) {CheckMemBufferMode236,8626
static VP8StatusCode FinishDecoding(WebPIDecoder* const idec) {FinishDecoding247,8985
static void SaveContext(const VP8Decoder* dec, const VP8BitReader* token_br,SaveContext268,9719
static void RestoreContext(const MBContext* context, VP8Decoder* const dec,RestoreContext275,9969
static VP8StatusCode IDecError(WebPIDecoder* const idec, VP8StatusCode error) {IDecError284,10307
static void ChangeState(WebPIDecoder* const idec, DecState new_state,ChangeState295,10576
static VP8StatusCode DecodeWebPHeaders(WebPIDecoder* const idec) {DecodeWebPHeaders306,10930
static VP8StatusCode DecodeVP8FrameHeader(WebPIDecoder* const idec) {DecodeVP8FrameHeader345,12132
static VP8StatusCode CopyParts0Data(WebPIDecoder* const idec) {CopyParts0Data369,12884
static VP8StatusCode DecodePartition0(WebPIDecoder* const idec) {DecodePartition0397,13930
static VP8StatusCode DecodeRemaining(WebPIDecoder* const idec) {DecodeRemaining450,15711
static VP8StatusCode ErrorStatusLossless(WebPIDecoder* const idec,ErrorStatusLossless500,17576
static VP8StatusCode DecodeVP8LHeader(WebPIDecoder* const idec) {DecodeVP8LHeader508,17862
static VP8StatusCode DecodeVP8LData(WebPIDecoder* const idec) {DecodeVP8LData540,18944
static VP8StatusCode IDecode(WebPIDecoder* idec) {IDecode557,19609
static WebPIDecoder* NewDecoder(WebPDecBuffer* const output_buffer,NewDecoder588,20459
WebPIDecoder* WebPINewDecoder(WebPDecBuffer* output_buffer) {WebPINewDecoder623,21500
WebPIDecoder* WebPIDecode(const uint8_t* data, size_t data_size,WebPIDecode627,21607
void WebPIDelete(WebPIDecoder* idec) {WebPIDelete655,22463
WebPIDecoder* WebPINewRGB(WEBP_CSP_MODE csp, uint8_t* output_buffer,WebPINewRGB676,23087
WebPIDecoder* WebPINewYUVA(uint8_t* luma, size_t luma_size, int luma_stride,WebPINewYUVA700,23971
WebPIDecoder* WebPINewYUV(uint8_t* luma, size_t luma_size, int luma_stride,WebPINewYUV743,25630
static VP8StatusCode IDecCheckStatus(const WebPIDecoder* const idec) {IDecCheckStatus754,26100
VP8StatusCode WebPIAppend(WebPIDecoder* idec,WebPIAppend765,26367
VP8StatusCode WebPIUpdate(WebPIDecoder* idec,WebPIUpdate786,27002
static const WebPDecBuffer* GetOutputBuffer(const WebPIDecoder* const idec) {GetOutputBuffer809,27731
const WebPDecBuffer* WebPIDecodedArea(const WebPIDecoder* idec,WebPIDecodedArea822,28054
uint8_t* WebPIDecGetRGB(const WebPIDecoder* idec, int* last_y,WebPIDecGetRGB838,28585
uint8_t* WebPIDecGetYUVA(const WebPIDecoder* idec, int* last_y,WebPIDecGetYUVA854,29085
int WebPISetIOHooks(WebPIDecoder* const idec,WebPISetIOHooks877,29934

src/dec/io_dec.c,1996
static int EmitYUV(const VP8Io* const io, WebPDecParams* const p) {EmitYUV25,846
static int EmitSampledRGB(const VP8Io* const io, WebPDecParams* const p) {EmitSampledRGB47,1673
static int EmitFancyRGB(const VP8Io* const io, WebPDecParams* const p) {EmitFancyRGB62,2272
static void FillAlphaPlane(uint8_t* dst, int w, int h, int stride) {FillAlphaPlane122,4392
static int EmitAlphaYUV(const VP8Io* const io, WebPDecParams* const p,EmitAlphaYUV130,4565
static int GetAlphaSourceRow(const VP8Io* const io,GetAlphaSourceRow153,5306
static int EmitAlphaRGB(const VP8Io* const io, WebPDecParams* const p,EmitAlphaRGB179,6214
static int EmitAlphaRGBA4444(const VP8Io* const io, WebPDecParams* const p,EmitAlphaRGBA4444205,7338
static int Rescale(const uint8_t* src, int src_stride,Rescale245,8763
static int EmitRescaledYUV(const VP8Io* const io, WebPDecParams* const p) {EmitRescaledYUV257,9218
static int EmitRescaledAlphaYUV(const VP8Io* const io, WebPDecParams* const p,EmitRescaledAlphaYUV276,10069
static int InitYUVRescaler(const VP8Io* const io, WebPDecParams* const p) {InitYUVRescaler297,11020
static int ExportRGB(WebPDecParams* const p, int y_pos) {ExportRGB355,13276
static int EmitRescaledRGB(const VP8Io* const io, WebPDecParams* const p) {EmitRescaledRGB378,14215
static int ExportAlpha(WebPDecParams* const p, int y_pos, int max_lines_out) {ExportAlpha404,15196
static int ExportAlphaRGBA4444(WebPDecParams* const p, int y_pos,ExportAlphaRGBA4444431,16255
static int EmitRescaledAlphaRGB(const VP8Io* const io, WebPDecParams* const p,EmitRescaledAlphaRGB466,17503
static int InitRGBRescaler(const VP8Io* const io, WebPDecParams* const p) {InitRGBRescaler482,18126
static int CustomSetup(VP8Io* io) {CustomSetup550,20662
static int CustomPut(const VP8Io* io) {CustomPut613,22457
static void CustomTeardown(const VP8Io* io) {CustomTeardown633,22946
void WebPInitCustomIo(WebPDecParams* const params, VP8Io* const io) {WebPInitCustomIo642,23199

src/dec/vp8l_dec.c,6316
#define NUM_ARGB_CACHE_ROWS NUM_ARGB_CACHE_ROWS27,902
static const int kCodeLengthLiterals = 16;kCodeLengthLiterals29,943
static const int kCodeLengthRepeatCode = 16;kCodeLengthRepeatCode30,986
static const uint8_t kCodeLengthExtraBits[3] = { 2, 3, 7 };kCodeLengthExtraBits31,1031
static const uint8_t kCodeLengthRepeatOffsets[3] = { 3, 3, 11 };kCodeLengthRepeatOffsets32,1091
  GREEN = 0,GREEN42,1434
  RED   = 1,RED43,1447
  BLUE  = 2,BLUE44,1460
  ALPHA = 3,ALPHA45,1473
  DIST  = 4DIST46,1486
} HuffIndex;HuffIndex47,1498
static const uint16_t kAlphabetSize[HUFFMAN_CODES_PER_META_CODE] = {kAlphabetSize49,1512
static const uint8_t kLiteralMap[HUFFMAN_CODES_PER_META_CODE] = {kLiteralMap55,1705
#define NUM_CODE_LENGTH_CODES NUM_CODE_LENGTH_CODES59,1791
static const uint8_t kCodeLengthCodeOrder[NUM_CODE_LENGTH_CODES] = {kCodeLengthCodeOrder60,1830
#define CODE_TO_PLANE_CODES CODE_TO_PLANE_CODES64,1970
static const uint8_t kCodeToPlane[CODE_TO_PLANE_CODES] = {kCodeToPlane65,2009
#define FIXED_TABLE_SIZE FIXED_TABLE_SIZE88,3387
static const uint16_t kTableSize[12] = {kTableSize89,3428
static int DecodeImageStream(int xsize, int ysize,DecodeImageStream104,3787
int VP8LCheckSignature(const uint8_t* const data, size_t size) {VP8LCheckSignature111,4079
static int ReadImageInfo(VP8LBitReader* const br,ReadImageInfo117,4275
int VP8LGetInfo(const uint8_t* data, size_t data_size,VP8LGetInfo128,4720
static WEBP_INLINE int GetCopyDistance(int distance_symbol,GetCopyDistance150,5423
static WEBP_INLINE int GetCopyLength(int length_symbol,GetCopyLength161,5792
static WEBP_INLINE int PlaneCodeToDistance(int xsize, int plane_code) {PlaneCodeToDistance167,6020
static WEBP_INLINE int ReadSymbol(const HuffmanCode* table,ReadSymbol183,6721
#define BITS_SPECIAL_MARKER BITS_SPECIAL_MARKER200,7279
#define PACKED_NON_LITERAL_CODE PACKED_NON_LITERAL_CODE201,7357
static WEBP_INLINE int ReadPackedSymbols(const HTreeGroup* group,ReadPackedSymbols202,7423
static int AccumulateHCode(HuffmanCode hcode, int shift,AccumulateHCode219,8094
static void BuildPackedTable(HTreeGroup* const htree_group) {BuildPackedTable227,8352
static int ReadHuffmanCodeLengths(ReadHuffmanCodeLengths248,9133
static int ReadHuffmanCode(int alphabet_size, VP8LDecoder* const dec,ReadHuffmanCode309,11031
static int ReadHuffmanCodes(VP8LDecoder* const dec, int xsize, int ysize,ReadHuffmanCodes358,12695
static int AllocateAndInitRescaler(VP8LDecoder* const dec, VP8Io* const io) {AllocateAndInitRescaler489,17250
static int Export(WebPRescaler* const rescaler, WEBP_CSP_MODE colorspace,Export528,18754
static int EmitRescaledRowsRGBA(const VP8LDecoder* const dec,EmitRescaledRowsRGBA544,19326
static int EmitRows(WEBP_CSP_MODE colorspace,EmitRows571,20456
static void ConvertToYUVA(const uint32_t* const src, int width, int y_pos,ConvertToYUVA588,21012
static int ExportYUVA(const VP8LDecoder* const dec, int y_pos) {ExportYUVA614,21871
static int EmitRescaledRowsYUVA(const VP8LDecoder* const dec,EmitRescaledRowsYUVA629,22353
static int EmitRowsYUVA(const VP8LDecoder* const dec,EmitRowsYUVA648,23076
static int SetCropWindow(VP8Io* const io, int y_start, int y_end,SetCropWindow668,23822
static WEBP_INLINE int GetMetaIndex(GetMetaIndex692,24632
static WEBP_INLINE HTreeGroup* GetHtreeGroupForPos(VP8LMetadata* const hdr,GetHtreeGroupForPos698,24820
typedef void (*ProcessRowsFunc)(VP8LDecoder* const dec, int row);ProcessRowsFunc709,25342
static void ApplyInverseTransforms(VP8LDecoder* const dec, int num_rows,ApplyInverseTransforms711,25409
static void ProcessRows(VP8LDecoder* const dec, int row) {ProcessRows734,26238
static int Is8bOptimizable(const VP8LMetadata* const hdr) {Is8bOptimizable781,28286
static void AlphaApplyFilter(ALPHDecoder* const alph_dec,AlphaApplyFilter795,28786
static void ExtractPalettedAlphaRows(VP8LDecoder* const dec, int last_row) {ExtractPalettedAlphaRows811,29333
static WEBP_INLINE uint32_t Rotate8b(uint32_t V) {Rotate8b841,30824
static WEBP_INLINE void CopySmallPattern8b(const uint8_t* src, uint8_t* dst,CopySmallPattern8b850,31040
static WEBP_INLINE void CopyBlock8b(uint8_t* const dst, int dist, int length) {CopyBlock8b870,31667
static WEBP_INLINE void CopySmallPattern32b(const uint32_t* src,CopySmallPattern32b916,32931
static WEBP_INLINE void CopyBlock32b(uint32_t* const dst,CopyBlock32b934,33562
static int DecodeAlphaData(VP8LDecoder* const dec, uint8_t* const data,DecodeAlphaData956,34264
static void SaveState(VP8LDecoder* const dec, int last_pixel) {SaveState1041,37020
static void RestoreState(VP8LDecoder* const dec) {RestoreState1050,37309
#define SYNC_EVERY_N_ROWS SYNC_EVERY_N_ROWS1060,37626
static int DecodeImageData(VP8LDecoder* const dec, uint32_t* const data,DecodeImageData1061,37702
static void ClearTransform(VP8LTransform* const transform) {ClearTransform1210,43059
static int ExpandColorMap(int num_colors, VP8LTransform* const transform) {ExpandColorMap1217,43314
static int ReadTransform(int* const xsize, int const* ysize,ReadTransform1242,44161
static void InitMetadata(VP8LMetadata* const hdr) {InitMetadata1298,46090
static void ClearMetadata(VP8LMetadata* const hdr) {ClearMetadata1303,46200
VP8LDecoder* VP8LNew(void) {VP8LNew1317,46608
void VP8LClear(VP8LDecoder* const dec) {VP8LClear1328,46877
void VP8LDelete(VP8LDecoder* const dec) {VP8LDelete1347,47311
static void UpdateDecoder(VP8LDecoder* const dec, int width, int height) {UpdateDecoder1354,47424
static int DecodeImageStream(int xsize, int ysize,DecodeImageStream1364,47771
static int AllocateInternalBuffers32b(VP8LDecoder* const dec, int final_width) {AllocateInternalBuffers32b1455,50483
static int AllocateInternalBuffers8b(VP8LDecoder* const dec) {AllocateInternalBuffers8b1476,51423
static void ExtractAlphaRows(VP8LDecoder* const dec, int last_row) {ExtractAlphaRows1490,51938
int VP8LDecodeAlphaHeader(ALPHDecoder* const alph_dec,VP8LDecodeAlphaHeader1518,53141
int VP8LDecodeAlphaImageStream(ALPHDecoder* const alph_dec, int last_row) {VP8LDecodeAlphaImageStream1566,54544
int VP8LDecodeHeader(VP8LDecoder* const dec, VP8Io* const io) {VP8LDecodeHeader1587,55248
int VP8LDecodeImage(VP8LDecoder* const dec) {VP8LDecodeImage1616,55928

src/dec/vp8li_dec.h,6370
#define WEBP_DEC_VP8LI_DEC_H_WEBP_DEC_VP8LI_DEC_H_16,627
  READ_DATA = 0,READ_DATA29,903
  READ_HDR = 1,READ_HDR30,920
  READ_DIM = 2READ_DIM31,936
} VP8LDecodeState;VP8LDecodeState32,951
typedef struct VP8LTransform VP8LTransform;VP8LTransform34,971
struct VP8LTransform {VP8LTransform35,1015
  VP8LImageTransformType type_;   // transform type.type_36,1038
  VP8LImageTransformType type_;   // transform type.VP8LTransform::type_36,1038
  int                    bits_;   // subsampling bits defining transform window.bits_37,1091
  int                    bits_;   // subsampling bits defining transform window.VP8LTransform::bits_37,1091
  int                    xsize_;  // transform window X index.xsize_38,1172
  int                    xsize_;  // transform window X index.VP8LTransform::xsize_38,1172
  int                    ysize_;  // transform window Y index.ysize_39,1235
  int                    ysize_;  // transform window Y index.VP8LTransform::ysize_39,1235
  uint32_t              *data_;   // transform data.data_40,1298
  uint32_t              *data_;   // transform data.VP8LTransform::data_40,1298
  int             color_cache_size_;color_cache_size_44,1372
  int             color_cache_size_;__anon13::color_cache_size_44,1372
  VP8LColorCache  color_cache_;color_cache_45,1409
  VP8LColorCache  color_cache_;__anon13::color_cache_45,1409
  VP8LColorCache  saved_color_cache_;  // for incrementalsaved_color_cache_46,1441
  VP8LColorCache  saved_color_cache_;  // for incremental__anon13::saved_color_cache_46,1441
  int             huffman_mask_;huffman_mask_48,1500
  int             huffman_mask_;__anon13::huffman_mask_48,1500
  int             huffman_subsample_bits_;huffman_subsample_bits_49,1533
  int             huffman_subsample_bits_;__anon13::huffman_subsample_bits_49,1533
  int             huffman_xsize_;huffman_xsize_50,1576
  int             huffman_xsize_;__anon13::huffman_xsize_50,1576
  uint32_t       *huffman_image_;huffman_image_51,1610
  uint32_t       *huffman_image_;__anon13::huffman_image_51,1610
  int             num_htree_groups_;num_htree_groups_52,1644
  int             num_htree_groups_;__anon13::num_htree_groups_52,1644
  HTreeGroup     *htree_groups_;htree_groups_53,1681
  HTreeGroup     *htree_groups_;__anon13::htree_groups_53,1681
  HuffmanCode    *huffman_tables_;huffman_tables_54,1714
  HuffmanCode    *huffman_tables_;__anon13::huffman_tables_54,1714
} VP8LMetadata;VP8LMetadata55,1749
typedef struct VP8LDecoder VP8LDecoder;VP8LDecoder57,1766
struct VP8LDecoder {VP8LDecoder58,1806
  VP8StatusCode    status_;status_59,1827
  VP8StatusCode    status_;VP8LDecoder::status_59,1827
  VP8LDecodeState  state_;state_60,1855
  VP8LDecodeState  state_;VP8LDecoder::state_60,1855
  VP8Io           *io_;io_61,1882
  VP8Io           *io_;VP8LDecoder::io_61,1882
  const WebPDecBuffer *output_;    // shortcut to io->opaque->outputoutput_63,1907
  const WebPDecBuffer *output_;    // shortcut to io->opaque->outputVP8LDecoder::output_63,1907
  uint32_t        *pixels_;        // Internal data: either uint8_t* for alphapixels_65,1977
  uint32_t        *pixels_;        // Internal data: either uint8_t* for alphaVP8LDecoder::pixels_65,1977
  uint32_t        *argb_cache_;    // Scratch buffer for temporary BGRA storage.argb_cache_67,2117
  uint32_t        *argb_cache_;    // Scratch buffer for temporary BGRA storage.VP8LDecoder::argb_cache_67,2117
  VP8LBitReader    br_;br_69,2199
  VP8LBitReader    br_;VP8LDecoder::br_69,2199
  int              incremental_;   // if true, incremental decoding is expectedincremental_70,2223
  int              incremental_;   // if true, incremental decoding is expectedVP8LDecoder::incremental_70,2223
  VP8LBitReader    saved_br_;      // note: could be local variables toosaved_br_71,2303
  VP8LBitReader    saved_br_;      // note: could be local variables tooVP8LDecoder::saved_br_71,2303
  int              saved_last_pixel_;saved_last_pixel_72,2376
  int              saved_last_pixel_;VP8LDecoder::saved_last_pixel_72,2376
  int              width_;width_74,2415
  int              width_;VP8LDecoder::width_74,2415
  int              height_;height_75,2442
  int              height_;VP8LDecoder::height_75,2442
  int              last_row_;      // last input row decoded so far.last_row_76,2470
  int              last_row_;      // last input row decoded so far.VP8LDecoder::last_row_76,2470
  int              last_pixel_;    // last pixel decoded so far. However, it maylast_pixel_77,2539
  int              last_pixel_;    // last pixel decoded so far. However, it mayVP8LDecoder::last_pixel_77,2539
  int              last_out_row_;  // last row output so far.last_out_row_80,2748
  int              last_out_row_;  // last row output so far.VP8LDecoder::last_out_row_80,2748
  VP8LMetadata     hdr_;hdr_82,2811
  VP8LMetadata     hdr_;VP8LDecoder::hdr_82,2811
  int              next_transform_;next_transform_84,2837
  int              next_transform_;VP8LDecoder::next_transform_84,2837
  VP8LTransform    transforms_[NUM_TRANSFORMS];transforms_85,2873
  VP8LTransform    transforms_[NUM_TRANSFORMS];VP8LDecoder::transforms_85,2873
  uint32_t         transforms_seen_;transforms_seen_87,2968
  uint32_t         transforms_seen_;VP8LDecoder::transforms_seen_87,2968
  uint8_t         *rescaler_memory;  // Working memory for rescaling work.rescaler_memory89,3006
  uint8_t         *rescaler_memory;  // Working memory for rescaling work.VP8LDecoder::rescaler_memory89,3006
  WebPRescaler    *rescaler;         // Common rescaler for all channels.rescaler90,3081
  WebPRescaler    *rescaler;         // Common rescaler for all channels.VP8LDecoder::rescaler90,3081
int VP8LDecodeAlphaHeader(struct ALPHDecoder* const alph_dec,VP8LDecodeAlphaHeader102,3449
int VP8LDecodeAlphaImageStream(struct ALPHDecoder* const alph_dec,VP8LDecodeAlphaImageStream109,3802
VP8LDecoder* VP8LNew(void);VP8LNew113,3977
int VP8LDecodeHeader(VP8LDecoder* const dec, VP8Io* const io);VP8LDecodeHeader116,4067
int VP8LDecodeImage(VP8LDecoder* const dec);VP8LDecodeImage120,4288
void VP8LClear(VP8LDecoder* const dec);VP8LClear124,4434
void VP8LDelete(VP8LDecoder* const dec);VP8LDelete127,4529

src/dec/vp8i_dec.h,17474
#define WEBP_DEC_VP8I_DEC_H_WEBP_DEC_VP8I_DEC_H_15,574
#define DEC_MAJ_VERSION DEC_MAJ_VERSION33,1015
#define DEC_MIN_VERSION DEC_MIN_VERSION34,1041
#define DEC_REV_VERSION DEC_REV_VERSION35,1067
#define YUV_SIZE YUV_SIZE59,1972
#define Y_OFF Y_OFF60,2010
#define U_OFF U_OFF61,2041
#define V_OFF V_OFF62,2083
#define MIN_WIDTH_FOR_THREADS MIN_WIDTH_FOR_THREADS65,2184
  uint8_t key_frame_;key_frame_71,2329
  uint8_t key_frame_;__anon14::key_frame_71,2329
  uint8_t profile_;profile_72,2351
  uint8_t profile_;__anon14::profile_72,2351
  uint8_t show_;show_73,2371
  uint8_t show_;__anon14::show_73,2371
  uint32_t partition_length_;partition_length_74,2388
  uint32_t partition_length_;__anon14::partition_length_74,2388
} VP8FrameHeader;VP8FrameHeader75,2418
  uint16_t width_;width_78,2454
  uint16_t width_;__anon15::width_78,2454
  uint16_t height_;height_79,2473
  uint16_t height_;__anon15::height_79,2473
  uint8_t xscale_;xscale_80,2493
  uint8_t xscale_;__anon15::xscale_80,2493
  uint8_t yscale_;yscale_81,2512
  uint8_t yscale_;__anon15::yscale_81,2512
  uint8_t colorspace_;   // 0 = YCbCrcolorspace_82,2531
  uint8_t colorspace_;   // 0 = YCbCr__anon15::colorspace_82,2531
  uint8_t clamp_type_;clamp_type_83,2569
  uint8_t clamp_type_;__anon15::clamp_type_83,2569
} VP8PictureHeader;VP8PictureHeader84,2592
  int use_segment_;use_segment_88,2650
  int use_segment_;__anon16::use_segment_88,2650
  int update_map_;        // whether to update the segment map or notupdate_map_89,2670
  int update_map_;        // whether to update the segment map or not__anon16::update_map_89,2670
  int absolute_delta_;    // absolute or delta values for quantizer and filterabsolute_delta_90,2740
  int absolute_delta_;    // absolute or delta values for quantizer and filter__anon16::absolute_delta_90,2740
  int8_t quantizer_[NUM_MB_SEGMENTS];        // quantization changesquantizer_91,2819
  int8_t quantizer_[NUM_MB_SEGMENTS];        // quantization changes__anon16::quantizer_91,2819
  int8_t filter_strength_[NUM_MB_SEGMENTS];  // filter strength for segmentsfilter_strength_92,2888
  int8_t filter_strength_[NUM_MB_SEGMENTS];  // filter strength for segments__anon16::filter_strength_92,2888
} VP8SegmentHeader;VP8SegmentHeader93,2965
typedef uint8_t VP8ProbaArray[NUM_PROBAS];VP8ProbaArray96,3030
  VP8ProbaArray probas_[NUM_CTX];probas_99,3134
  VP8ProbaArray probas_[NUM_CTX];__anon17::probas_99,3134
} VP8BandProbas;VP8BandProbas100,3168
  uint8_t segments_[MB_FEATURE_TREE_PROBS];segments_104,3260
  uint8_t segments_[MB_FEATURE_TREE_PROBS];__anon18::segments_104,3260
  VP8BandProbas bands_[NUM_TYPES][NUM_BANDS];bands_106,3364
  VP8BandProbas bands_[NUM_TYPES][NUM_BANDS];__anon18::bands_106,3364
  const VP8BandProbas* bands_ptr_[NUM_TYPES][16 + 1];bands_ptr_107,3410
  const VP8BandProbas* bands_ptr_[NUM_TYPES][16 + 1];__anon18::bands_ptr_107,3410
} VP8Proba;VP8Proba108,3464
  int simple_;                  // 0=complex, 1=simplesimple_112,3515
  int simple_;                  // 0=complex, 1=simple__anon19::simple_112,3515
  int level_;                   // [0..63]level_113,3570
  int level_;                   // [0..63]__anon19::level_113,3570
  int sharpness_;               // [0..7]sharpness_114,3613
  int sharpness_;               // [0..7]__anon19::sharpness_114,3613
  int use_lf_delta_;use_lf_delta_115,3655
  int use_lf_delta_;__anon19::use_lf_delta_115,3655
  int ref_lf_delta_[NUM_REF_LF_DELTAS];ref_lf_delta_116,3676
  int ref_lf_delta_[NUM_REF_LF_DELTAS];__anon19::ref_lf_delta_116,3676
  int mode_lf_delta_[NUM_MODE_LF_DELTAS];mode_lf_delta_117,3716
  int mode_lf_delta_[NUM_MODE_LF_DELTAS];__anon19::mode_lf_delta_117,3716
} VP8FilterHeader;VP8FilterHeader118,3758
  uint8_t f_limit_;      // filter limit in [3..189], or 0 if no filteringf_limit_124,3933
  uint8_t f_limit_;      // filter limit in [3..189], or 0 if no filtering__anon20::f_limit_124,3933
  uint8_t f_ilevel_;     // inner limit in [1..63]f_ilevel_125,4008
  uint8_t f_ilevel_;     // inner limit in [1..63]__anon20::f_ilevel_125,4008
  uint8_t f_inner_;      // do inner filtering?f_inner_126,4059
  uint8_t f_inner_;      // do inner filtering?__anon20::f_inner_126,4059
  uint8_t hev_thresh_;   // high edge variance threshold in [0..2]hev_thresh_127,4107
  uint8_t hev_thresh_;   // high edge variance threshold in [0..2]__anon20::hev_thresh_127,4107
} VP8FInfo;VP8FInfo128,4174
  uint8_t nz_;        // non-zero AC/DC coeffs (4bit for luma + 4bit for chroma)nz_131,4250
  uint8_t nz_;        // non-zero AC/DC coeffs (4bit for luma + 4bit for chroma)__anon21::nz_131,4250
  uint8_t nz_dc_;     // non-zero DC coeff (1bit)nz_dc_132,4331
  uint8_t nz_dc_;     // non-zero DC coeff (1bit)__anon21::nz_dc_132,4331
} VP8MB;VP8MB133,4381
typedef int quant_t[2];      // [DC / AC].  Can be 'uint16_t[2]' too (~slower).quant_t136,4418
  quant_t y1_mat_, y2_mat_, uv_mat_;y1_mat_138,4515
  quant_t y1_mat_, y2_mat_, uv_mat_;__anon22::y1_mat_138,4515
  quant_t y1_mat_, y2_mat_, uv_mat_;y2_mat_138,4515
  quant_t y1_mat_, y2_mat_, uv_mat_;__anon22::y2_mat_138,4515
  quant_t y1_mat_, y2_mat_, uv_mat_;uv_mat_138,4515
  quant_t y1_mat_, y2_mat_, uv_mat_;__anon22::uv_mat_138,4515
  int uv_quant_;   // U/V quantizer valueuv_quant_140,4553
  int uv_quant_;   // U/V quantizer value__anon22::uv_quant_140,4553
  int dither_;     // dithering amplitude (0 = off, max=255)dither_141,4595
  int dither_;     // dithering amplitude (0 = off, max=255)__anon22::dither_141,4595
} VP8QuantMatrix;VP8QuantMatrix142,4656
  int16_t coeffs_[384];   // 384 coeffs = (16+4+4) * 4*4coeffs_146,4735
  int16_t coeffs_[384];   // 384 coeffs = (16+4+4) * 4*4__anon23::coeffs_146,4735
  uint8_t is_i4x4_;       // true if intra4x4is_i4x4_147,4792
  uint8_t is_i4x4_;       // true if intra4x4__anon23::is_i4x4_147,4792
  uint8_t imodes_[16];    // one 16x16 mode (#0) or sixteen 4x4 modesimodes_148,4838
  uint8_t imodes_[16];    // one 16x16 mode (#0) or sixteen 4x4 modes__anon23::imodes_148,4838
  uint8_t uvmode_;        // chroma prediction modeuvmode_149,4908
  uint8_t uvmode_;        // chroma prediction mode__anon23::uvmode_149,4908
  uint32_t non_zero_y_;non_zero_y_157,5351
  uint32_t non_zero_y_;__anon23::non_zero_y_157,5351
  uint32_t non_zero_uv_;non_zero_uv_158,5375
  uint32_t non_zero_uv_;__anon23::non_zero_uv_158,5375
  uint8_t dither_;      // local dithering strength (deduced from non_zero_*)dither_159,5400
  uint8_t dither_;      // local dithering strength (deduced from non_zero_*)__anon23::dither_159,5400
  uint8_t skip_;skip_160,5478
  uint8_t skip_;__anon23::skip_160,5478
  uint8_t segment_;segment_161,5495
  uint8_t segment_;__anon23::segment_161,5495
} VP8MBData;VP8MBData162,5515
  int id_;              // cache row to process (in [0..2])id_166,5606
  int id_;              // cache row to process (in [0..2])__anon24::id_166,5606
  int mb_y_;            // macroblock position of the rowmb_y_167,5666
  int mb_y_;            // macroblock position of the row__anon24::mb_y_167,5666
  int filter_row_;      // true if row-filtering is neededfilter_row_168,5724
  int filter_row_;      // true if row-filtering is needed__anon24::filter_row_168,5724
  VP8FInfo* f_info_;    // filter strengths (swapped with dec->f_info_)f_info_169,5783
  VP8FInfo* f_info_;    // filter strengths (swapped with dec->f_info_)__anon24::f_info_169,5783
  VP8MBData* mb_data_;  // reconstruction data (swapped with dec->mb_data_)mb_data_170,5855
  VP8MBData* mb_data_;  // reconstruction data (swapped with dec->mb_data_)__anon24::mb_data_170,5855
  VP8Io io_;            // copy of the VP8Io to pass to put()io_171,5931
  VP8Io io_;            // copy of the VP8Io to pass to put()__anon24::io_171,5931
} VP8ThreadContext;VP8ThreadContext172,5993
  uint8_t y[16], u[8], v[8];y176,6093
  uint8_t y[16], u[8], v[8];__anon25::y176,6093
  uint8_t y[16], u[8], v[8];u176,6093
  uint8_t y[16], u[8], v[8];__anon25::u176,6093
  uint8_t y[16], u[8], v[8];v176,6093
  uint8_t y[16], u[8], v[8];__anon25::v176,6093
} VP8TopSamples;VP8TopSamples177,6122
struct VP8Decoder {VP8Decoder182,6283
  VP8StatusCode status_;status_183,6303
  VP8StatusCode status_;VP8Decoder::status_183,6303
  int ready_;     // true if ready to decode a picture with VP8Decode()ready_184,6328
  int ready_;     // true if ready to decode a picture with VP8Decode()VP8Decoder::ready_184,6328
  const char* error_msg_;  // set when status_ is not OK.error_msg_185,6400
  const char* error_msg_;  // set when status_ is not OK.VP8Decoder::error_msg_185,6400
  VP8BitReader br_;br_188,6481
  VP8BitReader br_;VP8Decoder::br_188,6481
  VP8FrameHeader   frm_hdr_;frm_hdr_191,6515
  VP8FrameHeader   frm_hdr_;VP8Decoder::frm_hdr_191,6515
  VP8PictureHeader pic_hdr_;pic_hdr_192,6544
  VP8PictureHeader pic_hdr_;VP8Decoder::pic_hdr_192,6544
  VP8FilterHeader  filter_hdr_;filter_hdr_193,6573
  VP8FilterHeader  filter_hdr_;VP8Decoder::filter_hdr_193,6573
  VP8SegmentHeader segment_hdr_;segment_hdr_194,6605
  VP8SegmentHeader segment_hdr_;VP8Decoder::segment_hdr_194,6605
  WebPWorker worker_;worker_197,6651
  WebPWorker worker_;VP8Decoder::worker_197,6651
  int mt_method_;      // multi-thread method: 0=off, 1=[parse+recon][filter]mt_method_198,6673
  int mt_method_;      // multi-thread method: 0=off, 1=[parse+recon][filter]VP8Decoder::mt_method_198,6673
  int cache_id_;       // current cache rowcache_id_200,6801
  int cache_id_;       // current cache rowVP8Decoder::cache_id_200,6801
  int num_caches_;     // number of cached rows of 16 pixels (1, 2 or 3)num_caches_201,6845
  int num_caches_;     // number of cached rows of 16 pixels (1, 2 or 3)VP8Decoder::num_caches_201,6845
  VP8ThreadContext thread_ctx_;  // Thread contextthread_ctx_202,6918
  VP8ThreadContext thread_ctx_;  // Thread contextVP8Decoder::thread_ctx_202,6918
  int mb_w_, mb_h_;mb_w_205,7007
  int mb_w_, mb_h_;VP8Decoder::mb_w_205,7007
  int mb_w_, mb_h_;mb_h_205,7007
  int mb_w_, mb_h_;VP8Decoder::mb_h_205,7007
  int tl_mb_x_, tl_mb_y_;  // top-left MB that must be in-loop filteredtl_mb_x_208,7102
  int tl_mb_x_, tl_mb_y_;  // top-left MB that must be in-loop filteredVP8Decoder::tl_mb_x_208,7102
  int tl_mb_x_, tl_mb_y_;  // top-left MB that must be in-loop filteredtl_mb_y_208,7102
  int tl_mb_x_, tl_mb_y_;  // top-left MB that must be in-loop filteredVP8Decoder::tl_mb_y_208,7102
  int br_mb_x_, br_mb_y_;  // last bottom-right MB that must be decodedbr_mb_x_209,7174
  int br_mb_x_, br_mb_y_;  // last bottom-right MB that must be decodedVP8Decoder::br_mb_x_209,7174
  int br_mb_x_, br_mb_y_;  // last bottom-right MB that must be decodedbr_mb_y_209,7174
  int br_mb_x_, br_mb_y_;  // last bottom-right MB that must be decodedVP8Decoder::br_mb_y_209,7174
  uint32_t num_parts_minus_one_;num_parts_minus_one_212,7284
  uint32_t num_parts_minus_one_;VP8Decoder::num_parts_minus_one_212,7284
  VP8BitReader parts_[MAX_NUM_PARTITIONS];parts_214,7354
  VP8BitReader parts_[MAX_NUM_PARTITIONS];VP8Decoder::parts_214,7354
  int dither_;                // whether to use dithering or notdither_217,7453
  int dither_;                // whether to use dithering or notVP8Decoder::dither_217,7453
  VP8Random dithering_rg_;    // random generator for ditheringdithering_rg_218,7518
  VP8Random dithering_rg_;    // random generator for ditheringVP8Decoder::dithering_rg_218,7518
  VP8QuantMatrix dqm_[NUM_MB_SEGMENTS];dqm_221,7649
  VP8QuantMatrix dqm_[NUM_MB_SEGMENTS];VP8Decoder::dqm_221,7649
  VP8Proba proba_;proba_224,7709
  VP8Proba proba_;VP8Decoder::proba_224,7709
  int use_skip_proba_;use_skip_proba_225,7728
  int use_skip_proba_;VP8Decoder::use_skip_proba_225,7728
  uint8_t skip_p_;skip_p_226,7751
  uint8_t skip_p_;VP8Decoder::skip_p_226,7751
  uint8_t* intra_t_;      // top intra modes values: 4 * mb_w_intra_t_229,7820
  uint8_t* intra_t_;      // top intra modes values: 4 * mb_w_VP8Decoder::intra_t_229,7820
  uint8_t  intra_l_[4];   // left intra modes valuesintra_l_230,7883
  uint8_t  intra_l_[4];   // left intra modes valuesVP8Decoder::intra_l_230,7883
  VP8TopSamples* yuv_t_;  // top y/u/v samplesyuv_t_232,7937
  VP8TopSamples* yuv_t_;  // top y/u/v samplesVP8Decoder::yuv_t_232,7937
  VP8MB* mb_info_;        // contextual macroblock info (mb_w_ + 1)mb_info_234,7985
  VP8MB* mb_info_;        // contextual macroblock info (mb_w_ + 1)VP8Decoder::mb_info_234,7985
  VP8FInfo* f_info_;      // filter strength infof_info_235,8053
  VP8FInfo* f_info_;      // filter strength infoVP8Decoder::f_info_235,8053
  uint8_t* yuv_b_;        // main block for Y/U/V (size = YUV_SIZE)yuv_b_236,8103
  uint8_t* yuv_b_;        // main block for Y/U/V (size = YUV_SIZE)VP8Decoder::yuv_b_236,8103
  uint8_t* cache_y_;      // macroblock row for storing unfiltered samplescache_y_238,8172
  uint8_t* cache_y_;      // macroblock row for storing unfiltered samplesVP8Decoder::cache_y_238,8172
  uint8_t* cache_u_;cache_u_239,8247
  uint8_t* cache_u_;VP8Decoder::cache_u_239,8247
  uint8_t* cache_v_;cache_v_240,8268
  uint8_t* cache_v_;VP8Decoder::cache_v_240,8268
  int cache_y_stride_;cache_y_stride_241,8289
  int cache_y_stride_;VP8Decoder::cache_y_stride_241,8289
  int cache_uv_stride_;cache_uv_stride_242,8312
  int cache_uv_stride_;VP8Decoder::cache_uv_stride_242,8312
  void* mem_;mem_245,8392
  void* mem_;VP8Decoder::mem_245,8392
  size_t mem_size_;mem_size_246,8406
  size_t mem_size_;VP8Decoder::mem_size_246,8406
  int mb_x_, mb_y_;       // current position, in macroblock unitsmb_x_249,8469
  int mb_x_, mb_y_;       // current position, in macroblock unitsVP8Decoder::mb_x_249,8469
  int mb_x_, mb_y_;       // current position, in macroblock unitsmb_y_249,8469
  int mb_x_, mb_y_;       // current position, in macroblock unitsVP8Decoder::mb_y_249,8469
  VP8MBData* mb_data_;    // parsed reconstruction datamb_data_250,8536
  VP8MBData* mb_data_;    // parsed reconstruction dataVP8Decoder::mb_data_250,8536
  int filter_type_;                          // 0=off, 1=simple, 2=complexfilter_type_253,8618
  int filter_type_;                          // 0=off, 1=simple, 2=complexVP8Decoder::filter_type_253,8618
  VP8FInfo fstrengths_[NUM_MB_SEGMENTS][2];  // precalculated per-segment/typefstrengths_254,8693
  VP8FInfo fstrengths_[NUM_MB_SEGMENTS][2];  // precalculated per-segment/typeVP8Decoder::fstrengths_254,8693
  struct ALPHDecoder* alph_dec_;  // alpha-plane decoder objectalph_dec_257,8784
  struct ALPHDecoder* alph_dec_;  // alpha-plane decoder objectVP8Decoder::alph_dec_257,8784
  const uint8_t* alpha_data_;     // compressed alpha data (if present)alpha_data_258,8848
  const uint8_t* alpha_data_;     // compressed alpha data (if present)VP8Decoder::alpha_data_258,8848
  size_t alpha_data_size_;alpha_data_size_259,8920
  size_t alpha_data_size_;VP8Decoder::alpha_data_size_259,8920
  int is_alpha_decoded_;      // true if alpha_data_ is decoded in alpha_plane_is_alpha_decoded_260,8947
  int is_alpha_decoded_;      // true if alpha_data_ is decoded in alpha_plane_VP8Decoder::is_alpha_decoded_260,8947
  uint8_t* alpha_plane_mem_;  // memory allocated for alpha_plane_alpha_plane_mem_261,9027
  uint8_t* alpha_plane_mem_;  // memory allocated for alpha_plane_VP8Decoder::alpha_plane_mem_261,9027
  uint8_t* alpha_plane_;      // output. Persistent, contains the whole data.alpha_plane_262,9094
  uint8_t* alpha_plane_;      // output. Persistent, contains the whole data.VP8Decoder::alpha_plane_262,9094
  const uint8_t* alpha_prev_line_;  // last decoded alpha row (or NULL)alpha_prev_line_263,9172
  const uint8_t* alpha_prev_line_;  // last decoded alpha row (or NULL)VP8Decoder::alpha_prev_line_263,9172
  int alpha_dithering_;       // derived from decoding options (0=off, 100=full)alpha_dithering_264,9244
  int alpha_dithering_;       // derived from decoding options (0=off, 100=full)VP8Decoder::alpha_dithering_264,9244
int VP8SetError(VP8Decoder* const dec,VP8SetError271,9458
void VP8ResetProba(VP8Proba* const proba);VP8ResetProba275,9572
void VP8ParseProba(VP8BitReader* const br, VP8Decoder* const dec);VP8ParseProba276,9615
int VP8ParseIntraModeRow(VP8BitReader* const br, VP8Decoder* const dec);VP8ParseIntraModeRow278,9748
void VP8ParseQuant(VP8Decoder* const dec);VP8ParseQuant281,9836
int VP8InitFrame(VP8Decoder* const dec, VP8Io* const io);VP8InitFrame284,9894
VP8StatusCode VP8EnterCritical(VP8Decoder* const dec, VP8Io* const io);VP8EnterCritical289,10231
int VP8ExitCritical(VP8Decoder* const dec, VP8Io* const io);VP8ExitCritical292,10396
int VP8GetThreadMethod(const WebPDecoderOptions* const options,VP8GetThreadMethod295,10579
void VP8InitDithering(const WebPDecoderOptions* const options,VP8InitDithering299,10803
int VP8ProcessRow(VP8Decoder* const dec, VP8Io* const io);VP8ProcessRow302,10966
void VP8InitScanline(VP8Decoder* const dec);VP8InitScanline304,11099
int VP8DecodeMB(VP8Decoder* const dec, VP8BitReader* const token_br);VP8DecodeMB306,11213
const uint8_t* VP8DecompressAlphaRows(VP8Decoder* const dec,VP8DecompressAlphaRows309,11298

src/dec/alpha_dec.c,581
static ALPHDecoder* ALPHNew(void) {ALPHNew27,943
static void ALPHDelete(ALPHDecoder* const dec) {ALPHDelete33,1126
static int ALPHInit(ALPHDecoder* const dec, const uint8_t* data,ALPHInit48,1664
static int ALPHDecode(VP8Decoder* const dec, int row, int num_rows) {ALPHDecode110,3664
static int AllocateAlphaPlane(VP8Decoder* const dec, const VP8Io* const io) {AllocateAlphaPlane150,4985
void WebPDeallocateAlphaMemory(VP8Decoder* const dec) {WebPDeallocateAlphaMemory165,5478
const uint8_t* VP8DecompressAlphaRows(VP8Decoder* const dec,VP8DecompressAlphaRows177,5817

src/dec/vp8_dec.c,2619
int WebPGetDecoderVersion(void) {WebPGetDecoderVersion25,843
typedef int (*GetCoeffsFunc)(VP8BitReader* const br,GetCoeffsFunc32,1108
static volatile GetCoeffsFunc GetCoeffs = NULL;GetCoeffs35,1303
static void InitGetCoeffs(void);InitGetCoeffs37,1352
static void SetOk(VP8Decoder* const dec) {SetOk42,1482
int VP8InitIoInternal(VP8Io* const io, int version) {VP8InitIoInternal47,1586
VP8Decoder* VP8New(void) {VP8New57,1817
VP8StatusCode VP8Status(VP8Decoder* const dec) {VP8Status69,2105
const char* VP8StatusMessage(VP8Decoder* const dec) {VP8StatusMessage74,2225
void VP8Delete(VP8Decoder* const dec) {VP8Delete80,2384
int VP8SetError(VP8Decoder* const dec,VP8SetError87,2494
int VP8CheckSignature(const uint8_t* const data, size_t data_size) {VP8CheckSignature100,2875
int VP8GetInfo(const uint8_t* data, size_t data_size, size_t chunk_size,VP8GetInfo105,3041
static void ResetSegmentHeader(VP8SegmentHeader* const hdr) {ResetSegmentHeader150,4299
static int ParseSegmentHeader(VP8BitReader* br,ParseSegmentHeader160,4603
static VP8StatusCode ParsePartitions(VP8Decoder* const dec,ParsePartitions198,5941
static int ParseFilterHeader(VP8BitReader* br, VP8Decoder* const dec) {ParseFilterHeader230,7051
int VP8GetHeaders(VP8Decoder* const dec, VP8Io* const io) {VP8GetHeaders256,7829
static const uint8_t kCat3[] = { 173, 148, 140, 0 };kCat3393,11984
static const uint8_t kCat4[] = { 176, 155, 140, 135, 0 };kCat4394,12037
static const uint8_t kCat5[] = { 180, 157, 141, 134, 130, 0 };kCat5395,12095
static const uint8_t kCat6[] =kCat6396,12158
static const uint8_t* const kCat3456[] = { kCat3, kCat4, kCat5, kCat6 };kCat3456398,12253
static const uint8_t kZigzag[16] = {kZigzag399,12326
static int GetLargeValue(VP8BitReader* const br, const uint8_t* const p) {GetLargeValue404,12494
static int GetCoeffsFast(VP8BitReader* const br,GetCoeffsFast436,13307
static int GetCoeffsAlt(VP8BitReader* const br,GetCoeffsAlt466,14269
WEBP_TSAN_IGNORE_FUNCTION static void InitGetCoeffs(void) {InitGetCoeffs494,15105
static WEBP_INLINE uint32_t NzCodeBits(uint32_t nz_coeffs, int nz, int dc_nz) {NzCodeBits504,15345
static int ParseResiduals(VP8Decoder* const dec,ParseResiduals510,15519
int VP8DecodeMB(VP8Decoder* const dec, VP8BitReader* const token_br) {VP8DecodeMB604,18577
void VP8InitScanline(VP8Decoder* const dec) {VP8InitScanline631,19342
static int ParseFrame(VP8Decoder* const dec, VP8Io* io) {ParseFrame639,19546
int VP8Decode(VP8Decoder* const dec, VP8Io* const io) {VP8Decode669,20577
void VP8Clear(VP8Decoder* const dec) {VP8Clear708,21386

src/dec/alphai_dec.h,1303
#define WEBP_DEC_ALPHAI_DEC_H_WEBP_DEC_ALPHAI_DEC_H_15,571
typedef struct ALPHDecoder ALPHDecoder;ALPHDecoder26,761
struct ALPHDecoder {ALPHDecoder27,801
  int width_;width_28,822
  int width_;ALPHDecoder::width_28,822
  int height_;height_29,836
  int height_;ALPHDecoder::height_29,836
  int method_;method_30,851
  int method_;ALPHDecoder::method_30,851
  WEBP_FILTER_TYPE filter_;filter_31,866
  WEBP_FILTER_TYPE filter_;ALPHDecoder::filter_31,866
  int pre_processing_;pre_processing_32,894
  int pre_processing_;ALPHDecoder::pre_processing_32,894
  struct VP8LDecoder* vp8l_dec_;vp8l_dec_33,917
  struct VP8LDecoder* vp8l_dec_;ALPHDecoder::vp8l_dec_33,917
  VP8Io io_;io_34,950
  VP8Io io_;ALPHDecoder::io_34,950
  int use_8b_decode_;  // Although alpha channel requires only 1 byte peruse_8b_decode_35,963
  int use_8b_decode_;  // Although alpha channel requires only 1 byte perALPHDecoder::use_8b_decode_35,963
  uint8_t* output_;output_38,1183
  uint8_t* output_;ALPHDecoder::output_38,1183
  const uint8_t* prev_line_;   // last output row (or NULL)prev_line_39,1203
  const uint8_t* prev_line_;   // last output row (or NULL)ALPHDecoder::prev_line_39,1203
void WebPDeallocateAlphaMemory(VP8Decoder* const dec);WebPDeallocateAlphaMemory46,1446

src/dec/tree_dec.c,841
#define USE_GENERIC_TREE USE_GENERIC_TREE20,790
#define USE_GENERIC_TREE USE_GENERIC_TREE22,843
static const int8_t kYModesIntra4[18] = {kYModesIntra427,934
  CoeffsProba0[NUM_TYPES][NUM_BANDS][NUM_CTX][NUM_PROBAS] = {CoeffsProba045,1348
static const uint8_t kBModesProba[NUM_BMODES][NUM_BMODES][NUM_BMODES - 1] = {kBModesProba181,7752
void VP8ResetProba(VP8Proba* const proba) {VP8ResetProba284,12534
static void ParseIntraMode(VP8BitReader* const br,ParseIntraMode289,12685
int VP8ParseIntraModeRow(VP8BitReader* const br, VP8Decoder* const dec) {VP8ParseIntraModeRow356,15267
    CoeffsUpdateProba[NUM_TYPES][NUM_BANDS][NUM_CTX][NUM_PROBAS] = {CoeffsUpdateProba368,15585
static const uint8_t kBands[16 + 1] = {kBands505,22123
void VP8ParseProba(VP8BitReader* const br, VP8Decoder* const dec) {VP8ParseProba510,22249

src/dsp/rescaler_msa.c,1198
#define ROUNDER ROUNDER23,733
#define MULT_FIX(MULT_FIX24,774
#define CALC_MULT_FIX_16(CALC_MULT_FIX_1626,854
#define CALC_MULT_FIX_4(CALC_MULT_FIX_446,2163
#define CALC_MULT_FIX1_16(CALC_MULT_FIX1_1659,2792
#define CALC_MULT_FIX1_4(CALC_MULT_FIX1_477,3845
#define CALC_MULT_FIX2_16(CALC_MULT_FIX2_1686,4271
#define CALC_MULT_FIX2_4(CALC_MULT_FIX2_4101,5181
static WEBP_INLINE void ExportRowExpand_0(const uint32_t* frow, uint8_t* dst,ExportRowExpand_0116,6078
static WEBP_INLINE void ExportRowExpand_1(const uint32_t* frow, uint32_t* irow,ExportRowExpand_1174,7866
static void RescalerExportRowExpand_MIPSdspR2(WebPRescaler* const wrk) {RescalerExportRowExpand_MIPSdspR2249,10632
static WEBP_INLINE void ExportRowShrink_0(const uint32_t* frow, uint32_t* irow,ExportRowShrink_0265,11134
static WEBP_INLINE void ExportRowShrink_1(uint32_t* irow, uint8_t* dst,ExportRowShrink_1352,14328
static void RescalerExportRowShrink_MIPSdspR2(WebPRescaler* const wrk) {RescalerExportRowShrink_MIPSdspR2414,16260
extern void WebPRescalerDspInitMSA(void);WebPRescalerDspInitMSA433,16889
WEBP_TSAN_IGNORE_FUNCTION void WebPRescalerDspInitMSA(void) {WebPRescalerDspInitMSA435,16932

src/dsp/rescaler_mips_dsp_r2.c,526
#define ROUNDER ROUNDER21,711
#define MULT_FIX(MULT_FIX22,752
static void ExportRowShrink_MIPSdspR2(WebPRescaler* const wrk) {ExportRowShrink_MIPSdspR227,928
static void ExportRowExpand_MIPSdspR2(WebPRescaler* const wrk) {ExportRowExpand_MIPSdspR2165,8339
#undef MULT_FIXMULT_FIX297,15372
#undef ROUNDERROUNDER298,15388
extern void WebPRescalerDspInitMIPSdspR2(void);WebPRescalerDspInitMIPSdspR2303,15501
WEBP_TSAN_IGNORE_FUNCTION void WebPRescalerDspInitMIPSdspR2(void) {WebPRescalerDspInitMIPSdspR2305,15550

src/dsp/lossless_enc_neon.c,837
#define USE_VTBLQUSE_VTBLQ30,1034
static const uint8_t kGreenShuffle[16] = {kGreenShuffle35,1106
static WEBP_INLINE uint8x16_t DoGreenShuffle_NEON(const uint8x16_t argb,DoGreenShuffle_NEON39,1220
static const uint8_t kGreenShuffle[8] = { 1, 255, 1, 255, 5, 255, 5, 255  };kGreenShuffle46,1545
static WEBP_INLINE uint8x16_t DoGreenShuffle_NEON(const uint8x16_t argb,DoGreenShuffle_NEON48,1623
static void SubtractGreenFromBlueAndRed_NEON(uint32_t* argb_data,SubtractGreenFromBlueAndRed_NEON55,1917
static void TransformColor_NEON(const VP8LMultipliers* const m,TransformColor_NEON75,2688
#define CST(CST78,2883
#undef CSTCST91,3354
#undef USE_VTBLQUSE_VTBLQ128,4776
extern void VP8LEncDspInitNEON(void);VP8LEncDspInitNEON133,4891
WEBP_TSAN_IGNORE_FUNCTION void VP8LEncDspInitNEON(void) {VP8LEncDspInitNEON135,4930

src/dsp/dec_sse41.c,213
static void HE16_SSE41(uint8_t* dst) {     // horizontalHE16_SSE4122,694
extern void VP8DspInitSSE41(void);VP8DspInitSSE4136,1128
WEBP_TSAN_IGNORE_FUNCTION void VP8DspInitSSE41(void) {VP8DspInitSSE4138,1164

src/dsp/lossless_enc_msa.c,464
#define TRANSFORM_COLOR_8(TRANSFORM_COLOR_821,701
#define TRANSFORM_COLOR_4(TRANSFORM_COLOR_437,1834
static void TransformColor_MSA(const VP8LMultipliers* const m, uint32_t* data,TransformColor_MSA51,2639
static void SubtractGreenFromBlueAndRed_MSA(uint32_t* argb_data,SubtractGreenFromBlueAndRed_MSA97,4213
extern void VP8LEncDspInitMSA(void);VP8LEncDspInitMSA137,5432
WEBP_TSAN_IGNORE_FUNCTION void VP8LEncDspInitMSA(void) {VP8LEncDspInitMSA139,5470

src/dsp/alpha_processing_sse41.c,284
static int ExtractAlpha_SSE41(const uint8_t* argb, int argb_stride,ExtractAlpha_SSE4122,738
extern void WebPInitAlphaProcessingSSE41(void);WebPInitAlphaProcessingSSE4182,3454
WEBP_TSAN_IGNORE_FUNCTION void WebPInitAlphaProcessingSSE41(void) {WebPInitAlphaProcessingSSE4184,3503

src/dsp/filters.c,1747
# define SANITY_CHECK(SANITY_CHECK22,735
static WEBP_INLINE void PredictLine_C(const uint8_t* src, const uint8_t* pred,PredictLine_C32,1374
static WEBP_INLINE void DoHorizontalFilter_C(const uint8_t* in,DoHorizontalFilter_C45,1800
static WEBP_INLINE void DoVerticalFilter_C(const uint8_t* in,DoVerticalFilter_C82,2933
static WEBP_INLINE int GradientPredictor_C(uint8_t a, uint8_t b, uint8_t c) {GradientPredictor_C121,4093
static WEBP_INLINE void DoGradientFilter_C(const uint8_t* in,DoGradientFilter_C127,4298
#undef SANITY_CHECKSANITY_CHECK168,5548
static void HorizontalFilter_C(const uint8_t* data, int width, int height,HorizontalFilter_C173,5678
static void VerticalFilter_C(const uint8_t* data, int width, int height,VerticalFilter_C179,5930
static void GradientFilter_C(const uint8_t* data, int width, int height,GradientFilter_C184,6153
static void HorizontalUnfilter_C(const uint8_t* prev, const uint8_t* in,HorizontalUnfilter_C192,6492
static void VerticalUnfilter_C(const uint8_t* prev, const uint8_t* in,VerticalUnfilter_C203,6793
static void GradientUnfilter_C(const uint8_t* prev, const uint8_t* in,GradientUnfilter_C214,7113
WebPFilterFunc WebPFilters[WEBP_FILTER_LAST];WebPFilters233,7709
WebPUnfilterFunc WebPUnfilters[WEBP_FILTER_LAST];WebPUnfilters234,7755
extern void VP8FiltersInitMIPSdspR2(void);VP8FiltersInitMIPSdspR2236,7806
extern void VP8FiltersInitMSA(void);VP8FiltersInitMSA237,7849
extern void VP8FiltersInitNEON(void);VP8FiltersInitNEON238,7886
extern void VP8FiltersInitSSE2(void);VP8FiltersInitSSE2239,7924
static volatile VP8CPUInfo filters_last_cpuinfo_used =filters_last_cpuinfo_used241,7963
WEBP_TSAN_IGNORE_FUNCTION void VP8FiltersInit(void) {VP8FiltersInit244,8063

src/dsp/cost.c,944
const uint16_t VP8EntropyCost[256] = {VP8EntropyCost18,674
const uint16_t VP8LevelFixedCosts[MAX_LEVEL + 1] = {VP8LevelFixedCosts52,2541
const uint8_t VP8EncBands[16 + 1] = {VP8EncBands314,15506
static int GetResidualCost_C(int ctx0, const VP8Residual* const res) {GetResidualCost_C322,15711
static void SetResidualCoeffs_C(const int16_t* const coeffs,SetResidualCoeffs_C357,16815
VP8GetResidualCostFunc VP8GetResidualCost;VP8GetResidualCost374,17227
VP8SetResidualCoeffsFunc VP8SetResidualCoeffs;VP8SetResidualCoeffs375,17270
extern void VP8EncDspCostInitMIPS32(void);VP8EncDspCostInitMIPS32377,17318
extern void VP8EncDspCostInitMIPSdspR2(void);VP8EncDspCostInitMIPSdspR2378,17361
extern void VP8EncDspCostInitSSE2(void);VP8EncDspCostInitSSE2379,17407
static volatile VP8CPUInfo cost_last_cpuinfo_used =cost_last_cpuinfo_used381,17449
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspCostInit(void) {VP8EncDspCostInit384,17543

src/dsp/yuv_mips32.c,233
#define ROW_FUNC(ROW_FUNC24,829
#undef ROW_FUNCROW_FUNC85,5403
extern void WebPInitSamplersMIPS32(void);WebPInitSamplersMIPS3290,5517
WEBP_TSAN_IGNORE_FUNCTION void WebPInitSamplersMIPS32(void) {WebPInitSamplersMIPS3292,5560

src/dsp/lossless_enc_mips_dsp_r2.c,912
static void SubtractGreenFromBlueAndRed_MIPSdspR2(uint32_t* argb_data,SubtractGreenFromBlueAndRed_MIPSdspR221,729
static WEBP_INLINE uint32_t ColorTransformDelta(int8_t color_pred,ColorTransformDelta76,4113
static void TransformColor_MIPSdspR2(const VP8LMultipliers* const m,TransformColor_MIPSdspR281,4300
static WEBP_INLINE uint8_t TransformColorBlue(uint8_t green_to_blue,TransformColorBlue163,8908
static void CollectColorBlueTransforms_MIPSdspR2(const uint32_t* argb,CollectColorBlueTransforms_MIPSdspR2174,9346
static WEBP_INLINE uint8_t TransformColorRed(uint8_t green_to_red,TransformColorRed220,11578
static void CollectColorRedTransforms_MIPSdspR2(const uint32_t* argb,CollectColorRedTransforms_MIPSdspR2228,11861
extern void VP8LEncDspInitMIPSdspR2(void);VP8LEncDspInitMIPSdspR2268,13583
WEBP_TSAN_IGNORE_FUNCTION void VP8LEncDspInitMIPSdspR2(void) {VP8LEncDspInitMIPSdspR2270,13627

src/dsp/lossless_neon.c,4791
static void ConvertBGRAToRGBA_NEON(const uint32_t* src,ConvertBGRAToRGBA_NEON29,938
static void ConvertBGRAToBGR_NEON(const uint32_t* src,ConvertBGRAToBGR_NEON44,1479
static void ConvertBGRAToRGB_NEON(const uint32_t* src,ConvertBGRAToRGB_NEON56,1938
static const uint8_t kRGBAShuffle[8] = { 2, 1, 0, 3, 6, 5, 4, 7 };kRGBAShuffle72,2447
static void ConvertBGRAToRGBA_NEON(const uint32_t* src,ConvertBGRAToRGBA_NEON74,2515
static const uint8_t kBGRShuffle[3][8] = {kBGRShuffle86,2963
static void ConvertBGRAToBGR_NEON(const uint32_t* src,ConvertBGRAToBGR_NEON92,3123
static const uint8_t kRGBShuffle[3][8] = {kRGBShuffle113,4000
static void ConvertBGRAToRGB_NEON(const uint32_t* src,ConvertBGRAToRGB_NEON119,4160
#define LOAD_U32_AS_U8(LOAD_U32_AS_U8145,5172
#define LOAD_U32P_AS_U8(LOAD_U32P_AS_U8146,5237
#define LOADQ_U32_AS_U8(LOADQ_U32_AS_U8147,5301
#define LOADQ_U32P_AS_U8(LOADQ_U32P_AS_U8148,5369
#define GET_U8_AS_U32(GET_U8_AS_U32149,5436
#define GETQ_U8_AS_U32(GETQ_U8_AS_U32150,5507
#define STOREQ_U8_AS_U32P(STOREQ_U8_AS_U32P151,5581
#define ROTATE32_LEFT(ROTATE32_LEFT152,5662
static WEBP_INLINE uint8x8_t Average2_u8_NEON(uint32_t a0, uint32_t a1) {Average2_u8_NEON154,5736
static WEBP_INLINE uint32_t ClampedAddSubtractHalf_NEON(uint32_t c0,ClampedAddSubtractHalf_NEON160,5926
static WEBP_INLINE uint32_t Average2_NEON(uint32_t a0, uint32_t a1) {Average2_NEON177,6722
static WEBP_INLINE uint32_t Average3_NEON(uint32_t a0, uint32_t a1,Average3_NEON183,6912
static uint32_t Predictor5_NEON(uint32_t left, const uint32_t* const top) {Predictor5_NEON191,7206
static uint32_t Predictor6_NEON(uint32_t left, const uint32_t* const top) {Predictor6_NEON194,7330
static uint32_t Predictor7_NEON(uint32_t left, const uint32_t* const top) {Predictor7_NEON197,7447
static uint32_t Predictor13_NEON(uint32_t left, const uint32_t* const top) {Predictor13_NEON200,7563
static void PredictorAdd0_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd0_NEON207,7770
static void PredictorAdd1_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd1_NEON220,8273
#define GENERATE_PREDICTOR_1(GENERATE_PREDICTOR_1244,9232
#undef GENERATE_PREDICTOR_1GENERATE_PREDICTOR_1263,10327
#define DO_PRED5(DO_PRED5266,10401
static void PredictorAdd5_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd5_NEON274,10864
#undef DO_PRED5DO_PRED5289,11413
#define DO_PRED67(DO_PRED67291,11430
static void PredictorAdd6_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd6_NEON299,11851
static void PredictorAdd7_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd7_NEON315,12380
#undef DO_PRED67DO_PRED67329,12872
#define GENERATE_PREDICTOR_2(GENERATE_PREDICTOR_2331,12890
#undef GENERATE_PREDICTOR_2GENERATE_PREDICTOR_2350,14090
#define DO_PRED10(DO_PRED10353,14187
static void PredictorAdd10_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd10_NEON361,14650
#undef DO_PRED10DO_PRED10378,15309
#define DO_PRED11(DO_PRED11381,15351
static void PredictorAdd11_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd11_NEON392,16093
#undef DO_PRED11DO_PRED11411,16861
#define DO_PRED12(DO_PRED12414,16919
static void PredictorAdd12_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd12_NEON425,17607
#undef DO_PRED12DO_PRED12447,18563
#define DO_PRED13(DO_PRED13450,18620
static void PredictorAdd13_NEON(const uint32_t* in, const uint32_t* upper,PredictorAdd13_NEON466,19767
#undef DO_PRED13DO_PRED13481,20373
#undef LOAD_U32_AS_U8LOAD_U32_AS_U8483,20391
#undef LOAD_U32P_AS_U8LOAD_U32P_AS_U8484,20413
#undef LOADQ_U32_AS_U8LOADQ_U32_AS_U8485,20436
#undef LOADQ_U32P_AS_U8LOADQ_U32P_AS_U8486,20459
#undef GET_U8_AS_U32GET_U8_AS_U32487,20483
#undef GETQ_U8_AS_U32GETQ_U8_AS_U32488,20504
#undef STOREQ_U8_AS_U32PSTOREQ_U8_AS_U32P489,20526
#undef ROTATE32_LEFTROTATE32_LEFT490,20551
#define USE_VTBLQUSE_VTBLQ499,20913
static const uint8_t kGreenShuffle[16] = {kGreenShuffle504,20985
static WEBP_INLINE uint8x16_t DoGreenShuffle_NEON(const uint8x16_t argb,DoGreenShuffle_NEON508,21099
static const uint8_t kGreenShuffle[8] = { 1, 255, 1, 255, 5, 255, 5, 255  };kGreenShuffle515,21424
static WEBP_INLINE uint8x16_t DoGreenShuffle_NEON(const uint8x16_t argb,DoGreenShuffle_NEON517,21502
static void AddGreenToBlueAndRed_NEON(const uint32_t* src, int num_pixels,AddGreenToBlueAndRed_NEON524,21796
static void TransformColorInverse_NEON(const VP8LMultipliers* const m,TransformColorInverse_NEON544,22546
#define CST(CST548,22813
#undef CSTCST561,23284
#undef USE_VTBLQUSE_VTBLQ601,24836
extern void VP8LDspInitNEON(void);VP8LDspInitNEON606,24951
WEBP_TSAN_IGNORE_FUNCTION void VP8LDspInitNEON(void) {VP8LDspInitNEON608,24987

src/dsp/mips_macro.h,804
#define WEBP_DSP_MIPS_MACRO_H_WEBP_DSP_MIPS_MACRO_H_13,517
#define WORK_AROUND_GCCWORK_AROUND_GCC16,625
#define STR(STR19,657
#define XSTR(XSTR20,675
#define ADD_SUB_HALVES(ADD_SUB_HALVES26,880
#define LOAD_IN_X2(LOAD_IN_X234,1279
#define LOAD_WITH_OFFSET_X4(LOAD_WITH_OFFSET_X441,1641
#define MUL_SHIFT_SUM(MUL_SHIFT_SUM51,2199
#define INSERT_HALF_X2(INSERT_HALF_X277,4103
#define SRA_16(SRA_1684,4472
#define SHIFT_R_SUM_X2(SHIFT_R_SUM_X297,5269
#define PACK_2_HALVES_TO_WORD(PACK_2_HALVES_TO_WORD123,6937
#define CONVERT_2_BYTES_TO_HALF(CONVERT_2_BYTES_TO_HALF141,8031
#define STORE_SAT_SUM_X2(STORE_SAT_SUM_X2160,9196
#define OUTPUT_EARLY_CLOBBER_REGS_10(OUTPUT_EARLY_CLOBBER_REGS_10188,11379
#define OUTPUT_EARLY_CLOBBER_REGS_18(OUTPUT_EARLY_CLOBBER_REGS_18194,11730

src/dsp/yuv.h,2382
#define WEBP_DSP_YUV_H_WEBP_DSP_YUV_H_36,1613
  YUV_FIX = 16,                    // fixed-point precision for RGB->YUVYUV_FIX49,1847
  YUV_HALF = 1 << (YUV_FIX - 1),YUV_HALF50,1920
  YUV_FIX2 = 6,                   // fixed-point precision for YUV->RGBYUV_FIX252,1954
  YUV_MASK2 = (256 << YUV_FIX2) - 1YUV_MASK253,2026
static WEBP_INLINE int MultHi(int v, int coeff) {   // _mm_mulhi_epu16 emulationMultHi59,2216
static WEBP_INLINE int VP8Clip8(int v) {VP8Clip863,2327
static WEBP_INLINE int VP8YUVToR(int y, int v) {VP8YUVToR67,2443
static WEBP_INLINE int VP8YUVToG(int y, int u, int v) {VP8YUVToG71,2559
static WEBP_INLINE int VP8YUVToB(int y, int u) {VP8YUVToB75,2699
static WEBP_INLINE void VP8YuvToRgb(int y, int u, int v,VP8YuvToRgb79,2815
static WEBP_INLINE void VP8YuvToBgr(int y, int u, int v,VP8YuvToBgr86,3020
static WEBP_INLINE void VP8YuvToRgb565(int y, int u, int v,VP8YuvToRgb56593,3225
static WEBP_INLINE void VP8YuvToRgba4444(int y, int u, int v,VP8YuvToRgba4444109,3705
static WEBP_INLINE void VP8YuvToArgb(uint8_t y, uint8_t u, uint8_t v,VP8YuvToArgb128,4331
static WEBP_INLINE void VP8YuvToBgra(uint8_t y, uint8_t u, uint8_t v,VP8YuvToBgra134,4516
static WEBP_INLINE void VP8YuvToRgba(uint8_t y, uint8_t u, uint8_t v,VP8YuvToRgba140,4697
void VP8YuvToRgba32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToRgba32_SSE2152,5121
void VP8YuvToRgb32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToRgb32_SSE2154,5240
void VP8YuvToBgra32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToBgra32_SSE2156,5357
void VP8YuvToBgr32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToBgr32_SSE2158,5476
void VP8YuvToArgb32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToArgb32_SSE2160,5593
void VP8YuvToRgba444432_SSE2(const uint8_t* y, const uint8_t* u,VP8YuvToRgba444432_SSE2162,5712
void VP8YuvToRgb56532_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToRgb56532_SSE2164,5839
static WEBP_INLINE int VP8ClipUV(int uv, int rounding) {VP8ClipUV173,6165
static WEBP_INLINE int VP8RGBToY(int r, int g, int b, int rounding) {VP8RGBToY178,6347
static WEBP_INLINE int VP8RGBToU(int r, int g, int b, int rounding) {VP8RGBToU183,6550
static WEBP_INLINE int VP8RGBToV(int r, int g, int b, int rounding) {VP8RGBToV188,6707

src/dsp/filters_mips_dsp_r2.c,2182
# define SANITY_CHECK(SANITY_CHECK27,870
#define DO_PREDICT_LINE(DO_PREDICT_LINE36,1482
static WEBP_INLINE void PredictLine_MIPSdspR2(const uint8_t* src, uint8_t* dst,PredictLine_MIPSdspR2104,6843
#define DO_PREDICT_LINE_VERTICAL(DO_PREDICT_LINE_VERTICAL109,7026
#define PREDICT_LINE_ONE_PASS(PREDICT_LINE_ONE_PASS168,11658
#define FILTER_LINE_BY_LINE FILTER_LINE_BY_LINE184,12668
static WEBP_INLINE void DoHorizontalFilter_MIPSdspR2(const uint8_t* in,DoHorizontalFilter_MIPSdspR2195,13412
#undef FILTER_LINE_BY_LINEFILTER_LINE_BY_LINE221,14247
static void HorizontalFilter_MIPSdspR2(const uint8_t* data,HorizontalFilter_MIPSdspR2223,14275
#define FILTER_LINE_BY_LINE FILTER_LINE_BY_LINE233,14697
static WEBP_INLINE void DoVerticalFilter_MIPSdspR2(const uint8_t* in,DoVerticalFilter_MIPSdspR2243,15360
#undef FILTER_LINE_BY_LINEFILTER_LINE_BY_LINE272,16301
static void VerticalFilter_MIPSdspR2(const uint8_t* data, int width, int height,VerticalFilter_MIPSdspR2274,16329
static int GradientPredictor_MIPSdspR2(uint8_t a, uint8_t b, uint8_t c) {GradientPredictor_MIPSdspR2283,16704
#define FILTER_LINE_BY_LINE(FILTER_LINE_BY_LINE297,17218
static void DoGradientFilter_MIPSdspR2(const uint8_t* in,DoGradientFilter_MIPSdspR2313,18367
#undef FILTER_LINE_BY_LINEFILTER_LINE_BY_LINE337,19035
static void GradientFilter_MIPSdspR2(const uint8_t* data, int width, int height,GradientFilter_MIPSdspR2339,19063
static void HorizontalUnfilter_MIPSdspR2(const uint8_t* prev, const uint8_t* in,HorizontalUnfilter_MIPSdspR2347,19418
static void VerticalUnfilter_MIPSdspR2(const uint8_t* prev, const uint8_t* in,VerticalUnfilter_MIPSdspR2353,19667
static void GradientUnfilter_MIPSdspR2(const uint8_t* prev, const uint8_t* in,GradientUnfilter_MIPSdspR2362,19963
#undef DO_PREDICT_LINE_VERTICALDO_PREDICT_LINE_VERTICAL378,20492
#undef PREDICT_LINE_ONE_PASSPREDICT_LINE_ONE_PASS379,20524
#undef DO_PREDICT_LINEDO_PREDICT_LINE380,20553
#undef SANITY_CHECKSANITY_CHECK381,20576
extern void VP8FiltersInitMIPSdspR2(void);VP8FiltersInitMIPSdspR2386,20694
WEBP_TSAN_IGNORE_FUNCTION void VP8FiltersInitMIPSdspR2(void) {VP8FiltersInitMIPSdspR2388,20738

src/dsp/dec_clip_tables.c,949
#define USE_STATIC_TABLES USE_STATIC_TABLES18,656
static const uint8_t abs0[255 + 255 + 1] = {abs023,742
static const uint8_t sclip1[1020 + 1020 + 1] = {sclip169,3942
static const uint8_t sclip2[112 + 112 + 1] = {sclip2242,16574
static const uint8_t clip1[255 + 511 + 1] = {clip1264,18006
static uint8_t abs0[255 + 255 + 1];abs0334,22810
static int8_t sclip1[1020 + 1020 + 1];sclip1335,22846
static int8_t sclip2[112 + 112 + 1];sclip2336,22885
static uint8_t clip1[255 + 511 + 1];clip1337,22922
static volatile int tables_ok = 0;tables_ok341,23100
const int8_t* const VP8ksclip1 = (const int8_t*)&sclip1[1020];VP8ksclip1345,23168
const int8_t* const VP8ksclip2 = (const int8_t*)&sclip2[112];VP8ksclip2346,23231
const uint8_t* const VP8kclip1 = &clip1[255];VP8kclip1347,23293
const uint8_t* const VP8kabs0 = &abs0[255];VP8kabs0348,23339
WEBP_TSAN_IGNORE_FUNCTION void VP8InitClipTables(void) {VP8InitClipTables350,23384

src/dsp/yuv_sse2.c,4317
static void ConvertYUV444ToRGB_SSE2(const __m128i* const Y0,ConvertYUV444ToRGB_SSE229,1077
static WEBP_INLINE __m128i Load_HI_16_SSE2(const uint8_t* src) {Load_HI_16_SSE269,2851
static WEBP_INLINE __m128i Load_UV_HI_8_SSE2(const uint8_t* src) {Load_UV_HI_8_SSE275,3073
static void YUV444ToRGB_SSE2(const uint8_t* const y,YUV444ToRGB_SSE283,3411
static void YUV420ToRGB_SSE2(const uint8_t* const y,YUV420ToRGB_SSE294,3886
static WEBP_INLINE void PackAndStore4_SSE2(const __m128i* const R,PackAndStore4_SSE2105,4365
static WEBP_INLINE void PackAndStore4444_SSE2(const __m128i* const R,PackAndStore4444_SSE2121,5142
static WEBP_INLINE void PackAndStore565_SSE2(const __m128i* const R,PackAndStore565_SSE2143,6176
static WEBP_INLINE void PlanarTo24b_SSE2(__m128i* const in0, __m128i* const in1,PlanarTo24b_SSE2167,7318
void VP8YuvToRgba32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToRgba32_SSE2193,8646
void VP8YuvToBgra32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToBgra32_SSE2204,8997
void VP8YuvToArgb32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToArgb32_SSE2215,9348
void VP8YuvToRgba444432_SSE2(const uint8_t* y, const uint8_t* u,VP8YuvToRgba444432_SSE2226,9699
void VP8YuvToRgb56532_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToRgb56532_SSE2237,10061
void VP8YuvToRgb32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToRgb32_SSE2247,10363
void VP8YuvToBgr32_SSE2(const uint8_t* y, const uint8_t* u, const uint8_t* v,VP8YuvToBgr32_SSE2269,11168
static void YuvToRgbaRow_SSE2(const uint8_t* y,YuvToRgbaRow_SSE2294,12104
static void YuvToBgraRow_SSE2(const uint8_t* y,YuvToBgraRow_SSE2316,12682
static void YuvToArgbRow_SSE2(const uint8_t* y,YuvToArgbRow_SSE2338,13260
static void YuvToRgbRow_SSE2(const uint8_t* y,YuvToRgbRow_SSE2360,13838
static void YuvToBgrRow_SSE2(const uint8_t* y,YuvToBgrRow_SSE2397,14982
extern void WebPInitSamplersSSE2(void);WebPInitSamplersSSE2437,16223
WEBP_TSAN_IGNORE_FUNCTION void WebPInitSamplersSSE2(void) {WebPInitSamplersSSE2439,16264
#define LOAD_16(LOAD_16451,16707
#define STORE_16(STORE_16453,16803
static WEBP_INLINE void RGB24PackedToPlanarHelper_SSE2(RGB24PackedToPlanarHelper_SSE2457,16985
static WEBP_INLINE void RGB24PackedToPlanar_SSE2(RGB24PackedToPlanar_SSE2470,17554
static WEBP_INLINE void RGB32PackedToPlanar_SSE2(const uint32_t* const argb,RGB32PackedToPlanar_SSE2488,18287
#define TRANSFORM(TRANSFORM507,19086
#define MK_CST_16(MK_CST_16522,19957
static WEBP_INLINE void ConvertRGBToY_SSE2(const __m128i* const R,ConvertRGBToY_SSE2523,20035
static WEBP_INLINE void ConvertRGBToUV_SSE2(const __m128i* const R,ConvertRGBToUV_SSE2538,20763
#undef MK_CST_16MK_CST_16559,21762
#undef TRANSFORMTRANSFORM560,21779
static void ConvertRGB24ToY_SSE2(const uint8_t* rgb, uint8_t* y, int width) {ConvertRGB24ToY_SSE2562,21797
static void ConvertBGR24ToY_SSE2(const uint8_t* bgr, uint8_t* y, int width) {ConvertBGR24ToY_SSE2596,22849
static void ConvertARGBToY_SSE2(const uint32_t* argb, uint8_t* y, int width) {ConvertARGBToY_SSE2630,23900
static void HorizontalAddPack_SSE2(const __m128i* const A,HorizontalAddPack_SSE2649,24609
static void ConvertARGBToUV_SSE2(const uint32_t* argb,ConvertARGBToUV_SSE2658,24947
static WEBP_INLINE void RGBA32PackedToPlanar_16b_SSE2(RGBA32PackedToPlanar_16b_SSE2694,26283
static void ConvertRGBA32ToUV_SSE2(const uint16_t* rgb,ConvertRGBA32ToUV_SSE2715,27339
extern void WebPInitConvertARGBToYUVSSE2(void);WebPInitConvertARGBToYUVSSE2738,28156
WEBP_TSAN_IGNORE_FUNCTION void WebPInitConvertARGBToYUVSSE2(void) {WebPInitConvertARGBToYUVSSE2740,28205
#define MAX_Y MAX_Y752,28592
static uint16_t clip_y(int v) {clip_y753,28662
static uint64_t SharpYUVUpdateY_SSE2(const uint16_t* ref, const uint16_t* src,SharpYUVUpdateY_SSE2757,28755
static void SharpYUVUpdateRGB_SSE2(const int16_t* ref, const int16_t* src,SharpYUVUpdateRGB_SSE2791,30072
static void SharpYUVFilterRow_SSE2(const int16_t* A, const int16_t* B, int len,SharpYUVFilterRow_SSE2808,30713
#undef MAX_YMAX_Y856,33182
extern void WebPInitSharpYUVSSE2(void);WebPInitSharpYUVSSE2860,33278
WEBP_TSAN_IGNORE_FUNCTION void WebPInitSharpYUVSSE2(void) {WebPInitSharpYUVSSE2862,33319

src/dsp/cpu.c,1156
static WEBP_INLINE void GetCPUInfo(int cpu_info[4], int info_type) {GetCPUInfo31,947
static WEBP_INLINE void GetCPUInfo(int cpu_info[4], int info_type) {GetCPUInfo42,1347
static WEBP_INLINE void GetCPUInfo(int cpu_info[4], int info_type) {GetCPUInfo52,1679
#define GetCPUInfo(GetCPUInfo61,2043
#define GetCPUInfo GetCPUInfo63,2142
static WEBP_INLINE uint64_t xgetbv(void) {xgetbv68,2308
#define xgetbv(xgetbv80,2756
static WEBP_INLINE uint64_t xgetbv(void) {xgetbv82,2828
#define xgetbv(xgetbv94,3154
static int CheckSlowModel(int info) {CheckSlowModel100,3373
static int x86CPUInfo(CPUFeature feature) {x86CPUInfo119,4094
VP8CPUInfo VP8GetCPUInfo = x86CPUInfo;VP8GetCPUInfo170,5514
static int AndroidCPUInfo(CPUFeature feature) {AndroidCPUInfo172,5632
VP8CPUInfo VP8GetCPUInfo = AndroidCPUInfo;VP8GetCPUInfo181,5961
static int armCPUInfo(CPUFeature feature) {armCPUInfo185,6136
VP8CPUInfo VP8GetCPUInfo = armCPUInfo;VP8GetCPUInfo208,6681
static int mipsCPUInfo(CPUFeature feature) {mipsCPUInfo211,6817
VP8CPUInfo VP8GetCPUInfo = mipsCPUInfo;VP8GetCPUInfo219,6986
VP8CPUInfo VP8GetCPUInfo = NULL;VP8GetCPUInfo221,7032

src/dsp/ssim.c,1058
static const uint32_t kWeight[2 * VP8_SSIM_KERNEL + 1] = {kWeight25,806
static const uint32_t kWeightSum = 16 * 16;   // sum{kWeight}^2kWeightSum28,890
static WEBP_INLINE double SSIMCalculation(SSIMCalculation30,955
double VP8SSIMFromStats(const VP8DistoStats* const stats) {VP8SSIMFromStats55,2069
double VP8SSIMFromStatsClipped(const VP8DistoStats* const stats) {VP8SSIMFromStatsClipped59,2177
static double SSIMGetClipped_C(const uint8_t* src1, int stride1,SSIMGetClipped_C63,2290
static double SSIMGet_C(const uint8_t* src1, int stride1,SSIMGet_C93,3527
static uint32_t AccumulateSSE_C(const uint8_t* src1,AccumulateSSE_C117,4305
VP8SSIMGetFunc VP8SSIMGet;VP8SSIMGet133,4770
VP8SSIMGetClippedFunc VP8SSIMGetClipped;VP8SSIMGetClipped134,4797
VP8AccumulateSSEFunc VP8AccumulateSSE;VP8AccumulateSSE137,4878
extern void VP8SSIMDspInitSSE2(void);VP8SSIMDspInitSSE2140,4925
static volatile VP8CPUInfo ssim_last_cpuinfo_used =ssim_last_cpuinfo_used142,4964
WEBP_TSAN_IGNORE_FUNCTION void VP8SSIMDspInit(void) {VP8SSIMDspInit145,5058

src/dsp/dec_mips32.c,2040
static const int kC1 = 20091 + (1 << 16);kC121,710
static const int kC2 = 35468;kC222,752
static WEBP_INLINE int abs_mips32(int x) {abs_mips3224,783
static WEBP_INLINE void do_filter2(uint8_t* p, int step) {do_filter230,914
static WEBP_INLINE void do_filter4(uint8_t* p, int step) {do_filter440,1281
static WEBP_INLINE void do_filter6(uint8_t* p, int step) {do_filter653,1740
static WEBP_INLINE int hev(const uint8_t* p, int step, int thresh) {hev69,2495
static WEBP_INLINE int needs_filter(const uint8_t* p, int step, int t) {needs_filter74,2713
static WEBP_INLINE int needs_filter2(const uint8_t* p,needs_filter279,2925
static WEBP_INLINE void FilterLoop26(uint8_t* p,FilterLoop2692,3494
static WEBP_INLINE void FilterLoop24(uint8_t* p,FilterLoop24108,3971
static void VFilter16(uint8_t* p, int stride,VFilter16125,4471
static void HFilter16(uint8_t* p, int stride,HFilter16130,4648
static void VFilter8(uint8_t* u, uint8_t* v, int stride,VFilter8136,4872
static void HFilter8(uint8_t* u, uint8_t* v, int stride,HFilter8142,5120
static void VFilter8i(uint8_t* u, uint8_t* v, int stride,VFilter8i148,5368
static void HFilter8i(uint8_t* u, uint8_t* v, int stride,HFilter8i154,5644
static void VFilter16i(uint8_t* p, int stride,VFilter16i161,5926
static void HFilter16i(uint8_t* p, int stride,HFilter16i170,6169
static void SimpleVFilter16(uint8_t* p, int stride, int thresh) {SimpleVFilter16182,6530
static void SimpleHFilter16(uint8_t* p, int stride, int thresh) {SimpleHFilter16192,6766
static void SimpleVFilter16i(uint8_t* p, int stride, int thresh) {SimpleVFilter16i202,7010
static void SimpleHFilter16i(uint8_t* p, int stride, int thresh) {SimpleHFilter16i210,7182
static void TransformOne(const int16_t* in, uint8_t* dst) {TransformOne218,7345
static void TransformTwo(const int16_t* in, uint8_t* dst, int do_two) {TransformTwo551,27180
extern void VP8DspInitMIPS32(void);VP8DspInitMIPS32561,27433
WEBP_TSAN_IGNORE_FUNCTION void VP8DspInitMIPS32(void) {VP8DspInitMIPS32563,27470

src/dsp/lossless_enc.c,6359
const float kLog2Table[LOG_LOOKUP_IDX_MAX] = {kLog2Table28,952
const float kSLog2Table[LOG_LOOKUP_IDX_MAX] = {kSLog2Table159,6634
const VP8LPrefixCode kPrefixEncodeCode[PREFIX_LOOKUP_IDX_MAX] = {kPrefixEncodeCode226,10762
const uint8_t kPrefixEncodeExtraBitsValue[PREFIX_LOOKUP_IDX_MAX] = {kPrefixEncodeExtraBitsValue293,15568
static float FastSLog2Slow_C(uint32_t v) {FastSLog2Slow_C329,17809
static float FastLog2Slow_C(uint32_t v) {FastLog2Slow_C355,18672
static float CombinedShannonEntropy_C(const int X[256], const int Y[256]) {CombinedShannonEntropy_C384,19577
void VP8LBitEntropyInit(VP8LBitEntropy* const entropy) {VP8LBitEntropyInit405,20098
void VP8LBitsEntropyUnrefined(const uint32_t* const array, int n,VP8LBitsEntropyUnrefined413,20300
static WEBP_INLINE void GetEntropyUnrefinedHelper(GetEntropyUnrefinedHelper433,20817
static void GetEntropyUnrefined_C(const uint32_t X[], int length,GetEntropyUnrefined_C457,21568
static void GetCombinedEntropyUnrefined_C(const uint32_t X[],GetCombinedEntropyUnrefined_C478,22199
void VP8LSubtractGreenFromBlueAndRed_C(uint32_t* argb_data, int num_pixels) {VP8LSubtractGreenFromBlueAndRed_C503,23065
static WEBP_INLINE int ColorTransformDelta(int8_t color_pred, int8_t color) {ColorTransformDelta514,23472
void VP8LTransformColor_C(const VP8LMultipliers* const m, uint32_t* data,VP8LTransformColor_C518,23594
static WEBP_INLINE uint8_t TransformColorRed(uint8_t green_to_red,TransformColorRed536,24230
static WEBP_INLINE uint8_t TransformColorBlue(uint8_t green_to_blue,TransformColorBlue544,24508
void VP8LCollectColorRedTransforms_C(const uint32_t* argb, int stride,VP8LCollectColorRedTransforms_C555,24946
void VP8LCollectColorBlueTransforms_C(const uint32_t* argb, int stride,VP8LCollectColorBlueTransforms_C567,25327
static int VectorMismatch_C(const uint32_t* const array1,VectorMismatch_C582,25864
void VP8LBundleColorMap_C(const uint8_t* const row, int width, int xbits,VP8LBundleColorMap_C593,26196
static double ExtraCost_C(const uint32_t* population, int length) {ExtraCost_C615,26834
static double ExtraCostCombined_C(const uint32_t* X, const uint32_t* Y,ExtraCostCombined_C622,27022
static void HistogramAdd_C(const VP8LHistogram* const a,HistogramAdd_C635,27379
static WEBP_INLINE uint32_t Average2(uint32_t a0, uint32_t a1) {Average2671,28591
static WEBP_INLINE uint32_t Average3(uint32_t a0, uint32_t a1, uint32_t a2) {Average3675,28714
static WEBP_INLINE uint32_t Average4(uint32_t a0, uint32_t a1,Average4679,28836
static WEBP_INLINE uint32_t Clip255(uint32_t a) {Clip255684,29022
static WEBP_INLINE int AddSubtractComponentFull(int a, int b, int c) {AddSubtractComponentFull693,29211
static WEBP_INLINE uint32_t ClampedAddSubtractFull(uint32_t c0, uint32_t c1,ClampedAddSubtractFull697,29314
static WEBP_INLINE int AddSubtractComponentHalf(int a, int b) {AddSubtractComponentHalf710,30023
static WEBP_INLINE uint32_t ClampedAddSubtractHalf(uint32_t c0, uint32_t c1,ClampedAddSubtractHalf714,30125
# define LOCAL_INLINE LOCAL_INLINE727,30839
# define LOCAL_INLINE LOCAL_INLINE729,30894
static LOCAL_INLINE int Sub3(int a, int b, int c) {Sub3732,30936
#undef LOCAL_INLINELOCAL_INLINE738,31067
static WEBP_INLINE uint32_t Select(uint32_t a, uint32_t b, uint32_t c) {Select740,31088
static uint32_t Predictor2(uint32_t left, const uint32_t* const top) {Predictor2752,31590
static uint32_t Predictor3(uint32_t left, const uint32_t* const top) {Predictor3756,31694
static uint32_t Predictor4(uint32_t left, const uint32_t* const top) {Predictor4760,31798
static uint32_t Predictor5(uint32_t left, const uint32_t* const top) {Predictor5764,31903
static uint32_t Predictor6(uint32_t left, const uint32_t* const top) {Predictor6768,32047
static uint32_t Predictor7(uint32_t left, const uint32_t* const top) {Predictor7772,32184
static uint32_t Predictor8(uint32_t left, const uint32_t* const top) {Predictor8776,32320
static uint32_t Predictor9(uint32_t left, const uint32_t* const top) {Predictor9781,32473
static uint32_t Predictor10(uint32_t left, const uint32_t* const top) {Predictor10786,32625
static uint32_t Predictor11(uint32_t left, const uint32_t* const top) {Predictor11790,32779
static uint32_t Predictor12(uint32_t left, const uint32_t* const top) {Predictor12794,32923
static uint32_t Predictor13(uint32_t left, const uint32_t* const top) {Predictor13798,33083
static void PredictorSub0_C(const uint32_t* in, const uint32_t* upper,PredictorSub0_C805,33326
static void PredictorSub1_C(const uint32_t* in, const uint32_t* upper,PredictorSub1_C812,33563
VP8LCollectColorBlueTransformsFunc VP8LCollectColorBlueTransforms;VP8LCollectColorBlueTransforms838,34621
VP8LCollectColorRedTransformsFunc VP8LCollectColorRedTransforms;VP8LCollectColorRedTransforms839,34688
VP8LFastLog2SlowFunc VP8LFastLog2Slow;VP8LFastLog2Slow841,34754
VP8LFastLog2SlowFunc VP8LFastSLog2Slow;VP8LFastSLog2Slow842,34793
VP8LCostFunc VP8LExtraCost;VP8LExtraCost844,34834
VP8LCostCombinedFunc VP8LExtraCostCombined;VP8LExtraCostCombined845,34862
VP8LCombinedShannonEntropyFunc VP8LCombinedShannonEntropy;VP8LCombinedShannonEntropy846,34906
VP8LGetEntropyUnrefinedFunc VP8LGetEntropyUnrefined;VP8LGetEntropyUnrefined848,34966
VP8LGetCombinedEntropyUnrefinedFunc VP8LGetCombinedEntropyUnrefined;VP8LGetCombinedEntropyUnrefined849,35019
VP8LHistogramAddFunc VP8LHistogramAdd;VP8LHistogramAdd851,35089
VP8LVectorMismatchFunc VP8LVectorMismatch;VP8LVectorMismatch853,35129
VP8LBundleColorMapFunc VP8LBundleColorMap;VP8LBundleColorMap854,35172
VP8LPredictorAddSubFunc VP8LPredictorsSub[16];VP8LPredictorsSub856,35216
VP8LPredictorAddSubFunc VP8LPredictorsSub_C[16];VP8LPredictorsSub_C857,35263
extern void VP8LEncDspInitSSE2(void);VP8LEncDspInitSSE2859,35313
extern void VP8LEncDspInitSSE41(void);VP8LEncDspInitSSE41860,35351
extern void VP8LEncDspInitNEON(void);VP8LEncDspInitNEON861,35390
extern void VP8LEncDspInitMIPS32(void);VP8LEncDspInitMIPS32862,35428
extern void VP8LEncDspInitMIPSdspR2(void);VP8LEncDspInitMIPSdspR2863,35468
extern void VP8LEncDspInitMSA(void);VP8LEncDspInitMSA864,35511
static volatile VP8CPUInfo lossless_enc_last_cpuinfo_used =lossless_enc_last_cpuinfo_used866,35549
WEBP_TSAN_IGNORE_FUNCTION void VP8LEncDspInit(void) {VP8LEncDspInit869,35659

src/dsp/enc_mips_dsp_r2.c,4595
static const int kC1 = 20091 + (1 << 16);kC123,773
static const int kC2 = 35468;kC224,815
#define ADD_SUB_HALVES_X4(ADD_SUB_HALVES_X428,899
#define ABS_X8(ABS_X840,1718
#define MUL_HALF(MUL_HALF56,2691
#define OUTPUT_EARLY_CLOBBER_REGS_17(OUTPUT_EARLY_CLOBBER_REGS_1769,3651
#define HORIZONTAL_PASS(HORIZONTAL_PASS79,4201
#define VERTICAL_PASS(VERTICAL_PASS116,7002
static void FTransform_MIPSdspR2(const uint8_t* src, const uint8_t* ref,FTransform_MIPSdspR2144,9183
#undef VERTICAL_PASSVERTICAL_PASS171,10386
#undef HORIZONTAL_PASSHORIZONTAL_PASS172,10407
static WEBP_INLINE void ITransformOne(const uint8_t* ref, const int16_t* in,ITransformOne174,10431
static void ITransform_MIPSdspR2(const uint8_t* ref, const int16_t* in,ITransform_MIPSdspR2242,13979
static int Disto4x4_MIPSdspR2(const uint8_t* const a, const uint8_t* const b,Disto4x4_MIPSdspR2250,14212
static int Disto16x16_MIPSdspR2(const uint8_t* const a,Disto16x16_MIPSdspR2317,17875
#define FILL_PART(FILL_PART333,18333
#define FILL_8_OR_16(FILL_8_OR_16341,18831
#define VERTICAL_PRED(VERTICAL_PRED369,20664
#undef VERTICAL_PREDVERTICAL_PRED383,21452
#define HORIZONTAL_PRED(HORIZONTAL_PRED385,21474
#undef HORIZONTAL_PREDHORIZONTAL_PRED401,22430
#define CLIPPING(CLIPPING403,22454
#define CLIP_8B_TO_DST(CLIP_8B_TO_DST419,23652
#define CLIP_TO_DST(CLIP_TO_DST444,25528
#define TRUE_MOTION(TRUE_MOTION453,26108
#undef TRUE_MOTIONTRUE_MOTION478,27795
#undef CLIP_TO_DSTCLIP_TO_DST479,27814
#undef CLIP_8B_TO_DSTCLIP_8B_TO_DST480,27833
#undef CLIPPINGCLIPPING481,27855
static WEBP_INLINE void DCMode16(uint8_t* dst, const uint8_t* left,DCMode16483,27872
static WEBP_INLINE void DCMode8(uint8_t* dst, const uint8_t* left,DCMode8546,30663
static void DC4(uint8_t* dst, const uint8_t* top) {DC4591,32660
static void TM4(uint8_t* dst, const uint8_t* top) {TM4612,33577
static void VE4(uint8_t* dst, const uint8_t* top) {VE4667,36953
static void HE4(uint8_t* dst, const uint8_t* top) {HE4698,38562
static void RD4(uint8_t* dst, const uint8_t* top) {RD4734,40486
static void VR4(uint8_t* dst, const uint8_t* top) {VR4783,43333
static void LD4(uint8_t* dst, const uint8_t* top) {LD4833,46147
static void VL4(uint8_t* dst, const uint8_t* top) {VL4880,48830
static void HD4(uint8_t* dst, const uint8_t* top) {HD4929,51580
static void HU4(uint8_t* dst, const uint8_t* top) {HU4977,54266
static void IntraChromaPreds_MIPSdspR2(uint8_t* dst, const uint8_t* left,IntraChromaPreds_MIPSdspR21016,56343
static void Intra16Preds_MIPSdspR2(uint8_t* dst,Intra16Preds_MIPSdspR21036,56982
static void Intra4Preds_MIPSdspR2(uint8_t* dst, const uint8_t* top) {Intra4Preds_MIPSdspR21046,57387
#define GET_SSE_INNER(GET_SSE_INNER1064,57833
#define GET_SSE(GET_SSE1076,58663
static int SSE16x16_MIPSdspR2(const uint8_t* a, const uint8_t* b) {SSE16x16_MIPSdspR21082,58859
static int SSE16x8_MIPSdspR2(const uint8_t* a, const uint8_t* b) {SSE16x8_MIPSdspR21112,60351
static int SSE8x8_MIPSdspR2(const uint8_t* a, const uint8_t* b) {SSE8x8_MIPSdspR21134,61322
static int SSE4x4_MIPSdspR2(const uint8_t* a, const uint8_t* b) {SSE4x4_MIPSdspR21152,61996
#undef GET_SSEGET_SSE1167,62494
#undef GET_SSE_INNERGET_SSE_INNER1168,62509
#undef FILL_8_OR_16FILL_8_OR_161172,62560
#undef FILL_PARTFILL_PART1173,62580
#undef OUTPUT_EARLY_CLOBBER_REGS_17OUTPUT_EARLY_CLOBBER_REGS_171174,62597
#undef MUL_HALFMUL_HALF1175,62633
#undef ABS_X8ABS_X81176,62649
#undef ADD_SUB_HALVES_X4ADD_SUB_HALVES_X41177,62663
#define QUANTIZE_ONE(QUANTIZE_ONE1189,63046
static int QuantizeBlock_MIPSdspR2(int16_t in[16], int16_t out[16],QuantizeBlock_MIPSdspR21275,69498
static int Quantize2Blocks_MIPSdspR2(int16_t in[32], int16_t out[32],Quantize2Blocks_MIPSdspR21316,70930
#undef QUANTIZE_ONEQUANTIZE_ONE1324,71233
#define HORIZONTAL_PASS_WHT(HORIZONTAL_PASS_WHT1330,71456
#define VERTICAL_PASS_WHT(VERTICAL_PASS_WHT1349,72794
static void FTransformWHT_MIPSdspR2(const int16_t* in, int16_t* out) {FTransformWHT_MIPSdspR21363,73839
#undef VERTICAL_PASS_WHTVERTICAL_PASS_WHT1383,74665
#undef HORIZONTAL_PASS_WHTHORIZONTAL_PASS_WHT1384,74690
#define CONVERT_COEFFS_TO_BIN(CONVERT_COEFFS_TO_BIN1389,74847
static void CollectHistogram_MIPSdspR2(const uint8_t* ref, const uint8_t* pred,CollectHistogram_MIPSdspR21455,80093
#undef CONVERT_COEFFS_TO_BINCONVERT_COEFFS_TO_BIN1481,81155
extern void VP8EncDspInitMIPSdspR2(void);VP8EncDspInitMIPSdspR21486,81282
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspInitMIPSdspR2(void) {VP8EncDspInitMIPSdspR21488,81325

src/dsp/lossless_msa.c,1071
#define CONVERT16_BGRA_XXX(CONVERT16_BGRA_XXX24,800
#define CONVERT12_BGRA_XXX(CONVERT12_BGRA_XXX33,1240
#define CONVERT8_BGRA_XXX(CONVERT8_BGRA_XXX44,1802
#define CONVERT4_BGRA_XXX(CONVERT4_BGRA_XXX54,2303
#define CONVERT1_BGRA_BGR(CONVERT1_BGRA_BGR63,2694
#define CONVERT1_BGRA_RGB(CONVERT1_BGRA_RGB72,3029
#define TRANSFORM_COLOR_INVERSE_8(TRANSFORM_COLOR_INVERSE_881,3364
#define TRANSFORM_COLOR_INVERSE_4(TRANSFORM_COLOR_INVERSE_498,4337
static void ConvertBGRAToRGBA_MSA(const uint32_t* src,ConvertBGRAToRGBA_MSA112,5238
static void ConvertBGRAToBGR_MSA(const uint32_t* src,ConvertBGRAToBGR_MSA153,6386
static void ConvertBGRAToRGB_MSA(const uint32_t* src,ConvertBGRAToRGB_MSA200,8036
static void AddGreenToBlueAndRed_MSA(const uint32_t* const src, int num_pixels,AddGreenToBlueAndRed_MSA247,9681
static void TransformColorInverse_MSA(const VP8LMultipliers* const m,TransformColorInverse_MSA289,10815
extern void VP8LDspInitMSA(void);VP8LDspInitMSA341,12601
WEBP_TSAN_IGNORE_FUNCTION void VP8LDspInitMSA(void) {VP8LDspInitMSA343,12636

src/dsp/enc.c,5709
static WEBP_INLINE uint8_t clip_8b(int v) {clip_8b20,661
static WEBP_INLINE int clip_max(int v, int max) {clip_max25,784
const int VP8DspScan[16 + 4 + 4] = {VP8DspScan34,1099
void VP8SetHistogramData(const int distribution[MAX_COEFF_THRESH + 1],VP8SetHistogramData46,1554
static void CollectHistogram_C(const uint8_t* ref, const uint8_t* pred,CollectHistogram_C62,2017
static uint8_t clip1[255 + 510 + 1];    // clips [-255,510] to [0,255]clip187,2821
static volatile int tables_ok = 0;tables_ok91,3033
static WEBP_TSAN_IGNORE_FUNCTION void InitTables(void) {InitTables93,3069
#define STORE(STORE109,3408
static const int kC1 = 20091 + (1 << 16);kC1112,3502
static const int kC2 = 35468;kC2113,3544
#define MUL(MUL114,3574
static WEBP_INLINE void ITransformOne(const uint8_t* ref, const int16_t* in,ITransformOne116,3613
static void ITransform_C(const uint8_t* ref, const int16_t* in, uint8_t* dst,ITransform_C149,4501
static void FTransform_C(const uint8_t* src, const uint8_t* ref, int16_t* out) {FTransform_C157,4718
static void FTransform2_C(const uint8_t* src, const uint8_t* ref,FTransform2_C187,5964
static void FTransformWHT_C(const int16_t* in, int16_t* out) {FTransformWHT_C194,6179
#undef MULMUL225,7160
#undef STORESTORE226,7171
static WEBP_INLINE void Fill(uint8_t* dst, int value, int size) {Fill231,7288
static WEBP_INLINE void VerticalPred(uint8_t* dst,VerticalPred238,7441
static WEBP_INLINE void HorizontalPred(uint8_t* dst,HorizontalPred248,7700
static WEBP_INLINE void TrueMotion(uint8_t* dst, const uint8_t* left,TrueMotion260,7985
static WEBP_INLINE void DCMode(uint8_t* dst, const uint8_t* left,DCMode290,8915
static void IntraChromaPreds_C(uint8_t* dst, const uint8_t* left,IntraChromaPreds_C316,9729
static void Intra16Preds_C(uint8_t* dst,Intra16Preds_C336,10396
#define DST(DST347,10789
#define AVG3(AVG3348,10828
#define AVG2(AVG2349,10894
static void VE4(uint8_t* dst, const uint8_t* top) {    // verticalVE4351,10937
static void HE4(uint8_t* dst, const uint8_t* top) {    // horizontalHE4364,11256
static void DC4(uint8_t* dst, const uint8_t* top) {DC4376,11705
static void RD4(uint8_t* dst, const uint8_t* top) {RD4383,11867
static void LD4(uint8_t* dst, const uint8_t* top) {LD4402,12598
static void VR4(uint8_t* dst, const uint8_t* top) {VR4420,13300
static void VL4(uint8_t* dst, const uint8_t* top) {VL4442,13950
static void HU4(uint8_t* dst, const uint8_t* top) {HU4464,14596
static void HD4(uint8_t* dst, const uint8_t* top) {HD4479,15067
static void TM4(uint8_t* dst, const uint8_t* top) {TM4502,15719
#undef DSTDST514,16016
#undef AVG3AVG3515,16027
#undef AVG2AVG2516,16039
static void Intra4Preds_C(uint8_t* dst, const uint8_t* top) {Intra4Preds_C520,16168
static WEBP_INLINE int GetSSE(const uint8_t* a, const uint8_t* b,GetSSE537,16602
static int SSE16x16_C(const uint8_t* a, const uint8_t* b) {SSE16x16_C552,16927
static int SSE16x8_C(const uint8_t* a, const uint8_t* b) {SSE16x8_C555,17020
static int SSE8x8_C(const uint8_t* a, const uint8_t* b) {SSE8x8_C558,17111
static int SSE4x4_C(const uint8_t* a, const uint8_t* b) {SSE4x4_C561,17200
static void Mean16x4_C(const uint8_t* ref, uint32_t dc[4]) {Mean16x4_C566,17324
static int TTransform(const uint8_t* in, const uint16_t* w) {TTransform590,18008
static int Disto4x4_C(const uint8_t* const a, const uint8_t* const b,Disto4x4_C624,18903
static int Disto16x16_C(const uint8_t* const a, const uint8_t* const b,Disto16x16_C631,19131
static const uint8_t kZigzag[16] = {kZigzag648,19565
static int QuantizeBlock_C(int16_t in[16], int16_t out[16],QuantizeBlock_C653,19684
static int Quantize2Blocks_C(int16_t in[32], int16_t out[32],Quantize2Blocks_C680,20483
static WEBP_INLINE void Copy(const uint8_t* src, uint8_t* dst, int w, int h) {Copy692,20921
static void Copy4x4_C(const uint8_t* src, uint8_t* dst) {Copy4x4_C701,21101
static void Copy16x8_C(const uint8_t* src, uint8_t* dst) {Copy16x8_C705,21186
VP8CHisto VP8CollectHistogram;VP8CollectHistogram714,21495
VP8Idct VP8ITransform;VP8ITransform715,21526
VP8Fdct VP8FTransform;VP8FTransform716,21549
VP8Fdct VP8FTransform2;VP8FTransform2717,21572
VP8WHT VP8FTransformWHT;VP8FTransformWHT718,21596
VP8Intra4Preds VP8EncPredLuma4;VP8EncPredLuma4719,21621
VP8IntraPreds VP8EncPredLuma16;VP8EncPredLuma16720,21653
VP8IntraPreds VP8EncPredChroma8;VP8EncPredChroma8721,21685
VP8Metric VP8SSE16x16;VP8SSE16x16722,21718
VP8Metric VP8SSE8x8;VP8SSE8x8723,21741
VP8Metric VP8SSE16x8;VP8SSE16x8724,21762
VP8Metric VP8SSE4x4;VP8SSE4x4725,21784
VP8WMetric VP8TDisto4x4;VP8TDisto4x4726,21805
VP8WMetric VP8TDisto16x16;VP8TDisto16x16727,21830
VP8MeanMetric VP8Mean16x4;VP8Mean16x4728,21857
VP8QuantizeBlock VP8EncQuantizeBlock;VP8EncQuantizeBlock729,21884
VP8Quantize2Blocks VP8EncQuantize2Blocks;VP8EncQuantize2Blocks730,21922
VP8QuantizeBlockWHT VP8EncQuantizeBlockWHT;VP8EncQuantizeBlockWHT731,21964
VP8BlockCopy VP8Copy4x4;VP8Copy4x4732,22008
VP8BlockCopy VP8Copy16x8;VP8Copy16x8733,22033
extern void VP8EncDspInitSSE2(void);VP8EncDspInitSSE2735,22060
extern void VP8EncDspInitSSE41(void);VP8EncDspInitSSE41736,22097
extern void VP8EncDspInitAVX2(void);VP8EncDspInitAVX2737,22135
extern void VP8EncDspInitNEON(void);VP8EncDspInitNEON738,22172
extern void VP8EncDspInitMIPS32(void);VP8EncDspInitMIPS32739,22209
extern void VP8EncDspInitMIPSdspR2(void);VP8EncDspInitMIPSdspR2740,22248
extern void VP8EncDspInitMSA(void);VP8EncDspInitMSA741,22290
static volatile VP8CPUInfo enc_last_cpuinfo_used =enc_last_cpuinfo_used743,22327
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspInit(void) {VP8EncDspInit746,22419

src/dsp/dec_neon.c,8070
static WEBP_INLINE uint8x8x4_t Load4x8_NEON(const uint8_t* const src,Load4x8_NEON30,1081
static WEBP_INLINE void Load4x16_NEON(const uint8_t* const src, int stride,Load4x16_NEON46,1713
#define LOADQ_LANE_32b(LOADQ_LANE_32b63,2491
static WEBP_INLINE void Load4x16_NEON(const uint8_t* src, int stride,Load4x16_NEON68,2717
#undef LOADQ_LANE_32bLOADQ_LANE_32b109,4487
static WEBP_INLINE void Load8x16_NEON(Load8x16_NEON113,4539
static WEBP_INLINE void Load16x4_NEON(const uint8_t* const src, int stride,Load16x4_NEON122,4913
static WEBP_INLINE void Load16x8_NEON(Load16x8_NEON133,5378
static WEBP_INLINE void Load8x8x2_NEON(Load8x8x2_NEON142,5772
#define LOAD_UV_8(LOAD_UV_8161,6790
static WEBP_INLINE void Load8x8x2T_NEON(Load8x8x2T_NEON164,6896
#undef LOAD_UV_8LOAD_UV_8219,10074
static WEBP_INLINE void Store2x8_NEON(const uint8x8x2_t v,Store2x8_NEON223,10121
static WEBP_INLINE void Store2x16_NEON(const uint8x16_t p0, const uint8x16_t q0,Store2x16_NEON235,10575
static WEBP_INLINE void Store4x8_NEON(const uint8x8x4_t v,Store4x8_NEON247,11012
static WEBP_INLINE void Store4x16_NEON(const uint8x16_t p1, const uint8x16_t p0,Store4x16_NEON259,11466
static WEBP_INLINE void Store16x2_NEON(const uint8x16_t p0, const uint8x16_t q0,Store16x2_NEON274,12096
static WEBP_INLINE void Store16x4_NEON(const uint8x16_t p1, const uint8x16_t p0,Store16x4_NEON280,12304
static WEBP_INLINE void Store8x2x2_NEON(const uint8x16_t p0,Store8x2x2_NEON287,12638
static WEBP_INLINE void Store8x4x2_NEON(const uint8x16_t p1,Store8x4x2_NEON298,13121
#define STORE6_LANE(STORE6_LANE311,13725
static WEBP_INLINE void Store6x8x2_NEON(Store6x8x2_NEON317,13946
#undef STORE6_LANESTORE6_LANE343,14949
static WEBP_INLINE void Store4x8x2_NEON(const uint8x16_t p1,Store4x8x2_NEON345,14969
static WEBP_INLINE int16x8_t ConvertU8ToS16_NEON(uint8x8_t v) {ConvertU8ToS16_NEON379,16361
static WEBP_INLINE void SaturateAndStore4x4_NEON(uint8_t* const dst,SaturateAndStore4x4_NEON385,16589
static WEBP_INLINE void Add4x4_NEON(const int16x8_t row01,Add4x4_NEON399,17276
static uint8x16_t NeedsFilter_NEON(const uint8x16_t p1, const uint8x16_t p0,NeedsFilter_NEON427,18369
static int8x16_t FlipSign_NEON(const uint8x16_t v) {FlipSign_NEON440,19066
static uint8x16_t FlipSignBack_NEON(const int8x16_t v) {FlipSignBack_NEON445,19223
static int8x16_t GetBaseDelta_NEON(const int8x16_t p1, const int8x16_t p0,GetBaseDelta_NEON450,19383
static int8x16_t GetBaseDelta0_NEON(const int8x16_t p0, const int8x16_t q0) {GetBaseDelta0_NEON460,19904
static void ApplyFilter2NoFlip_NEON(const int8x16_t p0s, const int8x16_t q0s,ApplyFilter2NoFlip_NEON469,20275
static void ApplyFilter2_NEON(const int8x16_t p0s, const int8x16_t q0s,ApplyFilter2_NEON485,20933
static void DoFilter2_NEON(const uint8x16_t p1, const uint8x16_t p0,DoFilter2_NEON500,21601
static void SimpleVFilter16_NEON(uint8_t* p, int stride, int thresh) {SimpleVFilter16_NEON513,22226
static void SimpleHFilter16_NEON(uint8_t* p, int stride, int thresh) {SimpleHFilter16_NEON523,22558
#define LOAD8x4(LOAD8x4536,22925
#define STORE8x2(STORE8x2546,23653
#define QRegs QRegs556,24362
#define FLIP_SIGN_BIT2(FLIP_SIGN_BIT2559,24511
#define FLIP_SIGN_BIT4(FLIP_SIGN_BIT4563,24755
#define NEEDS_FILTER(NEEDS_FILTER567,24999
#define GET_BASE_DELTA(GET_BASE_DELTA576,25635
#define DO_SIMPLE_FILTER(DO_SIMPLE_FILTER583,26120
#define DO_FILTER2(DO_FILTER2595,26959
static void SimpleVFilter16_NEON(uint8_t* p, int stride, int thresh) {SimpleVFilter16_NEON604,27557
static void SimpleHFilter16_NEON(uint8_t* p, int stride, int thresh) {SimpleHFilter16_NEON625,28297
#undef LOAD8x4LOAD8x4651,29270
#undef STORE8x2STORE8x2652,29285
static void SimpleVFilter16i_NEON(uint8_t* p, int stride, int thresh) {SimpleVFilter16i_NEON656,29336
static void SimpleHFilter16i_NEON(uint8_t* p, int stride, int thresh) {SimpleHFilter16i_NEON664,29524
static uint8x16_t NeedsHev_NEON(const uint8x16_t p1, const uint8x16_t p0,NeedsHev_NEON675,29831
static uint8x16_t NeedsFilter2_NEON(const uint8x16_t p3, const uint8x16_t p2,NeedsFilter2_NEON686,30354
static void ApplyFilter4_NEON(ApplyFilter4_NEON711,31650
static void DoFilter4_NEON(DoFilter4_NEON730,32515
static void ApplyFilter6_NEON(ApplyFilter6_NEON764,33861
static void DoFilter6_NEON(DoFilter6_NEON801,35901
static void VFilter16_NEON(uint8_t* p, int stride,VFilter16_NEON837,37407
static void HFilter16_NEON(uint8_t* p, int stride,HFilter16_NEON854,38191
static void VFilter16i_NEON(uint8_t* p, int stride,VFilter16i_NEON872,38972
static void HFilter16i_NEON(uint8_t* p, int stride,HFilter16i_NEON896,39876
static void VFilter8_NEON(uint8_t* u, uint8_t* v, int stride,VFilter8_NEON919,40652
static void VFilter8i_NEON(uint8_t* u, uint8_t* v, int stride,VFilter8i_NEON935,41500
static void HFilter8_NEON(uint8_t* u, uint8_t* v, int stride,HFilter8_NEON952,42212
static void HFilter8i_NEON(uint8_t* u, uint8_t* v, int stride,HFilter8i_NEON967,42914
static const int16_t kC1 = 20091;kC11003,44652
static const int16_t kC2 = 17734;  // half of kC2, actually. See comment above.kC21004,44686
static WEBP_INLINE void Transpose8x2_NEON(const int16x8_t in0,Transpose8x2_NEON1007,44800
static WEBP_INLINE void TransformPass_NEON(int16x8x2_t* const rows) {TransformPass_NEON1017,45317
static void TransformOne_NEON(const int16_t* in, uint8_t* dst) {TransformOne_NEON1043,46580
static void TransformOne_NEON(const int16_t* in, uint8_t* dst) {TransformOne_NEON1053,46839
static void TransformTwo_NEON(const int16_t* in, uint8_t* dst, int do_two) {TransformTwo_NEON1186,51420
static void TransformDC_NEON(const int16_t* in, uint8_t* dst) {TransformDC_NEON1193,51591
#define STORE_WHT(STORE_WHT1200,51811
static void TransformWHT_NEON(const int16_t* in, int16_t* out) {TransformWHT_NEON1207,52114
#undef STORE_WHTSTORE_WHT1254,53797
#define MUL(MUL1258,53897
static void TransformAC3_NEON(const int16_t* in, uint8_t* dst) {TransformAC3_NEON1259,53935
#undef MULMUL1277,54805
static void DC4_NEON(uint8_t* dst) {    // DCDC4_NEON1282,54906
static WEBP_INLINE void TrueMotion_NEON(uint8_t* dst, int size) {TrueMotion_NEON1303,55818
static void TM4_NEON(uint8_t* dst) { TrueMotion_NEON(dst, 4); }TM4_NEON1338,57498
static void VE4_NEON(uint8_t* dst) {    // verticalVE4_NEON1340,57563
static void RD4_NEON(uint8_t* dst) {   // Down-rightRD4_NEON1356,58239
static void LD4_NEON(uint8_t* dst) {    // Down-leftLD4_NEON1384,59721
static void VE8uv_NEON(uint8_t* dst) {    // verticalVE8uv_NEON1406,60799
static void HE8uv_NEON(uint8_t* dst) {    // horizontalHE8uv_NEON1414,60974
static WEBP_INLINE void DC8_NEON(uint8_t* dst, int do_top, int do_left) {DC8_NEON1423,61163
static void DC8uv_NEON(uint8_t* dst) { DC8_NEON(dst, 1, 1); }DC8uv_NEON1474,62873
static void DC8uvNoTop_NEON(uint8_t* dst) { DC8_NEON(dst, 0, 1); }DC8uvNoTop_NEON1475,62935
static void DC8uvNoLeft_NEON(uint8_t* dst) { DC8_NEON(dst, 1, 0); }DC8uvNoLeft_NEON1476,63002
static void DC8uvNoTopLeft_NEON(uint8_t* dst) { DC8_NEON(dst, 0, 0); }DC8uvNoTopLeft_NEON1477,63070
static void TM8uv_NEON(uint8_t* dst) { TrueMotion_NEON(dst, 8); }TM8uv_NEON1479,63142
static void VE16_NEON(uint8_t* dst) {     // verticalVE16_NEON1484,63300
static void HE16_NEON(uint8_t* dst) {     // horizontalHE16_NEON1492,63479
static WEBP_INLINE void DC16_NEON(uint8_t* dst, int do_top, int do_left) {DC16_NEON1501,63672
static void DC16TopLeft_NEON(uint8_t* dst) { DC16_NEON(dst, 1, 1); }DC16TopLeft_NEON1558,65643
static void DC16NoTop_NEON(uint8_t* dst) { DC16_NEON(dst, 0, 1); }DC16NoTop_NEON1559,65712
static void DC16NoLeft_NEON(uint8_t* dst) { DC16_NEON(dst, 1, 0); }DC16NoLeft_NEON1560,65779
static void DC16NoTopLeft_NEON(uint8_t* dst) { DC16_NEON(dst, 0, 0); }DC16NoTopLeft_NEON1561,65847
static void TM16_NEON(uint8_t* dst) {TM16_NEON1563,65919
extern void VP8DspInitNEON(void);VP8DspInitNEON1600,67689
WEBP_TSAN_IGNORE_FUNCTION void VP8DspInitNEON(void) {VP8DspInitNEON1602,67724

src/dsp/upsampling_neon.c,1061
#define UPSAMPLE_16PIXELS(UPSAMPLE_16PIXELS31,984
static void Upsample16Pixels_NEON(const uint8_t *r1, const uint8_t *r2,Upsample16Pixels_NEON61,3070
#define UPSAMPLE_LAST_BLOCK(UPSAMPLE_LAST_BLOCK66,3229
static const int16_t kCoeffs1[4] = { 19077, 26149, 6419, 13320 };kCoeffs180,3990
#define v255 v25582,4057
#define STORE_Rgb(STORE_Rgb84,4086
#define STORE_Bgr(STORE_Bgr90,4395
#define STORE_Rgba(STORE_Rgba96,4704
#define STORE_Bgra(STORE_Bgra102,5013
#define STORE_Argb(STORE_Argb108,5322
#define ZIP_U8(ZIP_U8115,5665
#define ZIP_U8(ZIP_U8117,5714
#define STORE_Rgba4444(STORE_Rgba4444120,5765
#define STORE_Rgb565(STORE_Rgb565127,6148
#define CONVERT8(CONVERT8135,6605
#define CONVERT1(CONVERT1165,8690
#define CONVERT2RGB_8(CONVERT2RGB_8176,9359
#define CONVERT2RGB_1(CONVERT2RGB_1184,9806
#define NEON_UPSAMPLE_FUNC(NEON_UPSAMPLE_FUNC192,10253
extern void WebPInitUpsamplersNEON(void);WebPInitUpsamplersNEON261,14690
WEBP_TSAN_IGNORE_FUNCTION void WebPInitUpsamplersNEON(void) {WebPInitUpsamplersNEON263,14733

src/dsp/lossless_sse2.c,3965
static WEBP_INLINE uint32_t ClampedAddSubtractFull_SSE2(uint32_t c0,ClampedAddSubtractFull_SSE227,863
static WEBP_INLINE uint32_t ClampedAddSubtractHalf_SSE2(uint32_t c0,ClampedAddSubtractHalf_SSE241,1525
static WEBP_INLINE uint32_t Select_SSE2(uint32_t a, uint32_t b, uint32_t c) {Select_SSE260,2417
static WEBP_INLINE void Average2_m128i(const __m128i* const a0,Average2_m128i83,3291
static WEBP_INLINE void Average2_uint32_SSE2(const uint32_t a0,Average2_uint32_SSE293,3728
static WEBP_INLINE __m128i Average2_uint32_16_SSE2(uint32_t a0, uint32_t a1) {Average2_uint32_16_SSE2105,4255
static WEBP_INLINE uint32_t Average2_SSE2(uint32_t a0, uint32_t a1) {Average2_SSE2113,4597
static WEBP_INLINE uint32_t Average3_SSE2(uint32_t a0, uint32_t a1,Average3_SSE2119,4765
static WEBP_INLINE uint32_t Average4_SSE2(uint32_t a0, uint32_t a1,Average4_SSE2131,5273
static uint32_t Predictor5_SSE2(uint32_t left, const uint32_t* const top) {Predictor5_SSE2142,5739
static uint32_t Predictor6_SSE2(uint32_t left, const uint32_t* const top) {Predictor6_SSE2146,5893
static uint32_t Predictor7_SSE2(uint32_t left, const uint32_t* const top) {Predictor7_SSE2150,6040
static uint32_t Predictor8_SSE2(uint32_t left, const uint32_t* const top) {Predictor8_SSE2154,6186
static uint32_t Predictor9_SSE2(uint32_t left, const uint32_t* const top) {Predictor9_SSE2159,6349
static uint32_t Predictor10_SSE2(uint32_t left, const uint32_t* const top) {Predictor10_SSE2164,6511
static uint32_t Predictor11_SSE2(uint32_t left, const uint32_t* const top) {Predictor11_SSE2168,6675
static uint32_t Predictor12_SSE2(uint32_t left, const uint32_t* const top) {Predictor12_SSE2172,6829
static uint32_t Predictor13_SSE2(uint32_t left, const uint32_t* const top) {Predictor13_SSE2176,6999
static void PredictorAdd0_SSE2(const uint32_t* in, const uint32_t* upper,PredictorAdd0_SSE2184,7236
static void PredictorAdd1_SSE2(const uint32_t* in, const uint32_t* upper,PredictorAdd1_SSE2199,7770
#define GENERATE_PREDICTOR_1(GENERATE_PREDICTOR_1226,8841
#undef GENERATE_PREDICTOR_1GENERATE_PREDICTOR_1247,10065
#define GENERATE_PREDICTOR_2(GENERATE_PREDICTOR_2255,10376
#undef GENERATE_PREDICTOR_2GENERATE_PREDICTOR_2276,11792
#define DO_PRED10(DO_PRED10279,11889
#define DO_PRED10_SHIFT DO_PRED10_SHIFT287,12166
static void PredictorAdd10_SSE2(const uint32_t* in, const uint32_t* upper,PredictorAdd10_SSE2294,12499
#undef DO_PRED10DO_PRED10317,13297
#undef DO_PRED10_SHIFTDO_PRED10_SHIFT318,13314
#define DO_PRED11(DO_PRED11321,13362
#define DO_PRED11_SHIFT DO_PRED11_SHIFT333,14105
static void PredictorAdd11_SSE2(const uint32_t* in, const uint32_t* upper,PredictorAdd11_SSE2341,14490
#undef DO_PRED11DO_PRED11374,15737
#undef DO_PRED11_SHIFTDO_PRED11_SHIFT375,15754
#define DO_PRED12(DO_PRED12378,15818
#define DO_PRED12_SHIFT(DO_PRED12_SHIFT386,16149
static void PredictorAdd12_SSE2(const uint32_t* in, const uint32_t* upper,PredictorAdd12_SSE2392,16410
#undef DO_PRED12DO_PRED12421,17611
#undef DO_PRED12_SHIFTDO_PRED12_SHIFT422,17628
static void AddGreenToBlueAndRed_SSE2(const uint32_t* const src, int num_pixels,AddGreenToBlueAndRed_SSE2431,17922
static void TransformColorInverse_SSE2(const VP8LMultipliers* const m,TransformColorInverse_SSE2451,18735
#define CST(CST455,19002
#undef CSTCST464,19439
static void ConvertBGRAToRGB_SSE2(const uint32_t* src, int num_pixels,ConvertBGRAToRGB_SSE2491,20726
static void ConvertBGRAToRGBA_SSE2(const uint32_t* src,ConvertBGRAToRGBA_SSE2527,21972
static void ConvertBGRAToRGBA4444_SSE2(const uint32_t* src,ConvertBGRAToRGBA4444_SSE2555,23236
static void ConvertBGRAToRGB565_SSE2(const uint32_t* src,ConvertBGRAToRGB565_SSE2591,25128
static void ConvertBGRAToBGR_SSE2(const uint32_t* src,ConvertBGRAToBGR_SSE2632,27299
extern void VP8LDspInitSSE2(void);VP8LDspInitSSE2668,29054
WEBP_TSAN_IGNORE_FUNCTION void VP8LDspInitSSE2(void) {VP8LDspInitSSE2670,29090

src/dsp/filters_msa.c,731
static WEBP_INLINE void PredictLineInverse0(const uint8_t* src,PredictLineInverse022,659
#define SANITY_CHECK(SANITY_CHECK59,1599
static void HorizontalFilter_MSA(const uint8_t* data, int width, int height,HorizontalFilter_MSA69,1896
static WEBP_INLINE void PredictLineGradient(const uint8_t* pinput,PredictLineGradient98,2755
static void GradientFilter_MSA(const uint8_t* data, int width, int height,GradientFilter_MSA132,3887
static void VerticalFilter_MSA(const uint8_t* data, int width, int height,VerticalFilter_MSA160,4668
#undef SANITY_CHECKSANITY_CHECK185,5317
extern void VP8FiltersInitMSA(void);VP8FiltersInitMSA190,5435
WEBP_TSAN_IGNORE_FUNCTION void VP8FiltersInitMSA(void) {VP8FiltersInitMSA192,5473

src/dsp/lossless_enc_mips32.c,1654
static float FastSLog2Slow_MIPS32(uint32_t v) {FastSLog2Slow_MIPS3226,828
static float FastLog2Slow_MIPS32(uint32_t v) {FastLog2Slow_MIPS3262,2146
static double ExtraCost_MIPS32(const uint32_t* const population, int length) {ExtraCost_MIPS32107,3496
static double ExtraCostCombined_MIPS32(const uint32_t* const X,ExtraCostCombined_MIPS32152,5046
#define HUFFMAN_COST_PASS HUFFMAN_COST_PASS189,6576
static WEBP_INLINE void GetEntropyUnrefinedHelper(GetEntropyUnrefinedHelper217,8116
static void GetEntropyUnrefined_MIPS32(const uint32_t X[], int length,GetEntropyUnrefined_MIPS32244,8929
static void GetCombinedEntropyUnrefined_MIPS32(const uint32_t X[],GetCombinedEntropyUnrefined_MIPS32265,9575
#define ASM_START ASM_START288,10360
#define ADD_TO_OUT(ADD_TO_OUT301,10897
#define ASM_END_COMMON_0 ASM_END_COMMON_0326,12290
#define ASM_END_COMMON_1 ASM_END_COMMON_1333,12618
#define ASM_END_0 ASM_END_0338,12798
#define ASM_END_1 ASM_END_1343,12994
#define ADD_VECTOR(ADD_VECTOR347,13132
#define ADD_VECTOR_EQ(ADD_VECTOR_EQ363,13957
static void HistogramAdd_MIPS32(const VP8LHistogram* const a,HistogramAdd_MIPS32378,14724
#undef ADD_VECTOR_EQADD_VECTOR_EQ404,16035
#undef ADD_VECTORADD_VECTOR405,16056
#undef ASM_END_1ASM_END_1406,16074
#undef ASM_END_0ASM_END_0407,16091
#undef ASM_END_COMMON_1ASM_END_COMMON_1408,16108
#undef ASM_END_COMMON_0ASM_END_COMMON_0409,16132
#undef ADD_TO_OUTADD_TO_OUT410,16156
#undef ASM_STARTASM_START411,16174
extern void VP8LEncDspInitMIPS32(void);VP8LEncDspInitMIPS32416,16289
WEBP_TSAN_IGNORE_FUNCTION void VP8LEncDspInitMIPS32(void) {VP8LEncDspInitMIPS32418,16330

src/dsp/dec_msa.c,3635
#define IDCT_1D_W(IDCT_1D_W24,741
#define MULT1(MULT140,1748
#define MULT2(MULT241,1795
static void TransformOne(const int16_t* in, uint8_t* dst) {TransformOne43,1835
static void TransformTwo(const int16_t* in, uint8_t* dst, int do_two) {TransformTwo70,2972
static void TransformWHT(const int16_t* in, int16_t* out) {TransformWHT77,3128
static void TransformDC(const int16_t* in, uint8_t* dst) {TransformDC119,4614
static void TransformAC3(const int16_t* in, uint8_t* dst) {TransformAC3125,4803
#define FLIP_SIGN2(FLIP_SIGN2159,6094
#define FLIP_SIGN4(FLIP_SIGN4164,6235
#define FILT_VAL(FILT_VAL169,6442
#define FILT2(FILT2178,6798
#define LPF_FILTER4_4W(LPF_FILTER4_4W190,7291
#define LPF_MBFILTER(LPF_MBFILTER217,8754
#define LPF_MASK_HEV(LPF_MASK_HEV259,11327
#define ST6x1_UB(ST6x1_UB293,13484
#define ST6x4_UB(ST6x4_UB300,13827
#define LPF_SIMPLE_FILT(LPF_SIMPLE_FILT311,14542
#define LPF_SIMPLE_MASK(LPF_SIMPLE_MASK329,15691
static void VFilter16(uint8_t* src, int stride,VFilter16340,16289
static void HFilter16(uint8_t* src, int stride,HFilter16359,17004
static void VFilterHorEdge16i(uint8_t* src, int stride,VFilterHorEdge16i420,19208
static void VFilter16i(uint8_t* src_y, int stride,VFilter16i435,19824
static void HFilterVertEdge16i(uint8_t* src, int stride,HFilterVertEdge16i442,20161
static void HFilter16i(uint8_t* src_y, int stride,HFilter16i472,21469
static void VFilter8(uint8_t* src_u, uint8_t* src_v, int stride,VFilter8480,21830
static void HFilter8(uint8_t* src_u, uint8_t* src_v, int stride,HFilter8525,23713
static void VFilter8i(uint8_t* src_u, uint8_t* src_v, int stride,VFilter8i561,25322
static void HFilter8i(uint8_t* src_u, uint8_t* src_v, int stride,HFilter8i592,26725
static void SimpleVFilter16(uint8_t* src, int stride, int b_limit_in) {SimpleVFilter16625,28187
static void SimpleHFilter16(uint8_t* src, int stride, int b_limit_in) {SimpleHFilter16635,28533
static void SimpleVFilter16i(uint8_t* src_y, int stride, int b_limit_in) {SimpleVFilter16i662,29637
static void SimpleHFilter16i(uint8_t* src_y, int stride, int b_limit_in) {SimpleHFilter16i668,29895
static void DC4(uint8_t* dst) {   // DCDC4680,30318
static void TM4(uint8_t* dst) {TM4689,30549
static void VE4(uint8_t* dst) {    // verticalVE4707,31195
static void RD4(uint8_t* dst) {   // Down-rightRD4724,31658
static void LD4(uint8_t* dst) {   // Down-LeftLD4752,32568
static void DC16(uint8_t* dst) {   // DCDC16778,33274
static void TM16(uint8_t* dst) {TM16794,33708
static void VE16(uint8_t* dst) {   // verticalVE16820,34612
static void HE16(uint8_t* dst) {   // horizontalHE16826,34847
static void DC16NoTop(uint8_t* dst) {   // DC with top samples not availableDC16NoTop838,35246
static void DC16NoLeft(uint8_t* dst) {   // DC with left samples not availableDC16NoLeft851,35598
static void DC16NoTopLeft(uint8_t* dst) {   // DC with nothingDC16NoTopLeft863,35998
#define STORE8x8(STORE8x8871,36252
static void DC8uv(uint8_t* dst) {   // DCDC8uv876,36415
static void TM8uv(uint8_t* dst) {TM8uv895,36921
static void VE8uv(uint8_t* dst) {   // verticalVE8uv918,37680
static void HE8uv(uint8_t* dst) {   // horizontalHE8uv924,37847
static void DC8uvNoLeft(uint8_t* dst) {   // DC with no left samplesDC8uvNoLeft940,38475
static void DC8uvNoTop(uint8_t* dst) {   // DC with no top samplesDC8uvNoTop952,38963
static void DC8uvNoTopLeft(uint8_t* dst) {   // DC with nothingDC8uvNoTopLeft966,39260
extern void VP8DspInitMSA(void);VP8DspInitMSA974,39492
WEBP_TSAN_IGNORE_FUNCTION void VP8DspInitMSA(void) {VP8DspInitMSA976,39526

src/dsp/alpha_processing_mips_dsp_r2.c,503
static int DispatchAlpha_MIPSdspR2(const uint8_t* alpha, int alpha_stride,DispatchAlpha_MIPSdspR219,690
static void MultARGBRow_MIPSdspR2(uint32_t* const ptr, int width,MultARGBRow_MIPSdspR282,3192
static void PackRGB_MIPSdspR2(const uint8_t* r, const uint8_t* g,PackRGB_MIPSdspR2128,5516
extern void WebPInitAlphaProcessingMIPSdspR2(void);WebPInitAlphaProcessingMIPSdspR2170,7606
WEBP_TSAN_IGNORE_FUNCTION void WebPInitAlphaProcessingMIPSdspR2(void) {WebPInitAlphaProcessingMIPSdspR2172,7659

src/dsp/lossless_enc_sse2.c,2599
#define CST_5b(CST_5b24,819
static void SubtractGreenFromBlueAndRed_SSE2(uint32_t* argb_data,SubtractGreenFromBlueAndRed_SSE229,988
static void TransformColor_SSE2(const VP8LMultipliers* const m,TransformColor_SSE249,1804
#define SPAN SPAN83,3622
static void CollectColorBlueTransforms_SSE2(const uint32_t* argb, int stride,CollectColorBlueTransforms_SSE284,3637
static void CollectColorRedTransforms_SSE2(const uint32_t* argb, int stride,CollectColorRedTransforms_SSE2135,6170
#undef SPANSPAN176,8061
#define LINE_SIZE LINE_SIZE180,8156
static void AddVector_SSE2(const uint32_t* a, const uint32_t* b, uint32_t* out,AddVector_SSE2181,8191
static void AddVectorEq_SSE2(const uint32_t* a, uint32_t* out, int size) {AddVectorEq_SSE2207,9308
#undef LINE_SIZELINE_SIZE231,10388
static void HistogramAdd_SSE2(const VP8LHistogram* const a,HistogramAdd_SSE2235,10566
#define ANALYZE_X_OR_Y(ANALYZE_X_OR_Y265,11887
#define ANALYZE_XY(ANALYZE_XY272,12235
static float CombinedShannonEntropy_SSE2(const int X[256], const int Y[256]) {CombinedShannonEntropy_SSE2280,12496
#undef ANALYZE_X_OR_YANALYZE_X_OR_Y331,14023
#undef ANALYZE_XYANALYZE_XY332,14045
static int VectorMismatch_SSE2(const uint32_t* const array1,VectorMismatch_SSE2336,14146
static void BundleColorMap_SSE2(const uint8_t* const row, int width, int xbits,BundleColorMap_SSE2387,15978
static WEBP_INLINE void Average2_m128i(const __m128i* const a0,Average2_m128i465,19226
static void PredictorSub0_SSE2(const uint32_t* in, const uint32_t* upper,PredictorSub0_SSE2476,19690
#define GENERATE_PREDICTOR_1(GENERATE_PREDICTOR_1490,20203
#undef GENERATE_PREDICTOR_1GENERATE_PREDICTOR_1509,21480
static void PredictorSub5_SSE2(const uint32_t* in, const uint32_t* upper,PredictorSub5_SSE2512,21545
#define GENERATE_PREDICTOR_2(GENERATE_PREDICTOR_2531,22295
#undef GENERATE_PREDICTOR_2GENERATE_PREDICTOR_2553,23889
static void PredictorSub10_SSE2(const uint32_t* in, const uint32_t* upper,PredictorSub10_SSE2556,23962
static void GetSumAbsDiff32_SSE2(const __m128i* const A, const __m128i* const B,GetSumAbsDiff32_SSE2578,24867
static void PredictorSub11_SSE2(const uint32_t* in, const uint32_t* upper,PredictorSub11_SSE2591,25504
static void PredictorSub12_SSE2(const uint32_t* in, const uint32_t* upper,PredictorSub12_SSE2617,26595
static void PredictorSub13_SSE2(const uint32_t* in, const uint32_t* upper,PredictorSub13_SSE2646,27957
extern void VP8LEncDspInitSSE2(void);VP8LEncDspInitSSE2678,29375
WEBP_TSAN_IGNORE_FUNCTION void VP8LEncDspInitSSE2(void) {VP8LEncDspInitSSE2680,29414

src/dsp/lossless_enc_sse41.c,262
static void SubtractGreenFromBlueAndRed_SSE41(uint32_t* argb_data,SubtractGreenFromBlueAndRed_SSE4124,800
extern void VP8LEncDspInitSSE41(void);VP8LEncDspInitSSE4144,1611
WEBP_TSAN_IGNORE_FUNCTION void VP8LEncDspInitSSE41(void) {VP8LEncDspInitSSE4146,1651

src/dsp/cost_sse2.c,361
static void SetResidualCoeffs_SSE2(const int16_t* const coeffs,SetResidualCoeffs_SSE225,795
static int GetResidualCost_SSE2(int ctx0, const VP8Residual* const res) {GetResidualCost_SSE245,1818
extern void VP8EncDspCostInitSSE2(void);VP8EncDspCostInitSSE2108,4175
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspCostInitSSE2(void) {VP8EncDspCostInitSSE2110,4217

src/dsp/enc_sse41.c,1033
static void CollectHistogram_SSE41(const uint8_t* ref, const uint8_t* pred,CollectHistogram_SSE4126,871
static int TTransform_SSE41(const uint8_t* inA, const uint8_t* inB,TTransform_SSE4173,2574
static int Disto4x4_SSE41(const uint8_t* const a, const uint8_t* const b,Disto4x4_SSE41171,6563
static int Disto16x16_SSE41(const uint8_t* const a, const uint8_t* const b,Disto16x16_SSE41177,6772
#define PSHUFB_CST(PSHUFB_CST194,7240
static WEBP_INLINE int DoQuantizeBlock_SSE41(int16_t in[16], int16_t out[16],DoQuantizeBlock_SSE41200,7553
#undef PSHUFB_CSTPSHUFB_CST301,11850
static int QuantizeBlock_SSE41(int16_t in[16], int16_t out[16],QuantizeBlock_SSE41303,11869
static int QuantizeBlockWHT_SSE41(int16_t in[16], int16_t out[16],QuantizeBlockWHT_SSE41308,12062
static int Quantize2Blocks_SSE41(int16_t in[32], int16_t out[32],Quantize2Blocks_SSE41313,12248
extern void VP8EncDspInitSSE41(void);VP8EncDspInitSSE41325,12707
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspInitSSE41(void) {VP8EncDspInitSSE41326,12745

src/dsp/lossless.c,5510
#define MAX_DIFF_COST MAX_DIFF_COST26,909
static WEBP_INLINE uint32_t Average2(uint32_t a0, uint32_t a1) {Average231,1043
static WEBP_INLINE uint32_t Average3(uint32_t a0, uint32_t a1, uint32_t a2) {Average335,1166
static WEBP_INLINE uint32_t Average4(uint32_t a0, uint32_t a1,Average439,1288
static WEBP_INLINE uint32_t Clip255(uint32_t a) {Clip25544,1474
static WEBP_INLINE int AddSubtractComponentFull(int a, int b, int c) {AddSubtractComponentFull53,1663
static WEBP_INLINE uint32_t ClampedAddSubtractFull(uint32_t c0, uint32_t c1,ClampedAddSubtractFull57,1766
static WEBP_INLINE int AddSubtractComponentHalf(int a, int b) {AddSubtractComponentHalf70,2475
static WEBP_INLINE uint32_t ClampedAddSubtractHalf(uint32_t c0, uint32_t c1,ClampedAddSubtractHalf74,2577
# define LOCAL_INLINE LOCAL_INLINE87,3259
# define LOCAL_INLINE LOCAL_INLINE89,3314
static LOCAL_INLINE int Sub3(int a, int b, int c) {Sub392,3356
#undef LOCAL_INLINELOCAL_INLINE98,3487
static WEBP_INLINE uint32_t Select(uint32_t a, uint32_t b, uint32_t c) {Select100,3508
static uint32_t Predictor0_C(uint32_t left, const uint32_t* const top) {Predictor0_C112,4010
static uint32_t Predictor1_C(uint32_t left, const uint32_t* const top) {Predictor1_C117,4133
static uint32_t Predictor2_C(uint32_t left, const uint32_t* const top) {Predictor2_C121,4236
static uint32_t Predictor3_C(uint32_t left, const uint32_t* const top) {Predictor3_C125,4342
static uint32_t Predictor4_C(uint32_t left, const uint32_t* const top) {Predictor4_C129,4448
static uint32_t Predictor5_C(uint32_t left, const uint32_t* const top) {Predictor5_C133,4555
static uint32_t Predictor6_C(uint32_t left, const uint32_t* const top) {Predictor6_C137,4701
static uint32_t Predictor7_C(uint32_t left, const uint32_t* const top) {Predictor7_C141,4840
static uint32_t Predictor8_C(uint32_t left, const uint32_t* const top) {Predictor8_C145,4978
static uint32_t Predictor9_C(uint32_t left, const uint32_t* const top) {Predictor9_C150,5133
static uint32_t Predictor10_C(uint32_t left, const uint32_t* const top) {Predictor10_C155,5287
static uint32_t Predictor11_C(uint32_t left, const uint32_t* const top) {Predictor11_C159,5443
static uint32_t Predictor12_C(uint32_t left, const uint32_t* const top) {Predictor12_C163,5589
static uint32_t Predictor13_C(uint32_t left, const uint32_t* const top) {Predictor13_C167,5751
static void PredictorAdd1_C(const uint32_t* in, const uint32_t* upper,PredictorAdd1_C173,5968
static void PredictorInverseTransform_C(const VP8LTransform* const transform,PredictorInverseTransform_C198,7004
void VP8LAddGreenToBlueAndRed_C(const uint32_t* src, int num_pixels,VP8LAddGreenToBlueAndRed_C244,8591
static WEBP_INLINE int ColorTransformDelta(int8_t color_pred,ColorTransformDelta257,9005
static WEBP_INLINE void ColorCodeToMultipliers(uint32_t color_code,ColorCodeToMultipliers262,9170
void VP8LTransformColorInverse_C(const VP8LMultipliers* const m,VP8LTransformColorInverse_C269,9463
static void ColorSpaceInverseTransform_C(const VP8LTransform* const transform,ColorSpaceInverseTransform_C289,10202
#define COLOR_INDEX_INVERSE(COLOR_INDEX_INVERSE326,11659
#undef COLOR_INDEX_INVERSECOLOR_INDEX_INVERSE372,15100
void VP8LInverseTransform(const VP8LTransform* const transform,VP8LInverseTransform374,15128
static int is_big_endian(void) {is_big_endian419,17097
void VP8LConvertBGRAToRGB_C(const uint32_t* src,VP8LConvertBGRAToRGB_C427,17233
void VP8LConvertBGRAToRGBA_C(const uint32_t* src,VP8LConvertBGRAToRGBA_C438,17563
void VP8LConvertBGRAToRGBA4444_C(const uint32_t* src,VP8LConvertBGRAToRGBA4444_C450,17929
void VP8LConvertBGRAToRGB565_C(const uint32_t* src,VP8LConvertBGRAToRGB565_C467,18417
void VP8LConvertBGRAToBGR_C(const uint32_t* src,VP8LConvertBGRAToBGR_C484,18902
static void CopyOrSwap(const uint32_t* src, int num_pixels, uint8_t* dst,CopyOrSwap495,19232
void VP8LConvertFromBGRA(const uint32_t* const in_data, int num_pixels,VP8LConvertFromBGRA509,19663
VP8LProcessDecBlueAndRedFunc VP8LAddGreenToBlueAndRed;VP8LAddGreenToBlueAndRed556,21200
VP8LPredictorAddSubFunc VP8LPredictorsAdd[16];VP8LPredictorsAdd557,21255
VP8LPredictorFunc VP8LPredictors[16];VP8LPredictors558,21302
VP8LPredictorAddSubFunc VP8LPredictorsAdd_C[16];VP8LPredictorsAdd_C561,21376
VP8LPredictorFunc VP8LPredictors_C[16];VP8LPredictors_C562,21425
VP8LTransformColorInverseFunc VP8LTransformColorInverse;VP8LTransformColorInverse564,21466
VP8LConvertFunc VP8LConvertBGRAToRGB;VP8LConvertBGRAToRGB566,21524
VP8LConvertFunc VP8LConvertBGRAToRGBA;VP8LConvertBGRAToRGBA567,21562
VP8LConvertFunc VP8LConvertBGRAToRGBA4444;VP8LConvertBGRAToRGBA4444568,21601
VP8LConvertFunc VP8LConvertBGRAToRGB565;VP8LConvertBGRAToRGB565569,21644
VP8LConvertFunc VP8LConvertBGRAToBGR;VP8LConvertBGRAToBGR570,21685
VP8LMapARGBFunc VP8LMapColor32b;VP8LMapColor32b572,21724
VP8LMapAlphaFunc VP8LMapColor8b;VP8LMapColor8b573,21757
extern void VP8LDspInitSSE2(void);VP8LDspInitSSE2575,21791
extern void VP8LDspInitNEON(void);VP8LDspInitNEON576,21826
extern void VP8LDspInitMIPSdspR2(void);VP8LDspInitMIPSdspR2577,21861
extern void VP8LDspInitMSA(void);VP8LDspInitMSA578,21901
static volatile VP8CPUInfo lossless_last_cpuinfo_used =lossless_last_cpuinfo_used580,21936
#define COPY_PREDICTOR_ARRAY(COPY_PREDICTOR_ARRAY583,22038
WEBP_TSAN_IGNORE_FUNCTION void VP8LDspInit(void) {VP8LDspInit602,23072
#undef COPY_PREDICTOR_ARRAYCOPY_PREDICTOR_ARRAY664,24867

src/dsp/rescaler_mips32.c,551
static void ImportRowShrink_MIPS32(WebPRescaler* const wrk,ImportRowShrink_MIPS3224,802
static void ImportRowExpand_MIPS32(WebPRescaler* const wrk,ImportRowExpand_MIPS3284,3483
static void ExportRowExpand_MIPS32(WebPRescaler* const wrk) {ExportRowExpand_MIPS32149,6507
static void ExportRowShrink_MIPS32(WebPRescaler* const wrk) {ExportRowShrink_MIPS32212,9633
extern void WebPRescalerDspInitMIPS32(void);WebPRescalerDspInitMIPS32280,12901
WEBP_TSAN_IGNORE_FUNCTION void WebPRescalerDspInitMIPS32(void) {WebPRescalerDspInitMIPS32282,12947

src/dsp/alpha_processing_neon.c,928
#define MULTIPLIER(MULTIPLIER22,738
#define PREMULTIPLY(PREMULTIPLY23,775
#define MULTIPLY_BY_ALPHA(MULTIPLY_BY_ALPHA25,822
static void ApplyAlphaMultiply_NEON(uint8_t* rgba, int alpha_first,ApplyAlphaMultiply_NEON42,1930
#undef MULTIPLY_BY_ALPHAMULTIPLY_BY_ALPHA77,3161
#undef MULTIPLIERMULTIPLIER78,3186
#undef PREMULTIPLYPREMULTIPLY79,3204
static int DispatchAlpha_NEON(const uint8_t* alpha, int alpha_stride,DispatchAlpha_NEON83,3306
static void DispatchAlphaToGreen_NEON(const uint8_t* alpha, int alpha_stride,DispatchAlphaToGreen_NEON115,4451
static int ExtractAlpha_NEON(const uint8_t* argb, int argb_stride,ExtractAlpha_NEON134,5100
static void ExtractGreen_NEON(const uint32_t* argb,ExtractGreen_NEON164,6168
extern void WebPInitAlphaProcessingNEON(void);WebPInitAlphaProcessingNEON177,6619
WEBP_TSAN_IGNORE_FUNCTION void WebPInitAlphaProcessingNEON(void) {WebPInitAlphaProcessingNEON179,6667

src/dsp/yuv_neon.c,1556
static uint8x8_t ConvertRGBToY_NEON(const uint8x8_t R,ConvertRGBToY_NEON25,748
static void ConvertRGB24ToY_NEON(const uint8_t* rgb, uint8_t* y, int width) {ConvertRGB24ToY_NEON49,1885
static void ConvertBGR24ToY_NEON(const uint8_t* bgr, uint8_t* y, int width) {ConvertBGR24ToY_NEON61,2290
static void ConvertARGBToY_NEON(const uint32_t* argb, uint8_t* y, int width) {ConvertARGBToY_NEON73,2694
#define MULTIPLY_16b_PREAMBLE(MULTIPLY_16b_PREAMBLE90,3324
#define MULTIPLY_16b(MULTIPLY_16b98,3791
#define CONVERT_RGB_TO_UV(CONVERT_RGB_TO_UV111,4550
static void ConvertRGBA32ToUV_NEON(const uint16_t* rgb,ConvertRGBA32ToUV_NEON117,4831
static void ConvertARGBToUV_NEON(const uint32_t* argb, uint8_t* u, uint8_t* v,ConvertARGBToUV_NEON134,5449
extern void WebPInitConvertARGBToYUVNEON(void);WebPInitConvertARGBToYUVNEON166,6551
WEBP_TSAN_IGNORE_FUNCTION void WebPInitConvertARGBToYUVNEON(void) {WebPInitConvertARGBToYUVNEON168,6600
#define MAX_Y MAX_Y178,6985
static uint16_t clip_y_NEON(int v) {clip_y_NEON179,7055
static uint64_t SharpYUVUpdateY_NEON(const uint16_t* ref, const uint16_t* src,SharpYUVUpdateY_NEON183,7153
static void SharpYUVUpdateRGB_NEON(const int16_t* ref, const int16_t* src,SharpYUVUpdateRGB_NEON213,8307
static void SharpYUVFilterRow_NEON(const int16_t* A, const int16_t* B, int len,SharpYUVFilterRow_NEON230,8855
#undef MAX_YMAX_Y271,10895
extern void WebPInitSharpYUVNEON(void);WebPInitSharpYUVNEON275,10991
WEBP_TSAN_IGNORE_FUNCTION void WebPInitSharpYUVNEON(void) {WebPInitSharpYUVNEON277,11032

src/dsp/dec_mips_dsp_r2.c,2806
static const int kC1 = 20091 + (1 << 16);kC121,715
static const int kC2 = 35468;kC222,757
#define MUL(MUL24,788
static void TransformDC(const int16_t* in, uint8_t* dst) {TransformDC26,827
static void TransformAC3(const int16_t* in, uint8_t* dst) {TransformAC350,1822
static void TransformOne(const int16_t* in, uint8_t* dst) {TransformOne86,3473
static void TransformTwo(const int16_t* in, uint8_t* dst, int do_two) {TransformTwo153,6935
static WEBP_INLINE void FilterLoop26(uint8_t* p,FilterLoop26160,7091
static WEBP_INLINE void FilterLoop24(uint8_t* p,FilterLoop24298,15421
static void VFilter16(uint8_t* p, int stride,VFilter16428,22737
static void HFilter16(uint8_t* p, int stride,HFilter16433,22914
static void VFilter8(uint8_t* u, uint8_t* v, int stride,VFilter8439,23138
static void HFilter8(uint8_t* u, uint8_t* v, int stride,HFilter8445,23386
static void VFilter16i(uint8_t* p, int stride,VFilter16i452,23658
static void HFilter16i(uint8_t* p, int stride,HFilter16i461,23901
static void VFilter8i(uint8_t* u, uint8_t* v, int stride,VFilter8i470,24135
static void HFilter8i(uint8_t* u, uint8_t* v, int stride,HFilter8i476,24411
#undef MULMUL482,24669
static void SimpleVFilter16(uint8_t* p, int stride, int thresh) {SimpleVFilter16487,24808
#define LOAD_4_BYTES(LOAD_4_BYTES549,28216
static void SimpleHFilter16(uint8_t* p, int stride, int thresh) {SimpleHFilter16556,28703
static void SimpleVFilter16i(uint8_t* p, int stride, int thresh) {SimpleVFilter16i607,31549
static void SimpleHFilter16i(uint8_t* p, int stride, int thresh) {SimpleHFilter16i615,31721
#define STORE_8_BYTES(STORE_8_BYTES625,31940
static void VE4(uint8_t* dst) {    // verticalVE4629,32178
static void DC4(uint8_t* dst) {   // DCDC4659,33657
static void RD4(uint8_t* dst) {   // Down-rightRD4681,34637
#define LOAD_8_BYTES(LOAD_8_BYTES727,37253
static void LD4(uint8_t* dst) {   // Down-LeftLD4731,37491
static void DC8uv(uint8_t* dst) {     // DCDC8uv778,40080
static void DC8uvNoLeft(uint8_t* dst) {   // DC with no left samplesDC8uvNoLeft815,41893
static void DC8uvNoTop(uint8_t* dst) {  // DC with no top samplesDC8uvNoTop838,42823
#undef LOAD_8_BYTESLOAD_8_BYTES869,44325
#undef STORE_8_BYTESSTORE_8_BYTES870,44345
#undef LOAD_4_BYTESLOAD_4_BYTES871,44366
#define CLIPPING(CLIPPING873,44387
#define CLIP_8B_TO_DST(CLIP_8B_TO_DST898,46234
#define CLIP_TO_DST(CLIP_TO_DST929,48596
#define TRUE_MOTION(TRUE_MOTION939,49257
#undef TRUE_MOTIONTRUE_MOTION948,49565
#undef CLIP_TO_DSTCLIP_TO_DST949,49584
#undef CLIP_8B_TO_DSTCLIP_8B_TO_DST950,49603
#undef CLIPPINGCLIPPING951,49625
extern void VP8DspInitMIPSdspR2(void);VP8DspInitMIPSdspR2956,49739
WEBP_TSAN_IGNORE_FUNCTION void VP8DspInitMIPSdspR2(void) {VP8DspInitMIPSdspR2958,49779

src/dsp/enc_msa.c,3704
#define IDCT_1D_W(IDCT_1D_W25,796
static WEBP_INLINE void ITransformOne(const uint8_t* ref, const int16_t* in,ITransformOne44,1999
static void ITransform_MSA(const uint8_t* ref, const int16_t* in, uint8_t* dst,ITransform_MSA72,3207
static void FTransform_MSA(const uint8_t* src, const uint8_t* ref,FTransform_MSA80,3428
static void FTransformWHT_MSA(const int16_t* in, int16_t* out) {FTransformWHT_MSA134,5546
static int TTransform_MSA(const uint8_t* in, const uint16_t* w) {TTransform_MSA171,6962
static int Disto4x4_MSA(const uint8_t* const a, const uint8_t* const b,Disto4x4_MSA203,8155
static int Disto16x16_MSA(const uint8_t* const a, const uint8_t* const b,Disto16x16_MSA210,8395
static void CollectHistogram_MSA(const uint8_t* ref, const uint8_t* pred,CollectHistogram_MSA225,8795
#define DST(DST258,9905
#define AVG3(AVG3259,9944
#define AVG2(AVG2260,9999
static WEBP_INLINE void VE4(uint8_t* dst, const uint8_t* top) {    // verticalVE4262,10042
static WEBP_INLINE void HE4(uint8_t* dst, const uint8_t* top) {    // horizontalHE4275,10533
static WEBP_INLINE void DC4(uint8_t* dst, const uint8_t* top) {DC4287,10994
static WEBP_INLINE void RD4(uint8_t* dst, const uint8_t* top) {RD4296,11237
static WEBP_INLINE void LD4(uint8_t* dst, const uint8_t* top) {LD4316,12063
static WEBP_INLINE void VR4(uint8_t* dst, const uint8_t* top) {VR4336,12885
static WEBP_INLINE void VL4(uint8_t* dst, const uint8_t* top) {VL4357,13546
static WEBP_INLINE void HU4(uint8_t* dst, const uint8_t* top) {HU4378,14203
static WEBP_INLINE void HD4(uint8_t* dst, const uint8_t* top) {HD4393,14686
static WEBP_INLINE void TM4(uint8_t* dst, const uint8_t* top) {TM4414,15348
#undef DSTDST430,15956
#undef AVG3AVG3431,15967
#undef AVG2AVG2432,15979
static void Intra4Preds_MSA(uint8_t* dst, const uint8_t* top) {Intra4Preds_MSA434,15992
#define STORE16x16(STORE16x16449,16335
static WEBP_INLINE void VerticalPred16x16(uint8_t* dst, const uint8_t* top) {VerticalPred16x16454,16573
static WEBP_INLINE void HorizontalPred16x16(uint8_t* dst,HorizontalPred16x16464,16825
static WEBP_INLINE void TrueMotion16x16(uint8_t* dst, const uint8_t* left,TrueMotion16x16483,17407
static WEBP_INLINE void DCMode16x16(uint8_t* dst, const uint8_t* left,DCMode16x16522,18740
static void Intra16Preds_MSA(uint8_t* dst,Intra16Preds_MSA551,19722
#define CALC_DC8(CALC_DC8561,20037
#define STORE8x8(STORE8x8572,20608
static WEBP_INLINE void VerticalPred8x8(uint8_t* dst, const uint8_t* top) {VerticalPred8x8577,20771
static WEBP_INLINE void HorizontalPred8x8(uint8_t* dst, const uint8_t* left) {HorizontalPred8x8587,21016
static WEBP_INLINE void TrueMotion8x8(uint8_t* dst, const uint8_t* left,TrueMotion8x8609,21785
static WEBP_INLINE void DCMode8x8(uint8_t* dst, const uint8_t* left,DCMode8x8649,23124
static void IntraChromaPreds_MSA(uint8_t* dst, const uint8_t* left,IntraChromaPreds_MSA673,23905
#define PACK_DOTP_UB4_SW(PACK_DOTP_UB4_SW693,24532
#define PACK_DPADD_UB4_SW(PACK_DPADD_UB4_SW704,25238
static int SSE16x16_MSA(const uint8_t* a, const uint8_t* b) {SSE16x16_MSA715,25953
static int SSE16x8_MSA(const uint8_t* a, const uint8_t* b) {SSE16x8_MSA742,27115
static int SSE8x8_MSA(const uint8_t* a, const uint8_t* b) {SSE8x8_MSA761,27836
static int SSE4x4_MSA(const uint8_t* a, const uint8_t* b) {SSE4x4_MSA781,28582
static int QuantizeBlock_MSA(int16_t in[16], int16_t out[16],QuantizeBlock_MSA803,29269
static int Quantize2Blocks_MSA(int16_t in[32], int16_t out[32],Quantize2Blocks_MSA856,31472
extern void VP8EncDspInitMSA(void);VP8EncDspInitMSA867,31852
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspInitMSA(void) {VP8EncDspInitMSA869,31889

src/dsp/neon.h,382
#define WEBP_DSP_NEON_H_WEBP_DSP_NEON_H_13,511
#define WEBP_USE_INTRINSICS WEBP_USE_INTRINSICS23,829
#define INIT_VECTOR2(INIT_VECTOR226,899
#define INIT_VECTOR3(INIT_VECTOR331,1026
#define INIT_VECTOR4(INIT_VECTOR437,1203
#define WORK_AROUND_GCCWORK_AROUND_GCC48,1735
static WEBP_INLINE int32x4x4_t Transpose4x4_NEON(const int32x4x4_t rows) {Transpose4x4_NEON51,1767

src/dsp/alpha_processing.c,4071
#define USE_TABLES_FOR_ALPHA_MULT USE_TABLES_FOR_ALPHA_MULT19,728
#define MFIX MFIX25,875
#define HALF HALF26,926
#define KINV_255 KINV_25527,959
static uint32_t Mult(uint8_t x, uint32_t mult) {Mult29,999
static const uint32_t kMultTables[2][256] = {kMultTables37,1218
static WEBP_INLINE uint32_t GetScale(uint32_t a, int inverse) {GetScale128,7818
static WEBP_INLINE uint32_t GetScale(uint32_t a, int inverse) {GetScale134,7927
void WebPMultARGBRow_C(uint32_t* const ptr, int width, int inverse) {WebPMultARGBRow_C140,8086
void WebPMultRow_C(uint8_t* const ptr, const uint8_t* const alpha,WebPMultRow_C160,8698
#undef KINV_255KINV_255176,9071
#undef HALFHALF177,9087
#undef MFIXMFIX178,9099
void (*WebPMultARGBRow)(uint32_t* const ptr, int width, int inverse);WebPMultARGBRow180,9112
void (*WebPMultRow)(uint8_t* const ptr, const uint8_t* const alpha,WebPMultRow181,9182
void WebPMultARGBRows(uint8_t* ptr, int stride, int width, int num_rows,WebPMultARGBRows187,9405
void WebPMultRows(uint8_t* ptr, int stride,WebPMultRows196,9638
#define MULTIPLIER(MULTIPLIER216,10308
#define PREMULTIPLY(PREMULTIPLY217,10347
#define MULTIPLIER(MULTIPLIER219,10431
#define PREMULTIPLY(PREMULTIPLY220,10468
static void ApplyAlphaMultiply_C(uint8_t* rgba, int alpha_first,ApplyAlphaMultiply_C224,10562
#undef MULTIPLIERMULTIPLIER243,11228
#undef PREMULTIPLYPREMULTIPLY244,11246
#define MULTIPLIER(MULTIPLIER248,11279
static WEBP_INLINE uint8_t dither_hi(uint8_t x) {dither_hi250,11349
static WEBP_INLINE uint8_t dither_lo(uint8_t x) {dither_lo254,11434
static WEBP_INLINE uint8_t multiply(uint8_t x, uint32_t m) {multiply258,11519
static WEBP_INLINE void ApplyAlphaMultiply4444_C(uint8_t* rgba4444,ApplyAlphaMultiply4444_C262,11607
#undef MULTIPLIERMULTIPLIER281,12421
static void ApplyAlphaMultiply_16b_C(uint8_t* rgba4444,ApplyAlphaMultiply_16b_C283,12440
static int DispatchAlpha_C(const uint8_t* alpha, int alpha_stride,DispatchAlpha_C293,12745
static void DispatchAlphaToGreen_C(const uint8_t* alpha, int alpha_stride,DispatchAlphaToGreen_C312,13236
static int ExtractAlpha_C(const uint8_t* argb, int argb_stride,ExtractAlpha_C325,13642
static void ExtractGreen_C(const uint32_t* argb, uint8_t* alpha, int size) {ExtractGreen_C343,14132
static int HasAlpha8b_C(const uint8_t* src, int length) {HasAlpha8b_C351,14391
static int HasAlpha32b_C(const uint8_t* src, int length) {HasAlpha32b_C356,14517
static WEBP_INLINE uint32_t MakeARGB32(int a, int r, int g, int b) {MakeARGB32365,14781
static void PackRGB_C(const uint8_t* r, const uint8_t* g, const uint8_t* b,PackRGB_C369,14912
void (*WebPApplyAlphaMultiply)(uint8_t*, int, int, int, int);WebPApplyAlphaMultiply378,15188
void (*WebPApplyAlphaMultiply4444)(uint8_t*, int, int, int);WebPApplyAlphaMultiply4444379,15250
int (*WebPDispatchAlpha)(const uint8_t*, int, int, int, uint8_t*, int);WebPDispatchAlpha380,15311
void (*WebPDispatchAlphaToGreen)(const uint8_t*, int, int, int, uint32_t*, int);WebPDispatchAlphaToGreen381,15383
int (*WebPExtractAlpha)(const uint8_t*, int, int, int, uint8_t*, int);WebPExtractAlpha382,15464
void (*WebPExtractGreen)(const uint32_t* argb, uint8_t* alpha, int size);WebPExtractGreen383,15535
void (*WebPPackRGB)(const uint8_t* r, const uint8_t* g, const uint8_t* b,WebPPackRGB384,15609
int (*WebPHasAlpha8b)(const uint8_t* src, int length);WebPHasAlpha8b387,15739
int (*WebPHasAlpha32b)(const uint8_t* src, int length);WebPHasAlpha32b388,15794
extern void WebPInitAlphaProcessingMIPSdspR2(void);WebPInitAlphaProcessingMIPSdspR2393,15950
extern void WebPInitAlphaProcessingSSE2(void);WebPInitAlphaProcessingSSE2394,16002
extern void WebPInitAlphaProcessingSSE41(void);WebPInitAlphaProcessingSSE41395,16049
extern void WebPInitAlphaProcessingNEON(void);WebPInitAlphaProcessingNEON396,16097
static volatile VP8CPUInfo alpha_processing_last_cpuinfo_used =alpha_processing_last_cpuinfo_used398,16145
WEBP_TSAN_IGNORE_FUNCTION void WebPInitAlphaProcessing(void) {WebPInitAlphaProcessing401,16263

src/dsp/filters_neon.c,2124
# define SANITY_CHECK(SANITY_CHECK24,747
#define U8_TO_S16(U8_TO_S1634,1393
#define LOAD_U8_TO_S16(LOAD_U8_TO_S1635,1449
#define SHIFT_RIGHT_N_Q(SHIFT_RIGHT_N_Q38,1548
#define SHIFT_LEFT_N_Q(SHIFT_LEFT_N_Q39,1603
#define ROTATE_LEFT_N(ROTATE_LEFT_N42,1696
#define ROTATE_RIGHT_N(ROTATE_RIGHT_N44,1776
static void PredictLine_NEON(const uint8_t* src, const uint8_t* pred,PredictLine_NEON46,1841
static void PredictLineLeft_NEON(const uint8_t* src, uint8_t* dst, int length) {PredictLineLeft_NEON60,2338
static WEBP_INLINE void DoHorizontalFilter_NEON(const uint8_t* in,DoHorizontalFilter_NEON67,2573
static void HorizontalFilter_NEON(const uint8_t* data, int width, int height,HorizontalFilter_NEON98,3515
static WEBP_INLINE void DoVerticalFilter_NEON(const uint8_t* in,DoVerticalFilter_NEON107,3878
static void VerticalFilter_NEON(const uint8_t* data, int width, int height,VerticalFilter_NEON136,4707
static WEBP_INLINE int GradientPredictor_C(uint8_t a, uint8_t b, uint8_t c) {GradientPredictor_C145,5062
static void GradientPredictDirect_NEON(const uint8_t* const row,GradientPredictDirect_NEON150,5240
static WEBP_INLINE void DoGradientFilter_NEON(const uint8_t* in,DoGradientFilter_NEON168,5952
static void GradientFilter_NEON(const uint8_t* data, int width, int height,GradientFilter_NEON198,6834
#undef SANITY_CHECKSANITY_CHECK204,7087
static void HorizontalUnfilter_NEON(const uint8_t* prev, const uint8_t* in,HorizontalUnfilter_NEON209,7212
static void VerticalUnfilter_NEON(const uint8_t* prev, const uint8_t* in,VerticalUnfilter_NEON234,8164
#define USE_GRADIENT_UNFILTER USE_GRADIENT_UNFILTER255,8905
#define GRAD_PROCESS_LANE(GRAD_PROCESS_LANE259,8998
static void GradientPredictInverse_NEON(const uint8_t* const in,GradientPredictInverse_NEON267,9497
#undef GRAD_PROCESS_LANEGRAD_PROCESS_LANE294,10493
static void GradientUnfilter_NEON(const uint8_t* prev, const uint8_t* in,GradientUnfilter_NEON296,10519
extern void VP8FiltersInitNEON(void);VP8FiltersInitNEON311,11001
WEBP_TSAN_IGNORE_FUNCTION void VP8FiltersInitNEON(void) {VP8FiltersInitNEON313,11040

src/dsp/upsampling_msa.c,2312
#define ILVR_UW2(ILVR_UW224,727
#define ILVRL_UW4(ILVRL_UW430,1008
#define MULTHI_16(MULTHI_1637,1291
#define MULTHI_8(MULTHI_845,1694
#define CALC_R16(CALC_R1652,2017
#define CALC_R8(CALC_R863,2570
#define CALC_G16(CALC_G1672,3003
#define CALC_G8(CALC_G885,3621
#define CALC_B16(CALC_B1695,4074
#define CALC_B8(CALC_B8106,4582
#define CALC_RGB16(CALC_RGB16115,4980
#define CALC_RGB8(CALC_RGB8135,5839
#define STORE16_3(STORE16_3155,6644
#define STORE8_3(STORE8_3174,7796
#define STORE16_4(STORE16_4188,8637
#define STORE8_4(STORE8_4201,9167
#define STORE2_16(STORE2_16209,9456
#define STORE2_8(STORE2_8216,9664
#define CALC_RGBA4444(CALC_RGBA4444221,9878
#define CALC_RGB565(CALC_RGB565231,10363
static WEBP_INLINE int Clip8(int v) {Clip8243,10946
static void YuvToRgb(int y, int u, int v, uint8_t* const rgb) {YuvToRgb247,11027
static void YuvToBgr(int y, int u, int v, uint8_t* const bgr) {YuvToBgr257,11371
static void YuvToRgb565(int y, int u, int v, uint8_t* const rgb) {YuvToRgb565267,11715
static void YuvToRgba4444(int y, int u, int v, uint8_t* const argb) {YuvToRgba4444286,12268
static void YuvToArgb(uint8_t y, uint8_t u, uint8_t v, uint8_t* const argb) {YuvToArgb305,12851
static void YuvToBgra(uint8_t y, uint8_t u, uint8_t v, uint8_t* const bgra) {YuvToBgra310,12981
static void YuvToRgba(uint8_t y, uint8_t u, uint8_t v, uint8_t* const rgba) {YuvToRgba315,13107
static void YuvToRgbLine(const uint8_t* y, const uint8_t* u,YuvToRgbLine320,13233
static void YuvToBgrLine(const uint8_t* y, const uint8_t* u,YuvToBgrLine347,14011
static void YuvToRgbaLine(const uint8_t* y, const uint8_t* u,YuvToRgbaLine374,14789
static void YuvToBgraLine(const uint8_t* y, const uint8_t* u,YuvToBgraLine402,15630
static void YuvToArgbLine(const uint8_t* y, const uint8_t* u,YuvToArgbLine430,16467
static void YuvToRgba4444Line(const uint8_t* y, const uint8_t* u,YuvToRgba4444Line458,17304
static void YuvToRgb565Line(const uint8_t* y, const uint8_t* u,YuvToRgb565Line494,18333
#define UPSAMPLE_32PIXELS(UPSAMPLE_32PIXELS530,19346
#define UPSAMPLE_FUNC(UPSAMPLE_FUNC560,20703
extern void WebPInitUpsamplersMSA(void);WebPInitUpsamplersMSA658,27409
WEBP_TSAN_IGNORE_FUNCTION void WebPInitUpsamplersMSA(void) {WebPInitUpsamplersMSA660,27451

src/dsp/rescaler_sse2.c,1136
#define ROUNDER ROUNDER26,880
#define MULT_FIX(MULT_FIX27,921
static void LoadTwoPixels_SSE2(const uint8_t* const src, __m128i* out) {LoadTwoPixels_SSE230,1056
static void LoadHeightPixels_SSE2(const uint8_t* const src, __m128i* out) {LoadHeightPixels_SSE239,1493
static void RescalerImportRowExpand_SSE2(WebPRescaler* const wrk,RescalerImportRowExpand_SSE245,1726
static void RescalerImportRowShrink_SSE2(WebPRescaler* const wrk,RescalerImportRowShrink_SSE2113,3788
static WEBP_INLINE void LoadDispatchAndMult_SSE2(const rescaler_t* const src,LoadDispatchAndMult_SSE2172,6247
static WEBP_INLINE void ProcessRow_SSE2(const __m128i* const A0,ProcessRow_SSE2195,7159
static void RescalerExportRowExpand_SSE2(WebPRescaler* const wrk) {RescalerExportRowExpand_SSE2229,8730
static void RescalerExportRowShrink_SSE2(WebPRescaler* const wrk) {RescalerExportRowShrink_SSE2289,11306
#undef MULT_FIXMULT_FIX357,14341
#undef ROUNDERROUNDER358,14357
extern void WebPRescalerDspInitSSE2(void);WebPRescalerDspInitSSE2362,14455
WEBP_TSAN_IGNORE_FUNCTION void WebPRescalerDspInitSSE2(void) {WebPRescalerDspInitSSE2364,14499

src/dsp/lossless_mips_dsp_r2.c,2468
#define MAP_COLOR_FUNCS(MAP_COLOR_FUNCS22,794
#undef MAP_COLOR_FUNCSMAP_COLOR_FUNCS92,6223
static WEBP_INLINE uint32_t ClampedAddSubtractFull(uint32_t c0, uint32_t c1,ClampedAddSubtractFull94,6247
static WEBP_INLINE uint32_t ClampedAddSubtractHalf(uint32_t c0, uint32_t c1,ClampedAddSubtractHalf119,7471
static WEBP_INLINE uint32_t Select(uint32_t a, uint32_t b, uint32_t c) {Select149,9053
static WEBP_INLINE uint32_t Average2(uint32_t a0, uint32_t a1) {Average2173,10191
static WEBP_INLINE uint32_t Average3(uint32_t a0, uint32_t a1, uint32_t a2) {Average3182,10384
static WEBP_INLINE uint32_t Average4(uint32_t a0, uint32_t a1,Average4186,10506
static uint32_t Predictor5_MIPSdspR2(uint32_t left, const uint32_t* const top) {Predictor5_MIPSdspR2191,10692
static uint32_t Predictor6_MIPSdspR2(uint32_t left, const uint32_t* const top) {Predictor6_MIPSdspR2195,10817
static uint32_t Predictor7_MIPSdspR2(uint32_t left, const uint32_t* const top) {Predictor7_MIPSdspR2199,10935
static uint32_t Predictor8_MIPSdspR2(uint32_t left, const uint32_t* const top) {Predictor8_MIPSdspR2203,11052
static uint32_t Predictor9_MIPSdspR2(uint32_t left, const uint32_t* const top) {Predictor9_MIPSdspR2208,11186
static uint32_t Predictor10_MIPSdspR2(uint32_t left,Predictor10_MIPSdspR2213,11319
static uint32_t Predictor11_MIPSdspR2(uint32_t left,Predictor11_MIPSdspR2218,11492
static uint32_t Predictor12_MIPSdspR2(uint32_t left,Predictor12_MIPSdspR2223,11655
static uint32_t Predictor13_MIPSdspR2(uint32_t left,Predictor13_MIPSdspR2228,11834
static void AddGreenToBlueAndRed_MIPSdspR2(const uint32_t* src, int num_pixels,AddGreenToBlueAndRed_MIPSdspR2235,12112
static void TransformColorInverse_MIPSdspR2(const VP8LMultipliers* const m,TransformColorInverse_MIPSdspR2292,15630
static void ConvertBGRAToRGB_MIPSdspR2(const uint32_t* src,ConvertBGRAToRGB_MIPSdspR2363,19858
static void ConvertBGRAToRGBA_MIPSdspR2(const uint32_t* src,ConvertBGRAToRGBA_MIPSdspR2415,22917
static void ConvertBGRAToRGBA4444_MIPSdspR2(const uint32_t* src,ConvertBGRAToRGBA4444_MIPSdspR2465,25848
static void ConvertBGRAToRGB565_MIPSdspR2(const uint32_t* src,ConvertBGRAToRGB565_MIPSdspR2539,30258
static void ConvertBGRAToBGR_MIPSdspR2(const uint32_t* src,ConvertBGRAToBGR_MIPSdspR2617,34940
extern void VP8LDspInitMIPSdspR2(void);VP8LDspInitMIPSdspR2666,37772
WEBP_TSAN_IGNORE_FUNCTION void VP8LDspInitMIPSdspR2(void) {VP8LDspInitMIPSdspR2668,37813

src/dsp/enc_neon.c,3460
static const int16_t kC1 = 20091;kC130,1011
static const int16_t kC2 = 17734;  // half of kC2, actually. See comment above.kC231,1045
static WEBP_INLINE int16x8_t ConvertU8ToS16_NEON(uint32x2_t v) {ConvertU8ToS16_NEON40,1468
static WEBP_INLINE void SaturateAndStore4x4_NEON(uint8_t* const dst,SaturateAndStore4x4_NEON46,1718
static WEBP_INLINE void Add4x4_NEON(const int16x8_t row01,Add4x4_NEON60,2405
static WEBP_INLINE void Transpose8x2_NEON(const int16x8_t in0,Transpose8x2_NEON86,3392
static WEBP_INLINE void TransformPass_NEON(int16x8x2_t* const rows) {TransformPass_NEON96,3909
static void ITransformOne_NEON(const uint8_t* ref,ITransformOne_NEON122,5172
static void ITransformOne_NEON(const uint8_t* ref,ITransformOne_NEON133,5488
static void ITransform_NEON(const uint8_t* ref,ITransform_NEON249,9586
static uint8x16_t Load4x4_NEON(const uint8_t* src) {Load4x4_NEON258,9877
static WEBP_INLINE void Transpose4x4_S16_NEON(const int16x4_t A,Transpose4x4_S16_NEON271,10325
static WEBP_INLINE int16x8_t DiffU8ToS16_NEON(const uint8x8_t a,DiffU8ToS16_NEON291,11386
static void FTransform_NEON(const uint8_t* src, const uint8_t* ref,FTransform_NEON296,11569
static const int16_t kCoeff16[] = {kCoeff16356,14672
static const int32_t kCoeff32[] = {kCoeff32359,14764
static void FTransform_NEON(const uint8_t* src, const uint8_t* ref,FTransform_NEON366,14923
#define LOAD_LANE_16b(LOAD_LANE_16b481,19643
static void FTransformWHT_NEON(const int16_t* src, int16_t* out) {FTransformWHT_NEON486,19818
#undef LOAD_LANE_16bLOAD_LANE_16b548,22066
static WEBP_INLINE int16x8x4_t DistoTranspose4x4S16_NEON(int16x8x4_t q4_in) {DistoTranspose4x4S16_NEON568,22457
static WEBP_INLINE int16x8x4_t DistoHorizontalPass_NEON(DistoHorizontalPass_NEON582,23234
static WEBP_INLINE int16x8x4_t DistoVerticalPass_NEON(const uint8x8x4_t q4_in) {DistoVerticalPass_NEON602,23985
static WEBP_INLINE int16x4x4_t DistoLoadW_NEON(const uint16_t* w) {DistoLoadW_NEON619,24823
static WEBP_INLINE int32x2_t DistoSum_NEON(const int16x8x4_t q4_in,DistoSum_NEON631,25279
#define LOAD_LANE_32b(LOAD_LANE_32b655,26366
static int Disto4x4_NEON(const uint8_t* const a, const uint8_t* const b,Disto4x4_NEON661,26632
#undef LOAD_LANE_32bLOAD_LANE_32b701,28183
static int Disto16x16_NEON(const uint8_t* const a, const uint8_t* const b,Disto16x16_NEON703,28205
static void CollectHistogram_NEON(const uint8_t* ref, const uint8_t* pred,CollectHistogram_NEON717,28595
static WEBP_INLINE void AccumulateSSE16_NEON(const uint8_t* const a,AccumulateSSE16_NEON749,29882
static int SumToInt_NEON(uint32x4_t sum) {SumToInt_NEON766,30685
static int SSE16x16_NEON(const uint8_t* a, const uint8_t* b) {SSE16x16_NEON772,30870
static int SSE16x8_NEON(const uint8_t* a, const uint8_t* b) {SSE16x8_NEON781,31100
static int SSE8x8_NEON(const uint8_t* a, const uint8_t* b) {SSE8x8_NEON790,31328
static int SSE4x4_NEON(const uint8_t* a, const uint8_t* b) {SSE4x4_NEON803,31731
static int16x8_t Quantize_NEON(int16_t* const in,Quantize_NEON822,32504
static const uint8_t kShuffles[4][8] = {kShuffles849,34007
static int QuantizeBlock_NEON(int16_t in[16], int16_t out[16],QuantizeBlock_NEON856,34203
static int Quantize2Blocks_NEON(int16_t in[32], int16_t out[32],Quantize2Blocks_NEON898,36026
extern void VP8EncDspInitNEON(void);VP8EncDspInitNEON911,36436
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspInitNEON(void) {VP8EncDspInitNEON913,36474

src/dsp/enc_mips32.c,2114
static const int kC1 = 20091 + (1 << 16);kC124,849
static const int kC2 = 35468;kC225,891
#define VERTICAL_PASS(VERTICAL_PASS33,1177
#define HORIZONTAL_PASS(HORIZONTAL_PASS61,3134
static WEBP_INLINE void ITransformOne_MIPS32(const uint8_t* ref,ITransformOne_MIPS32116,7403
static void ITransform_MIPS32(const uint8_t* ref, const int16_t* in,ITransform_MIPS32148,9027
#undef VERTICAL_PASSVERTICAL_PASS156,9268
#undef HORIZONTAL_PASSHORIZONTAL_PASS157,9289
#define QUANTIZE_ONE(QUANTIZE_ONE164,9506
static int QuantizeBlock_MIPS32(int16_t in[16], int16_t out[16],QuantizeBlock_MIPS32191,11531
static int Quantize2Blocks_MIPS32(int16_t in[32], int16_t out[32],Quantize2Blocks_MIPS32242,13145
#undef QUANTIZE_ONEQUANTIZE_ONE250,13436
#define HORIZONTAL_PASS(HORIZONTAL_PASS257,13761
#define VERTICAL_PASS(VERTICAL_PASS303,16820
static int Disto4x4_MIPS32(const uint8_t* const a, const uint8_t* const b,Disto4x4_MIPS32365,20952
#undef VERTICAL_PASSVERTICAL_PASS397,22402
#undef HORIZONTAL_PASSHORIZONTAL_PASS398,22423
static int Disto16x16_MIPS32(const uint8_t* const a, const uint8_t* const b,Disto16x16_MIPS32400,22447
#define HORIZONTAL_PASS(HORIZONTAL_PASS416,22962
#define VERTICAL_PASS(VERTICAL_PASS454,25611
static void FTransform_MIPS32(const uint8_t* src, const uint8_t* ref,FTransform_MIPS32482,27443
#undef VERTICAL_PASSVERTICAL_PASS515,29029
#undef HORIZONTAL_PASSHORIZONTAL_PASS516,29050
#define GET_SSE_INNER(GET_SSE_INNER520,29105
#define GET_SSE(GET_SSE538,30221
static int SSE16x16_MIPS32(const uint8_t* a, const uint8_t* b) {SSE16x16_MIPS32544,30438
static int SSE16x8_MIPS32(const uint8_t* a, const uint8_t* b) {SSE16x8_MIPS32578,32065
static int SSE8x8_MIPS32(const uint8_t* a, const uint8_t* b) {SSE8x8_MIPS32604,33163
static int SSE4x4_MIPS32(const uint8_t* a, const uint8_t* b) {SSE4x4_MIPS32626,33960
#undef GET_SSEGET_SSE645,34578
#undef GET_SSE_INNERGET_SSE_INNER646,34593
extern void VP8EncDspInitMIPS32(void);VP8EncDspInitMIPS32653,34741
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspInitMIPS32(void) {VP8EncDspInitMIPS32655,34781

src/dsp/cost_mips_dsp_r2.c,294
static int GetResidualCost_MIPSdspR2(int ctx0, const VP8Residual* const res) {GetResidualCost_MIPSdspR218,608
extern void VP8EncDspCostInitMIPSdspR2(void);VP8EncDspCostInitMIPSdspR297,4545
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspCostInitMIPSdspR2(void) {VP8EncDspCostInitMIPSdspR299,4592

src/dsp/ssim_sse2.c,744
static WEBP_INLINE void SubtractAndSquare_SSE2(const __m128i a, const __m128i b,SubtractAndSquare_SSE226,739
static uint32_t AccumulateSSE_SSE2(const uint8_t* src1,AccumulateSSE_SSE245,1494
static uint32_t HorizontalAdd16b_SSE2(const __m128i* const m) {HorizontalAdd16b_SSE286,2766
static uint32_t HorizontalAdd32b_SSE2(const __m128i* const m) {HorizontalAdd32b_SSE294,3029
static const uint16_t kWeight[] = { 1, 2, 3, 4, 3, 2, 1, 0 };kWeight101,3282
#define ACCUMULATE_ROW(ACCUMULATE_ROW103,3345
static double SSIMGet_SSE2(const uint8_t* src1, int stride1,SSIMGet_SSE2125,4598
extern void VP8SSIMDspInitSSE2(void);VP8SSIMDspInitSSE2150,5450
WEBP_TSAN_IGNORE_FUNCTION void VP8SSIMDspInitSSE2(void) {VP8SSIMDspInitSSE2152,5489

src/dsp/common_sse2.h,543
#define WEBP_DSP_COMMON_SSE2_H_WEBP_DSP_COMMON_SSE2_H_15,584
static WEBP_INLINE int VP8HorizontalAdd8b(const __m128i* const a) {VP8HorizontalAdd8b59,1712
static WEBP_INLINE void VP8Transpose_2_4x4_16b(VP8Transpose_2_4x4_16b68,2101
#define VP8PlanarTo24bHelper(VP8PlanarTo24bHelper109,4105
static WEBP_INLINE void VP8PlanarTo24b(__m128i* const in0, __m128i* const in1,VP8PlanarTo24b131,5405
#undef VP8PlanarTo24bHelperVP8PlanarTo24bHelper158,6685
static WEBP_INLINE void VP8L32bToPlanar(__m128i* const in0,VP8L32bToPlanar162,6852

src/dsp/upsampling_mips_dsp_r2.c,1308
#define YUV_TO_RGB(YUV_TO_RGB22,723
static WEBP_INLINE void YuvToRgb(int y, int u, int v, uint8_t* const rgb) {YuvToRgb50,2793
static WEBP_INLINE void YuvToBgr(int y, int u, int v, uint8_t* const bgr) {YuvToBgr57,2960
static WEBP_INLINE void YuvToRgb565(int y, int u, int v, uint8_t* const rgb) {YuvToRgb56564,3127
static WEBP_INLINE void YuvToRgba4444(int y, int u, int v,YuvToRgba444479,3466
static WEBP_INLINE void YuvToArgb(uint8_t y, uint8_t u, uint8_t v,YuvToArgb101,4041
static WEBP_INLINE void YuvToBgra(uint8_t y, uint8_t u, uint8_t v,YuvToBgra111,4305
static WEBP_INLINE void YuvToRgba(uint8_t y, uint8_t u, uint8_t v,YuvToRgba120,4541
#define LOAD_UV(LOAD_UV143,5193
#define UPSAMPLE_FUNC(UPSAMPLE_FUNC145,5236
#undef LOAD_UVLOAD_UV214,10269
#undef UPSAMPLE_FUNCUPSAMPLE_FUNC215,10284
extern void WebPInitUpsamplersMIPSdspR2(void);WebPInitUpsamplersMIPSdspR2220,10403
WEBP_TSAN_IGNORE_FUNCTION void WebPInitUpsamplersMIPSdspR2(void) {WebPInitUpsamplersMIPSdspR2222,10451
#define YUV444_FUNC(YUV444_FUNC243,11345
#undef YUV444_FUNCYUV444_FUNC260,12148
extern void WebPInitYUV444ConvertersMIPSdspR2(void);WebPInitYUV444ConvertersMIPSdspR2265,12265
WEBP_TSAN_IGNORE_FUNCTION void WebPInitYUV444ConvertersMIPSdspR2(void) {WebPInitYUV444ConvertersMIPSdspR2267,12319

src/dsp/alpha_processing_sse2.c,1168
static int DispatchAlpha_SSE2(const uint8_t* alpha, int alpha_stride,DispatchAlpha_SSE221,720
static void DispatchAlphaToGreen_SSE2(const uint8_t* alpha, int alpha_stride,DispatchAlphaToGreen_SSE275,2898
static int ExtractAlpha_SSE2(const uint8_t* argb, int argb_stride,ExtractAlpha_SSE2101,4066
#define MULTIPLIER(MULTIPLIER149,5936
#define PREMULTIPLY(PREMULTIPLY150,5975
#define APPLY_ALPHA(APPLY_ALPHA156,6266
static void ApplyAlphaMultiply_SSE2(uint8_t* rgba, int alpha_first,ApplyAlphaMultiply_SSE2177,7628
#undef MULTIPLIERMULTIPLIER210,8796
#undef PREMULTIPLYPREMULTIPLY211,8814
static int HasAlpha8b_SSE2(const uint8_t* src, int length) {HasAlpha8b_SSE2216,8935
static int HasAlpha32b_SSE2(const uint8_t* src, int length) {HasAlpha32b_SSE2229,9370
static void MultARGBRow_SSE2(uint32_t* const ptr, int width, int inverse) {MultARGBRow_SSE2271,11351
static void MultRow_SSE2(uint8_t* const ptr, const uint8_t* const alpha,MultRow_SSE2299,12583
extern void WebPInitAlphaProcessingSSE2(void);WebPInitAlphaProcessingSSE2325,13605
WEBP_TSAN_IGNORE_FUNCTION void WebPInitAlphaProcessingSSE2(void) {WebPInitAlphaProcessingSSE2327,13653

src/dsp/dec.c,6724
static WEBP_INLINE uint8_t clip_8b(int v) {clip_8b22,771
#define STORE(STORE29,980
#define STORE2(STORE232,1074
#define MUL1(MUL140,1315
#define MUL2(MUL241,1361
static void TransformOne_C(const int16_t* in, uint8_t* dst) {TransformOne_C44,1427
static void TransformAC3_C(const int16_t* in, uint8_t* dst) {TransformAC3_C84,2849
#undef MUL1MUL195,3176
#undef MUL2MUL296,3188
#undef STORE2STORE297,3200
static void TransformTwo_C(const int16_t* in, uint8_t* dst, int do_two) {TransformTwo_C99,3215
static void TransformUV_C(const int16_t* in, uint8_t* dst) {TransformUV_C107,3411
static void TransformDC_C(const int16_t* in, uint8_t* dst) {TransformDC_C113,3586
static void TransformDCUV_C(const int16_t* in, uint8_t* dst) {TransformDCUV_C124,3815
#undef STORESTORE131,4117
static void TransformWHT_C(const int16_t* in, int16_t* out) {TransformWHT_C137,4258
void (*VP8TransformWHT)(const int16_t* in, int16_t* out);VP8TransformWHT165,5124
#define DST(DST170,5286
static WEBP_INLINE void TrueMotion(uint8_t* dst, int size) {TrueMotion173,5353
static void TM4_C(uint8_t* dst)   { TrueMotion(dst, 4); }TM4_C186,5690
static void TM8uv_C(uint8_t* dst) { TrueMotion(dst, 8); }TM8uv_C187,5748
static void TM16_C(uint8_t* dst)  { TrueMotion(dst, 16); }TM16_C188,5806
static void VE16_C(uint8_t* dst) {     // verticalVE16_C193,5957
static void HE16_C(uint8_t* dst) {     // horizontalHE16_C200,6095
static WEBP_INLINE void Put16(int v, uint8_t* dst) {Put16208,6239
static void DC16_C(uint8_t* dst) {    // DCDC16_C215,6371
static void DC16NoTop_C(uint8_t* dst) {   // DC with top samples not availableDC16NoTop_C224,6542
static void DC16NoLeft_C(uint8_t* dst) {  // DC with left samples not availableDC16NoLeft_C233,6732
static void DC16NoTopLeft_C(uint8_t* dst) {  // DC with no top and left samplesDC16NoTopLeft_C242,6918
VP8PredFunc VP8PredLuma16[NUM_B_DC_MODES];VP8PredLuma16247,7055
#define AVG3(AVG3252,7188
#define AVG2(AVG2253,7254
static void VE4_C(uint8_t* dst) {    // verticalVE4_C256,7324
static void HE4_C(uint8_t* dst) {    // horizontalHE4_C271,7704
static void DC4_C(uint8_t* dst) {   // DCDC4_C284,8194
static void RD4_C(uint8_t* dst) {   // Down-rightRD4_C292,8401
static void LD4_C(uint8_t* dst) {   // Down-LeftLD4_C311,9200
static void VR4_C(uint8_t* dst) {   // Vertical-RightVR4_C330,9981
static void VL4_C(uint8_t* dst) {   // Vertical-LeftVL4_C352,10693
static void HU4_C(uint8_t* dst) {   // Horizontal-UpHU4_C374,11388
static void HD4_C(uint8_t* dst) {  // Horizontal-DownHD4_C389,11902
#undef DSTDST412,12620
#undef AVG3AVG3413,12631
#undef AVG2AVG2414,12643
VP8PredFunc VP8PredLuma4[NUM_BMODES];VP8PredLuma4416,12656
static void VE8uv_C(uint8_t* dst) {    // verticalVE8uv_C422,12814
static void HE8uv_C(uint8_t* dst) {    // horizontalHE8uv_C429,12950
static WEBP_INLINE void Put8x8uv(uint8_t value, uint8_t* dst) {Put8x8uv438,13128
static void DC8uv_C(uint8_t* dst) {     // DCDC8uv_C445,13273
static void DC8uvNoLeft_C(uint8_t* dst) {   // DC with no left samplesDC8uvNoLeft_C454,13450
static void DC8uvNoTop_C(uint8_t* dst) {  // DC with no top samplesDC8uvNoTop_C463,13632
static void DC8uvNoTopLeft_C(uint8_t* dst) {    // DC with nothingDC8uvNoTopLeft_C472,13816
VP8PredFunc VP8PredChroma8[NUM_B_DC_MODES];VP8PredChroma8477,13943
static WEBP_INLINE void DoFilter2_C(uint8_t* p, int step) {DoFilter2_C484,14183
static WEBP_INLINE void DoFilter4_C(uint8_t* p, int step) {DoFilter4_C494,14593
static WEBP_INLINE void DoFilter6_C(uint8_t* p, int step) {DoFilter6_C507,15043
static WEBP_INLINE int Hev(const uint8_t* p, int step, int thresh) {Hev523,15781
static WEBP_INLINE int NeedsFilter_C(const uint8_t* p, int step, int t) {NeedsFilter_C530,16083
static WEBP_INLINE int NeedsFilter2_C(const uint8_t* p,NeedsFilter2_C537,16382
static void SimpleVFilter16_C(uint8_t* p, int stride, int thresh) {SimpleVFilter16_C553,17144
static void SimpleHFilter16_C(uint8_t* p, int stride, int thresh) {SimpleHFilter16_C563,17384
static void SimpleVFilter16i_C(uint8_t* p, int stride, int thresh) {SimpleVFilter16i_C573,17632
static void SimpleHFilter16i_C(uint8_t* p, int stride, int thresh) {SimpleHFilter16i_C581,17808
static WEBP_INLINE void FilterLoop26_C(uint8_t* p,FilterLoop26_C594,18193
static WEBP_INLINE void FilterLoop24_C(uint8_t* p,FilterLoop24_C611,18718
static void VFilter16_C(uint8_t* p, int stride,VFilter16_C631,19356
static void HFilter16_C(uint8_t* p, int stride,HFilter16_C636,19539
static void VFilter16i_C(uint8_t* p, int stride,VFilter16i_C642,19746
static void HFilter16i_C(uint8_t* p, int stride,HFilter16i_C653,20085
static void VFilter8_C(uint8_t* u, uint8_t* v, int stride,VFilter8_C665,20462
static void HFilter8_C(uint8_t* u, uint8_t* v, int stride,HFilter8_C673,20808
static void VFilter8i_C(uint8_t* u, uint8_t* v, int stride,VFilter8i_C681,21154
static void HFilter8i_C(uint8_t* u, uint8_t* v, int stride,HFilter8i_C689,21528
static void DitherCombine8x8_C(const uint8_t* dither, uint8_t* dst,DitherCombine8x8_C698,21939
VP8DecIdct2 VP8Transform;VP8Transform715,22463
VP8DecIdct VP8TransformAC3;VP8TransformAC3716,22489
VP8DecIdct VP8TransformUV;VP8TransformUV717,22517
VP8DecIdct VP8TransformDC;VP8TransformDC718,22544
VP8DecIdct VP8TransformDCUV;VP8TransformDCUV719,22571
VP8LumaFilterFunc VP8VFilter16;VP8VFilter16721,22601
VP8LumaFilterFunc VP8HFilter16;VP8HFilter16722,22633
VP8ChromaFilterFunc VP8VFilter8;VP8VFilter8723,22665
VP8ChromaFilterFunc VP8HFilter8;VP8HFilter8724,22698
VP8LumaFilterFunc VP8VFilter16i;VP8VFilter16i725,22731
VP8LumaFilterFunc VP8HFilter16i;VP8HFilter16i726,22764
VP8ChromaFilterFunc VP8VFilter8i;VP8VFilter8i727,22797
VP8ChromaFilterFunc VP8HFilter8i;VP8HFilter8i728,22831
VP8SimpleFilterFunc VP8SimpleVFilter16;VP8SimpleVFilter16729,22865
VP8SimpleFilterFunc VP8SimpleHFilter16;VP8SimpleHFilter16730,22905
VP8SimpleFilterFunc VP8SimpleVFilter16i;VP8SimpleVFilter16i731,22945
VP8SimpleFilterFunc VP8SimpleHFilter16i;VP8SimpleHFilter16i732,22986
void (*VP8DitherCombine8x8)(const uint8_t* dither, uint8_t* dst,VP8DitherCombine8x8734,23028
extern void VP8DspInitSSE2(void);VP8DspInitSSE2737,23139
extern void VP8DspInitSSE41(void);VP8DspInitSSE41738,23173
extern void VP8DspInitNEON(void);VP8DspInitNEON739,23208
extern void VP8DspInitMIPS32(void);VP8DspInitMIPS32740,23242
extern void VP8DspInitMIPSdspR2(void);VP8DspInitMIPSdspR2741,23278
extern void VP8DspInitMSA(void);VP8DspInitMSA742,23317
static volatile VP8CPUInfo dec_last_cpuinfo_used =dec_last_cpuinfo_used744,23351
WEBP_TSAN_IGNORE_FUNCTION void VP8DspInit(void) {VP8DspInit747,23443

src/dsp/msa_macro.h,12744
#define WEBP_DSP_MSA_MACRO_H_WEBP_DSP_MSA_MACRO_H_15,578
  #define CLANG_BUILDCLANG_BUILD21,670
  #define ALPHAVAL ALPHAVAL25,719
  #define ADDVI_H(ADDVI_H26,744
  #define ADDVI_W(ADDVI_W27,796
  #define SRAI_B(SRAI_B28,848
  #define SRAI_H(SRAI_H29,898
  #define SRAI_W(SRAI_W30,948
  #define SRLI_H(SRLI_H31,998
  #define SLLI_B(SLLI_B32,1048
  #define ANDI_B(ANDI_B33,1098
  #define ORI_B(ORI_B34,1148
  #define ALPHAVAL ALPHAVAL36,1203
  #define ADDVI_H(ADDVI_H37,1230
  #define ADDVI_W(ADDVI_W38,1263
  #define SRAI_B(SRAI_B39,1296
  #define SRAI_H(SRAI_H40,1329
  #define SRAI_W(SRAI_W41,1362
  #define SRLI_H(SRLI_H42,1395
  #define SLLI_B(SLLI_B43,1428
  #define ANDI_B(ANDI_B44,1461
  #define ORI_B(ORI_B45,1493
#define LD_B(LD_B48,1533
#define LD_UB(LD_UB49,1577
#define LD_SB(LD_SB50,1621
#define LD_H(LD_H52,1666
#define LD_UH(LD_UH53,1710
#define LD_SH(LD_SH54,1754
#define LD_W(LD_W56,1799
#define LD_UW(LD_UW57,1843
#define LD_SW(LD_SW58,1887
#define ST_B(ST_B60,1932
#define ST_UB(ST_UB61,1985
#define ST_SB(ST_SB62,2029
#define ST_H(ST_H64,2074
#define ST_UH(ST_UH65,2127
#define ST_SH(ST_SH66,2171
#define ST_W(ST_W68,2216
#define ST_UW(ST_UW69,2269
#define ST_SW(ST_SW70,2313
#define MSA_LOAD_FUNC(MSA_LOAD_FUNC72,2358
#define MSA_LOAD(MSA_LOAD83,2903
#define MSA_STORE_FUNC(MSA_STORE_FUNC85,2955
#define MSA_STORE(MSA_STORE95,3464
  #define LH(LH99,3592
  #define LW(LW101,3674
    #define LD(LD104,3779
    #define LD(LD106,3852
  #define SH(SH111,4042
  #define SW(SW113,4136
  #define SD(SD115,4230
  #define LH(LH118,4358
  #define LW(LW120,4443
    #define LD(LD123,4551
    #define LD(LD125,4625
  #define SH(SH130,4820
  #define SW(SW132,4917
  #define SD(SD133,4972
#define LW4(LW4150,5849
#define SW4(SW4168,6719
#define SW3(SW3179,7218
#define SW2(SW2188,7574
#define SD4(SD4202,8179
#define LD_B2(LD_B2220,8999
#define LD_UB2(LD_UB2224,9176
#define LD_SB2(LD_SB2225,9222
#define LD_B3(LD_B3227,9269
#define LD_UB3(LD_UB3231,9464
#define LD_SB3(LD_SB3232,9510
#define LD_B4(LD_B4234,9557
#define LD_UB4(LD_UB4238,9770
#define LD_SB4(LD_SB4239,9816
#define LD_B8(LD_B8241,9863
#define LD_UB8(LD_UB8246,10155
#define LD_SB8(LD_SB8247,10201
#define LD_H2(LD_H2255,10534
#define LD_UH2(LD_UH2259,10711
#define LD_SH2(LD_SH2260,10757
#define LD_W2(LD_W2270,11253
#define LD_UW2(LD_UW2274,11430
#define LD_SW2(LD_SW2275,11476
#define LD_W3(LD_W3277,11523
#define LD_UW3(LD_UW3281,11718
#define LD_SW3(LD_SW3282,11764
#define LD_W4(LD_W4284,11811
#define LD_UW4(LD_UW4288,12024
#define LD_SW4(LD_SW4289,12070
#define ST_B2(ST_B2296,12364
#define ST_UB2(ST_UB2300,12535
#define ST_SB2(ST_SB2301,12581
#define ST_B4(ST_B4303,12628
#define ST_UB4(ST_UB4307,12829
#define ST_SB4(ST_SB4308,12875
#define ST_B8(ST_B8310,12922
#define ST_UB8(ST_UB8315,13198
#define ST_W2(ST_W2324,13662
#define ST_UW2(ST_UW2328,13833
#define ST_SW2(ST_SW2329,13879
#define ST_W3(ST_W3331,13926
#define ST_UW3(ST_UW3335,14112
#define ST_SW3(ST_SW3336,14158
#define ST_W4(ST_W4338,14205
#define ST_UW4(ST_UW4342,14406
#define ST_SW4(ST_SW4343,14452
#define ST_H2(ST_H2350,14755
#define ST_UH2(ST_UH2354,14926
#define ST_SH2(ST_SH2355,14972
#define ST2x4_UB(ST2x4_UB368,15720
#define ST4x4_UB(ST4x4_UB394,17282
#define ST4x8_UB(ST4x8_UB403,17806
#define SLDI_B(SLDI_B416,18396
#define SLDI_UB(SLDI_UB419,18529
#define SLDI_SB(SLDI_SB420,18577
#define SLDI_SH(SLDI_SH421,18625
#define VSHF_B(VSHF_B430,19015
#define VSHF_UB(VSHF_UB433,19150
#define VSHF_SB(VSHF_SB434,19198
#define VSHF_UH(VSHF_UH435,19246
#define VSHF_SH(VSHF_SH436,19294
#define VSHF_B2(VSHF_B2438,19343
#define VSHF_B2_UB(VSHF_B2_UB442,19586
#define VSHF_B2_SB(VSHF_B2_SB443,19638
#define VSHF_B2_UH(VSHF_B2_UH444,19690
#define VSHF_B2_SH(VSHF_B2_SH445,19742
#define VSHF_H2(VSHF_H2454,20144
#define VSHF_H2_UH(VSHF_H2_UH458,20387
#define VSHF_H2_SH(VSHF_H2_SH459,20439
#define DOTP_SB2(DOTP_SB2471,21030
#define DOTP_SB2_SH(DOTP_SB2_SH475,21258
#define DOTP_SH2(DOTP_SH2487,21860
#define DOTP_SH2_SW(DOTP_SH2_SW491,22088
#define DOTP_UW2(DOTP_UW2503,22700
#define DOTP_UW2_UD(DOTP_UW2_UD507,22928
#define DPADD_SH2(DPADD_SH2519,23520
#define DPADD_SH2_SW(DPADD_SH2_SW523,23763
#define CLIP_SH_0_255(CLIP_SH_0_255530,24009
#define CLIP_SH2_0_255(CLIP_SH2_0_255536,24230
#define CLIP_SH4_0_255(CLIP_SH4_0_255541,24366
#define CLIP_UH_0_255(CLIP_UH_0_255552,24749
#define CLIP_UH2_0_255(CLIP_UH2_0_255558,24970
#define CLIP_SW_0_255(CLIP_SW_0_255568,25287
#define CLIP_SW4_0_255(CLIP_SW4_0_255574,25508
static WEBP_INLINE int32_t func_hadd_sw_s32(v4i32 in) {func_hadd_sw_s32588,26146
#define HADD_SW_S32(HADD_SW_S32595,26417
static WEBP_INLINE int32_t func_hadd_sh_s32(v8i16 in) {func_hadd_sh_s32604,26820
#define HADD_SH_S32(HADD_SH_S32612,27121
static WEBP_INLINE uint32_t func_hadd_uh_u32(v8u16 in) {func_hadd_uh_u32621,27532
#define HADD_UH_U32(HADD_UH_U32630,27848
#define HADD_SH2(HADD_SH2640,28293
#define HADD_SH2_SW(HADD_SH2_SW644,28482
#define HADD_SH4(HADD_SH4646,28537
#define HADD_SH4_SW(HADD_SH4_SW650,28777
#define HSUB_UB2(HSUB_UB2660,29233
#define HSUB_UB2_UH(HSUB_UB2_UH664,29422
#define HSUB_UB2_SH(HSUB_UB2_SH665,29476
#define HSUB_UB2_SW(HSUB_UB2_SW666,29530
#define INSERT_W2(INSERT_W2674,29840
#define INSERT_W2_UB(INSERT_W2_UB678,30014
#define INSERT_W2_SB(INSERT_W2_SB679,30070
#define INSERT_W4(INSERT_W4681,30127
#define INSERT_W4_UB(INSERT_W4_UB687,30429
#define INSERT_W4_SB(INSERT_W4_SB688,30485
#define INSERT_W4_SW(INSERT_W4_SW689,30541
#define INSERT_D2(INSERT_D2698,30941
#define INSERT_D2_UB(INSERT_D2_UB702,31115
#define INSERT_D2_SB(INSERT_D2_SB703,31171
#define ILVEV_B2(ILVEV_B2712,31530
#define ILVEV_B2_UB(ILVEV_B2_UB716,31734
#define ILVEV_B2_SB(ILVEV_B2_SB717,31788
#define ILVEV_B2_UH(ILVEV_B2_UH718,31842
#define ILVEV_B2_SH(ILVEV_B2_SH719,31896
#define ILVEV_B2_SD(ILVEV_B2_SD720,31950
#define ILVOD_B2(ILVOD_B2729,32305
#define ILVOD_B2_UB(ILVOD_B2_UB733,32509
#define ILVOD_B2_SB(ILVOD_B2_SB734,32563
#define ILVOD_B2_UH(ILVOD_B2_UH735,32617
#define ILVOD_B2_SH(ILVOD_B2_SH736,32671
#define ILVOD_B2_SD(ILVOD_B2_SD737,32725
#define ILVEV_H2(ILVEV_H2746,33090
#define ILVEV_H2_UB(ILVEV_H2_UB750,33294
#define ILVEV_H2_UH(ILVEV_H2_UH751,33348
#define ILVEV_H2_SH(ILVEV_H2_SH752,33402
#define ILVEV_H2_SW(ILVEV_H2_SW753,33456
#define ILVOD_H2(ILVOD_H2762,33819
#define ILVOD_H2_UB(ILVOD_H2_UB766,34023
#define ILVOD_H2_UH(ILVOD_H2_UH767,34077
#define ILVOD_H2_SH(ILVOD_H2_SH768,34131
#define ILVOD_H2_SW(ILVOD_H2_SW769,34185
#define ILVEV_W2(ILVEV_W2778,34542
#define ILVEV_W2_UB(ILVEV_W2_UB782,34746
#define ILVEV_W2_SB(ILVEV_W2_SB783,34800
#define ILVEV_W2_UH(ILVEV_W2_UH784,34854
#define ILVEV_W2_SD(ILVEV_W2_SD785,34908
#define ILVEVOD_W2(ILVEVOD_W2796,35378
#define ILVEVOD_W2_UB(ILVEVOD_W2_UB800,35588
#define ILVEVOD_W2_UH(ILVEVOD_W2_UH801,35646
#define ILVEVOD_W2_SH(ILVEVOD_W2_SH802,35704
#define ILVEVOD_W2_SW(ILVEVOD_W2_SW803,35762
#define ILVEVOD_H2(ILVEVOD_H2814,36251
#define ILVEVOD_H2_UB(ILVEVOD_H2_UB818,36461
#define ILVEVOD_H2_UH(ILVEVOD_H2_UH819,36519
#define ILVEVOD_H2_SH(ILVEVOD_H2_SH820,36577
#define ILVEVOD_H2_SW(ILVEVOD_H2_SW821,36635
#define ILVEV_D2(ILVEV_D2830,37010
#define ILVEV_D2_UB(ILVEV_D2_UB834,37214
#define ILVEV_D2_SB(ILVEV_D2_SB835,37268
#define ILVEV_D2_SW(ILVEV_D2_SW836,37322
#define ILVEV_D2_SD(ILVEV_D2_SD837,37376
#define ILVL_B2(ILVL_B2846,37750
#define ILVL_B2_UB(ILVL_B2_UB850,37951
#define ILVL_B2_SB(ILVL_B2_SB851,38003
#define ILVL_B2_UH(ILVL_B2_UH852,38055
#define ILVL_B2_SH(ILVL_B2_SH853,38107
#define ILVL_B2_SW(ILVL_B2_SW854,38159
#define ILVR_B2(ILVR_B2863,38531
#define ILVR_B2_UB(ILVR_B2_UB867,38732
#define ILVR_B2_SB(ILVR_B2_SB868,38784
#define ILVR_B2_UH(ILVR_B2_UH869,38836
#define ILVR_B2_SH(ILVR_B2_SH870,38888
#define ILVR_B2_SW(ILVR_B2_SW871,38940
#define ILVR_B4(ILVR_B4873,38993
#define ILVR_B4_UB(ILVR_B4_UB878,39269
#define ILVR_B4_SB(ILVR_B4_SB879,39321
#define ILVR_B4_UH(ILVR_B4_UH880,39373
#define ILVR_B4_SH(ILVR_B4_SH881,39425
#define ILVR_B4_SW(ILVR_B4_SW882,39477
#define ILVR_H2(ILVR_H2891,39859
#define ILVR_H2_UB(ILVR_H2_UB895,40060
#define ILVR_H2_SH(ILVR_H2_SH896,40112
#define ILVR_H2_SW(ILVR_H2_SW897,40164
#define ILVR_H4(ILVR_H4899,40217
#define ILVR_H4_UB(ILVR_H4_UB904,40493
#define ILVR_H4_SH(ILVR_H4_SH905,40545
#define ILVR_H4_SW(ILVR_H4_SW906,40597
#define ILVR_D2(ILVR_D2915,40985
#define ILVR_D2_UB(ILVR_D2_UB919,41186
#define ILVR_D2_SB(ILVR_D2_SB920,41238
#define ILVR_D2_SH(ILVR_D2_SH921,41290
#define ILVR_D4(ILVR_D4923,41343
#define ILVR_D4_SB(ILVR_D4_SB928,41619
#define ILVR_D4_UB(ILVR_D4_UB929,41671
#define ILVRL_B2(ILVRL_B2938,42037
#define ILVRL_B2_UB(ILVRL_B2_UB942,42220
#define ILVRL_B2_SB(ILVRL_B2_SB943,42274
#define ILVRL_B2_UH(ILVRL_B2_UH944,42328
#define ILVRL_B2_SH(ILVRL_B2_SH945,42382
#define ILVRL_B2_SW(ILVRL_B2_SW946,42436
#define ILVRL_H2(ILVRL_H2948,42491
#define ILVRL_H2_UB(ILVRL_H2_UB952,42674
#define ILVRL_H2_SB(ILVRL_H2_SB953,42728
#define ILVRL_H2_SH(ILVRL_H2_SH954,42782
#define ILVRL_H2_SW(ILVRL_H2_SW955,42836
#define ILVRL_H2_UW(ILVRL_H2_UW956,42890
#define ILVRL_W2(ILVRL_W2958,42945
#define ILVRL_W2_UB(ILVRL_W2_UB962,43128
#define ILVRL_W2_SH(ILVRL_W2_SH963,43182
#define ILVRL_W2_SW(ILVRL_W2_SW964,43236
#define ILVRL_W2_UW(ILVRL_W2_UW965,43290
#define PCKEV_B2(PCKEV_B2975,43727
#define PCKEV_B2_SB(PCKEV_B2_SB979,43931
#define PCKEV_B2_UB(PCKEV_B2_UB980,43985
#define PCKEV_B2_SH(PCKEV_B2_SH981,44039
#define PCKEV_B2_SW(PCKEV_B2_SW982,44093
#define PCKEV_B4(PCKEV_B4984,44148
#define PCKEV_B4_SB(PCKEV_B4_SB989,44428
#define PCKEV_B4_UB(PCKEV_B4_UB990,44482
#define PCKEV_B4_SH(PCKEV_B4_SH991,44536
#define PCKEV_B4_SW(PCKEV_B4_SW992,44590
#define PCKEV_H2(PCKEV_H21002,45033
#define PCKEV_H2_UH(PCKEV_H2_UH1006,45237
#define PCKEV_H2_SH(PCKEV_H2_SH1007,45291
#define PCKEV_H2_SW(PCKEV_H2_SW1008,45345
#define PCKEV_H2_UW(PCKEV_H2_UW1009,45399
#define PCKEV_W2(PCKEV_W21019,45830
#define PCKEV_W2_UH(PCKEV_W2_UH1023,46034
#define PCKEV_W2_SH(PCKEV_W2_SH1024,46088
#define PCKEV_W2_SW(PCKEV_W2_SW1025,46142
#define PCKEV_W2_UW(PCKEV_W2_UW1026,46196
#define PCKOD_H2(PCKOD_H21036,46636
#define PCKOD_H2_UH(PCKOD_H2_UH1040,46840
#define PCKOD_H2_SH(PCKOD_H2_SH1041,46894
#define PCKOD_H2_SW(PCKOD_H2_SW1042,46948
#define PCKOD_H2_UW(PCKOD_H2_UW1043,47002
#define SRAI_W2(SRAI_W21052,47438
#define SRAI_W2_SW(SRAI_W2_SW1056,47606
#define SRAI_W2_UW(SRAI_W2_UW1057,47658
#define SRAI_W4(SRAI_W41059,47711
#define SRAI_W4_SW(SRAI_W4_SW1063,47909
#define SRAI_W4_UW(SRAI_W4_UW1064,47961
#define SRAI_H2(SRAI_H21073,48390
#define SRAI_H2_SH(SRAI_H2_SH1077,48558
#define SRAI_H2_UH(SRAI_H2_UH1078,48610
#define SRARI_W2(SRARI_W21087,49042
#define SRARI_W2_SW(SRARI_W2_SW1091,49210
#define SRARI_W4(SRARI_W41093,49265
#define SRARI_W4_SH(SRARI_W4_SH1097,49454
#define SRARI_W4_UW(SRARI_W4_UW1098,49508
#define SRARI_W4_SW(SRARI_W4_SW1099,49562
#define SRAR_D2(SRAR_D21111,50154
#define SRAR_D2_SW(SRAR_D2_SW1115,50340
#define SRAR_D2_SD(SRAR_D2_SD1116,50392
#define SRAR_D2_UD(SRAR_D2_UD1117,50444
#define SRAR_D4(SRAR_D41119,50497
#define SRAR_D4_SD(SRAR_D4_SD1123,50683
#define SRAR_D4_UD(SRAR_D4_UD1124,50735
#define ADDVI_H2(ADDVI_H21132,51041
#define ADDVI_H2_SH(ADDVI_H2_SH1136,51245
#define ADDVI_H2_UH(ADDVI_H2_UH1137,51299
#define ADDVI_W2(ADDVI_W21145,51602
#define ADDVI_W2_SW(ADDVI_W2_SW1149,51806
#define FILL_W2(FILL_W21157,52155
#define FILL_W2_SW(FILL_W2_SW1161,52326
#define ADD2(ADD21169,52622
#define ADD4(ADD41174,52794
#define SUB2(SUB21186,53284
#define SUB3(SUB31191,53456
#define SUB4(SUB41197,53745
#define ADDSUB2(ADDSUB21213,54450
#define MUL2(MUL21224,54874
#define MUL4(MUL41229,55046
#define UNPCK_R_SH_SW(UNPCK_R_SH_SW1243,55721
#define UNPCK_SH_SW(UNPCK_SH_SW1259,56531
#define BUTTERFLY_4(BUTTERFLY_41269,56895
#define TRANSPOSE16x4_UB_UB(TRANSPOSE16x4_UB_UB1282,57584
#define TRANSPOSE16x8_UB_UB(TRANSPOSE16x8_UB_UB1304,59015
#define TRANSPOSE4x4_W(TRANSPOSE4x4_W1333,60935
#define TRANSPOSE4x4_SW_SW(TRANSPOSE4x4_SW_SW1343,61658
#define ADDBLK_ST4x4_UB(ADDBLK_ST4x4_UB1350,61973
#define PCKEV_ST4x4_UB(PCKEV_ST4x4_UB1372,63216
#define AVER_UB2(AVER_UB21386,63905
#define AVER_UB2_UB(AVER_UB2_UB1390,64109

src/dsp/filters_sse2.c,1696
# define SANITY_CHECK(SANITY_CHECK26,783
static void PredictLineTop_SSE2(const uint8_t* src, const uint8_t* pred,PredictLineTop_SSE235,1395
static void PredictLineLeft_SSE2(const uint8_t* src, uint8_t* dst, int length) {PredictLineLeft_SSE254,2245
static WEBP_INLINE void DoHorizontalFilter_SSE2(const uint8_t* in,DoHorizontalFilter_SSE274,3097
static WEBP_INLINE void DoVerticalFilter_SSE2(const uint8_t* in,DoVerticalFilter_SSE2108,4141
static WEBP_INLINE int GradientPredictor_SSE2(uint8_t a, uint8_t b, uint8_t c) {GradientPredictor_SSE2140,5075
static void GradientPredictDirect_SSE2(const uint8_t* const row,GradientPredictDirect_SSE2145,5256
static WEBP_INLINE void DoGradientFilter_SSE2(const uint8_t* in,DoGradientFilter_SSE2170,6350
#undef SANITY_CHECKSANITY_CHECK199,7186
static void HorizontalFilter_SSE2(const uint8_t* data, int width, int height,HorizontalFilter_SSE2203,7289
static void VerticalFilter_SSE2(const uint8_t* data, int width, int height,VerticalFilter_SSE2209,7550
static void GradientFilter_SSE2(const uint8_t* data, int width, int height,GradientFilter_SSE2214,7779
static void HorizontalUnfilter_SSE2(const uint8_t* prev, const uint8_t* in,HorizontalUnfilter_SSE2222,8112
static void VerticalUnfilter_SSE2(const uint8_t* prev, const uint8_t* in,VerticalUnfilter_SSE2244,8961
static void GradientPredictInverse_SSE2(const uint8_t* const in,GradientPredictInverse_SSE2266,9844
static void GradientUnfilter_SSE2(const uint8_t* prev, const uint8_t* in,GradientUnfilter_SSE2304,11757
extern void VP8FiltersInitSSE2(void);VP8FiltersInitSSE2317,12204
WEBP_TSAN_IGNORE_FUNCTION void VP8FiltersInitSSE2(void) {VP8FiltersInitSSE2319,12243

src/dsp/upsampling_sse2.c,1172
#define GET_M(GET_M41,1305
#define PACK_AND_STORE(PACK_AND_STORE51,1930
#define UPSAMPLE_32PIXELS(UPSAMPLE_32PIXELS61,2579
static void Upsample32Pixels_SSE2(const uint8_t r1[], const uint8_t r2[],Upsample32Pixels_SSE291,4844
#define UPSAMPLE_LAST_BLOCK(UPSAMPLE_LAST_BLOCK96,5011
#define CONVERT2RGB(CONVERT2RGB107,5743
#define CONVERT2RGB_32(CONVERT2RGB_32122,6799
#define SSE2_UPSAMPLE_FUNC(SSE2_UPSAMPLE_FUNC131,7379
#undef GET_MGET_M183,11014
#undef PACK_AND_STOREPACK_AND_STORE184,11027
#undef UPSAMPLE_32PIXELSUPSAMPLE_32PIXELS185,11049
#undef UPSAMPLE_LAST_BLOCKUPSAMPLE_LAST_BLOCK186,11074
#undef CONVERT2RGBCONVERT2RGB187,11101
#undef CONVERT2RGB_32CONVERT2RGB_32188,11120
#undef SSE2_UPSAMPLE_FUNCSSE2_UPSAMPLE_FUNC189,11142
extern void WebPInitUpsamplersSSE2(void);WebPInitUpsamplersSSE2196,11332
WEBP_TSAN_IGNORE_FUNCTION void WebPInitUpsamplersSSE2(void) {WebPInitUpsamplersSSE2198,11375
extern void WebPInitYUV444ConvertersSSE2(void);WebPInitYUV444ConvertersSSE2219,12323
#define YUV444_FUNC(YUV444_FUNC221,12372
WEBP_TSAN_IGNORE_FUNCTION void WebPInitYUV444ConvertersSSE2(void) {WebPInitYUV444ConvertersSSE2247,14042

src/dsp/dec_sse2.c,5180
#define USE_TRANSFORM_AC3 USE_TRANSFORM_AC322,877
static void Transform_SSE2(const int16_t* in, uint8_t* dst, int do_two) {Transform_SSE233,1162
#define MUL(MUL199,8107
static void TransformAC3(const int16_t* in, uint8_t* dst) {TransformAC3200,8145
#undef MULMUL241,10011
#define MM_ABS(MM_ABS248,10216
static WEBP_INLINE void SignedShift8b_SSE2(__m128i* const x) {SignedShift8b_SSE2253,10478
#define FLIP_SIGN_BIT2(FLIP_SIGN_BIT2262,10832
#define FLIP_SIGN_BIT4(FLIP_SIGN_BIT4267,11078
static WEBP_INLINE void GetNotHEV_SSE2(const __m128i* const p1,GetNotHEV_SSE2273,11351
static WEBP_INLINE void GetBaseDelta_SSE2(const __m128i* const p1,GetBaseDelta_SSE2290,12069
static WEBP_INLINE void DoSimpleFilter_SSE2(__m128i* const p0,DoSimpleFilter_SSE2305,12857
static WEBP_INLINE void Update2Pixels_SSE2(__m128i* const pi, __m128i* const qi,Update2Pixels_SSE2323,13658
static WEBP_INLINE void NeedsFilter_SSE2(const __m128i* const p1,NeedsFilter_SSE2336,14217
static WEBP_INLINE void DoFilter2_SSE2(__m128i* const p1, __m128i* const p0,DoFilter2_SSE2359,15340
static WEBP_INLINE void DoFilter4_SSE2(__m128i* const p1, __m128i* const p0,DoFilter4_SSE2378,16089
static WEBP_INLINE void DoFilter6_SSE2(__m128i* const p2, __m128i* const p1,DoFilter6_SSE2424,18041
static WEBP_INLINE void Load8x4_SSE2(const uint8_t* const b, int stride,Load8x4_SSE2475,20023
static WEBP_INLINE void Load16x4_SSE2(const uint8_t* const r0,Load16x4_SSE2502,21267
static WEBP_INLINE void Store4x4_SSE2(__m128i* const x,Store4x4_SSE2539,22697
static WEBP_INLINE void Store16x4_SSE2(const __m128i* const p1,Store16x4_SSE2549,22987
static void SimpleVFilter16_SSE2(uint8_t* p, int stride, int thresh) {SimpleVFilter16_SSE2593,24537
static void SimpleHFilter16_SSE2(uint8_t* p, int stride, int thresh) {SimpleHFilter16_SSE2607,24985
static void SimpleVFilter16i_SSE2(uint8_t* p, int stride, int thresh) {SimpleVFilter16i_SSE2617,25292
static void SimpleHFilter16i_SSE2(uint8_t* p, int stride, int thresh) {SimpleHFilter16i_SSE2625,25474
#define MAX_DIFF1(MAX_DIFF1636,25775
#define MAX_DIFF2(MAX_DIFF2642,26112
#define LOAD_H_EDGES4(LOAD_H_EDGES4648,26449
#define LOADUV_H_EDGE(LOADUV_H_EDGE655,26857
#define LOADUV_H_EDGES4(LOADUV_H_EDGES4661,27194
#define STOREUV(STOREUV668,27602
static WEBP_INLINE void ComplexMask_SSE2(const __m128i* const p1,ComplexMask_SSE2674,27929
static void VFilter16_SSE2(uint8_t* p, int stride,VFilter16_SSE2689,28648
static void HFilter16_SSE2(uint8_t* p, int stride,HFilter16_SSE2715,29509
static void VFilter16i_SSE2(uint8_t* p, int stride,VFilter16i_SSE2735,30206
static void HFilter16i_SSE2(uint8_t* p, int stride,HFilter16i_SSE2768,31286
static void VFilter8_SSE2(uint8_t* u, uint8_t* v, int stride,VFilter8_SSE2797,32178
static void HFilter8_SSE2(uint8_t* u, uint8_t* v, int stride,HFilter8_SSE2822,32957
static void VFilter8i_SSE2(uint8_t* u, uint8_t* v, int stride,VFilter8i_SSE2842,33622
static void HFilter8i_SSE2(uint8_t* u, uint8_t* v, int stride,HFilter8i_SSE2868,34335
#define DST(DST891,35089
#define AVG3(AVG3892,35128
static void VE4_SSE2(uint8_t* dst) {    // verticalVE4_SSE2902,35531
static void LD4_SSE2(uint8_t* dst) {   // Down-LeftLD4_SSE2918,36163
static void VR4_SSE2(uint8_t* dst) {   // Vertical-RightVR4_SSE2934,37073
static void VL4_SSE2(uint8_t* dst) {   // Vertical-LeftVL4_SSE2959,38263
static void RD4_SSE2(uint8_t* dst) {   // Down-rightRD4_SSE2984,39540
#undef DSTDST1007,40757
#undef AVG3AVG31008,40768
static WEBP_INLINE void TrueMotion_SSE2(uint8_t* dst, int size) {TrueMotion_SSE21013,40877
static void TM4_SSE2(uint8_t* dst)   { TrueMotion_SSE2(dst, 4); }TM4_SSE21050,42465
static void TM8uv_SSE2(uint8_t* dst) { TrueMotion_SSE2(dst, 8); }TM8uv_SSE21051,42531
static void TM16_SSE2(uint8_t* dst)  { TrueMotion_SSE2(dst, 16); }TM16_SSE21052,42597
static void VE16_SSE2(uint8_t* dst) {VE16_SSE21054,42665
static void HE16_SSE2(uint8_t* dst) {     // horizontalHE16_SSE21062,42870
static WEBP_INLINE void Put16_SSE2(uint8_t v, uint8_t* dst) {Put16_SSE21071,43083
static void DC16_SSE2(uint8_t* dst) {  // DCDC16_SSE21079,43290
static void DC16NoTop_SSE2(uint8_t* dst) {  // DC with top samples unavailableDC16NoTop_SSE21096,43806
static void DC16NoLeft_SSE2(uint8_t* dst) {  // DC with left samples unavailableDC16NoLeft_SSE21105,44001
static void DC16NoTopLeft_SSE2(uint8_t* dst) {  // DC with no top & left samplesDC16NoTopLeft_SSE21115,44444
static void VE8uv_SSE2(uint8_t* dst) {    // verticalVE8uv_SSE21122,44645
static WEBP_INLINE void Put8x8uv_SSE2(uint8_t v, uint8_t* dst) {Put8x8uv_SSE21131,44901
static void DC8uv_SSE2(uint8_t* dst) {     // DCDC8uv_SSE21139,45110
static void DC8uvNoLeft_SSE2(uint8_t* dst) {   // DC with no left samplesDC8uvNoLeft_SSE21154,45504
static void DC8uvNoTop_SSE2(uint8_t* dst) {  // DC with no top samplesDC8uvNoTop_SSE21162,45816
static void DC8uvNoTopLeft_SSE2(uint8_t* dst) {    // DC with nothingDC8uvNoTopLeft_SSE21171,46008
extern void VP8DspInitSSE2(void);VP8DspInitSSE21178,46206
WEBP_TSAN_IGNORE_FUNCTION void VP8DspInitSSE2(void) {VP8DspInitSSE21180,46241

src/dsp/lossless_common.h,2027
#define WEBP_DSP_LOSSLESS_COMMON_H_WEBP_DSP_LOSSLESS_COMMON_H_17,725
static WEBP_INLINE uint32_t VP8GetARGBIndex(uint32_t idx) {VP8GetARGBIndex31,991
static WEBP_INLINE uint8_t VP8GetAlphaIndex(uint8_t idx) {VP8GetAlphaIndex35,1082
static WEBP_INLINE uint32_t VP8GetARGBValue(uint32_t val) {VP8GetARGBValue39,1158
static WEBP_INLINE uint8_t VP8GetAlphaValue(uint32_t val) {VP8GetAlphaValue43,1235
static WEBP_INLINE uint32_t VP8LSubSampleSize(uint32_t size,VP8LSubSampleSize51,1497
static WEBP_INLINE int VP8LNearLosslessBits(int near_lossless_quality) {VP8LNearLosslessBits57,1764
#define APPROX_LOG_WITH_CORRECTION_MAX APPROX_LOG_WITH_CORRECTION_MAX74,2371
#define APPROX_LOG_MAX APPROX_LOG_MAX75,2417
#define LOG_2_RECIPROCAL LOG_2_RECIPROCAL76,2463
#define LOG_LOOKUP_IDX_MAX LOG_LOOKUP_IDX_MAX77,2523
typedef float (*VP8LFastLog2SlowFunc)(uint32_t v);VP8LFastLog2SlowFunc80,2657
static WEBP_INLINE float VP8LFastLog2(uint32_t v) {VP8LFastLog285,2803
static WEBP_INLINE float VP8LFastSLog2(uint32_t v) {VP8LFastSLog289,2984
static WEBP_INLINE void VP8LPrefixEncodeBitsNoLUT(int distance, int* const code,VP8LPrefixEncodeBitsNoLUT99,3392
static WEBP_INLINE void VP8LPrefixEncodeNoLUT(int distance, int* const code,VP8LPrefixEncodeNoLUT107,3755
#define PREFIX_LOOKUP_IDX_MAX PREFIX_LOOKUP_IDX_MAX117,4244
  int8_t code_;code_119,4297
  int8_t code_;__anon27::code_119,4297
  int8_t extra_bits_;extra_bits_120,4313
  int8_t extra_bits_;__anon27::extra_bits_120,4313
} VP8LPrefixCode;VP8LPrefixCode121,4335
static WEBP_INLINE void VP8LPrefixEncodeBits(int distance, int* const code,VP8LPrefixEncodeBits126,4554
static WEBP_INLINE void VP8LPrefixEncode(int distance, int* const code,VP8LPrefixEncode137,4961
uint32_t VP8LAddPixels(uint32_t a, uint32_t b) {VP8LAddPixels152,5597
uint32_t VP8LSubPixels(uint32_t a, uint32_t b) {VP8LSubPixels160,5964
#define GENERATE_PREDICTOR_ADD(GENERATE_PREDICTOR_ADD176,6639
#define GENERATE_PREDICTOR_SUB(GENERATE_PREDICTOR_SUB188,7310

src/dsp/dsp.h,10110
#define WEBP_DSP_DSP_H_WEBP_DSP_DSP_H_15,567
#define BPS BPS27,719
# define LOCAL_GCC_VERSION LOCAL_GCC_VERSION33,899
# define LOCAL_GCC_PREREQ(LOCAL_GCC_PREREQ34,961
# define LOCAL_GCC_VERSION LOCAL_GCC_VERSION37,1055
# define LOCAL_GCC_PREREQ(LOCAL_GCC_PREREQ38,1084
# define LOCAL_CLANG_VERSION LOCAL_CLANG_VERSION42,1153
# define LOCAL_CLANG_PREREQ(LOCAL_CLANG_PREREQ43,1225
# define LOCAL_CLANG_VERSION LOCAL_CLANG_VERSION46,1323
# define LOCAL_CLANG_PREREQ(LOCAL_CLANG_PREREQ47,1354
# define __has_builtin(__has_builtin51,1424
#define WEBP_MSC_SSE2 WEBP_MSC_SSE259,1646
#define WEBP_MSC_SSE41 WEBP_MSC_SSE4164,1793
#define WEBP_USE_SSE2WEBP_USE_SSE272,2218
#define WEBP_USE_SSE41WEBP_USE_SSE4176,2327
#define WEBP_USE_AVX2WEBP_USE_AVX280,2407
#define WEBP_USE_NEONWEBP_USE_NEON88,2709
#define WEBP_ANDROID_NEON WEBP_ANDROID_NEON93,2857
#define WEBP_USE_NEONWEBP_USE_NEON94,2922
#define WEBP_USE_NEONWEBP_USE_NEON98,3013
#define WEBP_USE_INTRINSICSWEBP_USE_INTRINSICS99,3035
#define WEBP_USE_MIPS32WEBP_USE_MIPS32104,3197
#define WEBP_USE_MIPS32_R2WEBP_USE_MIPS32_R2106,3247
#define WEBP_USE_MIPS_DSP_R2WEBP_USE_MIPS_DSP_R2108,3352
#define WEBP_USE_MSAWEBP_USE_MSA114,3479
#define WEBP_DSP_OMIT_C_CODE WEBP_DSP_OMIT_C_CODE120,3563
#define WEBP_NEON_OMIT_C_CODE WEBP_NEON_OMIT_C_CODE124,3678
#define WEBP_NEON_OMIT_C_CODE WEBP_NEON_OMIT_C_CODE126,3716
#define WEBP_NEON_WORK_AROUND_GCC WEBP_NEON_WORK_AROUND_GCC130,3836
#define WEBP_NEON_WORK_AROUND_GCC WEBP_NEON_WORK_AROUND_GCC132,3878
#define WEBP_TSAN_IGNORE_FUNCTIONWEBP_TSAN_IGNORE_FUNCTION136,4002
#undef WEBP_TSAN_IGNORE_FUNCTIONWEBP_TSAN_IGNORE_FUNCTION139,4099
#define WEBP_TSAN_IGNORE_FUNCTION WEBP_TSAN_IGNORE_FUNCTION140,4132
#define WEBP_UBSAN_IGNORE_UNDEFWEBP_UBSAN_IGNORE_UNDEF144,4217
#define WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOWWEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW145,4249
#undef WEBP_UBSAN_IGNORE_UNDEFWEBP_UBSAN_IGNORE_UNDEF151,4555
#define WEBP_UBSAN_IGNORE_UNDEF WEBP_UBSAN_IGNORE_UNDEF152,4586
#undef WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOWWEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW158,4872
#define WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW WEBP_UBSAN_IGNORE_UNSIGNED_OVERFLOW159,4915
#define WEBP_SWAP_16BIT_CSP WEBP_SWAP_16BIT_CSP166,5147
  kSSE2,kSSE2170,5200
  kSSE3,kSSE3171,5209
  kSlowSSSE3,  // special feature for slow SSSE3 architectureskSlowSSSE3172,5218
  kSSE4_1,kSSE4_1173,5281
  kAVX,kAVX174,5292
  kAVX2,kAVX2175,5300
  kNEON,kNEON176,5309
  kMIPS32,kMIPS32177,5318
  kMIPSdspR2,kMIPSdspR2178,5329
  kMSAkMSA179,5343
} CPUFeature;CPUFeature180,5350
typedef int (*VP8CPUInfo)(CPUFeature feature);VP8CPUInfo182,5413
WEBP_EXTERN VP8CPUInfo VP8GetCPUInfo;VP8GetCPUInfo183,5460
#define WEBP_DSP_INIT_STUB(WEBP_DSP_INIT_STUB190,5709
typedef void (*VP8Idct)(const uint8_t* ref, const int16_t* in, uint8_t* dst,VP8Idct200,6086
typedef void (*VP8Fdct)(const uint8_t* src, const uint8_t* ref, int16_t* out);VP8Fdct202,6200
typedef void (*VP8WHT)(const int16_t* in, int16_t* out);VP8WHT203,6279
typedef void (*VP8IntraPreds)(uint8_t *dst, const uint8_t* left,VP8IntraPreds210,6575
typedef void (*VP8Intra4Preds)(uint8_t *dst, const uint8_t* top);VP8Intra4Preds212,6691
typedef int (*VP8Metric)(const uint8_t* pix, const uint8_t* ref);VP8Metric217,6876
typedef int (*VP8WMetric)(const uint8_t* pix, const uint8_t* ref,VP8WMetric219,7006
typedef void (*VP8MeanMetric)(const uint8_t* ref, uint32_t dc[4]);VP8MeanMetric227,7375
typedef void (*VP8BlockCopy)(const uint8_t* src, uint8_t* dst);VP8BlockCopy230,7477
typedef int (*VP8QuantizeBlock)(int16_t in[16], int16_t out[16],VP8QuantizeBlock235,7665
typedef int (*VP8Quantize2Blocks)(int16_t in[32], int16_t out[32],VP8Quantize2Blocks238,7865
typedef int (*VP8QuantizeBlockWHT)(int16_t in[16], int16_t out[16],VP8QuantizeBlockWHT245,8128
#define MAX_COEFF_THRESH MAX_COEFF_THRESH252,8414
  int max_value;max_value255,8588
  int max_value;__anon29::max_value255,8588
  int last_non_zero;last_non_zero256,8605
  int last_non_zero;__anon29::last_non_zero256,8605
} VP8Histogram;VP8Histogram257,8626
typedef void (*VP8CHisto)(const uint8_t* ref, const uint8_t* pred,VP8CHisto258,8642
void VP8SetHistogramData(const int distribution[MAX_COEFF_THRESH + 1],VP8SetHistogramData263,8923
void VP8EncDspInit(void);VP8EncDspInit267,9096
typedef void (*VP8SetResidualCoeffsFunc)(const int16_t* const coeffs,VP8SetResidualCoeffsFunc278,9471
typedef int (*VP8GetResidualCostFunc)(int ctx0,VP8GetResidualCostFunc283,9699
void VP8EncDspCostInit(void);VP8EncDspCostInit288,9924
  uint32_t w;              // sum(w_i) : sum of weightsw295,10122
  uint32_t w;              // sum(w_i) : sum of weights__anon30::w295,10122
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)xm296,10178
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)__anon30::xm296,10178
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)ym296,10178
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)__anon30::ym296,10178
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.xxm297,10239
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.__anon30::xxm297,10239
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.xym297,10239
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.__anon30::xym297,10239
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.yym297,10239
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.__anon30::yym297,10239
} VP8DistoStats;VP8DistoStats298,10296
double VP8SSIMFromStats(const VP8DistoStats* const stats);VP8SSIMFromStats302,10421
double VP8SSIMFromStatsClipped(const VP8DistoStats* const stats);VP8SSIMFromStatsClipped303,10480
#define VP8_SSIM_KERNEL VP8_SSIM_KERNEL305,10547
typedef double (*VP8SSIMGetClippedFunc)(const uint8_t* src1, int stride1,VP8SSIMGetClippedFunc306,10628
typedef double (*VP8SSIMGetFunc)(const uint8_t* src1, int stride1,VP8SSIMGetFunc314,11069
typedef uint32_t (*VP8AccumulateSSEFunc)(const uint8_t* src1,VP8AccumulateSSEFunc322,11380
void VP8SSIMDspInit(void);VP8SSIMDspInit328,11625
typedef void (*VP8DecIdct)(const int16_t* coeffs, uint8_t* dst);VP8DecIdct333,11747
typedef void (*VP8DecIdct2)(const int16_t* coeffs, uint8_t* dst, int do_two);VP8DecIdct2335,11877
typedef void (*VP8PredFunc)(uint8_t* dst);VP8PredFunc345,12266
void VP8InitClipTables(void);VP8InitClipTables356,12826
typedef void (*VP8SimpleFilterFunc)(uint8_t* p, int stride, int thresh);VP8SimpleFilterFunc359,12890
typedef void (*VP8LumaFilterFunc)(uint8_t* luma, int stride,VP8LumaFilterFunc366,13240
typedef void (*VP8ChromaFilterFunc)(uint8_t* u, uint8_t* v, int stride,VP8ChromaFilterFunc368,13372
#define VP8_DITHER_DESCALE VP8_DITHER_DESCALE384,14086
#define VP8_DITHER_DESCALE_ROUNDER VP8_DITHER_DESCALE_ROUNDER385,14115
#define VP8_DITHER_AMP_BITS VP8_DITHER_AMP_BITS386,14182
#define VP8_DITHER_AMP_CENTER VP8_DITHER_AMP_CENTER387,14212
void VP8DspInit(void);VP8DspInit392,14444
#define FANCY_UPSAMPLING FANCY_UPSAMPLING397,14562
typedef void (*WebPUpsampleLinePairFunc)(WebPUpsampleLinePairFunc401,14790
typedef void (*WebPSamplerRowFunc)(const uint8_t* y,WebPSamplerRowFunc415,15251
void WebPSamplerProcessPlane(const uint8_t* y, int y_stride,WebPSamplerProcessPlane419,15504
WebPUpsampleLinePairFunc WebPGetLinePairConverter(int alpha_is_last);WebPGetLinePairConverter430,16075
typedef void (*WebPYUV444Converter)(const uint8_t* y,WebPYUV444Converter433,16172
void WebPInitUpsamplers(void);WebPInitUpsamplers441,16542
void WebPInitSamplers(void);WebPInitSamplers443,16619
void WebPInitYUV444Converters(void);WebPInitYUV444Converters445,16702
extern void WebPConvertARGBToUV_C(const uint32_t* argb, uint8_t* u, uint8_t* v,WebPConvertARGBToUV_C467,17693
extern void WebPConvertRGBA32ToUV_C(const uint16_t* rgb,WebPConvertRGBA32ToUV_C469,17837
void WebPInitConvertARGBToYUV(void);WebPInitConvertARGBToYUV482,18535
typedef void (*WebPRescalerImportRowFunc)(struct WebPRescaler* const wrk,WebPRescalerImportRowFunc492,18898
typedef void (*WebPRescalerExportRowFunc)(struct WebPRescaler* const wrk);WebPRescalerExportRowFunc501,19310
extern void WebPRescalerImportRowExpand_C(struct WebPRescaler* const wrk,WebPRescalerImportRowExpand_C506,19551
extern void WebPRescalerImportRowShrink_C(struct WebPRescaler* const wrk,WebPRescalerImportRowShrink_C508,19688
extern void WebPRescalerExportRowExpand_C(struct WebPRescaler* const wrk);WebPRescalerExportRowExpand_C510,19825
extern void WebPRescalerExportRowShrink_C(struct WebPRescaler* const wrk);WebPRescalerExportRowShrink_C511,19900
extern void WebPRescalerImportRow(struct WebPRescaler* const wrk,WebPRescalerImportRow514,19997
extern void WebPRescalerExportRow(struct WebPRescaler* const wrk);WebPRescalerExportRow517,20180
void WebPRescalerDspInit(void);WebPRescalerDspInit520,20296
void WebPMultARGBRows(uint8_t* ptr, int stride, int width, int num_rows,WebPMultARGBRows564,22500
void WebPMultRows(uint8_t* ptr, int stride,WebPMultRows572,22856
void WebPMultRow_C(uint8_t* const ptr, const uint8_t* const alpha,WebPMultRow_C577,23079
void WebPMultARGBRow_C(uint32_t* const ptr, int width, int inverse);WebPMultARGBRow_C579,23190
void WebPInitAlphaProcessing(void);WebPInitAlphaProcessing591,23814
  WEBP_FILTER_NONE = 0,WEBP_FILTER_NONE597,23989
  WEBP_FILTER_HORIZONTAL,WEBP_FILTER_HORIZONTAL598,24013
  WEBP_FILTER_VERTICAL,WEBP_FILTER_VERTICAL599,24039
  WEBP_FILTER_GRADIENT,WEBP_FILTER_GRADIENT600,24063
  WEBP_FILTER_LAST = WEBP_FILTER_GRADIENT + 1,  // end markerWEBP_FILTER_LAST601,24087
  WEBP_FILTER_BEST,    // meta-typesWEBP_FILTER_BEST602,24149
  WEBP_FILTER_FASTWEBP_FILTER_FAST603,24186
} WEBP_FILTER_TYPE;WEBP_FILTER_TYPE604,24205
typedef void (*WebPFilterFunc)(const uint8_t* in, int width, int height,WebPFilterFunc606,24226
typedef void (*WebPUnfilterFunc)(const uint8_t* prev_line, const uint8_t* preds,WebPUnfilterFunc610,24454
void VP8FiltersInit(void);VP8FiltersInit626,25219

src/dsp/upsampling.c,1451
WebPUpsampleLinePairFunc WebPUpsamplers[MODE_LAST];WebPUpsamplers25,802
#define LOAD_UV(LOAD_UV35,1144
#define UPSAMPLE_FUNC(UPSAMPLE_FUNC37,1187
#undef LOAD_UVLOAD_UV130,7003
#undef UPSAMPLE_FUNCUPSAMPLE_FUNC131,7018
#define DUAL_SAMPLE_FUNC(DUAL_SAMPLE_FUNC138,7182
#undef DUAL_SAMPLE_FUNCDUAL_SAMPLE_FUNC164,9071
DUAL_SAMPLE_FUNC(DualLineSamplerBGRA, VP8YuvToBgra)DUAL_SAMPLE_FUNC162,8967
#define YUV444_FUNC(YUV444_FUNC180,9497
#undef YUV444_FUNCYUV444_FUNC214,10952
WebPYUV444Converter WebPYUV444Converters[MODE_LAST];WebPYUV444Converters216,10972
extern void WebPInitYUV444ConvertersMIPSdspR2(void);WebPInitYUV444ConvertersMIPSdspR2218,11026
extern void WebPInitYUV444ConvertersSSE2(void);WebPInitYUV444ConvertersSSE2219,11079
static volatile VP8CPUInfo upsampling_last_cpuinfo_used1 =upsampling_last_cpuinfo_used1221,11128
WEBP_TSAN_IGNORE_FUNCTION void WebPInitYUV444Converters(void) {WebPInitYUV444Converters224,11236
extern void WebPInitUpsamplersSSE2(void);WebPInitUpsamplersSSE2257,12463
extern void WebPInitUpsamplersNEON(void);WebPInitUpsamplersNEON258,12505
extern void WebPInitUpsamplersMIPSdspR2(void);WebPInitUpsamplersMIPSdspR2259,12547
extern void WebPInitUpsamplersMSA(void);WebPInitUpsamplersMSA260,12594
static volatile VP8CPUInfo upsampling_last_cpuinfo_used2 =upsampling_last_cpuinfo_used2262,12636
WEBP_TSAN_IGNORE_FUNCTION void WebPInitUpsamplers(void) {WebPInitUpsamplers265,12744

src/dsp/rescaler_neon.c,734
#define ROUNDER ROUNDER23,742
#define MULT_FIX_C(MULT_FIX_C24,783
#define LOAD_32x4(LOAD_32x426,865
#define LOAD_32x8(LOAD_32x827,933
#define STORE_32x8(STORE_32x831,1107
#define MAKE_HALF_CST(MAKE_HALF_CST37,1368
#define MULT_FIX(MULT_FIX38,1426
static uint32x4_t Interpolate_NEON(const rescaler_t* const frow,Interpolate_NEON44,1649
static void RescalerExportRowExpand_NEON(WebPRescaler* const wrk) {RescalerExportRowExpand_NEON59,2269
static void RescalerExportRowShrink_NEON(WebPRescaler* const wrk) {RescalerExportRowShrink_NEON115,4451
extern void WebPRescalerDspInitNEON(void);WebPRescalerDspInitNEON175,6824
WEBP_TSAN_IGNORE_FUNCTION void WebPRescalerDspInitNEON(void) {WebPRescalerDspInitNEON177,6868

src/dsp/enc_avx2.c,0

src/dsp/enc_sse2.c,5472
static void ITransform_SSE2(const uint8_t* ref, const int16_t* in, uint8_t* dst,ITransform_SSE229,951
static void FTransformPass1_SSE2(const __m128i* const in01,FTransformPass1_SSE2196,7945
static void FTransformPass2_SSE2(const __m128i* const v01,FTransformPass2_SSE2242,10287
static void FTransform_SSE2(const uint8_t* src, const uint8_t* ref,FTransform_SSE2295,12600
static void FTransform2_SSE2(const uint8_t* src, const uint8_t* ref,FTransform2_SSE2339,14316
static void FTransformWHTRow_SSE2(const int16_t* const in, __m128i* const out) {FTransformWHTRow_SSE2388,16486
static void FTransformWHT_SSE2(const int16_t* in, int16_t* out) {FTransformWHT_SSE2404,17427
static void CollectHistogram_SSE2(const uint8_t* ref, const uint8_t* pred,CollectHistogram_SSE2437,18689
static WEBP_INLINE void Put8x8uv_SSE2(uint8_t v, uint8_t* dst) {Put8x8uv_SSE2482,20346
static WEBP_INLINE void Put16_SSE2(uint8_t v, uint8_t* dst) {Put16_SSE2490,20555
static WEBP_INLINE void Fill_SSE2(uint8_t* dst, int value, int size) {Fill_SSE2498,20761
static WEBP_INLINE void VE8uv_SSE2(uint8_t* dst, const uint8_t* top) {VE8uv_SSE2511,21040
static WEBP_INLINE void VE16_SSE2(uint8_t* dst, const uint8_t* top) {VE16_SSE2519,21283
static WEBP_INLINE void VerticalPred_SSE2(uint8_t* dst,VerticalPred_SSE2527,21524
static WEBP_INLINE void HE8uv_SSE2(uint8_t* dst, const uint8_t* left) {HE8uv_SSE2540,21819
static WEBP_INLINE void HE16_SSE2(uint8_t* dst, const uint8_t* left) {HE16_SSE2549,22047
static WEBP_INLINE void HorizontalPred_SSE2(uint8_t* dst,HorizontalPred_SSE2558,22274
static WEBP_INLINE void TM_SSE2(uint8_t* dst, const uint8_t* left,TM_SSE2571,22577
static WEBP_INLINE void TrueMotion_SSE2(uint8_t* dst, const uint8_t* left,TrueMotion_SSE2599,23762
static WEBP_INLINE void DC8uv_SSE2(uint8_t* dst, const uint8_t* left,DC8uv_SSE2620,24465
static WEBP_INLINE void DC8uvNoLeft_SSE2(uint8_t* dst, const uint8_t* top) {DC8uvNoLeft_SSE2629,24886
static WEBP_INLINE void DC8uvNoTop_SSE2(uint8_t* dst, const uint8_t* left) {DC8uvNoTop_SSE2637,25207
static WEBP_INLINE void DC8uvNoTopLeft_SSE2(uint8_t* dst) {DC8uvNoTopLeft_SSE2642,25379
static WEBP_INLINE void DC8uvMode_SSE2(uint8_t* dst, const uint8_t* left,DC8uvMode_SSE2646,25470
static WEBP_INLINE void DC16_SSE2(uint8_t* dst, const uint8_t* left,DC16_SSE2661,25942
static WEBP_INLINE void DC16NoLeft_SSE2(uint8_t* dst, const uint8_t* top) {DC16NoLeft_SSE2670,26316
static WEBP_INLINE void DC16NoTop_SSE2(uint8_t* dst, const uint8_t* left) {DC16NoTop_SSE2676,26537
static WEBP_INLINE void DC16NoTopLeft_SSE2(uint8_t* dst) {DC16NoTopLeft_SSE2681,26707
static WEBP_INLINE void DC16Mode_SSE2(uint8_t* dst, const uint8_t* left,DC16Mode_SSE2685,26794
#define DST(DST703,27361
#define AVG3(AVG3704,27400
#define AVG2(AVG2705,27455
static WEBP_INLINE void VE4_SSE2(uint8_t* dst,VE4_SSE2715,27845
static WEBP_INLINE void HE4_SSE2(uint8_t* dst,HE4_SSE2732,28534
static WEBP_INLINE void DC4_SSE2(uint8_t* dst, const uint8_t* top) {DC4_SSE2745,29031
static WEBP_INLINE void LD4_SSE2(uint8_t* dst,LD4_SSE2752,29215
static WEBP_INLINE void VR4_SSE2(uint8_t* dst,VR4_SSE2769,30180
static WEBP_INLINE void VL4_SSE2(uint8_t* dst,VL4_SSE2795,31398
static WEBP_INLINE void RD4_SSE2(uint8_t* dst,RD4_SSE2821,32737
static WEBP_INLINE void HU4_SSE2(uint8_t* dst, const uint8_t* top) {HU4_SSE2838,33719
static WEBP_INLINE void HD4_SSE2(uint8_t* dst, const uint8_t* top) {HD4_SSE2853,34207
static WEBP_INLINE void TM4_SSE2(uint8_t* dst, const uint8_t* top) {TM4_SSE2876,34876
#undef DSTDST889,35397
#undef AVG3AVG3890,35408
#undef AVG2AVG2891,35420
static void Intra4Preds_SSE2(uint8_t* dst, const uint8_t* top) {Intra4Preds_SSE2898,35654
static void IntraChromaPreds_SSE2(uint8_t* dst, const uint8_t* left,IntraChromaPreds_SSE2914,36146
static void Intra16Preds_SSE2(uint8_t* dst,Intra16Preds_SSE2934,36847
static WEBP_INLINE void SubtractAndAccumulate_SSE2(const __m128i a,SubtractAndAccumulate_SSE2945,37244
static WEBP_INLINE int SSE_16xN_SSE2(const uint8_t* a, const uint8_t* b,SSE_16xN_SSE2962,37949
static int SSE16x16_SSE2(const uint8_t* a, const uint8_t* b) {SSE16x16_SSE2984,38757
static int SSE16x8_SSE2(const uint8_t* a, const uint8_t* b) {SSE16x8_SSE2988,38856
#define LOAD_8x16b(LOAD_8x16b992,38954
static int SSE8x8_SSE2(const uint8_t* a, const uint8_t* b) {SSE8x8_SSE2995,39047
#undef LOAD_8x16bLOAD_8x16b1020,39903
static int SSE4x4_SSE2(const uint8_t* a, const uint8_t* b) {SSE4x4_SSE21022,39922
static void Mean16x4_SSE2(const uint8_t* ref, uint32_t dc[4]) {Mean16x4_SSE21059,41604
static int TTransform_SSE2(const uint8_t* inA, const uint8_t* inB,TTransform_SSE21097,43213
static int Disto4x4_SSE2(const uint8_t* const a, const uint8_t* const b,Disto4x4_SSE21198,47294
static int Disto16x16_SSE2(const uint8_t* const a, const uint8_t* const b,Disto16x16_SSE21204,47500
static WEBP_INLINE int DoQuantizeBlock_SSE2(int16_t in[16], int16_t out[16],DoQuantizeBlock_SSE21220,47909
static int QuantizeBlock_SSE2(int16_t in[16], int16_t out[16],QuantizeBlock_SSE21332,52432
static int QuantizeBlockWHT_SSE2(int16_t in[16], int16_t out[16],QuantizeBlockWHT_SSE21337,52622
static int Quantize2Blocks_SSE2(int16_t in[32], int16_t out[32],Quantize2Blocks_SSE21342,52805
extern void VP8EncDspInitSSE2(void);VP8EncDspInitSSE21354,53260
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspInitSSE2(void) {VP8EncDspInitSSE21356,53298

src/dsp/lossless.h,5403
#define WEBP_DSP_LOSSLESS_H_WEBP_DSP_LOSSLESS_H_16,670
typedef uint32_t (*VP8LPredictorFunc)(uint32_t left, const uint32_t* const top);VP8LPredictorFunc35,1075
typedef void (*VP8LPredictorAddSubFunc)(const uint32_t* in,VP8LPredictorAddSubFunc39,1320
typedef void (*VP8LProcessDecBlueAndRedFunc)(const uint32_t* src,VP8LProcessDecBlueAndRedFunc45,1626
  uint8_t green_to_red_;green_to_red_52,1967
  uint8_t green_to_red_;__anon32::green_to_red_52,1967
  uint8_t green_to_blue_;green_to_blue_53,1992
  uint8_t green_to_blue_;__anon32::green_to_blue_53,1992
  uint8_t red_to_blue_;red_to_blue_54,2018
  uint8_t red_to_blue_;__anon32::red_to_blue_54,2018
} VP8LMultipliers;VP8LMultipliers55,2042
typedef void (*VP8LTransformColorInverseFunc)(const VP8LMultipliers* const m,VP8LTransformColorInverseFunc56,2061
void VP8LInverseTransform(const struct VP8LTransform* const transform,VP8LInverseTransform67,2679
typedef void (*VP8LConvertFunc)(const uint32_t* src, int num_pixels,VP8LConvertFunc72,2906
void VP8LConvertFromBGRA(const uint32_t* const in_data, int num_pixels,VP8LConvertFromBGRA81,3302
typedef void (*VP8LMapARGBFunc)(const uint32_t* src,VP8LMapARGBFunc84,3452
typedef void (*VP8LMapAlphaFunc)(const uint8_t* src,VP8LMapAlphaFunc88,3685
void VP8LColorIndexInverseTransformAlpha(VP8LColorIndexInverseTransformAlpha99,4202
void VP8LTransformColorInverse_C(const VP8LMultipliers* const m,VP8LTransformColorInverse_C104,4398
void VP8LConvertBGRAToRGB_C(const uint32_t* src, int num_pixels, uint8_t* dst);VP8LConvertBGRAToRGB_C108,4583
void VP8LConvertBGRAToRGBA_C(const uint32_t* src, int num_pixels, uint8_t* dst);VP8LConvertBGRAToRGBA_C109,4663
void VP8LConvertBGRAToRGBA4444_C(const uint32_t* src,VP8LConvertBGRAToRGBA4444_C110,4744
void VP8LConvertBGRAToRGB565_C(const uint32_t* src,VP8LConvertBGRAToRGB565_C112,4862
void VP8LConvertBGRAToBGR_C(const uint32_t* src, int num_pixels, uint8_t* dst);VP8LConvertBGRAToBGR_C114,4976
void VP8LAddGreenToBlueAndRed_C(const uint32_t* src, int num_pixels,VP8LAddGreenToBlueAndRed_C115,5056
void VP8LDspInit(void);VP8LDspInit119,5233
typedef void (*VP8LProcessEncBlueAndRedFunc)(uint32_t* dst, int num_pixels);VP8LProcessEncBlueAndRedFunc124,5352
typedef void (*VP8LTransformColorFunc)(const VP8LMultipliers* const m,VP8LTransformColorFunc126,5498
typedef void (*VP8LCollectColorBlueTransformsFunc)(VP8LCollectColorBlueTransformsFunc129,5690
typedef void (*VP8LCollectColorRedTransformsFunc)(VP8LCollectColorRedTransformsFunc135,5946
void VP8LTransformColor_C(const VP8LMultipliers* const m,VP8LTransformColor_C142,6222
void VP8LSubtractGreenFromBlueAndRed_C(uint32_t* argb_data, int num_pixels);VP8LSubtractGreenFromBlueAndRed_C144,6339
void VP8LCollectColorRedTransforms_C(const uint32_t* argb, int stride,VP8LCollectColorRedTransforms_C145,6416
void VP8LCollectColorBlueTransforms_C(const uint32_t* argb, int stride,VP8LCollectColorBlueTransforms_C148,6626
typedef double (*VP8LCostFunc)(const uint32_t* population, int length);VP8LCostFunc159,7124
typedef double (*VP8LCostCombinedFunc)(const uint32_t* X, const uint32_t* Y,VP8LCostCombinedFunc160,7196
typedef float (*VP8LCombinedShannonEntropyFunc)(const int X[256],VP8LCombinedShannonEntropyFunc162,7325
  int counts[2];        // index: 0=zero steak, 1=non-zero streakcounts170,7669
  int counts[2];        // index: 0=zero steak, 1=non-zero streak__anon33::counts170,7669
  int streaks[2][2];    // [zero/non-zero][streak<3 / streak>=3]streaks171,7735
  int streaks[2][2];    // [zero/non-zero][streak<3 / streak>=3]__anon33::streaks171,7735
} VP8LStreaks;VP8LStreaks172,7800
  double entropy;           // entropyentropy175,7888
  double entropy;           // entropy__anon34::entropy175,7888
  uint32_t sum;             // sum of the populationsum176,7927
  uint32_t sum;             // sum of the population__anon34::sum176,7927
  int nonzeros;             // number of non-zero elements in the populationnonzeros177,7980
  int nonzeros;             // number of non-zero elements in the population__anon34::nonzeros177,7980
  uint32_t max_val;         // maximum value in the populationmax_val178,8057
  uint32_t max_val;         // maximum value in the population__anon34::max_val178,8057
  uint32_t nonzero_code;    // index of the last non-zero in the populationnonzero_code179,8120
  uint32_t nonzero_code;    // index of the last non-zero in the population__anon34::nonzero_code179,8120
} VP8LBitEntropy;VP8LBitEntropy180,8196
void VP8LBitEntropyInit(VP8LBitEntropy* const entropy);VP8LBitEntropyInit182,8215
typedef void (*VP8LGetCombinedEntropyUnrefinedFunc)(VP8LGetCombinedEntropyUnrefinedFunc187,8449
typedef void (*VP8LGetEntropyUnrefinedFunc)(const uint32_t X[], int length,VP8LGetEntropyUnrefinedFunc193,8746
void VP8LBitsEntropyUnrefined(const uint32_t* const array, int n,VP8LBitsEntropyUnrefined198,9033
typedef void (*VP8LHistogramAddFunc)(const VP8LHistogram* const a,VP8LHistogramAddFunc201,9162
typedef int (*VP8LVectorMismatchFunc)(const uint32_t* const array1,VP8LVectorMismatchFunc209,9507
typedef void (*VP8LBundleColorMapFunc)(const uint8_t* const row, int width,VP8LBundleColorMapFunc214,9773
void VP8LBundleColorMap_C(const uint8_t* const row, int width, int xbits,VP8LBundleColorMap_C217,9965
void VP8LEncDspInit(void);VP8LEncDspInit221,10141

src/dsp/rescaler.c,1658
#define ROUNDER ROUNDER22,765
#define MULT_FIX(MULT_FIX23,806
void WebPRescalerImportRowExpand_C(WebPRescaler* const wrk,WebPRescalerImportRowExpand_C28,982
void WebPRescalerImportRowShrink_C(WebPRescaler* const wrk,WebPRescalerImportRowShrink_C60,2017
void WebPRescalerExportRowExpand_C(WebPRescaler* const wrk) {WebPRescalerExportRowExpand_C97,3141
void WebPRescalerExportRowShrink_C(WebPRescaler* const wrk) {WebPRescalerExportRowShrink_C128,4230
#undef MULT_FIXMULT_FIX156,5171
#undef ROUNDERROUNDER157,5187
void WebPRescalerImportRow(WebPRescaler* const wrk, const uint8_t* src) {WebPRescalerImportRow162,5305
void WebPRescalerExportRow(WebPRescaler* const wrk) {WebPRescalerExportRow171,5546
WebPRescalerImportRowFunc WebPRescalerImportRowExpand;WebPRescalerImportRowExpand195,6290
WebPRescalerImportRowFunc WebPRescalerImportRowShrink;WebPRescalerImportRowShrink196,6345
WebPRescalerExportRowFunc WebPRescalerExportRowExpand;WebPRescalerExportRowExpand198,6401
WebPRescalerExportRowFunc WebPRescalerExportRowShrink;WebPRescalerExportRowShrink199,6456
extern void WebPRescalerDspInitSSE2(void);WebPRescalerDspInitSSE2201,6512
extern void WebPRescalerDspInitMIPS32(void);WebPRescalerDspInitMIPS32202,6555
extern void WebPRescalerDspInitMIPSdspR2(void);WebPRescalerDspInitMIPSdspR2203,6600
extern void WebPRescalerDspInitMSA(void);WebPRescalerDspInitMSA204,6648
extern void WebPRescalerDspInitNEON(void);WebPRescalerDspInitNEON205,6690
static volatile VP8CPUInfo rescaler_last_cpuinfo_used =rescaler_last_cpuinfo_used207,6734
WEBP_TSAN_IGNORE_FUNCTION void WebPRescalerDspInit(void) {WebPRescalerDspInit210,6836

src/dsp/cost_mips32.c,377
static int GetResidualCost_MIPS32(int ctx0, const VP8Residual* const res) {GetResidualCost_MIPS3218,603
static void SetResidualCoeffs_MIPS32(const int16_t* const coeffs,SetResidualCoeffs_MIPS3299,4931
extern void VP8EncDspCostInitMIPS32(void);VP8EncDspCostInitMIPS32143,6857
WEBP_TSAN_IGNORE_FUNCTION void VP8EncDspCostInitMIPS32(void) {VP8EncDspCostInitMIPS32145,6901

src/dsp/yuv_mips_dsp_r2.c,543
#define ROW_FUNC_PART_1(ROW_FUNC_PART_124,834
#define ROW_FUNC_PART_2(ROW_FUNC_PART_238,1888
#define ASM_CLOBBER_LIST(ASM_CLOBBER_LIST61,3671
#define ROW_FUNC(ROW_FUNC71,4401
#undef ROW_FUNCROW_FUNC113,7448
#undef ASM_CLOBBER_LISTASM_CLOBBER_LIST114,7464
#undef ROW_FUNC_PART_2ROW_FUNC_PART_2115,7488
#undef ROW_FUNC_PART_1ROW_FUNC_PART_1116,7511
extern void WebPInitSamplersMIPSdspR2(void);WebPInitSamplersMIPSdspR2121,7632
WEBP_TSAN_IGNORE_FUNCTION void WebPInitSamplersMIPSdspR2(void) {WebPInitSamplersMIPSdspR2123,7678

src/dsp/yuv.c,2823
#define ROW_FUNC(ROW_FUNC22,712
#undef ROW_FUNCROW_FUNC49,2434
void WebPSamplerProcessPlane(const uint8_t* y, int y_stride,WebPSamplerProcessPlane52,2523
WebPSamplerRowFunc WebPSamplers[MODE_LAST];WebPSamplers71,3085
extern void WebPInitSamplersSSE2(void);WebPInitSamplersSSE273,3130
extern void WebPInitSamplersMIPS32(void);WebPInitSamplersMIPS3274,3170
extern void WebPInitSamplersMIPSdspR2(void);WebPInitSamplersMIPSdspR275,3212
static volatile VP8CPUInfo yuv_last_cpuinfo_used =yuv_last_cpuinfo_used77,3258
WEBP_TSAN_IGNORE_FUNCTION void WebPInitSamplers(void) {WebPInitSamplers80,3350
static void ConvertARGBToY_C(const uint32_t* argb, uint8_t* y, int width) {ConvertARGBToY_C119,4645
void WebPConvertARGBToUV_C(const uint32_t* argb, uint8_t* u, uint8_t* v,WebPConvertARGBToUV_C128,4907
static void ConvertRGB24ToY_C(const uint8_t* rgb, uint8_t* y, int width) {ConvertRGB24ToY_C171,6486
static void ConvertBGR24ToY_C(const uint8_t* bgr, uint8_t* y, int width) {ConvertBGR24ToY_C178,6675
void WebPConvertRGBA32ToUV_C(const uint16_t* rgb,WebPConvertRGBA32ToUV_C185,6864
#define MAX_Y MAX_Y198,7291
static uint16_t clip_y(int v) {clip_y199,7361
static uint64_t SharpYUVUpdateY_C(const uint16_t* ref, const uint16_t* src,SharpYUVUpdateY_C203,7454
static void SharpYUVUpdateRGB_C(const int16_t* ref, const int16_t* src,SharpYUVUpdateRGB_C216,7819
static void SharpYUVFilterRow_C(const int16_t* A, const int16_t* B, int len,SharpYUVFilterRow_C225,8058
#undef MAX_YMAX_Y237,8542
void (*WebPConvertRGB24ToY)(const uint8_t* rgb, uint8_t* y, int width);WebPConvertRGB24ToY241,8637
void (*WebPConvertBGR24ToY)(const uint8_t* bgr, uint8_t* y, int width);WebPConvertBGR24ToY242,8709
void (*WebPConvertRGBA32ToUV)(const uint16_t* rgb,WebPConvertRGBA32ToUV243,8781
void (*WebPConvertARGBToY)(const uint32_t* argb, uint8_t* y, int width);WebPConvertARGBToY246,8899
void (*WebPConvertARGBToUV)(const uint32_t* argb, uint8_t* u, uint8_t* v,WebPConvertARGBToUV247,8972
uint64_t (*WebPSharpYUVUpdateY)(const uint16_t* ref, const uint16_t* src,WebPSharpYUVUpdateY250,9105
void (*WebPSharpYUVUpdateRGB)(const int16_t* ref, const int16_t* src,WebPSharpYUVUpdateRGB252,9236
void (*WebPSharpYUVFilterRow)(const int16_t* A, const int16_t* B, int len,WebPSharpYUVFilterRow254,9360
static volatile VP8CPUInfo rgba_to_yuv_last_cpuinfo_used =rgba_to_yuv_last_cpuinfo_used257,9506
extern void WebPInitConvertARGBToYUVSSE2(void);WebPInitConvertARGBToYUVSSE2260,9614
extern void WebPInitConvertARGBToYUVNEON(void);WebPInitConvertARGBToYUVNEON261,9662
extern void WebPInitSharpYUVSSE2(void);WebPInitSharpYUVSSE2262,9710
extern void WebPInitSharpYUVNEON(void);WebPInitSharpYUVNEON263,9750
WEBP_TSAN_IGNORE_FUNCTION void WebPInitConvertARGBToYUV(void) {WebPInitConvertARGBToYUV265,9791

src/utils/huffman_encode_utils.h,1828
#define WEBP_UTILS_HUFFMAN_ENCODE_UTILS_H_WEBP_UTILS_HUFFMAN_ENCODE_UTILS_H_15,605
  uint8_t code;         // value (0..15) or escape code (16,17,18)code25,788
  uint8_t code;         // value (0..15) or escape code (16,17,18)__anon35::code25,788
  uint8_t extra_bits;   // extra bits for escape codesextra_bits26,855
  uint8_t extra_bits;   // extra bits for escape codes__anon35::extra_bits26,855
} HuffmanTreeToken;HuffmanTreeToken27,910
  int       num_symbols;   // Number of symbols.num_symbols31,1010
  int       num_symbols;   // Number of symbols.__anon36::num_symbols31,1010
  uint8_t*  code_lengths;  // Code lengths of the symbols.code_lengths32,1059
  uint8_t*  code_lengths;  // Code lengths of the symbols.__anon36::code_lengths32,1059
  uint16_t* codes;         // Symbol Codes.codes33,1118
  uint16_t* codes;         // Symbol Codes.__anon36::codes33,1118
} HuffmanTreeCode;HuffmanTreeCode34,1162
  uint32_t total_count_;   // Symbol frequency.total_count_38,1240
  uint32_t total_count_;   // Symbol frequency.__anon37::total_count_38,1240
  int value_;              // Symbol value.value_39,1288
  int value_;              // Symbol value.__anon37::value_39,1288
  int pool_index_left_;    // Index for the left sub-tree.pool_index_left_40,1332
  int pool_index_left_;    // Index for the left sub-tree.__anon37::pool_index_left_40,1332
  int pool_index_right_;   // Index for the right sub-tree.pool_index_right_41,1391
  int pool_index_right_;   // Index for the right sub-tree.__anon37::pool_index_right_41,1391
} HuffmanTree;HuffmanTree42,1451
int VP8LCreateCompressedHuffmanTree(const HuffmanTreeCode* const tree,VP8LCreateCompressedHuffmanTree46,1553
void VP8LCreateHuffmanTree(uint32_t* const histogram, int tree_depth_limit,VP8LCreateHuffmanTree52,1853

src/utils/bit_reader_inl_utils.h,643
#define WEBP_UTILS_BIT_READER_INL_UTILS_H_WEBP_UTILS_BIT_READER_INL_UTILS_H_17,716
typedef uint64_t lbit_t;lbit_t38,1182
typedef uint32_t lbit_t;lbit_t40,1225
typedef uint16_t lbit_t;lbit_t42,1268
typedef uint8_t lbit_t;lbit_t44,1299
void VP8LoadFinalBytes(VP8BitReader* const br);VP8LoadFinalBytes51,1455
void VP8LoadNewBytes(VP8BitReader* const br) {VP8LoadNewBytes58,1721
static WEBP_INLINE int VP8GetBit(VP8BitReader* const br, int prob) {VP8GetBit107,3218
int VP8GetSigned(VP8BitReader* const br, int v) {VP8GetSigned138,4153
static WEBP_INLINE int VP8GetBitAlt(VP8BitReader* const br, int prob) {VP8GetBitAlt155,4614

src/utils/rescaler_utils.c,494
void WebPRescalerInit(WebPRescaler* const wrk, int src_width, int src_height,WebPRescalerInit22,741
int WebPRescalerGetScaledDimensions(int src_width, int src_height,WebPRescalerGetScaledDimensions77,2941
int WebPRescaleNeededLines(const WebPRescaler* const wrk, int max_num_lines) {WebPRescaleNeededLines110,3963
int WebPRescalerImport(WebPRescaler* const wrk, int num_lines,WebPRescalerImport115,4181
int WebPRescalerExport(WebPRescaler* const rescaler) {WebPRescalerExport139,4903

src/utils/thread_utils.c,3082
typedef HANDLE pthread_t;pthread_t24,727
typedef CRITICAL_SECTION pthread_mutex_t;pthread_mutex_t25,753
#define USE_WINDOWS_CONDITION_VARIABLEUSE_WINDOWS_CONDITION_VARIABLE28,866
typedef CONDITION_VARIABLE pthread_cond_t;pthread_cond_t29,905
  HANDLE waiting_sem_;waiting_sem_32,971
  HANDLE waiting_sem_;__anon38::waiting_sem_32,971
  HANDLE received_sem_;received_sem_33,994
  HANDLE received_sem_;__anon38::received_sem_33,994
  HANDLE signal_event_;signal_event_34,1018
  HANDLE signal_event_;__anon38::signal_event_34,1018
} pthread_cond_t;pthread_cond_t35,1042
#define WINAPI_PARTITION_DESKTOP WINAPI_PARTITION_DESKTOP39,1126
#define WINAPI_FAMILY_PARTITION(WINAPI_FAMILY_PARTITION40,1161
#define USE_CREATE_THREADUSE_CREATE_THREAD44,1261
  pthread_mutex_t mutex_;mutex_54,1372
  pthread_mutex_t mutex_;__anon39::mutex_54,1372
  pthread_cond_t  condition_;condition_55,1398
  pthread_cond_t  condition_;__anon39::condition_55,1398
  pthread_t       thread_;thread_56,1428
  pthread_t       thread_;__anon39::thread_56,1428
} WebPWorkerImpl;WebPWorkerImpl57,1455
#define THREADFN THREADFN67,1674
#define THREAD_RETURN(THREAD_RETURN68,1714
#define WaitForSingleObject(WaitForSingleObject71,1826
static int pthread_create(pthread_t* const thread, const void* attr,pthread_create75,1938
static int pthread_join(pthread_t thread, void** value_ptr) {pthread_join98,2886
static int pthread_mutex_init(pthread_mutex_t* const mutex, void* mutexattr) {pthread_mutex_init105,3084
static int pthread_mutex_lock(pthread_mutex_t* const mutex) {pthread_mutex_lock115,3386
static int pthread_mutex_unlock(pthread_mutex_t* const mutex) {pthread_mutex_unlock120,3494
static int pthread_mutex_destroy(pthread_mutex_t* const mutex) {pthread_mutex_destroy125,3604
static int pthread_cond_destroy(pthread_cond_t* const condition) {pthread_cond_destroy131,3729
static int pthread_cond_init(pthread_cond_t* const condition, void* cond_attr) {pthread_cond_init143,4058
static int pthread_cond_signal(pthread_cond_t* const condition) {pthread_cond_signal161,4641
static int pthread_cond_wait(pthread_cond_t* const condition,pthread_cond_wait178,5237
# define THREADFN THREADFN198,5962
# define THREAD_RETURN(THREAD_RETURN199,5986
static THREADFN ThreadLoop(void* ptr) {ThreadLoop204,6119
static void ChangeState(WebPWorker* const worker, WebPWorkerStatus new_status) {ChangeState227,6907
static void Init(WebPWorker* const worker) {Init253,7789
static int Sync(WebPWorker* const worker) {Sync258,7903
static int Reset(WebPWorker* const worker) {Reset266,8069
static void Execute(WebPWorker* const worker) {Execute306,9125
static void Launch(WebPWorker* const worker) {Launch312,9280
static void End(WebPWorker* const worker) {End320,9414
static WebPWorkerInterface g_worker_interface = {g_worker_interface340,9986
int WebPSetWorkerInterface(const WebPWorkerInterface* const winterface) {WebPSetWorkerInterface344,10082
const WebPWorkerInterface* WebPGetWorkerInterface(void) {WebPGetWorkerInterface355,10444

src/utils/bit_writer_utils.h,4459
#define WEBP_UTILS_BIT_WRITER_UTILS_H_WEBP_UTILS_BIT_WRITER_UTILS_H_15,584
typedef struct VP8BitWriter VP8BitWriter;VP8BitWriter26,790
struct VP8BitWriter {VP8BitWriter27,832
  int32_t  range_;      // range-1range_28,854
  int32_t  range_;      // range-1VP8BitWriter::range_28,854
  int32_t  value_;value_29,889
  int32_t  value_;VP8BitWriter::value_29,889
  int      run_;        // number of outstanding bitsrun_30,908
  int      run_;        // number of outstanding bitsVP8BitWriter::run_30,908
  int      nb_bits_;    // number of pending bitsnb_bits_31,962
  int      nb_bits_;    // number of pending bitsVP8BitWriter::nb_bits_31,962
  uint8_t* buf_;        // internal buffer. Re-allocated regularly. Not owned.buf_32,1012
  uint8_t* buf_;        // internal buffer. Re-allocated regularly. Not owned.VP8BitWriter::buf_32,1012
  size_t   pos_;pos_33,1091
  size_t   pos_;VP8BitWriter::pos_33,1091
  size_t   max_pos_;max_pos_34,1108
  size_t   max_pos_;VP8BitWriter::max_pos_34,1108
  int      error_;      // true in case of errorerror_35,1129
  int      error_;      // true in case of errorVP8BitWriter::error_35,1129
int VP8BitWriterInit(VP8BitWriter* const bw, size_t expected_size);VP8BitWriterInit39,1262
uint8_t* VP8BitWriterFinish(VP8BitWriter* const bw);VP8BitWriterFinish41,1406
void VP8BitWriterWipeOut(VP8BitWriter* const bw);VP8BitWriterWipeOut44,1613
int VP8PutBit(VP8BitWriter* const bw, int bit, int prob);VP8PutBit46,1664
int VP8PutBitUniform(VP8BitWriter* const bw, int bit);VP8PutBitUniform47,1722
void VP8PutBits(VP8BitWriter* const bw, uint32_t value, int nb_bits);VP8PutBits48,1777
void VP8PutSignedBits(VP8BitWriter* const bw, int value, int nb_bits);VP8PutSignedBits49,1847
int VP8BitWriterAppend(VP8BitWriter* const bw,VP8BitWriterAppend52,1981
static WEBP_INLINE uint64_t VP8BitWriterPos(const VP8BitWriter* const bw) {VP8BitWriterPos56,2134
static WEBP_INLINE uint8_t* VP8BitWriterBuf(const VP8BitWriter* const bw) {VP8BitWriterBuf62,2381
static WEBP_INLINE size_t VP8BitWriterSize(const VP8BitWriter* const bw) {VP8BitWriterSize66,2522
typedef uint64_t vp8l_atype_t;   // accumulator typevp8l_atype_t74,2772
typedef uint32_t vp8l_wtype_t;   // writing typevp8l_wtype_t75,2825
#define WSWAP WSWAP76,2874
#define VP8L_WRITER_BYTES VP8L_WRITER_BYTES77,2896
#define VP8L_WRITER_BITS VP8L_WRITER_BITS78,2953
#define VP8L_WRITER_MAX_BITS VP8L_WRITER_MAX_BITS79,3014
typedef uint32_t vp8l_atype_t;vp8l_atype_t81,3081
typedef uint16_t vp8l_wtype_t;vp8l_wtype_t82,3112
#define WSWAP WSWAP83,3143
#define VP8L_WRITER_BYTES VP8L_WRITER_BYTES84,3165
#define VP8L_WRITER_BITS VP8L_WRITER_BITS85,3196
#define VP8L_WRITER_MAX_BITS VP8L_WRITER_MAX_BITS86,3228
  vp8l_atype_t bits_;   // bit accumulatorbits_90,3285
  vp8l_atype_t bits_;   // bit accumulator__anon40::bits_90,3285
  int          used_;   // number of bits used in accumulatorused_91,3328
  int          used_;   // number of bits used in accumulator__anon40::used_91,3328
  uint8_t*     buf_;    // start of bufferbuf_92,3390
  uint8_t*     buf_;    // start of buffer__anon40::buf_92,3390
  uint8_t*     cur_;    // current write positioncur_93,3433
  uint8_t*     cur_;    // current write position__anon40::cur_93,3433
  uint8_t*     end_;    // end of bufferend_94,3483
  uint8_t*     end_;    // end of buffer__anon40::end_94,3483
  int error_;error_100,3782
  int error_;__anon40::error_100,3782
} VP8LBitWriter;VP8LBitWriter101,3796
static WEBP_INLINE size_t VP8LBitWriterNumBytes(const VP8LBitWriter* const bw) {VP8LBitWriterNumBytes103,3814
int VP8LBitWriterInit(VP8LBitWriter* const bw, size_t expected_size);VP8LBitWriterInit108,4008
int VP8LBitWriterClone(const VP8LBitWriter* const src,VP8LBitWriterClone110,4131
uint8_t* VP8LBitWriterFinish(VP8LBitWriter* const bw);VP8LBitWriterFinish113,4312
void VP8LBitWriterWipeOut(VP8LBitWriter* const bw);VP8LBitWriterWipeOut115,4420
void VP8LBitWriterReset(const VP8LBitWriter* const bw_init,VP8LBitWriterReset117,4545
void VP8LBitWriterSwap(VP8LBitWriter* const src, VP8LBitWriter* const dst);VP8LBitWriterSwap120,4699
void VP8LPutBitsFlushBits(VP8LBitWriter* const bw);VP8LPutBitsFlushBits123,4854
void VP8LPutBitsInternal(VP8LBitWriter* const bw, uint32_t bits, int n_bits);VP8LPutBitsInternal126,4974
static WEBP_INLINE void VP8LPutBits(VP8LBitWriter* const bw,VP8LPutBits133,5383

src/utils/quant_levels_dec_utils.c,3476
#define FIX FIX25,979
#define LFIX LFIX26,1035
#define LUT_SIZE LUT_SIZE27,1091
#define DFIX DFIX31,1184
#define DSIZE DSIZE32,1250
static const uint8_t kOrderedDither[DSIZE][DSIZE] = {kOrderedDither34,1372
#define DFIX DFIX42,1577
  int width_, height_;  // dimensionwidth_46,1617
  int width_, height_;  // dimension__anon41::width_46,1617
  int width_, height_;  // dimensionheight_46,1617
  int width_, height_;  // dimension__anon41::height_46,1617
  int stride_;          // stride in bytesstride_47,1654
  int stride_;          // stride in bytes__anon41::stride_47,1654
  int row_;             // current input row being processedrow_48,1697
  int row_;             // current input row being processed__anon41::row_48,1697
  uint8_t* src_;        // input pointersrc_49,1758
  uint8_t* src_;        // input pointer__anon41::src_49,1758
  uint8_t* dst_;        // output pointerdst_50,1799
  uint8_t* dst_;        // output pointer__anon41::dst_50,1799
  int radius_;          // filter radius (=delay)radius_52,1842
  int radius_;          // filter radius (=delay)__anon41::radius_52,1842
  int scale_;           // normalization factor, in FIX bits precisionscale_53,1892
  int scale_;           // normalization factor, in FIX bits precision__anon41::scale_53,1892
  void* mem_;           // all memorymem_55,1964
  void* mem_;           // all memory__anon41::mem_55,1964
  uint16_t* start_;start_58,2032
  uint16_t* start_;__anon41::start_58,2032
  uint16_t* cur_;cur_59,2052
  uint16_t* cur_;__anon41::cur_59,2052
  uint16_t* end_;end_60,2070
  uint16_t* end_;__anon41::end_60,2070
  uint16_t* top_;top_61,2088
  uint16_t* top_;__anon41::top_61,2088
  uint16_t* average_;average_62,2106
  uint16_t* average_;__anon41::average_62,2106
  int num_levels_;       // number of quantized levelsnum_levels_65,2160
  int num_levels_;       // number of quantized levels__anon41::num_levels_65,2160
  int min_, max_;        // min and max level valuesmin_66,2215
  int min_, max_;        // min and max level values__anon41::min_66,2215
  int min_, max_;        // min and max level valuesmax_66,2215
  int min_, max_;        // min and max level values__anon41::max_66,2215
  int min_level_dist_;   // smallest distance between two consecutive levelsmin_level_dist_67,2268
  int min_level_dist_;   // smallest distance between two consecutive levels__anon41::min_level_dist_67,2268
  int16_t* correction_;  // size = 1 + 2*LUT_SIZE  -> ~4k memorycorrection_69,2346
  int16_t* correction_;  // size = 1 + 2*LUT_SIZE  -> ~4k memory__anon41::correction_69,2346
} SmoothParams;SmoothParams70,2411
#define CLIP_8b_MASK CLIP_8b_MASK74,2510
static WEBP_INLINE uint8_t clip_8b(int v) {clip_8b75,2556
#undef CLIP_8b_MASKCLIP_8b_MASK78,2679
static void VFilter(SmoothParams* const p) {VFilter81,2725
static void HFilter(SmoothParams* const p) {HFilter110,3699
static void ApplyFilter(SmoothParams* const p) {ApplyFilter134,4425
static void InitCorrectionLUT(int16_t* const lut, int min_dist) {InitCorrectionLUT160,5196
static void CountLevels(SmoothParams* const p) {CountLevels183,5954
static int InitParams(uint8_t* const data, int width, int height, int stride,InitParams216,6813
static void CleanupParams(SmoothParams* const p) {CleanupParams258,8078
int WebPDequantizeLevels(uint8_t* const data, int width, int height, int stride,WebPDequantizeLevels262,8157

src/utils/huffman_encode_utils.c,1137
static int ValuesShouldBeCollapsedToStrideAverage(int a, int b) {ValuesShouldBeCollapsedToStrideAverage25,936
static void OptimizeHuffmanForRle(int length, uint8_t* const good_for_rle,OptimizeHuffmanForRle31,1166
static int CompareHuffmanTrees(const void* ptr1, const void* ptr2) {CompareHuffmanTrees122,4074
static void SetBitDepths(const HuffmanTree* const tree,SetBitDepths135,4488
static void GenerateOptimalTree(const uint32_t* const histogram,GenerateOptimalTree165,5649
static HuffmanTreeToken* CodeRepeatedValues(int repetitions,CodeRepeatedValues261,8779
static HuffmanTreeToken* CodeRepeatedZeros(int repetitions,CodeRepeatedZeros295,9629
int VP8LCreateCompressedHuffmanTree(const HuffmanTreeCode* const tree,VP8LCreateCompressedHuffmanTree326,10412
static const uint8_t kReversedBits[16] = {kReversedBits356,11463
static uint32_t ReverseBits(int num_bits, uint32_t bits) {ReverseBits361,11593
static void ConvertBitDepthsToSymbols(HuffmanTreeCode* const tree) {ConvertBitDepthsToSymbols374,11953
void VP8LCreateHuffmanTree(uint32_t* const histogram, int tree_depth_limit,VP8LCreateHuffmanTree406,12919

src/utils/utils.h,1873
#define WEBP_UTILS_UTILS_H_WEBP_UTILS_UTILS_H_16,614
#define WEBP_MAX_ALLOCABLE_MEMORY WEBP_MAX_ALLOCABLE_MEMORY38,1078
#define WEBP_MAX_ALLOCABLE_MEMORY WEBP_MAX_ALLOCABLE_MEMORY41,1205
WEBP_EXTERN void* WebPSafeMalloc(uint64_t nmemb, size_t size);WebPSafeMalloc51,1732
WEBP_EXTERN void* WebPSafeCalloc(uint64_t nmemb, size_t size);WebPSafeCalloc54,1938
WEBP_EXTERN void WebPSafeFree(void* const ptr);WebPSafeFree57,2063
#define WEBP_ALIGN_CST WEBP_ALIGN_CST62,2207
#define WEBP_ALIGN(WEBP_ALIGN63,2233
static WEBP_INLINE uint32_t WebPMemToUint32(const uint8_t* const ptr) {WebPMemToUint3267,2406
static WEBP_INLINE void WebPUint32ToMem(uint8_t* const ptr, uint32_t val) {WebPUint32ToMem72,2536
static WEBP_INLINE int GetLE16(const uint8_t* const data) {GetLE1680,2813
static WEBP_INLINE int GetLE24(const uint8_t* const data) {GetLE2484,2923
static WEBP_INLINE uint32_t GetLE32(const uint8_t* const data) {GetLE3288,3028
static WEBP_INLINE void PutLE16(uint8_t* const data, int val) {PutLE1693,3209
static WEBP_INLINE void PutLE24(uint8_t* const data, int val) {PutLE2499,3351
static WEBP_INLINE void PutLE32(uint8_t* const data, uint32_t val) {PutLE32105,3501
#define WEBP_NEED_LOG_TABLE_8BITWEBP_NEED_LOG_TABLE_8BIT112,3806
static WEBP_INLINE int WebPLog2FloorC(uint32_t n) {WebPLog2FloorC114,3883
static WEBP_INLINE int BitsLog2Floor(uint32_t n) {BitsLog2Floor127,4232
static WEBP_INLINE int BitsLog2Floor(uint32_t n) {BitsLog2Floor135,4465
static WEBP_INLINE int BitsLog2Floor(uint32_t n) { return WebPLog2FloorC(n); }BitsLog2Floor141,4650
WEBP_EXTERN void WebPCopyPlane(const uint8_t* src, int src_stride,WebPCopyPlane150,4930
WEBP_EXTERN void WebPCopyPixels(const struct WebPPicture* const src,WebPCopyPixels156,5248
WEBP_EXTERN int WebPGetColorPalette(const struct WebPPicture* const pic,WebPGetColorPalette169,5912

src/utils/rescaler_utils.h,4311
#define WEBP_UTILS_RESCALER_UTILS_H_WEBP_UTILS_RESCALER_UTILS_H_15,572
#define WEBP_RESCALER_RFIX WEBP_RESCALER_RFIX23,679
#define WEBP_RESCALER_ONE WEBP_RESCALER_ONE24,751
#define WEBP_RESCALER_FRAC(WEBP_RESCALER_FRAC25,806
typedef uint32_t rescaler_t;   // type for side-bufferrescaler_t29,947
typedef struct WebPRescaler WebPRescaler;WebPRescaler30,1002
struct WebPRescaler {WebPRescaler31,1044
  int x_expand;               // true if we're expanding in the x directionx_expand32,1066
  int x_expand;               // true if we're expanding in the x directionWebPRescaler::x_expand32,1066
  int y_expand;               // true if we're expanding in the y directiony_expand33,1142
  int y_expand;               // true if we're expanding in the y directionWebPRescaler::y_expand33,1142
  int num_channels;           // bytes to jump between pixelsnum_channels34,1218
  int num_channels;           // bytes to jump between pixelsWebPRescaler::num_channels34,1218
  uint32_t fx_scale;          // fixed-point scaling factorsfx_scale35,1280
  uint32_t fx_scale;          // fixed-point scaling factorsWebPRescaler::fx_scale35,1280
  uint32_t fy_scale;          // ''fy_scale36,1341
  uint32_t fy_scale;          // ''WebPRescaler::fy_scale36,1341
  uint32_t fxy_scale;         // ''fxy_scale37,1377
  uint32_t fxy_scale;         // ''WebPRescaler::fxy_scale37,1377
  int y_accum;                // vertical accumulatory_accum38,1413
  int y_accum;                // vertical accumulatorWebPRescaler::y_accum38,1413
  int y_add, y_sub;           // vertical incrementsy_add39,1467
  int y_add, y_sub;           // vertical incrementsWebPRescaler::y_add39,1467
  int y_add, y_sub;           // vertical incrementsy_sub39,1467
  int y_add, y_sub;           // vertical incrementsWebPRescaler::y_sub39,1467
  int x_add, x_sub;           // horizontal incrementsx_add40,1520
  int x_add, x_sub;           // horizontal incrementsWebPRescaler::x_add40,1520
  int x_add, x_sub;           // horizontal incrementsx_sub40,1520
  int x_add, x_sub;           // horizontal incrementsWebPRescaler::x_sub40,1520
  int src_width, src_height;  // source dimensionssrc_width41,1575
  int src_width, src_height;  // source dimensionsWebPRescaler::src_width41,1575
  int src_width, src_height;  // source dimensionssrc_height41,1575
  int src_width, src_height;  // source dimensionsWebPRescaler::src_height41,1575
  int dst_width, dst_height;  // destination dimensionsdst_width42,1626
  int dst_width, dst_height;  // destination dimensionsWebPRescaler::dst_width42,1626
  int dst_width, dst_height;  // destination dimensionsdst_height42,1626
  int dst_width, dst_height;  // destination dimensionsWebPRescaler::dst_height42,1626
  int src_y, dst_y;           // row counters for input and outputsrc_y43,1682
  int src_y, dst_y;           // row counters for input and outputWebPRescaler::src_y43,1682
  int src_y, dst_y;           // row counters for input and outputdst_y43,1682
  int src_y, dst_y;           // row counters for input and outputWebPRescaler::dst_y43,1682
  uint8_t* dst;dst44,1749
  uint8_t* dst;WebPRescaler::dst44,1749
  int dst_stride;dst_stride45,1765
  int dst_stride;WebPRescaler::dst_stride45,1765
  rescaler_t* irow, *frow;    // work bufferirow46,1783
  rescaler_t* irow, *frow;    // work bufferWebPRescaler::irow46,1783
  rescaler_t* irow, *frow;    // work bufferfrow46,1783
  rescaler_t* irow, *frow;    // work bufferWebPRescaler::frow46,1783
void WebPRescalerInit(WebPRescaler* const rescaler,WebPRescalerInit50,1912
int WebPRescalerGetScaledDimensions(int src_width, int src_height,WebPRescalerGetScaledDimensions61,2486
int WebPRescaleNeededLines(const WebPRescaler* const rescaler,WebPRescaleNeededLines67,2830
int WebPRescalerImport(WebPRescaler* const rescaler, int num_rows,WebPRescalerImport72,3090
int WebPRescalerExport(WebPRescaler* const rescaler);WebPRescalerExport76,3290
int WebPRescalerInputDone(const WebPRescaler* const rescaler) {WebPRescalerInputDone80,3400
int WebPRescalerOutputDone(const WebPRescaler* const rescaler) {WebPRescalerOutputDone85,3574
int WebPRescalerHasPendingOutput(const WebPRescaler* const rescaler) {WebPRescalerHasPendingOutput91,3768

src/utils/random_utils.h,838
#define WEBP_UTILS_RANDOM_UTILS_H_WEBP_UTILS_RANDOM_UTILS_H_15,574
#define VP8_RANDOM_DITHER_FIX VP8_RANDOM_DITHER_FIX24,699
#define VP8_RANDOM_TABLE_SIZE VP8_RANDOM_TABLE_SIZE25,772
  int index1_, index2_;index1_28,823
  int index1_, index2_;__anon42::index1_28,823
  int index1_, index2_;index2_28,823
  int index1_, index2_;__anon42::index2_28,823
  uint32_t tab_[VP8_RANDOM_TABLE_SIZE];tab_29,847
  uint32_t tab_[VP8_RANDOM_TABLE_SIZE];__anon42::tab_29,847
  int amp_;amp_30,887
  int amp_;__anon42::amp_30,887
} VP8Random;VP8Random31,899
void VP8InitRandom(VP8Random* const rg, float dithering);VP8InitRandom34,992
static WEBP_INLINE int VP8RandomBits2(VP8Random* const rg, int num_bits,VP8RandomBits239,1236
static WEBP_INLINE int VP8RandomBits(VP8Random* const rg, int num_bits) {VP8RandomBits55,1915

src/utils/bit_writer_utils.c,1863
static int BitWriterResize(VP8BitWriter* const bw, size_t extra_size) {BitWriterResize26,880
static void Flush(VP8BitWriter* const bw) {Flush55,1745
static const uint8_t kNorm[128] = {  // renorm_sizes[i] = 8 - log2(i)kNorm83,2575
static const uint8_t kNewRange[128] = {kNewRange96,3106
int VP8PutBit(VP8BitWriter* const bw, int bit, int prob) {VP8PutBit108,3807
int VP8PutBitUniform(VP8BitWriter* const bw, int bit) {VP8PutBitUniform126,4283
void VP8PutBits(VP8BitWriter* const bw, uint32_t value, int nb_bits) {VP8PutBits143,4655
void VP8PutSignedBits(VP8BitWriter* const bw, int value, int nb_bits) {VP8PutSignedBits151,4884
int VP8BitWriterInit(VP8BitWriter* const bw, size_t expected_size) {VP8BitWriterInit162,5223
uint8_t* VP8BitWriterFinish(VP8BitWriter* const bw) {VP8BitWriterFinish174,5536
int VP8BitWriterAppend(VP8BitWriter* const bw,VP8BitWriterAppend181,5705
void VP8BitWriterWipeOut(VP8BitWriter* const bw) {VP8BitWriterWipeOut191,6028
#define MIN_EXTRA_SIZE MIN_EXTRA_SIZE203,6374
static int VP8LBitWriterResize(VP8LBitWriter* const bw, size_t extra_size) {VP8LBitWriterResize206,6435
int VP8LBitWriterInit(VP8LBitWriter* const bw, size_t expected_size) {VP8LBitWriterInit237,7508
int VP8LBitWriterClone(const VP8LBitWriter* const src,VP8LBitWriterClone242,7661
void VP8LBitWriterWipeOut(VP8LBitWriter* const bw) {VP8LBitWriterWipeOut254,8081
void VP8LBitWriterReset(const VP8LBitWriter* const bw_init,VP8LBitWriterReset261,8221
void VP8LBitWriterSwap(VP8LBitWriter* const src, VP8LBitWriter* const dst) {VP8LBitWriterSwap270,8516
void VP8LPutBitsFlushBits(VP8LBitWriter* const bw) {VP8LPutBitsFlushBits276,8659
void VP8LPutBitsInternal(VP8LBitWriter* const bw, uint32_t bits, int n_bits) {VP8LPutBitsInternal293,9242
uint8_t* VP8LBitWriterFinish(VP8LBitWriter* const bw) {VP8LBitWriterFinish333,10673

src/utils/color_cache_utils.c,257
int VP8LColorCacheInit(VP8LColorCache* const cc, int hash_bits) {VP8LColorCacheInit23,779
void VP8LColorCacheClear(VP8LColorCache* const cc) {VP8LColorCacheClear35,1178
void VP8LColorCacheCopy(const VP8LColorCache* const src,VP8LColorCacheCopy42,1313

src/utils/utils.c,2149
static int num_malloc_calls = 0;num_malloc_calls56,2238
static int num_calloc_calls = 0;num_calloc_calls57,2271
static int num_free_calls = 0;num_free_calls58,2304
static int countdown_to_fail = 0;     // 0 = offcountdown_to_fail59,2335
typedef struct MemBlock MemBlock;MemBlock61,2385
struct MemBlock {MemBlock62,2419
  void* ptr_;ptr_63,2437
  void* ptr_;MemBlock::ptr_63,2437
  size_t size_;size_64,2451
  size_t size_;MemBlock::size_64,2451
  MemBlock* next_;next_65,2467
  MemBlock* next_;MemBlock::next_65,2467
static MemBlock* all_blocks = NULL;all_blocks68,2490
static size_t total_mem = 0;total_mem69,2526
static size_t total_mem_allocated = 0;total_mem_allocated70,2555
static size_t high_water_mark = 0;high_water_mark71,2594
static size_t mem_limit = 0;mem_limit72,2629
static int exit_registered = 0;exit_registered74,2659
static void PrintMemInfo(void) {PrintMemInfo76,2692
static void Increment(int* const v) {Increment91,3286
static void AddMem(void* ptr, size_t size) {AddMem117,3888
static void SubMem(void* ptr) {SubMem139,4530
#define Increment(Increment162,5113
#define AddMem(AddMem163,5150
#define SubMem(SubMem164,5187
static int CheckSizeArgumentsOverflow(uint64_t nmemb, size_t size) {CheckSizeArgumentsOverflow168,5282
void* WebPSafeMalloc(uint64_t nmemb, size_t size) {WebPSafeMalloc191,5967
void* WebPSafeCalloc(uint64_t nmemb, size_t size) {WebPSafeCalloc201,6249
void WebPSafeFree(void* const ptr) {WebPSafeFree211,6528
void WebPFree(void* ptr) {WebPFree220,6679
void WebPCopyPlane(const uint8_t* src, int src_stride,WebPCopyPlane226,6804
void WebPCopyPixels(const WebPPicture* const src, WebPPicture* const dst) {WebPCopyPixels237,7132
#define COLOR_HASH_SIZE COLOR_HASH_SIZE247,7587
#define COLOR_HASH_RIGHT_SHIFT COLOR_HASH_RIGHT_SHIFT248,7642
int WebPGetColorPalette(const WebPPicture* const pic, uint32_t* const palette) {WebPGetColorPalette250,7710
#undef COLOR_HASH_SIZECOLOR_HASH_SIZE304,9210
#undef COLOR_HASH_RIGHT_SHIFTCOLOR_HASH_RIGHT_SHIFT305,9233
const uint8_t WebPLogTable8bit[256] = {   // 31 ^ clz(i)WebPLogTable8bit310,9384

src/utils/endian_inl_utils.h,626
#define WEBP_UTILS_ENDIAN_INL_UTILS_H_WEBP_UTILS_ENDIAN_INL_UTILS_H_13,532
#define WORDS_BIGENDIANWORDS_BIGENDIAN26,914
#define HToLE32 HToLE3230,975
#define HToLE16 HToLE1631,999
#define HToLE32(HToLE3233,1029
#define HToLE16(HToLE1634,1052
#define HAVE_BUILTIN_BSWAP16HAVE_BUILTIN_BSWAP1639,1173
#define HAVE_BUILTIN_BSWAP32HAVE_BUILTIN_BSWAP3242,1271
#define HAVE_BUILTIN_BSWAP64HAVE_BUILTIN_BSWAP6445,1369
static WEBP_INLINE uint16_t BSwap16(uint16_t x) {BSwap1649,1432
static WEBP_INLINE uint32_t BSwap32(uint32_t x) {BSwap3260,1728
static WEBP_INLINE uint64_t BSwap64(uint64_t x) {BSwap6483,2392

src/utils/random_utils.c,163
static const uint32_t kRandomTable[VP8_RANDOM_TABLE_SIZE] = {kRandomTable20,698
void VP8InitRandom(VP8Random* const rg, float dithering) {VP8InitRandom33,1443

src/utils/thread_utils.h,2248
#define WEBP_UTILS_THREAD_UTILS_H_WEBP_UTILS_THREAD_UTILS_H_15,572
  NOT_OK = 0,   // object is unusableNOT_OK29,787
  OK,           // ready to workOK30,825
  WORK          // busy finishing the current taskWORK31,858
} WebPWorkerStatus;WebPWorkerStatus32,909
typedef int (*WebPWorkerHook)(void*, void*);WebPWorkerHook36,1080
  void* impl_;            // platform-dependent implementation worker detailsimpl_40,1209
  void* impl_;            // platform-dependent implementation worker details__anon44::impl_40,1209
  WebPWorkerStatus status_;status_41,1287
  WebPWorkerStatus status_;__anon44::status_41,1287
  WebPWorkerHook hook;    // hook to callhook42,1315
  WebPWorkerHook hook;    // hook to call__anon44::hook42,1315
  void* data1;            // first argument passed to 'hook'data143,1357
  void* data1;            // first argument passed to 'hook'__anon44::data143,1357
  void* data2;            // second argument passed to 'hook'data244,1418
  void* data2;            // second argument passed to 'hook'__anon44::data244,1418
  int had_error;          // return value of the last call to 'hook'had_error45,1480
  int had_error;          // return value of the last call to 'hook'__anon44::had_error45,1480
} WebPWorker;WebPWorker46,1549
  void (*Init)(WebPWorker* const worker);Init52,1735
  void (*Init)(WebPWorker* const worker);__anon45::Init52,1735
  int (*Reset)(WebPWorker* const worker);Reset55,1929
  int (*Reset)(WebPWorker* const worker);__anon45::Reset55,1929
  int (*Sync)(WebPWorker* const worker);Sync58,2129
  int (*Sync)(WebPWorker* const worker);__anon45::Sync58,2129
  void (*Launch)(WebPWorker* const worker);Launch62,2399
  void (*Launch)(WebPWorker* const worker);__anon45::Launch62,2399
  void (*Execute)(WebPWorker* const worker);Execute67,2711
  void (*Execute)(WebPWorker* const worker);__anon45::Execute67,2711
  void (*End)(WebPWorker* const worker);End70,2862
  void (*End)(WebPWorker* const worker);__anon45::End70,2862
} WebPWorkerInterface;WebPWorkerInterface71,2903
WEBP_EXTERN int WebPSetWorkerInterface(WebPSetWorkerInterface78,3308
WEBP_EXTERN const WebPWorkerInterface* WebPGetWorkerInterface(void);WebPGetWorkerInterface82,3454

src/utils/quant_levels_dec_utils.h,199
#define WEBP_UTILS_QUANT_LEVELS_DEC_UTILS_H_WEBP_UTILS_QUANT_LEVELS_DEC_UTILS_H_15,595
int WebPDequantizeLevels(uint8_t* const data, int width, int height, int stride,WebPDequantizeLevels28,1038

src/utils/color_cache_utils.h,1398
#define WEBP_UTILS_COLOR_CACHE_UTILS_H_WEBP_UTILS_COLOR_CACHE_UTILS_H_16,633
  uint32_t *colors_;  // color entriescolors_28,809
  uint32_t *colors_;  // color entries__anon46::colors_28,809
  int hash_shift_;    // Hash shift: 32 - hash_bits_.hash_shift_29,848
  int hash_shift_;    // Hash shift: 32 - hash_bits_.__anon46::hash_shift_29,848
  int hash_bits_;hash_bits_30,902
  int hash_bits_;__anon46::hash_bits_30,902
} VP8LColorCache;VP8LColorCache31,920
static const uint64_t kHashMul = 0x1e35a7bdull;kHashMul33,939
static WEBP_INLINE int VP8LHashPix(uint32_t argb, int shift) {VP8LHashPix35,988
static WEBP_INLINE uint32_t VP8LColorCacheLookup(VP8LColorCacheLookup39,1114
static WEBP_INLINE void VP8LColorCacheSet(const VP8LColorCache* const cc,VP8LColorCacheSet45,1287
static WEBP_INLINE void VP8LColorCacheInsert(const VP8LColorCache* const cc,VP8LColorCacheInsert51,1505
static WEBP_INLINE int VP8LColorCacheGetIndex(const VP8LColorCache* const cc,VP8LColorCacheGetIndex57,1728
static WEBP_INLINE int VP8LColorCacheContains(const VP8LColorCache* const cc,VP8LColorCacheContains63,1974
int VP8LColorCacheInit(VP8LColorCache* const color_cache, int hash_bits);VP8LColorCacheInit73,2411
void VP8LColorCacheCopy(const VP8LColorCache* const src,VP8LColorCacheCopy75,2486
void VP8LColorCacheClear(VP8LColorCache* const color_cache);VP8LColorCacheClear79,2644

src/utils/huffman_utils.c,794
#define MAX_HTREE_GROUPS MAX_HTREE_GROUPS23,824
HTreeGroup* VP8LHtreeGroupsNew(int num_htree_groups) {VP8LHtreeGroupsNew25,861
void VP8LHtreeGroupsFree(HTreeGroup* const htree_groups) {VP8LHtreeGroupsFree35,1152
static WEBP_INLINE uint32_t GetNextKey(uint32_t key, int len) {GetNextKey43,1422
static WEBP_INLINE void ReplicateValue(HuffmanCode* table,ReplicateValue53,1740
static WEBP_INLINE int NextTableBitSize(const int* const count,NextTableBitSize66,2193
static int BuildHuffmanTable(HuffmanCode* const root_table, int root_bits,BuildHuffmanTable80,2605
#define MAX_CODE_LENGTHS_SIZE MAX_CODE_LENGTHS_SIZE201,6756
#define SORTED_SIZE_CUTOFF SORTED_SIZE_CUTOFF204,6919
int VP8LBuildHuffmanTable(HuffmanCode* const root_table, int root_bits,VP8LBuildHuffmanTable205,6950

src/utils/quant_levels_utils.h,182
#define WEBP_UTILS_QUANT_LEVELS_UTILS_H_WEBP_UTILS_QUANT_LEVELS_UTILS_H_15,588
int QuantizeLevels(uint8_t* const data, int width, int height, int num_levels,QuantizeLevels29,992

src/utils/huffman_utils.h,2650
#define WEBP_UTILS_HUFFMAN_UTILS_H_WEBP_UTILS_HUFFMAN_UTILS_H_15,603
#define HUFFMAN_TABLE_BITS HUFFMAN_TABLE_BITS25,768
#define HUFFMAN_TABLE_MASK HUFFMAN_TABLE_MASK26,802
#define LENGTHS_TABLE_BITS LENGTHS_TABLE_BITS28,867
#define LENGTHS_TABLE_MASK LENGTHS_TABLE_MASK29,901
  uint8_t bits;     // number of bits used for this symbolbits34,1014
  uint8_t bits;     // number of bits used for this symbol__anon47::bits34,1014
  uint16_t value;   // symbol value or table offsetvalue35,1073
  uint16_t value;   // symbol value or table offset__anon47::value35,1073
} HuffmanCode;HuffmanCode36,1125
  int bits;         // number of bits used for this symbol,bits40,1197
  int bits;         // number of bits used for this symbol,__anon48::bits40,1197
  uint32_t value;   // 32b packed ARGB value if literal,value42,1326
  uint32_t value;   // 32b packed ARGB value if literal,__anon48::value42,1326
} HuffmanCode32;HuffmanCode3244,1438
#define HUFFMAN_PACKED_BITS HUFFMAN_PACKED_BITS46,1456
#define HUFFMAN_PACKED_TABLE_SIZE HUFFMAN_PACKED_TABLE_SIZE47,1486
typedef struct HTreeGroup HTreeGroup;HTreeGroup56,1975
struct HTreeGroup {HTreeGroup57,2013
  HuffmanCode* htrees[HUFFMAN_CODES_PER_META_CODE];htrees58,2033
  HuffmanCode* htrees[HUFFMAN_CODES_PER_META_CODE];HTreeGroup::htrees58,2033
  int      is_trivial_literal;  // True, if huffman trees for Red, Blue & Alphais_trivial_literal59,2085
  int      is_trivial_literal;  // True, if huffman trees for Red, Blue & AlphaHTreeGroup::is_trivial_literal59,2085
  uint32_t literal_arb;         // If is_trivial_literal is true, this is theliteral_arb61,2242
  uint32_t literal_arb;         // If is_trivial_literal is true, this is theHTreeGroup::literal_arb61,2242
  int is_trivial_code;          // true if is_trivial_literal with only one codeis_trivial_code64,2453
  int is_trivial_code;          // true if is_trivial_literal with only one codeHTreeGroup::is_trivial_code64,2453
  int use_packed_table;         // use packed table below for short literal codeuse_packed_table65,2534
  int use_packed_table;         // use packed table below for short literal codeHTreeGroup::use_packed_table65,2534
  HuffmanCode32 packed_table[HUFFMAN_PACKED_TABLE_SIZE];packed_table67,2696
  HuffmanCode32 packed_table[HUFFMAN_PACKED_TABLE_SIZE];HTreeGroup::packed_table67,2696
HTreeGroup* VP8LHtreeGroupsNew(int num_htree_groups);VP8LHtreeGroupsNew71,2833
void VP8LHtreeGroupsFree(HTreeGroup* const htree_groups);VP8LHtreeGroupsFree74,2937
int VP8LBuildHuffmanTable(HuffmanCode* const root_table, int root_bits,VP8LBuildHuffmanTable81,3258

src/utils/bit_reader_utils.c,1295
void VP8BitReaderSetBuffer(VP8BitReader* const br,VP8BitReaderSetBuffer24,781
void VP8InitBitReader(VP8BitReader* const br,VP8InitBitReader34,1111
void VP8RemapBitReader(VP8BitReader* const br, ptrdiff_t offset) {VP8RemapBitReader47,1536
const uint8_t kVP8Log2Range[128] = {kVP8Log2Range55,1716
const uint8_t kVP8NewRange[128] = {kVP8NewRange68,2214
void VP8LoadFinalBytes(VP8BitReader* const br) {VP8LoadFinalBytes87,2925
uint32_t VP8GetValue(VP8BitReader* const br, int bits) {VP8GetValue105,3440
int32_t VP8GetSignedValue(VP8BitReader* const br, int bits) {VP8GetSignedValue113,3595
#define VP8L_LOG8_WBITS VP8L_LOG8_WBITS121,3840
#define VP8L_USE_FAST_LOADVP8L_USE_FAST_LOAD126,4079
static const uint32_t kBitMask[VP8L_MAX_NUM_BIT_READ + 1] = {kBitMask129,4114
void VP8LInitBitReader(VP8LBitReader* const br, const uint8_t* const start,VP8LInitBitReader139,4436
void VP8LBitReaderSetBuffer(VP8LBitReader* const br,VP8LBitReaderSetBuffer163,4996
static void VP8LSetEndOfStream(VP8LBitReader* const br) {VP8LSetEndOfStream174,5381
static void ShiftBytes(VP8LBitReader* const br) {ShiftBytes180,5579
void VP8LDoFillBitWindow(VP8LBitReader* const br) {VP8LDoFillBitWindow192,5881
uint32_t VP8LReadBits(VP8LBitReader* const br, int n_bits) {VP8LReadBits207,6329

src/utils/filters_utils.c,299
#define SMAX SMAX21,753
#define SDIFF(SDIFF22,769
static WEBP_INLINE int GradientPredictor(uint8_t a, uint8_t b, uint8_t c) {GradientPredictor24,844
WEBP_FILTER_TYPE WebPEstimateBestFilter(const uint8_t* data,WebPEstimateBestFilter29,1020
#undef SMAXSMAX73,2427
#undef SDIFFSDIFF74,2439

src/utils/filters_utils.h,162
#define WEBP_UTILS_FILTERS_UTILS_H_WEBP_UTILS_FILTERS_UTILS_H_15,585
WEBP_FILTER_TYPE WebPEstimateBestFilter(const uint8_t* data,WebPEstimateBestFilter25,763

src/utils/bit_reader_utils.h,4044
#define WEBP_UTILS_BIT_READER_UTILS_H_WEBP_UTILS_BIT_READER_UTILS_H_16,618
#define BITS BITS41,1542
#define BITS BITS43,1618
#define BITS BITS45,1688
#define BITS BITS47,1764
#define BITS BITS49,1835
#define BITS BITS51,1920
typedef uint64_t bit_t;bit_t60,2212
typedef uint32_t bit_t;bit_t62,2242
typedef uint32_t range_t;range_t65,2274
typedef struct VP8BitReader VP8BitReader;VP8BitReader70,2396
struct VP8BitReader {VP8BitReader71,2438
  bit_t value_;               // current valuevalue_73,2515
  bit_t value_;               // current valueVP8BitReader::value_73,2515
  range_t range_;             // current range minus 1. In [127, 254] interval.range_74,2562
  range_t range_;             // current range minus 1. In [127, 254] interval.VP8BitReader::range_74,2562
  int bits_;                  // number of valid bits leftbits_75,2642
  int bits_;                  // number of valid bits leftVP8BitReader::bits_75,2642
  const uint8_t* buf_;        // next byte to be readbuf_77,2718
  const uint8_t* buf_;        // next byte to be readVP8BitReader::buf_77,2718
  const uint8_t* buf_end_;    // end of read bufferbuf_end_78,2772
  const uint8_t* buf_end_;    // end of read bufferVP8BitReader::buf_end_78,2772
  const uint8_t* buf_max_;    // max packed-read position on bufferbuf_max_79,2824
  const uint8_t* buf_max_;    // max packed-read position on bufferVP8BitReader::buf_max_79,2824
  int eof_;                   // true if input is exhaustedeof_80,2892
  int eof_;                   // true if input is exhaustedVP8BitReader::eof_80,2892
void VP8InitBitReader(VP8BitReader* const br,VP8InitBitReader84,3010
void VP8BitReaderSetBuffer(VP8BitReader* const br,VP8BitReaderSetBuffer87,3153
void VP8RemapBitReader(VP8BitReader* const br, ptrdiff_t offset);VP8RemapBitReader92,3366
uint32_t VP8GetValue(VP8BitReader* const br, int num_bits);VP8GetValue95,3482
static WEBP_INLINE uint32_t VP8Get(VP8BitReader* const br) {VP8Get96,3542
int32_t VP8GetSignedValue(VP8BitReader* const br, int num_bits);VP8GetSignedValue101,3681
#define VP8L_MAX_NUM_BIT_READ VP8L_MAX_NUM_BIT_READ114,4331
#define VP8L_LBITS VP8L_LBITS116,4365
#define VP8L_WBITS VP8L_WBITS117,4445
typedef uint64_t vp8l_val_t;  // right now, this bit-reader can only use 64bit.vp8l_val_t119,4527
  vp8l_val_t     val_;        // pre-fetched bitsval_122,4625
  vp8l_val_t     val_;        // pre-fetched bits__anon49::val_122,4625
  const uint8_t* buf_;        // input byte bufferbuf_123,4675
  const uint8_t* buf_;        // input byte buffer__anon49::buf_123,4675
  size_t         len_;        // buffer lengthlen_124,4726
  size_t         len_;        // buffer length__anon49::len_124,4726
  size_t         pos_;        // byte position in buf_pos_125,4773
  size_t         pos_;        // byte position in buf___anon49::pos_125,4773
  int            bit_pos_;    // current bit-reading position in val_bit_pos_126,4828
  int            bit_pos_;    // current bit-reading position in val___anon49::bit_pos_126,4828
  int            eos_;        // true if a bit was read past the end of buffereos_127,4898
  int            eos_;        // true if a bit was read past the end of buffer__anon49::eos_127,4898
} VP8LBitReader;VP8LBitReader128,4977
void VP8LInitBitReader(VP8LBitReader* const br,VP8LInitBitReader130,4995
void VP8LBitReaderSetBuffer(VP8LBitReader* const br,VP8LBitReaderSetBuffer135,5162
uint32_t VP8LReadBits(VP8LBitReader* const br, int n_bits);VP8LReadBits142,5537
static WEBP_INLINE uint32_t VP8LPrefetchBits(VP8LBitReader* const br) {VP8LPrefetchBits145,5655
static WEBP_INLINE int VP8LIsEndOfStream(const VP8LBitReader* const br) {VP8LIsEndOfStream151,5911
static WEBP_INLINE void VP8LSetBitPos(VP8LBitReader* const br, int val) {VP8LSetBitPos160,6310
extern void VP8LDoFillBitWindow(VP8LBitReader* const br);VP8LDoFillBitWindow166,6558
static WEBP_INLINE void VP8LFillBitWindow(VP8LBitReader* const br) {VP8LFillBitWindow167,6616

src/utils/quant_levels_utils.c,207
#define NUM_SYMBOLS NUM_SYMBOLS19,722
#define MAX_ITER MAX_ITER21,751
#define ERROR_THRESHOLD ERROR_THRESHOLD22,823
int QuantizeLevels(uint8_t* const data, int width, int height,QuantizeLevels27,985

src/enc/analysis_enc.c,2487
#define MAX_ITERS_K_MEANS MAX_ITERS_K_MEANS22,686
static void SmoothSegmentMap(VP8Encoder* const enc) {SmoothSegmentMap28,890
static WEBP_INLINE int clip(int v, int m, int M) {clip72,2382
static void SetSegmentAlphas(VP8Encoder* const enc,SetSegmentAlphas76,2476
#define MAX_ALPHA MAX_ALPHA103,3405
#define ALPHA_SCALE ALPHA_SCALE104,3483
#define DEFAULT_ALPHA DEFAULT_ALPHA105,3549
#define IS_BETTER_ALPHA(IS_BETTER_ALPHA106,3576
static int FinalAlphaValue(int alpha) {FinalAlphaValue108,3645
static int GetAlpha(const VP8Histogram* const histo) {GetAlpha113,3753
static void InitHistogram(VP8Histogram* const histo) {InitHistogram124,4227
static void MergeHistograms(const VP8Histogram* const in,MergeHistograms129,4337
static void AssignSegments(VP8Encoder* const enc,AssignSegments142,4781
#define MAX_INTRA16_MODE MAX_INTRA16_MODE236,8113
#define MAX_INTRA4_MODE MAX_INTRA4_MODE237,8140
#define MAX_UV_MODE MAX_UV_MODE238,8167
static int MBAnalyzeBestIntra16Mode(VP8EncIterator* const it) {MBAnalyzeBestIntra16Mode240,8195
static int FastMBAnalyze(VP8EncIterator* const it) {FastMBAnalyze265,8852
static int MBAnalyzeBestIntra4Mode(VP8EncIterator* const it,MBAnalyzeBestIntra4Mode288,9563
static int MBAnalyzeBestUVMode(VP8EncIterator* const it) {MBAnalyzeBestUVMode331,10903
static void MBAnalyze(VP8EncIterator* const it,MBAnalyze360,11744
static void DefaultMBInfo(VP8MBInfo* const mb) {DefaultMBInfo395,12981
static void ResetAllMBInfo(VP8Encoder* const enc) {ResetAllMBInfo413,13689
  WebPWorker worker;worker429,14170
  WebPWorker worker;__anon50::worker429,14170
  int alphas[MAX_ALPHA + 1];alphas430,14191
  int alphas[MAX_ALPHA + 1];__anon50::alphas430,14191
  int alpha, uv_alpha;alpha431,14220
  int alpha, uv_alpha;__anon50::alpha431,14220
  int alpha, uv_alpha;uv_alpha431,14220
  int alpha, uv_alpha;__anon50::uv_alpha431,14220
  VP8EncIterator it;it432,14243
  VP8EncIterator it;__anon50::it432,14243
  int delta_progress;delta_progress433,14264
  int delta_progress;__anon50::delta_progress433,14264
} SegmentJob;SegmentJob434,14286
static int DoSegmentsJob(SegmentJob* const job, VP8EncIterator* const it) {DoSegmentsJob437,14319
static void MergeJobs(const SegmentJob* const src, SegmentJob* const dst) {MergeJobs452,14827
static void InitSegmentJob(VP8Encoder* const enc, SegmentJob* const job,InitSegmentJob460,15091
int VP8EncAnalyze(VP8Encoder* const enc) {VP8EncAnalyze478,15808

src/enc/iterator_enc.c,2264
static void InitLeft(VP8EncIterator* const it) {InitLeft22,773
static void InitTop(VP8EncIterator* const it) {InitTop31,1030
void VP8IteratorSetRow(VP8EncIterator* const it, int y) {VP8IteratorSetRow38,1263
void VP8IteratorReset(VP8EncIterator* const it) {VP8IteratorReset51,1633
void VP8IteratorSetCountDown(VP8EncIterator* const it, int count_down) {VP8IteratorSetCountDown60,1909
int VP8IteratorIsDone(const VP8EncIterator* const it) {VP8IteratorIsDone64,2036
void VP8IteratorInit(VP8Encoder* const enc, VP8EncIterator* const it) {VP8IteratorInit68,2128
int VP8IteratorProgress(const VP8EncIterator* const it, int delta) {VP8IteratorProgress82,2641
static WEBP_INLINE int MinSize(int a, int b) { return (a < b) ? a : b; }MinSize98,3285
static void ImportBlock(const uint8_t* src, int src_stride,ImportBlock100,3359
static void ImportLine(const uint8_t* src, int src_stride,ImportLine117,3747
void VP8IteratorImport(VP8EncIterator* const it, uint8_t* tmp_32) {VP8IteratorImport124,3995
static void ExportBlock(const uint8_t* src, uint8_t* dst, int dst_stride,ExportBlock172,5865
void VP8IteratorExport(const VP8EncIterator* const it) {VP8IteratorExport181,6070
#define BIT(BIT225,7393
void VP8IteratorNzToBytes(VP8EncIterator* const it) {VP8IteratorNzToBytes227,7437
void VP8IteratorBytesToNz(VP8EncIterator* const it) {VP8IteratorBytesToNz260,8223
#undef BITBIT278,8807
void VP8IteratorSaveBoundary(VP8EncIterator* const it) {VP8IteratorSaveBoundary283,8957
int VP8IteratorNext(VP8EncIterator* const it) {VP8IteratorNext308,9746
void VP8SetIntra16Mode(const VP8EncIterator* const it, int mode) {VP8SetIntra16Mode324,10146
void VP8SetIntra4Mode(const VP8EncIterator* const it, const uint8_t* modes) {VP8SetIntra4Mode334,10371
void VP8SetIntraUVMode(const VP8EncIterator* const it, int mode) {VP8SetIntraUVMode345,10641
void VP8SetSkip(const VP8EncIterator* const it, int skip) {VP8SetSkip349,10739
void VP8SetSegment(const VP8EncIterator* const it, int segment) {VP8SetSegment353,10827
static const uint8_t VP8TopLeftI4[16] = {VP8TopLeftI4389,12602
void VP8IteratorStartI4(VP8EncIterator* const it) {VP8IteratorStartI4396,12719
int VP8IteratorRotateI4(VP8EncIterator* const it,VP8IteratorRotateI4423,13562

src/enc/picture_csp_enc.c,6729
#define USE_GAMMA_COMPRESSIONUSE_GAMMA_COMPRESSION26,862
#define USE_INVERSE_ALPHA_TABLEUSE_INVERSE_ALPHA_TABLE29,940
  uint32_t argb;argb32,994
  uint32_t argb;__anon51::argb32,994
  uint8_t  bytes[4];bytes33,1011
  uint8_t  bytes[4];__anon51::bytes33,1011
} test_endian = { 0xff000000u };test_endian34,1032
#define ALPHA_IS_LAST ALPHA_IS_LAST35,1065
static int CheckNonOpaque(const uint8_t* alpha, int width, int height,CheckNonOpaque41,1290
int WebPPictureHasTransparency(const WebPPicture* picture) {WebPPictureHasTransparency58,1775
#define kGamma kGamma78,2520
#define kGammaFix kGammaFix79,2600
#define kGammaScale kGammaScale80,2668
#define kGammaTabFix kGammaTabFix81,2711
#define kGammaTabScale kGammaTabScale82,2777
#define kGammaTabRounder kGammaTabRounder83,2820
#define kGammaTabSize kGammaTabSize84,2867
static int kLinearToGammaTab[kGammaTabSize + 1];kLinearToGammaTab86,2924
static uint16_t kGammaToLinearTab[256];kGammaToLinearTab87,2973
static volatile int kGammaTablesOk = 0;kGammaTablesOk88,3013
static WEBP_TSAN_IGNORE_FUNCTION void InitGammaTables(void) {InitGammaTables90,3054
static WEBP_INLINE uint32_t GammaToLinear(uint8_t v) {GammaToLinear106,3544
static WEBP_INLINE int Interpolate(int v) {Interpolate110,3633
static WEBP_INLINE int LinearToGamma(uint32_t base_value, int shift) {LinearToGamma122,4148
static WEBP_TSAN_IGNORE_FUNCTION void InitGammaTables(void) {}InitGammaTables129,4368
static WEBP_INLINE uint32_t GammaToLinear(uint8_t v) { return v; }GammaToLinear130,4431
static WEBP_INLINE int LinearToGamma(uint32_t base_value, int shift) {LinearToGamma131,4498
static int RGBToY(int r, int g, int b, VP8Random* const rg) {RGBToY140,4752
static int RGBToU(int r, int g, int b, VP8Random* const rg) {RGBToU145,4942
static int RGBToV(int r, int g, int b, VP8Random* const rg) {RGBToV150,5141
static const int kNumIterations = 4;kNumIterations158,5451
static const int kMinDimensionIterativeConversion = 4;kMinDimensionIterativeConversion159,5488
#define SFIX SFIX163,5670
typedef int16_t fixed_t;      // signed type with extra SFIX precision for UVfixed_t164,5740
typedef uint16_t fixed_y_t;   // unsigned type with extra SFIX precision for Wfixed_y_t165,5818
#define SHALF SHALF167,5898
#define MAX_Y_T MAX_Y_T168,5929
#define SROUNDER SROUNDER169,5965
#define kGammaF kGammaF176,6179
static float kGammaToLinearTabF[MAX_Y_T + 1];   // size scales with Y_FIXkGammaToLinearTabF177,6205
static float kLinearToGammaTabF[kGammaTabSize + 2];kLinearToGammaTabF178,6279
static volatile int kGammaTablesFOk = 0;kGammaTablesFOk179,6331
static WEBP_TSAN_IGNORE_FUNCTION void InitGammaTablesF(void) {InitGammaTablesF181,6373
static WEBP_INLINE float GammaToLinearF(int v) {GammaToLinearF213,7394
static WEBP_INLINE int LinearToGammaF(float value) {LinearToGammaF217,7478
static WEBP_TSAN_IGNORE_FUNCTION void InitGammaTablesF(void) {}InitGammaTablesF229,7861
static WEBP_INLINE float GammaToLinearF(int v) {GammaToLinearF230,7925
static WEBP_INLINE int LinearToGammaF(float value) {LinearToGammaF234,8031
static uint8_t clip_8b(fixed_t v) {clip_8b242,8243
static fixed_y_t clip_y(int y) {clip_y246,8342
static int RGBToGray(int r, int g, int b) {RGBToGray252,8527
static float RGBToGrayF(float r, float g, float b) {RGBToGrayF257,8666
static int ScaleDown(int a, int b, int c, int d) {ScaleDown261,8778
static WEBP_INLINE void UpdateW(const fixed_y_t* src, fixed_y_t* dst, int w) {UpdateW269,9030
static void UpdateChroma(const fixed_y_t* src1, const fixed_y_t* src2,UpdateChroma280,9393
static void StoreGray(const fixed_y_t* rgb, fixed_y_t* y, int w) {StoreGray300,10170
static WEBP_INLINE fixed_y_t Filter2(int A, int B, int W0) {Filter2309,10433
static WEBP_INLINE fixed_y_t UpLift(uint8_t a) {  // 8bit -> SFIXUpLift316,10644
static void ImportOneRow(const uint8_t* const r_ptr,ImportOneRow320,10754
static void InterpolateTwoRows(const fixed_y_t* const best_y,InterpolateTwoRows341,11508
static WEBP_INLINE uint8_t ConvertRGBToY(int r, int g, int b) {ConvertRGBToY374,12740
static WEBP_INLINE uint8_t ConvertRGBToU(int r, int g, int b) {ConvertRGBToU379,12922
static WEBP_INLINE uint8_t ConvertRGBToV(int r, int g, int b) {ConvertRGBToV384,13101
static int ConvertWRGBToYUV(const fixed_y_t* best_y, const fixed_t* best_uv,ConvertWRGBToYUV389,13280
#define SAFE_ALLOC(SAFE_ALLOC432,14707
static int PreprocessARGB(const uint8_t* r_ptr,PreprocessARGB434,14779
#undef SAFE_ALLOCSAFE_ALLOC558,19156
#define SUM4(SUM4563,19284
#define SUM2(SUM2569,19590
#define SUM2ALPHA(SUM2ALPHA572,19692
#define SUM4ALPHA(SUM4ALPHA573,19746
static const int kAlphaFix = 19;kAlphaFix577,19848
static const uint32_t kInvAlpha[4 * 0xff + 1] = {kInvAlpha585,20380
#define DIVIDE_BY_ALPHA(DIVIDE_BY_ALPHA719,26544
#define DIVIDE_BY_ALPHA(DIVIDE_BY_ALPHA723,26631
static WEBP_INLINE int LinearToGammaWeighted(const uint8_t* src,LinearToGammaWeighted727,26718
static WEBP_INLINE void ConvertRowToY(const uint8_t* const r_ptr,ConvertRowToY743,27447
static WEBP_INLINE void AccumulateRGBA(const uint8_t* const r_ptr,AccumulateRGBA756,27992
static WEBP_INLINE void AccumulateRGB(const uint8_t* const r_ptr,AccumulateRGB800,29538
static WEBP_INLINE void ConvertRowsToUV(const uint16_t* rgb,ConvertRowsToUV818,30180
static int ImportYUVAFromRGBA(const uint8_t* r_ptr,ImportYUVAFromRGBA831,30662
#undef SUM4SUM4976,35727
#undef SUM2SUM2977,35739
#undef SUM4ALPHASUM4ALPHA978,35751
#undef SUM2ALPHASUM2ALPHA979,35768
static int PictureARGBToYUVA(WebPPicture* picture, WebPEncCSP colorspace,PictureARGBToYUVA984,35902
int WebPPictureARGBToYUVADithered(WebPPicture* picture, WebPEncCSP colorspace,WebPPictureARGBToYUVADithered1004,36865
int WebPPictureARGBToYUVA(WebPPicture* picture, WebPEncCSP colorspace) {WebPPictureARGBToYUVA1009,37063
int WebPPictureSharpARGBToYUVA(WebPPicture* picture) {WebPPictureSharpARGBToYUVA1013,37196
int WebPPictureSmartARGBToYUVA(WebPPicture* picture) {WebPPictureSmartARGBToYUVA1017,37341
int WebPPictureYUVAToARGB(WebPPicture* picture) {WebPPictureYUVAToARGB1024,37563
static int Import(WebPPicture* const picture,Import1086,40008
int WebPPictureImportBGR(WebPPicture* picture,WebPPictureImportBGR1139,41541
int WebPPictureImportBGRA(WebPPicture* picture,WebPPictureImportBGRA1146,41771
int WebPPictureImportBGRX(WebPPicture* picture,WebPPictureImportBGRX1154,42009
int WebPPictureImportRGB(WebPPicture* picture,WebPPictureImportRGB1163,42275
int WebPPictureImportRGBA(WebPPicture* picture,WebPPictureImportRGBA1170,42505
int WebPPictureImportRGBX(WebPPicture* picture,WebPPictureImportRGBX1177,42742

src/enc/backward_references_enc.c,3652
#define MIN_BLOCK_SIZE MIN_BLOCK_SIZE24,796
#define MAX_ENTROPY MAX_ENTROPY26,871
#define WINDOW_SIZE WINDOW_SIZE29,972
#define MIN_LENGTH MIN_LENGTH33,1146
static const uint8_t plane_to_code_lut[128] = {plane_to_code_lut37,1250
extern int VP8LDistanceToPlaneCode(int xsize, int dist);VP8LDistanceToPlaneCode48,1949
int VP8LDistanceToPlaneCode(int xsize, int dist) {VP8LDistanceToPlaneCode49,2006
static WEBP_INLINE int FindMatchLength(const uint32_t* const array1,FindMatchLength65,2748
struct PixOrCopyBlock {PixOrCopyBlock78,3298
  PixOrCopyBlock* next_;   // next block (or NULL)next_79,3322
  PixOrCopyBlock* next_;   // next block (or NULL)PixOrCopyBlock::next_79,3322
  PixOrCopy* start_;       // data startstart_80,3373
  PixOrCopy* start_;       // data startPixOrCopyBlock::start_80,3373
  int size_;               // currently used sizesize_81,3414
  int size_;               // currently used sizePixOrCopyBlock::size_81,3414
extern void VP8LClearBackwardRefs(VP8LBackwardRefs* const refs);VP8LClearBackwardRefs84,3468
void VP8LClearBackwardRefs(VP8LBackwardRefs* const refs) {VP8LClearBackwardRefs85,3533
void VP8LBackwardRefsClear(VP8LBackwardRefs* const refs) {VP8LBackwardRefsClear96,3838
void VP8LBackwardRefsInit(VP8LBackwardRefs* const refs, int block_size) {VP8LBackwardRefsInit106,4127
VP8LRefsCursor VP8LRefsCursorInit(const VP8LBackwardRefs* const refs) {VP8LRefsCursorInit114,4381
void VP8LRefsCursorNextBlock(VP8LRefsCursor* const c) {VP8LRefsCursorNextBlock127,4697
static PixOrCopyBlock* BackwardRefsNewBlock(VP8LBackwardRefs* const refs) {BackwardRefsNewBlock135,4996
extern void VP8LBackwardRefsCursorAdd(VP8LBackwardRefs* const refs,VP8LBackwardRefsCursorAdd157,5663
void VP8LBackwardRefsCursorAdd(VP8LBackwardRefs* const refs,VP8LBackwardRefsCursorAdd159,5789
int VP8LHashChainInit(VP8LHashChain* const p, int size) {VP8LHashChainInit172,6216
void VP8LHashChainClear(VP8LHashChain* const p) {VP8LHashChainClear184,6523
#define HASH_MULTIPLIER_HI HASH_MULTIPLIER_HI194,6759
#define HASH_MULTIPLIER_LO HASH_MULTIPLIER_LO195,6802
static WEBP_INLINE uint32_t GetPixPairHash64(const uint32_t* const argb) {GetPixPairHash64197,6846
static int GetMaxItersForQuality(int quality) {GetMaxItersForQuality207,7222
static int GetWindowSizeForHashChain(int quality, int xsize) {GetWindowSizeForHashChain211,7313
static WEBP_INLINE int MaxFindCopyLength(int len) {MaxFindCopyLength220,7697
int VP8LHashChainFill(VP8LHashChain* const p, int quality,VP8LHashChainFill224,7800
static WEBP_INLINE void AddSingleLiteral(uint32_t pixel, int use_color_cache,AddSingleLiteral392,14288
static int BackwardReferencesRle(int xsize, int ysize,BackwardReferencesRle410,14912
static int BackwardReferencesLz77(int xsize, int ysize,BackwardReferencesLz77453,16530
#define WINDOW_OFFSETS_SIZE_MAX WINDOW_OFFSETS_SIZE_MAX524,19051
static int BackwardReferencesLz77Box(int xsize, int ysize,BackwardReferencesLz77Box525,19086
static void BackwardReferences2DLocality(int xsize,BackwardReferences2DLocality676,24670
static int CalculateBestCacheSize(const uint32_t* argb, int quality,CalculateBestCacheSize694,25429
static int BackwardRefsWithLocalCache(const uint32_t* const argb,BackwardRefsWithLocalCache793,28936
static VP8LBackwardRefs* GetBackwardReferencesLowEffort(GetBackwardReferencesLowEffort827,30045
extern int VP8LBackwardReferencesTraceBackwards(VP8LBackwardReferencesTraceBackwards839,30457
static VP8LBackwardRefs* GetBackwardReferences(GetBackwardReferences843,30698
VP8LBackwardRefs* VP8LGetBackwardReferences(VP8LGetBackwardReferences930,33754

src/enc/picture_psnr_enc.c,1013
typedef double (*AccumulateFunc)(const uint8_t* src, int src_stride,AccumulateFunc24,752
#define RADIUS RADIUS34,1193
static double AccumulateLSIM(const uint8_t* src, int src_stride,AccumulateLSIM36,1254
#undef RADIUSRADIUS63,2219
static double AccumulateSSE(const uint8_t* src, int src_stride,AccumulateSSE65,2234
static double AccumulateSSIM(const uint8_t* src, int src_stride,AccumulateSSIM80,2671
static const double kMinDistortion_dB = 99.;kMinDistortion_dB119,4056
static double GetPSNR(double v, double size) {GetPSNR121,4102
static double GetLogSSIM(double v, double size) {GetLogSSIM126,4279
int WebPPlaneDistortion(const uint8_t* src, size_t src_stride,WebPPlaneDistortion131,4430
int WebPPictureDistortion(const WebPPicture* src, const WebPPicture* ref,WebPPictureDistortion172,5920
int WebPPlaneDistortion(const uint8_t* src, size_t src_stride,WebPPlaneDistortion218,7445
int WebPPictureDistortion(const WebPPicture* src, const WebPPicture* ref,WebPPictureDistortion236,7937

src/enc/delta_palettization_enc.c,1378
#define MK_COL(MK_COL19,652
#define DELTA_PALETTE_SIZE DELTA_PALETTE_SIZE25,958
static const uint32_t kDeltaPalette[DELTA_PALETTE_SIZE] = {kDeltaPalette29,1118
#undef MK_COLMK_COL257,6939
static WEBP_INLINE void AddPixelsEq(uint32_t* a, uint32_t b) {AddPixelsEq265,7243
static WEBP_INLINE uint32_t Clip255(uint32_t a) {Clip255271,7527
static WEBP_INLINE int Square(int x) {Square281,7750
static WEBP_INLINE uint32_t Intensity(uint32_t a) {Intensity285,7808
static uint32_t CalcDist(uint32_t predicted_value, uint32_t actual_value,CalcDist292,7967
static uint32_t Predict(int x, int y, uint32_t* image) {Predict311,8663
static WEBP_INLINE int AddSubtractComponentFullWithCoefficient(AddSubtractComponentFullWithCoefficient325,9216
static WEBP_INLINE uint32_t ClampedAddSubtractFullWithCoefficient(ClampedAddSubtractFullWithCoefficient330,9348
static int FindBestPaletteEntry(uint32_t src, uint32_t predicted_value,FindBestPaletteEntry351,10506
static void ApplyBestPaletteEntry(int x, int y,ApplyBestPaletteEntry366,10974
static WebPEncodingError ApplyDeltaPalette(uint32_t* src, uint32_t* dst,ApplyDeltaPalette386,11736
WebPEncodingError WebPSearchOptimalDeltaPalette(VP8LEncoder* const enc) {WebPSearchOptimalDeltaPalette428,13342
WebPEncodingError WebPSearchOptimalDeltaPalette(VP8LEncoder* const enc) {WebPSearchOptimalDeltaPalette450,14077

src/enc/config_enc.c,521
int WebPConfigInitInternal(WebPConfig* config,WebPConfigInitInternal24,807
int WebPValidateConfig(const WebPConfig* config) {WebPValidateConfig96,3039
#define MAX_LEVEL MAX_LEVEL133,4983
  uint8_t method_;method_137,5086
  uint8_t method_;__anon52::method_137,5086
  uint8_t quality_;quality_138,5105
  uint8_t quality_;__anon52::quality_138,5105
} kLosslessPresets[MAX_LEVEL + 1] = {kLosslessPresets139,5125
int WebPConfigLosslessPreset(WebPConfig* config, int level) {WebPConfigLosslessPreset144,5281

src/enc/vp8i_enc.h,30535
#define WEBP_ENC_VP8I_ENC_H_WEBP_ENC_VP8I_ENC_H_15,577
#define ENC_MAJ_VERSION ENC_MAJ_VERSION33,1009
#define ENC_MIN_VERSION ENC_MIN_VERSION34,1035
#define ENC_REV_VERSION ENC_REV_VERSION35,1061
enum { MAX_LF_LEVELS = 64,       // Maximum loop filter levelMAX_LF_LEVELS37,1088
       MAX_VARIABLE_LEVEL = 67,  // last (inclusive) level with variable costMAX_VARIABLE_LEVEL38,1150
       MAX_LEVEL = 2047          // max level (note: max codable is 2047 + 67)MAX_LEVEL39,1228
  RD_OPT_NONE        = 0,  // no rd-optRD_OPT_NONE43,1372
  RD_OPT_BASIC       = 1,  // basic scoring (no trellis)RD_OPT_BASIC44,1412
  RD_OPT_TRELLIS     = 2,  // perform trellis-quant on the final decision onlyRD_OPT_TRELLIS45,1469
  RD_OPT_TRELLIS_ALL = 3   // trellis-quant for every scoring (much slower)RD_OPT_TRELLIS_ALL46,1548
} VP8RDLevel;VP8RDLevel47,1624
#define YUV_SIZE_ENC YUV_SIZE_ENC72,2672
#define PRED_SIZE_ENC PRED_SIZE_ENC73,2704
#define Y_OFF_ENC Y_OFF_ENC74,2783
#define U_OFF_ENC U_OFF_ENC75,2808
#define V_OFF_ENC V_OFF_ENC76,2834
#define I16DC16 I16DC1685,3086
#define I16TM16 I16TM1686,3117
#define I16VE16 I16VE1687,3148
#define I16HE16 I16HE1688,3179
#define C8DC8 C8DC890,3272
#define C8TM8 C8TM891,3301
#define C8VE8 C8VE892,3332
#define C8HE8 C8HE893,3371
#define I4DC4 I4DC495,3415
#define I4TM4 I4TM496,3449
#define I4VE4 I4VE497,3476
#define I4HE4 I4HE498,3503
#define I4RD4 I4RD499,3530
#define I4VR4 I4VR4100,3557
#define I4LD4 I4LD4101,3584
#define I4VL4 I4VL4102,3611
#define I4HD4 I4HD4103,3638
#define I4HU4 I4HU4104,3677
#define I4TMP I4TMP105,3703
typedef int64_t score_t;     // type used for scores, rate, distortionscore_t107,3730
#define MAX_COST MAX_COST110,3917
#define QFIX QFIX112,3965
#define BIAS(BIAS113,3981
static WEBP_INLINE int QUANTDIV(uint32_t n, uint32_t iQ, uint32_t B) {QUANTDIV116,4112
typedef uint32_t proba_t;   // 16b + 16bproba_t126,4406
typedef uint8_t ProbaArray[NUM_CTX][NUM_PROBAS];ProbaArray127,4447
typedef proba_t StatsArray[NUM_CTX][NUM_PROBAS];StatsArray128,4496
typedef uint16_t CostArray[NUM_CTX][MAX_VARIABLE_LEVEL + 1];CostArray129,4545
typedef const uint16_t* (*CostArrayPtr)[NUM_CTX];   // for easy castingCostArrayPtr130,4606
typedef const uint16_t* CostArrayMap[16][NUM_CTX];CostArrayMap131,4678
typedef double LFStats[NUM_MB_SEGMENTS][MAX_LF_LEVELS];  // filter statsLFStats132,4729
typedef struct VP8Encoder VP8Encoder;VP8Encoder134,4803
  int num_segments_;      // Actual number of segments. 1 segment only = unused.num_segments_138,4879
  int num_segments_;      // Actual number of segments. 1 segment only = unused.__anon55::num_segments_138,4879
  int update_map_;        // whether to update the segment map or not.update_map_139,4960
  int update_map_;        // whether to update the segment map or not.__anon55::update_map_139,4960
  int size_;              // bit-cost for transmitting the segment mapsize_141,5097
  int size_;              // bit-cost for transmitting the segment map__anon55::size_141,5097
} VP8EncSegmentHeader;VP8EncSegmentHeader142,5168
  uint8_t segments_[3];     // probabilities for segment treesegments_146,5266
  uint8_t segments_[3];     // probabilities for segment tree__anon56::segments_146,5266
  uint8_t skip_proba_;      // final probability of being skipped.skip_proba_147,5328
  uint8_t skip_proba_;      // final probability of being skipped.__anon56::skip_proba_147,5328
  ProbaArray coeffs_[NUM_TYPES][NUM_BANDS];      // 1056 bytescoeffs_148,5395
  ProbaArray coeffs_[NUM_TYPES][NUM_BANDS];      // 1056 bytes__anon56::coeffs_148,5395
  StatsArray stats_[NUM_TYPES][NUM_BANDS];       // 4224 bytesstats_149,5458
  StatsArray stats_[NUM_TYPES][NUM_BANDS];       // 4224 bytes__anon56::stats_149,5458
  CostArray level_cost_[NUM_TYPES][NUM_BANDS];   // 13056 byteslevel_cost_150,5521
  CostArray level_cost_[NUM_TYPES][NUM_BANDS];   // 13056 bytes__anon56::level_cost_150,5521
  CostArrayMap remapped_costs_[NUM_TYPES];       // 1536 bytesremapped_costs_151,5585
  CostArrayMap remapped_costs_[NUM_TYPES];       // 1536 bytes__anon56::remapped_costs_151,5585
  int dirty_;               // if true, need to call VP8CalculateLevelCosts()dirty_152,5648
  int dirty_;               // if true, need to call VP8CalculateLevelCosts()__anon56::dirty_152,5648
  int use_skip_proba_;      // Note: we always use skip_proba for now.use_skip_proba_153,5726
  int use_skip_proba_;      // Note: we always use skip_proba for now.__anon56::use_skip_proba_153,5726
  int nb_skip_;             // number of skipped blocksnb_skip_154,5797
  int nb_skip_;             // number of skipped blocks__anon56::nb_skip_154,5797
} VP8EncProba;VP8EncProba155,5853
  int simple_;             // filtering type: 0=complex, 1=simplesimple_160,6013
  int simple_;             // filtering type: 0=complex, 1=simple__anon57::simple_160,6013
  int level_;              // base filter level [0..63]level_161,6079
  int level_;              // base filter level [0..63]__anon57::level_161,6079
  int sharpness_;          // [0..7]sharpness_162,6135
  int sharpness_;          // [0..7]__anon57::sharpness_162,6135
  int i4x4_lf_delta_;      // delta filter level for i4x4 relative to i16x16i4x4_lf_delta_163,6172
  int i4x4_lf_delta_;      // delta filter level for i4x4 relative to i16x16__anon57::i4x4_lf_delta_163,6172
} VP8EncFilterHeader;VP8EncFilterHeader164,6249
  unsigned int type_:2;     // 0=i4x4, 1=i16x16type_171,6426
  unsigned int type_:2;     // 0=i4x4, 1=i16x16__anon58::type_171,6426
  unsigned int uv_mode_:2;uv_mode_172,6474
  unsigned int uv_mode_:2;__anon58::uv_mode_172,6474
  unsigned int skip_:1;skip_173,6501
  unsigned int skip_:1;__anon58::skip_173,6501
  unsigned int segment_:2;segment_174,6525
  unsigned int segment_:2;__anon58::segment_174,6525
  uint8_t alpha_;      // quantization-susceptibilityalpha_175,6552
  uint8_t alpha_;      // quantization-susceptibility__anon58::alpha_175,6552
} VP8MBInfo;VP8MBInfo176,6606
typedef struct VP8Matrix {VP8Matrix178,6620
  uint16_t q_[16];        // quantizer stepsq_179,6647
  uint16_t q_[16];        // quantizer stepsVP8Matrix::q_179,6647
  uint16_t iq_[16];       // reciprocals, fixed point.iq_180,6692
  uint16_t iq_[16];       // reciprocals, fixed point.VP8Matrix::iq_180,6692
  uint32_t bias_[16];     // rounding biasbias_181,6747
  uint32_t bias_[16];     // rounding biasVP8Matrix::bias_181,6747
  uint32_t zthresh_[16];  // value below which a coefficient is zeroedzthresh_182,6790
  uint32_t zthresh_[16];  // value below which a coefficient is zeroedVP8Matrix::zthresh_182,6790
  uint16_t sharpen_[16];  // frequency boosters for slight sharpeningsharpen_183,6861
  uint16_t sharpen_[16];  // frequency boosters for slight sharpeningVP8Matrix::sharpen_183,6861
} VP8Matrix;VP8Matrix184,6931
  VP8Matrix y1_, y2_, uv_;  // quantization matricesy1_187,6962
  VP8Matrix y1_, y2_, uv_;  // quantization matrices__anon59::y1_187,6962
  VP8Matrix y1_, y2_, uv_;  // quantization matricesy2_187,6962
  VP8Matrix y1_, y2_, uv_;  // quantization matrices__anon59::y2_187,6962
  VP8Matrix y1_, y2_, uv_;  // quantization matricesuv_187,6962
  VP8Matrix y1_, y2_, uv_;  // quantization matrices__anon59::uv_187,6962
  int alpha_;      // quant-susceptibility, range [-127,127]. Zero is neutral.alpha_188,7015
  int alpha_;      // quant-susceptibility, range [-127,127]. Zero is neutral.__anon59::alpha_188,7015
  int beta_;       // filter-susceptibility, range [0,255].beta_190,7166
  int beta_;       // filter-susceptibility, range [0,255].__anon59::beta_190,7166
  int quant_;      // final segment quantizer.quant_191,7226
  int quant_;      // final segment quantizer.__anon59::quant_191,7226
  int fstrength_;  // final in-loop filtering strengthfstrength_192,7273
  int fstrength_;  // final in-loop filtering strength__anon59::fstrength_192,7273
  int max_edge_;   // max edge delta (for filtering strength)max_edge_193,7328
  int max_edge_;   // max edge delta (for filtering strength)__anon59::max_edge_193,7328
  int min_disto_;  // minimum distortion required to trigger filtering recordmin_disto_194,7390
  int min_disto_;  // minimum distortion required to trigger filtering record__anon59::min_disto_194,7390
  int lambda_i16_, lambda_i4_, lambda_uv_;lambda_i16_196,7486
  int lambda_i16_, lambda_i4_, lambda_uv_;__anon59::lambda_i16_196,7486
  int lambda_i16_, lambda_i4_, lambda_uv_;lambda_i4_196,7486
  int lambda_i16_, lambda_i4_, lambda_uv_;__anon59::lambda_i4_196,7486
  int lambda_i16_, lambda_i4_, lambda_uv_;lambda_uv_196,7486
  int lambda_i16_, lambda_i4_, lambda_uv_;__anon59::lambda_uv_196,7486
  int lambda_mode_, lambda_trellis_, tlambda_;lambda_mode_197,7529
  int lambda_mode_, lambda_trellis_, tlambda_;__anon59::lambda_mode_197,7529
  int lambda_mode_, lambda_trellis_, tlambda_;lambda_trellis_197,7529
  int lambda_mode_, lambda_trellis_, tlambda_;__anon59::lambda_trellis_197,7529
  int lambda_mode_, lambda_trellis_, tlambda_;tlambda_197,7529
  int lambda_mode_, lambda_trellis_, tlambda_;__anon59::tlambda_197,7529
  int lambda_trellis_i16_, lambda_trellis_i4_, lambda_trellis_uv_;lambda_trellis_i16_198,7576
  int lambda_trellis_i16_, lambda_trellis_i4_, lambda_trellis_uv_;__anon59::lambda_trellis_i16_198,7576
  int lambda_trellis_i16_, lambda_trellis_i4_, lambda_trellis_uv_;lambda_trellis_i4_198,7576
  int lambda_trellis_i16_, lambda_trellis_i4_, lambda_trellis_uv_;__anon59::lambda_trellis_i4_198,7576
  int lambda_trellis_i16_, lambda_trellis_i4_, lambda_trellis_uv_;lambda_trellis_uv_198,7576
  int lambda_trellis_i16_, lambda_trellis_i4_, lambda_trellis_uv_;__anon59::lambda_trellis_uv_198,7576
  score_t i4_penalty_;   // penalty for using Intra4i4_penalty_201,7695
  score_t i4_penalty_;   // penalty for using Intra4__anon59::i4_penalty_201,7695
} VP8SegmentInfo;VP8SegmentInfo202,7748
  score_t D, SD;              // Distortion, spectral distortionD207,7886
  score_t D, SD;              // Distortion, spectral distortion__anon60::D207,7886
  score_t D, SD;              // Distortion, spectral distortionSD207,7886
  score_t D, SD;              // Distortion, spectral distortion__anon60::SD207,7886
  score_t H, R, score;        // header bits, rate, score.H208,7951
  score_t H, R, score;        // header bits, rate, score.__anon60::H208,7951
  score_t H, R, score;        // header bits, rate, score.R208,7951
  score_t H, R, score;        // header bits, rate, score.__anon60::R208,7951
  score_t H, R, score;        // header bits, rate, score.score208,7951
  score_t H, R, score;        // header bits, rate, score.__anon60::score208,7951
  int16_t y_dc_levels[16];    // Quantized levels for luma-DC, luma-AC, chroma.y_dc_levels209,8010
  int16_t y_dc_levels[16];    // Quantized levels for luma-DC, luma-AC, chroma.__anon60::y_dc_levels209,8010
  int16_t y_ac_levels[16][16];y_ac_levels210,8090
  int16_t y_ac_levels[16][16];__anon60::y_ac_levels210,8090
  int16_t uv_levels[4 + 4][16];uv_levels211,8121
  int16_t uv_levels[4 + 4][16];__anon60::uv_levels211,8121
  int mode_i16;               // mode number for intra16 predictionmode_i16212,8153
  int mode_i16;               // mode number for intra16 prediction__anon60::mode_i16212,8153
  uint8_t modes_i4[16];       // mode numbers for intra4 predictionsmodes_i4213,8221
  uint8_t modes_i4[16];       // mode numbers for intra4 predictions__anon60::modes_i4213,8221
  int mode_uv;                // mode number of chroma predictionmode_uv214,8290
  int mode_uv;                // mode number of chroma prediction__anon60::mode_uv214,8290
  uint32_t nz;                // non-zero blocksnz215,8356
  uint32_t nz;                // non-zero blocks__anon60::nz215,8356
} VP8ModeScore;VP8ModeScore216,8405
  int x_, y_;                      // current macroblockx_221,8574
  int x_, y_;                      // current macroblock__anon61::x_221,8574
  int x_, y_;                      // current macroblocky_221,8574
  int x_, y_;                      // current macroblock__anon61::y_221,8574
  uint8_t*      yuv_in_;           // input samplesyuv_in_222,8631
  uint8_t*      yuv_in_;           // input samples__anon61::yuv_in_222,8631
  uint8_t*      yuv_out_;          // output samplesyuv_out_223,8683
  uint8_t*      yuv_out_;          // output samples__anon61::yuv_out_223,8683
  uint8_t*      yuv_out2_;         // secondary buffer swapped with yuv_out_.yuv_out2_224,8736
  uint8_t*      yuv_out2_;         // secondary buffer swapped with yuv_out_.__anon61::yuv_out2_224,8736
  uint8_t*      yuv_p_;            // scratch buffer for predictionyuv_p_225,8814
  uint8_t*      yuv_p_;            // scratch buffer for prediction__anon61::yuv_p_225,8814
  VP8Encoder*   enc_;              // back-pointerenc_226,8882
  VP8Encoder*   enc_;              // back-pointer__anon61::enc_226,8882
  VP8MBInfo*    mb_;               // current macroblockmb_227,8933
  VP8MBInfo*    mb_;               // current macroblock__anon61::mb_227,8933
  VP8BitWriter* bw_;               // current bit-writerbw_228,8990
  VP8BitWriter* bw_;               // current bit-writer__anon61::bw_228,8990
  uint8_t*      preds_;            // intra mode predictors (4x4 blocks)preds_229,9047
  uint8_t*      preds_;            // intra mode predictors (4x4 blocks)__anon61::preds_229,9047
  uint32_t*     nz_;               // non-zero patternnz_230,9120
  uint32_t*     nz_;               // non-zero pattern__anon61::nz_230,9120
  uint8_t       i4_boundary_[37];  // 32+5 boundary samples needed by intra4x4i4_boundary_231,9175
  uint8_t       i4_boundary_[37];  // 32+5 boundary samples needed by intra4x4__anon61::i4_boundary_231,9175
  uint8_t*      i4_top_;           // pointer to the current top boundary samplei4_top_232,9254
  uint8_t*      i4_top_;           // pointer to the current top boundary sample__anon61::i4_top_232,9254
  int           i4_;               // current intra4x4 mode being testedi4_233,9335
  int           i4_;               // current intra4x4 mode being tested__anon61::i4_233,9335
  int           top_nz_[9];        // top-non-zero context.top_nz_234,9408
  int           top_nz_[9];        // top-non-zero context.__anon61::top_nz_234,9408
  int           left_nz_[9];       // left-non-zero. left_nz[8] is independent.left_nz_235,9468
  int           left_nz_[9];       // left-non-zero. left_nz[8] is independent.__anon61::left_nz_235,9468
  uint64_t      bit_count_[4][3];  // bit counters for coded levels.bit_count_236,9548
  uint64_t      bit_count_[4][3];  // bit counters for coded levels.__anon61::bit_count_236,9548
  uint64_t      luma_bits_;        // macroblock bit-cost for lumaluma_bits_237,9617
  uint64_t      luma_bits_;        // macroblock bit-cost for luma__anon61::luma_bits_237,9617
  uint64_t      uv_bits_;          // macroblock bit-cost for chromauv_bits_238,9684
  uint64_t      uv_bits_;          // macroblock bit-cost for chroma__anon61::uv_bits_238,9684
  LFStats*      lf_stats_;         // filter stats (borrowed from enc_)lf_stats_239,9753
  LFStats*      lf_stats_;         // filter stats (borrowed from enc_)__anon61::lf_stats_239,9753
  int           do_trellis_;       // if true, perform extra level optimisationdo_trellis_240,9825
  int           do_trellis_;       // if true, perform extra level optimisation__anon61::do_trellis_240,9825
  int           count_down_;       // number of mb still to be processedcount_down_241,9905
  int           count_down_;       // number of mb still to be processed__anon61::count_down_241,9905
  int           count_down0_;      // starting counter value (for progress)count_down0_242,9978
  int           count_down0_;      // starting counter value (for progress)__anon61::count_down0_242,9978
  int           percent0_;         // saved initial progress percentpercent0_243,10054
  int           percent0_;         // saved initial progress percent__anon61::percent0_243,10054
  uint8_t* y_left_;    // left luma samples (addressable from index -1 to 15).y_left_245,10124
  uint8_t* y_left_;    // left luma samples (addressable from index -1 to 15).__anon61::y_left_245,10124
  uint8_t* u_left_;    // left u samples (addressable from index -1 to 7)u_left_246,10203
  uint8_t* u_left_;    // left u samples (addressable from index -1 to 7)__anon61::u_left_246,10203
  uint8_t* v_left_;    // left v samples (addressable from index -1 to 7)v_left_247,10277
  uint8_t* v_left_;    // left v samples (addressable from index -1 to 7)__anon61::v_left_247,10277
  uint8_t* y_top_;     // top luma samples at position 'x_'y_top_249,10352
  uint8_t* y_top_;     // top luma samples at position 'x_'__anon61::y_top_249,10352
  uint8_t* uv_top_;    // top u/v samples at position 'x_', packed as 16 bytesuv_top_250,10412
  uint8_t* uv_top_;    // top u/v samples at position 'x_', packed as 16 bytes__anon61::uv_top_250,10412
  uint8_t yuv_left_mem_[17 + 16 + 16 + 8 + WEBP_ALIGN_CST];yuv_left_mem_253,10528
  uint8_t yuv_left_mem_[17 + 16 + 16 + 8 + WEBP_ALIGN_CST];__anon61::yuv_left_mem_253,10528
  uint8_t yuv_mem_[3 * YUV_SIZE_ENC + PRED_SIZE_ENC + WEBP_ALIGN_CST];yuv_mem_255,10610
  uint8_t yuv_mem_[3 * YUV_SIZE_ENC + PRED_SIZE_ENC + WEBP_ALIGN_CST];__anon61::yuv_mem_255,10610
} VP8EncIterator;VP8EncIterator256,10681
void VP8IteratorInit(VP8Encoder* const enc, VP8EncIterator* const it);VP8IteratorInit260,10743
void VP8IteratorReset(VP8EncIterator* const it);VP8IteratorReset262,10832
void VP8IteratorSetRow(VP8EncIterator* const it, int y);VP8IteratorSetRow264,10919
void VP8IteratorSetCountDown(VP8EncIterator* const it, int count_down);VP8IteratorSetCountDown266,11024
int VP8IteratorIsDone(const VP8EncIterator* const it);VP8IteratorIsDone268,11136
void VP8IteratorImport(VP8EncIterator* const it, uint8_t* tmp_32);VP8IteratorImport272,11361
void VP8IteratorExport(const VP8EncIterator* const it);VP8IteratorExport274,11456
int VP8IteratorNext(VP8EncIterator* const it);VP8IteratorNext276,11569
void VP8IteratorSaveBoundary(VP8EncIterator* const it);VP8IteratorSaveBoundary278,11695
int VP8IteratorProgress(const VP8EncIterator* const it,VP8IteratorProgress280,11832
void VP8IteratorStartI4(VP8EncIterator* const it);VP8IteratorStartI4283,11961
int VP8IteratorRotateI4(VP8EncIterator* const it,VP8IteratorRotateI4285,12041
void VP8IteratorNzToBytes(VP8EncIterator* const it);VP8IteratorNzToBytes289,12182
void VP8IteratorBytesToNz(VP8EncIterator* const it);VP8IteratorBytesToNz290,12235
void VP8SetIntra16Mode(const VP8EncIterator* const it, int mode);VP8SetIntra16Mode293,12332
void VP8SetIntra4Mode(const VP8EncIterator* const it, const uint8_t* modes);VP8SetIntra4Mode294,12398
void VP8SetIntraUVMode(const VP8EncIterator* const it, int mode);VP8SetIntraUVMode295,12475
void VP8SetSkip(const VP8EncIterator* const it, int skip);VP8SetSkip296,12541
void VP8SetSegment(const VP8EncIterator* const it, int segment);VP8SetSegment297,12600
typedef struct VP8Tokens VP8Tokens;  // struct details in token.cVP8Tokens302,12774
  VP8Tokens* pages_;        // first pagepages_306,12893
  VP8Tokens* pages_;        // first page__anon62::pages_306,12893
  VP8Tokens** last_page_;   // last pagelast_page_307,12935
  VP8Tokens** last_page_;   // last page__anon62::last_page_307,12935
  uint16_t* tokens_;        // set to (*last_page_)->tokens_tokens_308,12976
  uint16_t* tokens_;        // set to (*last_page_)->tokens___anon62::tokens_308,12976
  int left_;                // how many free tokens left before the page is fullleft_309,13037
  int left_;                // how many free tokens left before the page is full__anon62::left_309,13037
  int page_size_;           // number of tokens per pagepage_size_310,13118
  int page_size_;           // number of tokens per page__anon62::page_size_310,13118
  int error_;         // true in case of malloc errorerror_312,13182
  int error_;         // true in case of malloc error__anon62::error_312,13182
} VP8TBuffer;VP8TBuffer313,13236
void VP8TBufferInit(VP8TBuffer* const b, int page_size);VP8TBufferInit316,13281
void VP8TBufferClear(VP8TBuffer* const b);   // de-allocate pages memoryVP8TBufferClear317,13338
int VP8EmitTokens(VP8TBuffer* const b, VP8BitWriter* const bw,VP8EmitTokens323,13562
int VP8RecordCoeffTokens(int ctx, const struct VP8Residual* const res,VP8RecordCoeffTokens327,13765
size_t VP8EstimateTokenSize(VP8TBuffer* const b, const uint8_t* const probas);VP8EstimateTokenSize331,13947
struct VP8Encoder {VP8Encoder338,14157
  const WebPConfig* config_;    // user configuration and parametersconfig_339,14177
  const WebPConfig* config_;    // user configuration and parametersVP8Encoder::config_339,14177
  WebPPicture* pic_;            // input / output picturepic_340,14246
  WebPPicture* pic_;            // input / output pictureVP8Encoder::pic_340,14246
  VP8EncFilterHeader   filter_hdr_;     // filtering informationfilter_hdr_343,14318
  VP8EncFilterHeader   filter_hdr_;     // filtering informationVP8Encoder::filter_hdr_343,14318
  VP8EncSegmentHeader  segment_hdr_;    // segment informationsegment_hdr_344,14383
  VP8EncSegmentHeader  segment_hdr_;    // segment informationVP8Encoder::segment_hdr_344,14383
  int profile_;                      // VP8's profile, deduced from Config.profile_346,14447
  int profile_;                      // VP8's profile, deduced from Config.VP8Encoder::profile_346,14447
  int mb_w_, mb_h_;mb_w_349,14561
  int mb_w_, mb_h_;VP8Encoder::mb_w_349,14561
  int mb_w_, mb_h_;mb_h_349,14561
  int mb_w_, mb_h_;VP8Encoder::mb_h_349,14561
  int preds_w_;   // stride of the *preds_ prediction plane (=4*mb_w + 1)preds_w_350,14581
  int preds_w_;   // stride of the *preds_ prediction plane (=4*mb_w + 1)VP8Encoder::preds_w_350,14581
  int num_parts_;num_parts_353,14718
  int num_parts_;VP8Encoder::num_parts_353,14718
  VP8BitWriter bw_;                         // part0bw_356,14774
  VP8BitWriter bw_;                         // part0VP8Encoder::bw_356,14774
  VP8BitWriter parts_[MAX_NUM_PARTITIONS];  // token partitionsparts_357,14827
  VP8BitWriter parts_[MAX_NUM_PARTITIONS];  // token partitionsVP8Encoder::parts_357,14827
  VP8TBuffer tokens_;                       // token buffertokens_358,14891
  VP8TBuffer tokens_;                       // token bufferVP8Encoder::tokens_358,14891
  int percent_;                             // for progresspercent_360,14952
  int percent_;                             // for progressVP8Encoder::percent_360,14952
  int has_alpha_;has_alpha_363,15036
  int has_alpha_;VP8Encoder::has_alpha_363,15036
  uint8_t* alpha_data_;       // non-NULL if transparency is presentalpha_data_364,15054
  uint8_t* alpha_data_;       // non-NULL if transparency is presentVP8Encoder::alpha_data_364,15054
  uint32_t alpha_data_size_;alpha_data_size_365,15123
  uint32_t alpha_data_size_;VP8Encoder::alpha_data_size_365,15123
  WebPWorker alpha_worker_;alpha_worker_366,15152
  WebPWorker alpha_worker_;VP8Encoder::alpha_worker_366,15152
  VP8SegmentInfo dqm_[NUM_MB_SEGMENTS];dqm_369,15250
  VP8SegmentInfo dqm_[NUM_MB_SEGMENTS];VP8Encoder::dqm_369,15250
  int base_quant_;                 // nominal quantizer value. Only usedbase_quant_370,15290
  int base_quant_;                 // nominal quantizer value. Only usedVP8Encoder::base_quant_370,15290
  int alpha_;                      // global susceptibility (<=> complexity)alpha_372,15441
  int alpha_;                      // global susceptibility (<=> complexity)VP8Encoder::alpha_372,15441
  int uv_alpha_;                   // U/V quantization susceptibilityuv_alpha_373,15518
  int uv_alpha_;                   // U/V quantization susceptibilityVP8Encoder::uv_alpha_373,15518
  int dq_y1_dc_;dq_y1_dc_375,15645
  int dq_y1_dc_;VP8Encoder::dq_y1_dc_375,15645
  int dq_y2_dc_, dq_y2_ac_;dq_y2_dc_376,15662
  int dq_y2_dc_, dq_y2_ac_;VP8Encoder::dq_y2_dc_376,15662
  int dq_y2_dc_, dq_y2_ac_;dq_y2_ac_376,15662
  int dq_y2_dc_, dq_y2_ac_;VP8Encoder::dq_y2_ac_376,15662
  int dq_uv_dc_, dq_uv_ac_;dq_uv_dc_377,15690
  int dq_uv_dc_, dq_uv_ac_;VP8Encoder::dq_uv_dc_377,15690
  int dq_uv_dc_, dq_uv_ac_;dq_uv_ac_377,15690
  int dq_uv_dc_, dq_uv_ac_;VP8Encoder::dq_uv_ac_377,15690
  VP8EncProba proba_;proba_380,15753
  VP8EncProba proba_;VP8Encoder::proba_380,15753
  uint64_t    sse_[4];      // sum of Y/U/V/A squared errors for all macroblockssse_381,15775
  uint64_t    sse_[4];      // sum of Y/U/V/A squared errors for all macroblocksVP8Encoder::sse_381,15775
  uint64_t    sse_count_;   // pixel count for the sse_[] statssse_count_382,15856
  uint64_t    sse_count_;   // pixel count for the sse_[] statsVP8Encoder::sse_count_382,15856
  int         coded_size_;coded_size_383,15920
  int         coded_size_;VP8Encoder::coded_size_383,15920
  int         residual_bytes_[3][4];residual_bytes_384,15947
  int         residual_bytes_[3][4];VP8Encoder::residual_bytes_384,15947
  int         block_count_[3];block_count_385,15984
  int         block_count_[3];VP8Encoder::block_count_385,15984
  int method_;               // 0=fastest, 6=best/slowest.method_388,16044
  int method_;               // 0=fastest, 6=best/slowest.VP8Encoder::method_388,16044
  VP8RDLevel rd_opt_level_;  // Deduced from method_.rd_opt_level_389,16103
  VP8RDLevel rd_opt_level_;  // Deduced from method_.VP8Encoder::rd_opt_level_389,16103
  int max_i4_header_bits_;   // partition #0 safeness factormax_i4_header_bits_390,16157
  int max_i4_header_bits_;   // partition #0 safeness factorVP8Encoder::max_i4_header_bits_390,16157
  int mb_header_limit_;      // rough limit for header bits per MBmb_header_limit_391,16218
  int mb_header_limit_;      // rough limit for header bits per MBVP8Encoder::mb_header_limit_391,16218
  int thread_level_;         // derived from config->thread_levelthread_level_392,16285
  int thread_level_;         // derived from config->thread_levelVP8Encoder::thread_level_392,16285
  int do_search_;            // derived from config->target_XXXdo_search_393,16351
  int do_search_;            // derived from config->target_XXXVP8Encoder::do_search_393,16351
  int use_tokens_;           // if true, use token bufferuse_tokens_394,16415
  int use_tokens_;           // if true, use token bufferVP8Encoder::use_tokens_394,16415
  VP8MBInfo* mb_info_;   // contextual macroblock infos (mb_w_ + 1)mb_info_397,16486
  VP8MBInfo* mb_info_;   // contextual macroblock infos (mb_w_ + 1)VP8Encoder::mb_info_397,16486
  uint8_t*   preds_;     // predictions modes: (4*mb_w+1) * (4*mb_h+1)preds_398,16554
  uint8_t*   preds_;     // predictions modes: (4*mb_w+1) * (4*mb_h+1)VP8Encoder::preds_398,16554
  uint32_t*  nz_;        // non-zero bit context: mb_w+1nz_399,16625
  uint32_t*  nz_;        // non-zero bit context: mb_w+1VP8Encoder::nz_399,16625
  uint8_t*   y_top_;     // top luma samples.y_top_400,16682
  uint8_t*   y_top_;     // top luma samples.VP8Encoder::y_top_400,16682
  uint8_t*   uv_top_;    // top u/v samples.uv_top_401,16728
  uint8_t*   uv_top_;    // top u/v samples.VP8Encoder::uv_top_401,16728
  LFStats*   lf_stats_;  // autofilter stats (if NULL, autofilter is off)lf_stats_403,16846
  LFStats*   lf_stats_;  // autofilter stats (if NULL, autofilter is off)VP8Encoder::lf_stats_403,16846
void VP8DefaultProbas(VP8Encoder* const enc);VP8DefaultProbas414,17294
void VP8WriteProbas(VP8BitWriter* const bw, const VP8EncProba* const probas);VP8WriteProbas416,17373
void VP8CodeIntraModes(VP8Encoder* const enc);VP8CodeIntraModes418,17511
int VP8EncWrite(VP8Encoder* const enc);VP8EncWrite424,17751
void VP8EncFreeBitWriters(VP8Encoder* const enc);VP8EncFreeBitWriters426,17856
void VP8MakeLuma16Preds(const VP8EncIterator* const it);VP8MakeLuma16Preds435,18116
void VP8MakeChroma8Preds(const VP8EncIterator* const it);VP8MakeChroma8Preds437,18236
void VP8MakeIntra4Preds(const VP8EncIterator* const it);VP8MakeIntra4Preds440,18384
int VP8GetCostLuma16(VP8EncIterator* const it, const VP8ModeScore* const rd);VP8GetCostLuma16442,18461
int VP8GetCostLuma4(VP8EncIterator* const it, const int16_t levels[16]);VP8GetCostLuma4443,18539
int VP8GetCostUV(VP8EncIterator* const it, const VP8ModeScore* const rd);VP8GetCostUV444,18612
int VP8EncLoop(VP8Encoder* const enc);VP8EncLoop446,18707
int VP8EncTokenLoop(VP8Encoder* const enc);VP8EncTokenLoop447,18746
int WebPEncodingSetError(const WebPPicture* const pic, WebPEncodingError error);WebPEncodingSetError451,18877
int WebPReportProgress(const WebPPicture* const pic,WebPReportProgress452,18958
int VP8EncAnalyze(VP8Encoder* const enc);VP8EncAnalyze458,19226
void VP8SetSegmentParams(VP8Encoder* const enc, float quality);VP8SetSegmentParams462,19361
int VP8Decimate(VP8EncIterator* const it, VP8ModeScore* const rd,VP8Decimate464,19491
void VP8EncInitAlpha(VP8Encoder* const enc);    // initialize alpha compressionVP8EncInitAlpha468,19610
int VP8EncStartAlpha(VP8Encoder* const enc);    // start alpha coding processVP8EncStartAlpha469,19690
int VP8EncFinishAlpha(VP8Encoder* const enc);   // finalize compressed dataVP8EncFinishAlpha470,19768
int VP8EncDeleteAlpha(VP8Encoder* const enc);   // delete compressed dataVP8EncDeleteAlpha471,19844
void VP8InitFilter(VP8EncIterator* const it);VP8InitFilter474,19933
void VP8StoreFilterStats(VP8EncIterator* const it);VP8StoreFilterStats475,19979
void VP8AdjustFilterStrength(VP8EncIterator* const it);VP8AdjustFilterStrength476,20031
int VP8FilterStrengthFromDelta(int sharpness, int delta);VP8FilterStrengthFromDelta480,20219
void WebPPictureResetBuffers(WebPPicture* const picture);WebPPictureResetBuffers485,20381
int WebPPictureAllocARGB(WebPPicture* const picture, int width, int height);WebPPictureAllocARGB490,20615
int WebPPictureAllocYUVA(WebPPicture* const picture, int width, int height);WebPPictureAllocYUVA496,20935
void WebPCleanupTransparentAreaLossless(WebPPicture* const pic);WebPCleanupTransparentAreaLossless500,21167

src/enc/backward_references_cost_enc.c,5779
#define VALUES_IN_BYTE VALUES_IN_BYTE25,891
extern void VP8LClearBackwardRefs(VP8LBackwardRefs* const refs);VP8LClearBackwardRefs27,919
extern int VP8LDistanceToPlaneCode(int xsize, int dist);VP8LDistanceToPlaneCode28,984
extern void VP8LBackwardRefsCursorAdd(VP8LBackwardRefs* const refs,VP8LBackwardRefsCursorAdd29,1041
  double alpha_[VALUES_IN_BYTE];alpha_33,1185
  double alpha_[VALUES_IN_BYTE];__anon63::alpha_33,1185
  double red_[VALUES_IN_BYTE];red_34,1218
  double red_[VALUES_IN_BYTE];__anon63::red_34,1218
  double blue_[VALUES_IN_BYTE];blue_35,1249
  double blue_[VALUES_IN_BYTE];__anon63::blue_35,1249
  double distance_[NUM_DISTANCE_CODES];distance_36,1281
  double distance_[NUM_DISTANCE_CODES];__anon63::distance_36,1281
  double* literal_;literal_37,1321
  double* literal_;__anon63::literal_37,1321
} CostModel;CostModel38,1341
static void ConvertPopulationCountTableToBitEstimates(ConvertPopulationCountTableToBitEstimates40,1355
static int CostModelBuild(CostModel* const m, int xsize, int cache_bits,CostModelBuild61,1919
static WEBP_INLINE double GetLiteralCost(const CostModel* const m, uint32_t v) {GetLiteralCost95,3131
static WEBP_INLINE double GetCacheCost(const CostModel* const m, uint32_t idx) {GetCacheCost102,3351
static WEBP_INLINE double GetLengthCost(const CostModel* const m,GetLengthCost107,3537
static WEBP_INLINE double GetDistanceCost(const CostModel* const m,GetDistanceCost114,3799
static WEBP_INLINE void AddSingleLiteralWithCostModel(AddSingleLiteralWithCostModel121,4053
#define COST_CACHE_INTERVAL_SIZE_MAX COST_CACHE_INTERVAL_SIZE_MAX147,5099
typedef struct CostInterval CostInterval;CostInterval163,6088
struct CostInterval {CostInterval164,6130
  float cost_;cost_165,6152
  float cost_;CostInterval::cost_165,6152
  int start_;start_166,6167
  int start_;CostInterval::start_166,6167
  int end_;end_167,6181
  int end_;CostInterval::end_167,6181
  int index_;index_168,6193
  int index_;CostInterval::index_168,6193
  CostInterval* previous_;previous_169,6207
  CostInterval* previous_;CostInterval::previous_169,6207
  CostInterval* next_;next_170,6234
  CostInterval* next_;CostInterval::next_170,6234
  double cost_;cost_175,6349
  double cost_;__anon64::cost_175,6349
  int start_;start_176,6365
  int start_;__anon64::start_176,6365
  int end_;       // Exclusive.end_177,6379
  int end_;       // Exclusive.__anon64::end_177,6379
} CostCacheInterval;CostCacheInterval178,6411
#define COST_MANAGER_MAX_FREE_LIST COST_MANAGER_MAX_FREE_LIST184,6696
  CostInterval* head_;head_186,6751
  CostInterval* head_;__anon65::head_186,6751
  int count_;  // The number of stored intervals.count_187,6774
  int count_;  // The number of stored intervals.__anon65::count_187,6774
  CostCacheInterval* cache_intervals_;cache_intervals_188,6824
  CostCacheInterval* cache_intervals_;__anon65::cache_intervals_188,6824
  size_t cache_intervals_size_;cache_intervals_size_189,6863
  size_t cache_intervals_size_;__anon65::cache_intervals_size_189,6863
  double cost_cache_[MAX_LENGTH];  // Contains the GetLengthCost(cost_model, k).cost_cache_190,6895
  double cost_cache_[MAX_LENGTH];  // Contains the GetLengthCost(cost_model, k).__anon65::cost_cache_190,6895
  float* costs_;costs_191,6976
  float* costs_;__anon65::costs_191,6976
  uint16_t* dist_array_;dist_array_192,6993
  uint16_t* dist_array_;__anon65::dist_array_192,6993
  CostInterval intervals_[COST_MANAGER_MAX_FREE_LIST];intervals_195,7156
  CostInterval intervals_[COST_MANAGER_MAX_FREE_LIST];__anon65::intervals_195,7156
  CostInterval* free_intervals_;free_intervals_196,7211
  CostInterval* free_intervals_;__anon65::free_intervals_196,7211
  CostInterval* recycled_intervals_;recycled_intervals_199,7400
  CostInterval* recycled_intervals_;__anon65::recycled_intervals_199,7400
} CostManager;CostManager200,7437
static void CostIntervalAddToFreeList(CostManager* const manager,CostIntervalAddToFreeList202,7453
static int CostIntervalIsInFreeList(const CostManager* const manager,CostIntervalIsInFreeList208,7677
static void CostManagerInitFreeList(CostManager* const manager) {CostManagerInitFreeList214,7950
static void DeleteIntervalList(CostManager* const manager,DeleteIntervalList222,8185
static void CostManagerClear(CostManager* const manager) {CostManagerClear233,8538
static int CostManagerInit(CostManager* const manager,CostManagerInit250,9044
static WEBP_INLINE void UpdateCost(CostManager* const manager, int i,UpdateCost321,11567
static WEBP_INLINE void UpdateCostPerInterval(CostManager* const manager,UpdateCostPerInterval334,12011
static WEBP_INLINE void ConnectIntervals(CostManager* const manager,ConnectIntervals342,12389
static WEBP_INLINE void PopInterval(CostManager* const manager,PopInterval355,12765
static WEBP_INLINE void UpdateCostAtIndex(CostManager* const manager, int i,UpdateCostAtIndex374,13520
static WEBP_INLINE void PositionOrphanInterval(CostManager* const manager,PositionOrphanInterval395,14303
static WEBP_INLINE void InsertInterval(CostManager* const manager,InsertInterval419,15207
static WEBP_INLINE void PushInterval(CostManager* const manager,PushInterval459,16805
static int BackwardReferencesHashChainDistanceOnly(BackwardReferencesHashChainDistanceOnly563,21106
static void TraceBackwards(uint16_t* const dist_array,TraceBackwards689,25991
static int BackwardReferencesHashChainFollowChosenPath(BackwardReferencesHashChainFollowChosenPath705,26501
extern int VP8LBackwardReferencesTraceBackwards(VP8LBackwardReferencesTraceBackwards757,28048
int VP8LBackwardReferencesTraceBackwards(int xsize, int ysize,VP8LBackwardReferencesTraceBackwards761,28289

src/enc/picture_tools_enc.c,996
static WEBP_INLINE uint32_t MakeARGB32(int r, int g, int b) {MakeARGB3219,632
#define SIZE SIZE26,898
#define SIZE2 SIZE227,913
static int IsTransparentARGBArea(const uint32_t* ptr, int stride, int size) {IsTransparentARGBArea28,938
static void Flatten(uint8_t* ptr, int v, int stride, int size) {Flatten41,1196
static void FlattenARGB(uint32_t* ptr, uint32_t v, int stride, int size) {FlattenARGB49,1353
static int SmoothenBlock(const uint8_t* a_ptr, int a_stride, uint8_t* y_ptr,SmoothenBlock59,1645
void WebPCleanupTransparentArea(WebPPicture* pic) {WebPCleanupTransparentArea90,2469
#undef SIZESIZE169,5001
#undef SIZE2SIZE2170,5013
void WebPCleanupTransparentAreaLossless(WebPPicture* const pic) {WebPCleanupTransparentAreaLossless172,5027
#define BLEND(BLEND193,5533
#define BLEND_10BIT(BLEND_10BIT195,5634
void WebPBlendAlpha(WebPPicture* pic, uint32_t background_rgb) {WebPBlendAlpha198,5744
#undef BLENDBLEND270,8564
#undef BLEND_10BITBLEND_10BIT271,8577

src/enc/quant_enc.c,5736
#define DO_TRELLIS_I4 DO_TRELLIS_I421,664
#define DO_TRELLIS_I16 DO_TRELLIS_I1622,689
#define DO_TRELLIS_UV DO_TRELLIS_UV23,759
#define USE_TDISTO USE_TDISTO24,831
#define MID_ALPHA MID_ALPHA26,853
#define MIN_ALPHA MIN_ALPHA27,915
#define MAX_ALPHA MAX_ALPHA28,983
#define SNS_TO_DQ SNS_TO_DQ30,1056
#define FLATNESS_LIMIT_I16 FLATNESS_LIMIT_I1635,1338
#define FLATNESS_LIMIT_I4 FLATNESS_LIMIT_I436,1385
#define FLATNESS_LIMIT_UV FLATNESS_LIMIT_UV37,1431
#define FLATNESS_PENALTY FLATNESS_PENALTY38,1477
#define MULT_8B(MULT_8B40,1540
#define RD_DISTO_MULT RD_DISTO_MULT42,1588
static void PrintBlockInfo(const VP8EncIterator* const it,PrintBlockInfo53,1841
static WEBP_INLINE int clip(int v, int m, int M) {clip125,4179
static const uint8_t kZigzag[16] = {kZigzag129,4269
static const uint8_t kDcTable[128] = {kDcTable133,4365
static const uint16_t kAcTable[128] = {kAcTable152,5079
static const uint16_t kAcTable2[128] = {kAcTable2171,5794
static const uint8_t kBiasMatrices[3][2] = {  // [luma-ac,luma-dc,chroma][dc,ac]kBiasMatrices190,6510
#define SHARPEN_BITS SHARPEN_BITS196,6759
static const uint8_t kFreqSharpening[16] = {kFreqSharpening197,6832
static int ExpandMatrix(VP8Matrix* const m, int type) {ExpandMatrix208,7118
static void CheckLambdaValue(int* const v) { if (*v < 1) *v = 1; }CheckLambdaValue237,8023
static void SetupMatrices(VP8Encoder* enc) {SetupMatrices239,8091
#define FSTRENGTH_CUTOFF FSTRENGTH_CUTOFF293,10161
static void SetupFilterStrength(VP8Encoder* const enc) {SetupFilterStrength295,10189
#define MAX_DQ_UV MAX_DQ_UV319,11353
#define MIN_DQ_UV MIN_DQ_UV320,11375
static double QualityToCompression(double c) {QualityToCompression325,11598
static double QualityToJPEGCompression(double c, double alpha) {QualityToJPEGCompression337,12161
static int SegmentsAreEquivalent(const VP8SegmentInfo* const S1,SegmentsAreEquivalent356,12965
static void SimplifySegments(VP8Encoder* const enc) {SimplifySegments361,13175
void VP8SetSegmentParams(VP8Encoder* const enc, float quality) {VP8SetSegmentParams401,14722
const uint16_t VP8I16ModeOffsets[4] = { I16DC16, I16TM16, I16VE16, I16HE16 };VP8I16ModeOffsets460,17183
const uint16_t VP8UVModeOffsets[4] = { C8DC8, C8TM8, C8VE8, C8HE8 };VP8UVModeOffsets461,17261
const uint16_t VP8I4ModeOffsets[NUM_BMODES] = {VP8I4ModeOffsets464,17390
void VP8MakeLuma16Preds(const VP8EncIterator* const it) {VP8MakeLuma16Preds468,17513
void VP8MakeChroma8Preds(const VP8EncIterator* const it) {VP8MakeChroma8Preds474,17733
void VP8MakeIntra4Preds(const VP8EncIterator* const it) {VP8MakeIntra4Preds480,17956
const uint16_t VP8Scan[16] = {  // LumaVP8Scan495,18266
static const uint16_t VP8ScanUV[4 + 4] = {VP8ScanUV502,18550
static const uint16_t kWeightY[16] = {kWeightY510,18835
static const uint16_t kWeightTrellis[16] = {kWeightTrellis514,18936
static void InitScore(VP8ModeScore* const rd) {InitScore526,19195
static void CopyScore(VP8ModeScore* const dst, const VP8ModeScore* const src) {CopyScore535,19340
static void AddScore(VP8ModeScore* const dst, const VP8ModeScore* const src) {AddScore544,19610
  int8_t prev;            // best previous nodeprev558,20028
  int8_t prev;            // best previous node__anon66::prev558,20028
  int8_t sign;            // sign of coeff_isign559,20076
  int8_t sign;            // sign of coeff_i__anon66::sign559,20076
  int16_t level;          // levellevel560,20121
  int16_t level;          // level__anon66::level560,20121
} Node;Node561,20156
  score_t score;          // partial RD scorescore565,20197
  score_t score;          // partial RD score__anon67::score565,20197
  const uint16_t* costs;  // shortcut to cost tablescosts566,20243
  const uint16_t* costs;  // shortcut to cost tables__anon67::costs566,20243
} ScoreState;ScoreState567,20296
#define MIN_DELTA MIN_DELTA572,20497
#define MAX_DELTA MAX_DELTA573,20550
#define NUM_NODES NUM_NODES574,20591
#define NODE(NODE575,20637
#define SCORE_STATE(SCORE_STATE576,20686
static WEBP_INLINE void SetRDScore(int lambda, VP8ModeScore* const rd) {SetRDScore578,20748
static WEBP_INLINE score_t RDScoreTrellis(int lambda, score_t rate,RDScoreTrellis582,20899
static int TrellisQuantizeBlock(const VP8Encoder* const enc,TrellisQuantizeBlock587,21087
#undef NODENODE746,26849
static int ReconstructIntra16(VP8EncIterator* const it,ReconstructIntra16753,27113
static int ReconstructIntra4(VP8EncIterator* const it,ReconstructIntra4805,28938
static int ReconstructUV(VP8EncIterator* const it, VP8ModeScore* const rd,ReconstructUV829,29824
static void StoreMaxDelta(VP8SegmentInfo* const dqm, const int16_t DCs[16]) {StoreMaxDelta872,31383
static void SwapModeScore(VP8ModeScore** a, VP8ModeScore** b) {SwapModeScore883,31800
static void SwapPtr(uint8_t** a, uint8_t** b) {SwapPtr889,31922
static void SwapOut(VP8EncIterator* const it) {SwapOut895,32023
static score_t IsFlat(const int16_t* levels, int num_blocks, score_t thresh) {IsFlat899,32116
static void PickBestIntra16(VP8EncIterator* const it, VP8ModeScore* rd) {PickBestIntra16912,32489
static const uint16_t* GetCostModeI4(VP8EncIterator* const it,GetCostModeI4967,34512
static int PickBestIntra4(VP8EncIterator* const it, VP8ModeScore* const rd) {PickBestIntra4976,34926
static void PickBestUV(VP8EncIterator* const it, VP8ModeScore* const rd) {PickBestUV1071,38102
static void SimpleQuantize(VP8EncIterator* const it, VP8ModeScore* const rd) {SimpleQuantize1117,39621
static void RefineUsingDistortion(VP8EncIterator* const it,RefineUsingDistortion1142,40569
int VP8Decimate(VP8EncIterator* const it, VP8ModeScore* const rd,VP8Decimate1250,44599

src/enc/histogram_enc.h,3353
#define WEBP_ENC_HISTOGRAM_ENC_H_WEBP_ENC_HISTOGRAM_ENC_H_15,604
#define VP8L_NON_TRIVIAL_SYM VP8L_NON_TRIVIAL_SYM28,846
  uint32_t* literal_;         // Pointer to the allocated buffer for literal.literal_34,1041
  uint32_t* literal_;         // Pointer to the allocated buffer for literal.__anon68::literal_34,1041
  uint32_t red_[NUM_LITERAL_CODES];red_35,1119
  uint32_t red_[NUM_LITERAL_CODES];__anon68::red_35,1119
  uint32_t blue_[NUM_LITERAL_CODES];blue_36,1155
  uint32_t blue_[NUM_LITERAL_CODES];__anon68::blue_36,1155
  uint32_t alpha_[NUM_LITERAL_CODES];alpha_37,1192
  uint32_t alpha_[NUM_LITERAL_CODES];__anon68::alpha_37,1192
  uint32_t distance_[NUM_DISTANCE_CODES];distance_39,1277
  uint32_t distance_[NUM_DISTANCE_CODES];__anon68::distance_39,1277
  int palette_code_bits_;palette_code_bits_40,1319
  int palette_code_bits_;__anon68::palette_code_bits_40,1319
  uint32_t trivial_symbol_;  // True, if histograms for Red, Blue & Alphatrivial_symbol_41,1345
  uint32_t trivial_symbol_;  // True, if histograms for Red, Blue & Alpha__anon68::trivial_symbol_41,1345
  double bit_cost_;          // cached value of bit cost.bit_cost_43,1486
  double bit_cost_;          // cached value of bit cost.__anon68::bit_cost_43,1486
  double literal_cost_;      // Cached values of dominant entropy costs:literal_cost_44,1544
  double literal_cost_;      // Cached values of dominant entropy costs:__anon68::literal_cost_44,1544
  double red_cost_;          // literal, red & blue.red_cost_45,1617
  double red_cost_;          // literal, red & blue.__anon68::red_cost_45,1617
  double blue_cost_;blue_cost_46,1670
  double blue_cost_;__anon68::blue_cost_46,1670
} VP8LHistogram;VP8LHistogram47,1691
  int size;         // number of slots currently in usesize52,1857
  int size;         // number of slots currently in use__anon69::size52,1857
  int max_size;     // maximum capacitymax_size53,1913
  int max_size;     // maximum capacity__anon69::max_size53,1913
  VP8LHistogram** histograms;histograms54,1953
  VP8LHistogram** histograms;__anon69::histograms54,1953
} VP8LHistogramSet;VP8LHistogramSet55,1983
void VP8LHistogramCreate(VP8LHistogram* const p,VP8LHistogramCreate62,2250
int VP8LGetHistogramSize(int palette_code_bits);VP8LGetHistogramSize67,2477
void VP8LHistogramInit(VP8LHistogram* const p, int palette_code_bits);VP8LHistogramInit70,2577
void VP8LHistogramStoreRefs(const VP8LBackwardRefs* const refs,VP8LHistogramStoreRefs73,2712
void VP8LFreeHistogram(VP8LHistogram* const histo);VP8LFreeHistogram77,2882
void VP8LFreeHistogramSet(VP8LHistogramSet* const histo);VP8LFreeHistogramSet80,2987
VP8LHistogramSet* VP8LAllocateHistogramSet(int size, int cache_bits);VP8LAllocateHistogramSet84,3179
VP8LHistogram* VP8LAllocateHistogram(int cache_bits);VP8LAllocateHistogram89,3429
void VP8LHistogramAddSinglePixOrCopy(VP8LHistogram* const histo,VP8LHistogramAddSinglePixOrCopy92,3528
static WEBP_INLINE int VP8LHistogramNumCodes(int palette_code_bits) {VP8LHistogramNumCodes97,3802
int VP8LGetHistoImageSymbols(int xsize, int ysize,VP8LGetHistoImageSymbols103,4018
double VP8LBitsEntropy(const uint32_t* const array, int n,VP8LBitsEntropy114,4637
double VP8LHistogramEstimateBits(const VP8LHistogram* const p);VP8LHistogramEstimateBits119,4851

src/enc/near_lossless_enc.c,798
#define MIN_DIM_FOR_NEAR_LOSSLESS MIN_DIM_FOR_NEAR_LOSSLESS26,917
#define MAX_LIMIT_BITS MAX_LIMIT_BITS27,954
static uint32_t FindClosestDiscretized(uint32_t a, int bits) {FindClosestDiscretized31,1132
static uint32_t ClosestDiscretizedArgb(uint32_t a, int bits) {ClosestDiscretizedArgb40,1442
static int IsNear(uint32_t a, uint32_t b, int limit) {IsNear50,1850
static int IsSmooth(const uint32_t* const prev_row,IsSmooth62,2119
static void NearLossless(int xsize, int ysize, const uint32_t* argb_src,NearLossless74,2672
int VP8ApplyNearLossless(const WebPPicture* const picture, int quality,VP8ApplyNearLossless110,3915
extern void VP8LNearLosslessStub(void);VP8LNearLosslessStub148,5206
WEBP_TSAN_IGNORE_FUNCTION void VP8LNearLosslessStub(void) {}VP8LNearLosslessStub149,5246

src/enc/picture_rescale_enc.c,1336
#define HALVE(HALVE25,767
static void PictureGrabSpecs(const WebPPicture* const src,PictureGrabSpecs29,935
static void SnapTopLeftPosition(const WebPPicture* const pic,SnapTopLeftPosition39,1272
static int AdjustAndCheckRectangle(const WebPPicture* const pic,AdjustAndCheckRectangle48,1535
int WebPPictureCopy(const WebPPicture* src, WebPPicture* dst) {WebPPictureCopy59,1961
int WebPPictureIsView(const WebPPicture* picture) {WebPPictureIsView85,2900
int WebPPictureView(const WebPPicture* src,WebPPictureView93,3100
int WebPPictureCrop(WebPPicture* pic,WebPPictureCrop126,4187
static void RescalePlane(const uint8_t* src,RescalePlane167,5627
static void AlphaMultiplyARGB(WebPPicture* const pic, int inverse) {AlphaMultiplyARGB185,6326
static void AlphaMultiplyY(WebPPicture* const pic, int inverse) {AlphaMultiplyY191,6560
int WebPPictureRescale(WebPPicture* pic, int width, int height) {WebPPictureRescale198,6772
int WebPPictureCopy(const WebPPicture* src, WebPPicture* dst) {WebPPictureCopy270,9195
int WebPPictureIsView(const WebPPicture* picture) {WebPPictureIsView276,9300
int WebPPictureView(const WebPPicture* src,WebPPictureView281,9384
int WebPPictureCrop(WebPPicture* pic,WebPPictureCrop293,9629
int WebPPictureRescale(WebPPicture* pic, int width, int height) {WebPPictureRescale303,9817

src/enc/token_enc.c,1291
#define MIN_PAGE_SIZE MIN_PAGE_SIZE30,1076
#define FIXED_PROBA_BIT FIXED_PROBA_BIT31,1148
typedef uint16_t token_t;  // bit #15: bit valuetoken_t33,1184
struct VP8Tokens {VP8Tokens36,1370
  VP8Tokens* next_;        // pointer to next pagenext_37,1389
  VP8Tokens* next_;        // pointer to next pageVP8Tokens::next_37,1389
#define TOKEN_DATA(TOKEN_DATA41,1572
void VP8TBufferInit(VP8TBuffer* const b, int page_size) {VP8TBufferInit45,1703
void VP8TBufferClear(VP8TBuffer* const b) {VP8TBufferClear54,1943
static int TBufferNewPage(VP8TBuffer* const b) {TBufferNewPage66,2190
#define TOKEN_ID(TOKEN_ID87,2720
static WEBP_INLINE uint32_t AddToken(VP8TBuffer* const b, uint32_t bit,AddToken90,2814
static WEBP_INLINE void AddConstantToken(VP8TBuffer* const b,AddConstantToken103,3238
int VP8RecordCoeffTokens(int ctx, const struct VP8Residual* const res,VP8RecordCoeffTokens113,3561
#undef TOKEN_IDTOKEN_ID195,6505
int VP8EmitTokens(VP8TBuffer* const b, VP8BitWriter* const bw,VP8EmitTokens200,6651
size_t VP8EstimateTokenSize(VP8TBuffer* const b, const uint8_t* const probas) {VP8EstimateTokenSize226,7441
void VP8TBufferInit(VP8TBuffer* const b, int page_size) {VP8TBufferInit253,8214
void VP8TBufferClear(VP8TBuffer* const b) {VP8TBufferClear257,8304

src/enc/syntax_enc.c,1246
static int IsVP8XNeeded(const VP8Encoder* const enc) {IsVP8XNeeded24,832
static int PutPaddingByte(const WebPPicture* const pic) {PutPaddingByte29,1032
static WebPEncodingError PutRIFFHeader(const VP8Encoder* const enc,PutRIFFHeader37,1318
static WebPEncodingError PutVP8XHeader(const VP8Encoder* const enc) {PutVP8XHeader51,1790
static WebPEncodingError PutAlphaChunk(const VP8Encoder* const enc) {PutAlphaChunk76,2550
static WebPEncodingError PutVP8Header(const WebPPicture* const pic,PutVP8Header102,3238
static WebPEncodingError PutVP8FrameHeader(const WebPPicture* const pic,PutVP8FrameHeader115,3666
static int PutWebPHeaders(const VP8Encoder* const enc, size_t size0,PutWebPHeaders149,4829
static void PutSegmentHeader(VP8BitWriter* const bw,PutSegmentHeader187,5676
static void PutFilterHeader(VP8BitWriter* const bw,PutFilterHeader217,6751
static void PutQuant(VP8BitWriter* const bw,PutQuant237,7518
static int EmitPartitionsSize(const VP8Encoder* const enc,EmitPartitionsSize248,7891
static int GeneratePartition0(VP8Encoder* const enc) {GeneratePartition0266,8574
void VP8EncFreeBitWriters(VP8Encoder* const enc) {VP8EncFreeBitWriters309,9888
int VP8EncWrite(VP8Encoder* const enc) {VP8EncWrite317,10073

src/enc/picture_enc.c,1537
static int DummyWriter(const uint8_t* data, size_t data_size,DummyWriter25,843
int WebPPictureInitInternal(WebPPicture* picture, int version) {WebPPictureInitInternal34,1096
static void WebPPictureResetBufferARGB(WebPPicture* const picture) {WebPPictureResetBufferARGB48,1535
static void WebPPictureResetBufferYUVA(WebPPicture* const picture) {WebPPictureResetBufferYUVA54,1691
void WebPPictureResetBuffers(WebPPicture* const picture) {WebPPictureResetBuffers61,1921
int WebPPictureAllocARGB(WebPPicture* const picture, int width, int height) {WebPPictureAllocARGB66,2061
int WebPPictureAllocYUVA(WebPPicture* const picture, int width, int height) {WebPPictureAllocYUVA89,2764
int WebPPictureAlloc(WebPPicture* picture) {WebPPictureAlloc153,4675
void WebPPictureFree(WebPPicture* picture) {WebPPictureFree169,5068
void WebPMemoryWriterInit(WebPMemoryWriter* writer) {WebPMemoryWriterInit180,5379
int WebPMemoryWrite(const uint8_t* data, size_t data_size,WebPMemoryWrite186,5502
void WebPMemoryWriterClear(WebPMemoryWriter* writer) {WebPMemoryWriterClear218,6442
typedef int (*Importer)(WebPPicture* const, const uint8_t* const, int);Importer230,6743
static size_t Encode(const uint8_t* rgba, int width, int height, int stride,Encode232,6816
#define ENCODE_FUNC(ENCODE_FUNC266,7711
#undef ENCODE_FUNCENCODE_FUNC279,8268
#define LOSSLESS_DEFAULT_QUALITY LOSSLESS_DEFAULT_QUALITY281,8288
#define LOSSLESS_ENCODE_FUNC(LOSSLESS_ENCODE_FUNC282,8325
#undef LOSSLESS_ENCODE_FUNCLOSSLESS_ENCODE_FUNC294,8891

src/enc/predictor_enc.c,3081
#define MAX_DIFF_COST MAX_DIFF_COST21,805
static const float kSpatialPredictorBias = 15.f;kSpatialPredictorBias23,836
static const int kPredLowEffort = 11;kPredLowEffort24,885
static const uint32_t kMaskAlpha = 0xff000000;kMaskAlpha25,923
static WEBP_INLINE int GetMin(int a, int b) { return (a > b) ? b : a; }GetMin28,1020
static float PredictionCostSpatial(const int counts[256], int weight_0,PredictionCostSpatial33,1218
static float PredictionCostSpatialHistogram(const int accumulated[4][256],PredictionCostSpatialHistogram46,1643
static WEBP_INLINE void UpdateHisto(int histo_argb[4][256], uint32_t argb) {UpdateHisto58,2039
static WEBP_INLINE void PredictBatch(int mode, int x_start, int y,PredictBatch68,2375
static WEBP_INLINE int GetMax(int a, int b) { return (a < b) ? b : a; }GetMax93,3105
static int MaxDiffBetweenPixels(uint32_t p1, uint32_t p2) {MaxDiffBetweenPixels95,3178
static int MaxDiffAroundPixel(uint32_t current, uint32_t up, uint32_t down,MaxDiffAroundPixel103,3586
static uint32_t AddGreenToBlueAndRed(uint32_t argb) {AddGreenToBlueAndRed112,4046
static void MaxDiffsForRow(int width, int stride, const uint32_t* const argb,MaxDiffsForRow120,4296
static uint8_t NearLosslessComponent(uint8_t value, uint8_t predict,NearLosslessComponent150,5344
#define NEAR_LOSSLESS_DIFF(NEAR_LOSSLESS_DIFF185,7189
static uint32_t NearLossless(uint32_t value, uint32_t predict,NearLossless186,7264
#undef NEAR_LOSSLESS_DIFFNEAR_LOSSLESS_DIFF224,8979
static WEBP_INLINE void GetResidual(GetResidual231,9288
static int GetBestPredictorForTile(int width, int height,GetBestPredictorForTile296,12018
static void CopyImageWithPrediction(int width, int height,CopyImageWithPrediction411,16972
void VP8LResidualImage(int width, int height, int bits, int low_effort,VP8LResidualImage473,19542
static WEBP_INLINE void MultipliersClear(VP8LMultipliers* const m) {MultipliersClear508,20975
static WEBP_INLINE void ColorCodeToMultipliers(uint32_t color_code,ColorCodeToMultipliers514,21119
static WEBP_INLINE uint32_t MultipliersToColorCode(MultipliersToColorCode521,21412
static float PredictionCostCrossColor(const int accumulated[256],PredictionCostCrossColor529,21650
static float GetPredictionCostCrossColorRed(GetPredictionCostCrossColorRed538,22039
static void GetBestGreenToRed(GetBestGreenToRed561,22825
static float GetPredictionCostCrossColorBlue(GetPredictionCostCrossColorBlue591,24171
#define kGreenRedToBlueNumAxis kGreenRedToBlueNumAxis623,25288
#define kGreenRedToBlueMaxIters kGreenRedToBlueMaxIters624,25321
static void GetBestGreenRedToBlue(GetBestGreenRedToBlue625,25355
#undef kGreenRedToBlueMaxIterskGreenRedToBlueMaxIters670,27271
#undef kGreenRedToBlueNumAxiskGreenRedToBlueNumAxis671,27302
static VP8LMultipliers GetBestColorTransformForTile(GetBestColorTransformForTile673,27333
static void CopyTileWithColorTransform(int xsize, int ysize,CopyTileWithColorTransform701,28538
void VP8LColorSpaceTransform(int width, int height, int bits, int quality,VP8LColorSpaceTransform715,29101

src/enc/delta_palettization_enc.h,197
#define WEBP_ENC_DELTA_PALETTIZATION_ENC_H_WEBP_ENC_DELTA_PALETTIZATION_ENC_H_14,557
WebPEncodingError WebPSearchOptimalDeltaPalette(VP8LEncoder* const enc);WebPSearchOptimalDeltaPalette23,906

src/enc/cost_enc.c,1057
const uint16_t VP8LevelCodes[MAX_VARIABLE_LEVEL][2] = {VP8LevelCodes22,855
static int VariableLevelCost(int level, const uint8_t probas[NUM_PROBAS]) {VariableLevelCost42,2036
void VP8CalculateLevelCosts(VP8EncProba* const proba) {VP8CalculateLevelCosts60,2506
const uint16_t VP8FixedCostsUV[4] = { 302, 984, 439, 642 };VP8FixedCostsUV97,3832
const uint16_t VP8FixedCostsI16[4] = { 663, 919, 872, 919 };VP8FixedCostsI1699,3972
const uint16_t VP8FixedCostsI4[NUM_BMODES][NUM_BMODES][NUM_BMODES] = {VP8FixedCostsI4100,4033
void VP8InitResidual(int first, int coeff_type,VP8InitResidual206,11063
int VP8GetCostLuma4(VP8EncIterator* const it, const int16_t levels[16]) {VP8GetCostLuma4218,11485
int VP8GetCostLuma16(VP8EncIterator* const it, const VP8ModeScore* const rd) {VP8GetCostLuma16232,11859
int VP8GetCostUV(VP8EncIterator* const it, const VP8ModeScore* const rd) {VP8GetCostUV258,12588
#define USE_LEVEL_CODE_TABLEUSE_LEVEL_CODE_TABLE285,13432
int VP8RecordCoeffs(int ctx, const VP8Residual* const res) {VP8RecordCoeffs289,13561

src/enc/backward_references_enc.h,5373
#define WEBP_ENC_BACKWARD_REFERENCES_ENC_H_WEBP_ENC_BACKWARD_REFERENCES_ENC_H_14,558
#define MAX_COLOR_CACHE_BITS MAX_COLOR_CACHE_BITS26,787
enum Mode {Mode31,915
  kLiteral,kLiteral32,927
  kCacheIdx,kCacheIdx33,939
  kCopy,kCopy34,952
  kNonekNone35,961
  uint8_t mode;mode40,1060
  uint8_t mode;__anon70::mode40,1060
  uint16_t len;len41,1076
  uint16_t len;__anon70::len41,1076
  uint32_t argb_or_distance;argb_or_distance42,1092
  uint32_t argb_or_distance;__anon70::argb_or_distance42,1092
} PixOrCopy;PixOrCopy43,1121
static WEBP_INLINE PixOrCopy PixOrCopyCreateCopy(uint32_t distance,PixOrCopyCreateCopy45,1135
static WEBP_INLINE PixOrCopy PixOrCopyCreateCacheIdx(int idx) {PixOrCopyCreateCacheIdx54,1389
static WEBP_INLINE PixOrCopy PixOrCopyCreateLiteral(uint32_t argb) {PixOrCopyCreateLiteral64,1636
static WEBP_INLINE int PixOrCopyIsLiteral(const PixOrCopy* const p) {PixOrCopyIsLiteral72,1823
static WEBP_INLINE int PixOrCopyIsCacheIdx(const PixOrCopy* const p) {PixOrCopyIsCacheIdx76,1928
static WEBP_INLINE int PixOrCopyIsCopy(const PixOrCopy* const p) {PixOrCopyIsCopy80,2035
static WEBP_INLINE uint32_t PixOrCopyLiteral(const PixOrCopy* const p,PixOrCopyLiteral84,2134
static WEBP_INLINE uint32_t PixOrCopyLength(const PixOrCopy* const p) {PixOrCopyLength90,2359
static WEBP_INLINE uint32_t PixOrCopyCacheIdx(const PixOrCopy* const p) {PixOrCopyCacheIdx94,2451
static WEBP_INLINE uint32_t PixOrCopyDistance(const PixOrCopy* const p) {PixOrCopyDistance100,2652
#define HASH_BITS HASH_BITS108,2886
#define HASH_SIZE HASH_SIZE109,2907
#define MAX_LENGTH_BITS MAX_LENGTH_BITS113,3051
#define WINDOW_SIZE_BITS WINDOW_SIZE_BITS114,3078
#define MAX_LENGTH MAX_LENGTH116,3184
typedef struct VP8LHashChain VP8LHashChain;VP8LHashChain121,3333
struct VP8LHashChain {VP8LHashChain122,3377
  uint32_t* offset_length_;offset_length_128,3725
  uint32_t* offset_length_;VP8LHashChain::offset_length_128,3725
  int size_;size_131,3901
  int size_;VP8LHashChain::size_131,3901
int VP8LHashChainInit(VP8LHashChain* const p, int size);VP8LHashChainInit135,3956
int VP8LHashChainFill(VP8LHashChain* const p, int quality,VP8LHashChainFill137,4055
void VP8LHashChainClear(VP8LHashChain* const p);  // release memoryVP8LHashChainClear140,4225
static WEBP_INLINE int VP8LHashChainFindOffset(const VP8LHashChain* const p,VP8LHashChainFindOffset142,4294
static WEBP_INLINE int VP8LHashChainFindLength(const VP8LHashChain* const p,VP8LHashChainFindLength147,4510
static WEBP_INLINE void VP8LHashChainFindCopy(const VP8LHashChain* const p,VP8LHashChainFindCopy152,4739
#define MAX_REFS_BLOCK_PER_IMAGE MAX_REFS_BLOCK_PER_IMAGE164,5356
typedef struct PixOrCopyBlock PixOrCopyBlock;   // forward declarationPixOrCopyBlock166,5393
typedef struct VP8LBackwardRefs VP8LBackwardRefs;VP8LBackwardRefs167,5464
struct VP8LBackwardRefs {VP8LBackwardRefs170,5545
  int block_size_;               // common block-sizeblock_size_171,5571
  int block_size_;               // common block-sizeVP8LBackwardRefs::block_size_171,5571
  int error_;                    // set to true if some memory error occurrederror_172,5625
  int error_;                    // set to true if some memory error occurredVP8LBackwardRefs::error_172,5625
  PixOrCopyBlock* refs_;         // list of currently used blocksrefs_173,5703
  PixOrCopyBlock* refs_;         // list of currently used blocksVP8LBackwardRefs::refs_173,5703
  PixOrCopyBlock** tail_;        // for list recyclingtail_174,5769
  PixOrCopyBlock** tail_;        // for list recyclingVP8LBackwardRefs::tail_174,5769
  PixOrCopyBlock* free_blocks_;  // free-listfree_blocks_175,5824
  PixOrCopyBlock* free_blocks_;  // free-listVP8LBackwardRefs::free_blocks_175,5824
  PixOrCopyBlock* last_block_;   // used for adding new refs (internal)last_block_176,5870
  PixOrCopyBlock* last_block_;   // used for adding new refs (internal)VP8LBackwardRefs::last_block_176,5870
void VP8LBackwardRefsInit(VP8LBackwardRefs* const refs, int block_size);VP8LBackwardRefsInit181,6089
void VP8LBackwardRefsClear(VP8LBackwardRefs* const refs);VP8LBackwardRefsClear183,6205
  PixOrCopy* cur_pos;           // current positioncur_pos188,6340
  PixOrCopy* cur_pos;           // current position__anon71::cur_pos188,6340
  PixOrCopyBlock* cur_block_;   // current block in the refs listcur_block_190,6406
  PixOrCopyBlock* cur_block_;   // current block in the refs list__anon71::cur_block_190,6406
  const PixOrCopy* last_pos_;   // sentinel for switching to next blocklast_pos_191,6472
  const PixOrCopy* last_pos_;   // sentinel for switching to next block__anon71::last_pos_191,6472
} VP8LRefsCursor;VP8LRefsCursor192,6544
VP8LRefsCursor VP8LRefsCursorInit(const VP8LBackwardRefs* const refs);VP8LRefsCursorInit195,6635
static WEBP_INLINE int VP8LRefsCursorOk(const VP8LRefsCursor* const c) {VP8LRefsCursorOk197,6765
void VP8LRefsCursorNextBlock(VP8LRefsCursor* const c);VP8LRefsCursorNextBlock201,6945
static WEBP_INLINE void VP8LRefsCursorNext(VP8LRefsCursor* const c) {VP8LRefsCursorNext203,7080
enum VP8LLZ77Type {VP8LLZ77Type212,7372
  kLZ77Standard = 1,kLZ77Standard213,7392
  kLZ77RLE = 2,kLZ77RLE214,7413
  kLZ77Box = 4kLZ77Box215,7429
VP8LBackwardRefs* VP8LGetBackwardReferences(VP8LGetBackwardReferences224,7842

src/enc/alpha_enc.c,1403
static int EncodeLossless(const uint8_t* const data, int width, int height,EncodeLossless49,2051
  size_t score;score103,4212
  size_t score;__anon72::score103,4212
  VP8BitWriter bw;bw104,4228
  VP8BitWriter bw;__anon72::bw104,4228
  WebPAuxStats stats;stats105,4247
  WebPAuxStats stats;__anon72::stats105,4247
} FilterTrial;FilterTrial106,4269
static int EncodeAlphaInternal(const uint8_t* const data, int width, int height,EncodeAlphaInternal109,4362
static int GetNumColors(const uint8_t* data, int width, int height,GetNumColors179,6688
#define FILTER_TRY_NONE FILTER_TRY_NONE198,7097
#define FILTER_TRY_ALL FILTER_TRY_ALL199,7145
static uint32_t GetFilterMap(const uint8_t* alpha, int width, int height,GetFilterMap202,7277
static void InitFilterTrial(FilterTrial* const score) {InitFilterTrial229,8336
static int ApplyFiltersAndEncode(const uint8_t* alpha, int width, int height,ApplyFiltersAndEncode234,8460
static int EncodeAlpha(VP8Encoder* const enc,EncodeAlpha292,10596
static int CompressAlphaJob(VP8Encoder* const enc, void* dummy) {CompressAlphaJob364,13046
void VP8EncInitAlpha(VP8Encoder* const enc) {VP8EncInitAlpha387,13862
int VP8EncStartAlpha(VP8Encoder* const enc) {VP8EncStartAlpha401,14291
int VP8EncFinishAlpha(VP8Encoder* const enc) {VP8EncFinishAlpha418,14748
int VP8EncDeleteAlpha(VP8Encoder* const enc) {VP8EncDeleteAlpha428,15068

src/enc/histogram_enc.c,5275
#define MAX_COST MAX_COST24,767
#define NUM_PARTITIONS NUM_PARTITIONS28,879
#define BIN_SIZE BIN_SIZE30,975
#define MAX_HISTO_GREEDY MAX_HISTO_GREEDY32,1114
static void HistogramClear(VP8LHistogram* const p) {HistogramClear34,1144
static void HistogramSwap(VP8LHistogram** const A, VP8LHistogram** const B) {HistogramSwap44,1471
static void HistogramCopy(const VP8LHistogram* const src,HistogramCopy50,1608
int VP8LGetHistogramSize(int cache_bits) {VP8LGetHistogramSize60,2003
void VP8LFreeHistogram(VP8LHistogram* const histo) {VP8LFreeHistogram67,2261
void VP8LFreeHistogramSet(VP8LHistogramSet* const histo) {VP8LFreeHistogramSet71,2340
void VP8LHistogramStoreRefs(const VP8LBackwardRefs* const refs,VP8LHistogramStoreRefs75,2425
void VP8LHistogramCreate(VP8LHistogram* const p,VP8LHistogramCreate84,2726
void VP8LHistogramInit(VP8LHistogram* const p, int palette_code_bits) {VP8LHistogramInit94,3028
VP8LHistogram* VP8LAllocateHistogram(int cache_bits) {VP8LAllocateHistogram99,3169
VP8LHistogramSet* VP8LAllocateHistogramSet(int size, int cache_bits) {VP8LAllocateHistogramSet111,3630
void VP8LHistogramAddSinglePixOrCopy(VP8LHistogram* const histo,VP8LHistogramAddSinglePixOrCopy140,4651
static WEBP_INLINE double BitsEntropyRefine(const VP8LBitEntropy* entropy) {BitsEntropyRefine171,5866
double VP8LBitsEntropy(const uint32_t* const array, int n,VP8LBitsEntropy203,6936
static double InitialHuffmanCost(void) {InitialHuffmanCost215,7305
static double FinalHuffmanCost(const VP8LStreaks* const stats) {FinalHuffmanCost224,7686
static double PopulationCost(const uint32_t* const population, int length,PopulationCost244,8654
static WEBP_INLINE double GetCombinedEntropy(const uint32_t* const X,GetCombinedEntropy259,9292
double VP8LHistogramEstimateBits(const VP8LHistogram* const p) {VP8LHistogramEstimateBits284,10374
static int GetCombinedHistogramEntropy(const VP8LHistogram* const a,GetCombinedHistogramEntropy299,11046
static WEBP_INLINE void HistogramAdd(const VP8LHistogram* const a,HistogramAdd347,12954
static double HistogramAddEval(const VP8LHistogram* const a,HistogramAddEval362,13735
static double HistogramAddThresh(const VP8LHistogram* const a,HistogramAddThresh382,14480
  double literal_max_;literal_max_397,15067
  double literal_max_;__anon73::literal_max_397,15067
  double literal_min_;literal_min_398,15090
  double literal_min_;__anon73::literal_min_398,15090
  double red_max_;red_max_399,15113
  double red_max_;__anon73::red_max_399,15113
  double red_min_;red_min_400,15132
  double red_min_;__anon73::red_min_400,15132
  double blue_max_;blue_max_401,15151
  double blue_max_;__anon73::blue_max_401,15151
  double blue_min_;blue_min_402,15171
  double blue_min_;__anon73::blue_min_402,15171
} DominantCostRange;DominantCostRange403,15191
static void DominantCostRangeInit(DominantCostRange* const c) {DominantCostRangeInit405,15213
static void UpdateDominantCostRange(UpdateDominantCostRange414,15428
static void UpdateHistogramCost(VP8LHistogram* const h) {UpdateHistogramCost424,15944
static int GetBinIdForEntropy(double min, double max, double val) {GetBinIdForEntropy447,17030
static int GetHistoBinIndex(const VP8LHistogram* const h,GetHistoBinIndex457,17279
static void HistogramBuild(HistogramBuild473,17926
static void HistogramCopyAndAnalyze(HistogramCopyAndAnalyze495,18689
static void HistogramAnalyzeEntropyBin(VP8LHistogramSet* const image_histo,HistogramAnalyzeEntropyBin511,19369
static void HistogramCombineEntropyBin(VP8LHistogramSet* const image_histo,HistogramCombineEntropyBin534,20281
static uint32_t MyRand(uint32_t* const seed) {MyRand609,23563
  int idx1;idx1620,23924
  int idx1;__anon74::idx1620,23924
  int idx2;idx2621,23936
  int idx2;__anon74::idx2621,23936
  double cost_diff;cost_diff622,23948
  double cost_diff;__anon74::cost_diff622,23948
  double cost_combo;cost_combo623,23968
  double cost_combo;__anon74::cost_combo623,23968
} HistogramPair;HistogramPair624,23989
  HistogramPair* queue;queue627,24024
  HistogramPair* queue;__anon75::queue627,24024
  int size;size628,24048
  int size;__anon75::size628,24048
  int max_size;max_size629,24060
  int max_size;__anon75::max_size629,24060
} HistoQueue;HistoQueue630,24076
static int HistoQueueInit(HistoQueue* const histo_queue, const int max_index) {HistoQueueInit632,24091
static void HistoQueueClear(HistoQueue* const histo_queue) {HistoQueueClear649,24967
static void HistoQueuePopPair(HistoQueue* const histo_queue,HistoQueuePopPair658,25250
static void HistoQueueUpdateHead(HistoQueue* const histo_queue,HistoQueueUpdateHead668,25651
static double HistoQueuePush(HistoQueue* const histo_queue,HistoQueuePush685,26329
static int HistogramCombineGreedy(VP8LHistogramSet* const image_histo) {HistogramCombineGreedy723,27570
static int HistogramCombineStochastic(VP8LHistogramSet* const image_histo,HistogramCombineStochastic798,29954
static void HistogramRemap(const VP8LHistogramSet* const in,HistogramRemap926,34783
static double GetCombineCostFactor(int histo_size, int quality) {GetCombineCostFactor967,35932
int VP8LGetHistoImageSymbols(int xsize, int ysize,VP8LGetHistoImageSymbols978,36304

src/enc/filter_enc.c,704
#define MAX_DELTA_SIZE MAX_DELTA_SIZE23,917
static const uint8_t kLevelsFromDelta[8][MAX_DELTA_SIZE] = {kLevelsFromDelta24,943
int VP8FilterStrengthFromDelta(int sharpness, int delta) {VP8FilterStrengthFromDelta59,3198
static int GetILevel(int sharpness, int level) {GetILevel70,3595
static void DoFilter(const VP8EncIterator* const it, int level) {DoFilter85,3868
static double GetMBSSIM(const uint8_t* yuv1, const uint8_t* yuv2) {GetMBSSIM112,4947
void VP8InitFilter(VP8EncIterator* const it) {VP8InitFilter140,5887
void VP8StoreFilterStats(VP8EncIterator* const it) {VP8StoreFilterStats156,6202
void VP8AdjustFilterStrength(VP8EncIterator* const it) {VP8AdjustFilterStrength194,7554

src/enc/webp_enc.c,1030
int WebPGetEncoderVersion(void) {WebPGetEncoderVersion32,910
static void ResetSegmentHeader(VP8Encoder* const enc) {ResetSegmentHeader40,1201
static void ResetFilterHeader(VP8Encoder* const enc) {ResetFilterHeader47,1428
static void ResetBoundaryPredictions(VP8Encoder* const enc) {ResetBoundaryPredictions55,1628
static void MapConfigToTools(VP8Encoder* const enc) {MapConfigToTools95,3326
static VP8Encoder* InitVP8Encoder(const WebPConfig* const config,InitVP8Encoder144,4976
static int DeleteVP8Encoder(VP8Encoder* enc) {DeleteVP8Encoder247,8886
static double GetPSNR(uint64_t err, uint64_t size) {GetPSNR260,9195
static void FinalizePSNR(const VP8Encoder* const enc) {FinalizePSNR264,9329
static void StoreStats(VP8Encoder* const enc) {StoreStats276,9831
int WebPEncodingSetError(const WebPPicture* const pic,WebPEncodingSetError299,10566
int WebPReportProgress(const WebPPicture* const pic,WebPReportProgress307,10810
int WebPEncode(const WebPConfig* config, WebPPicture* pic) {WebPEncode321,11302

src/enc/frame_enc.c,4010
#define SEGMENT_VISU SEGMENT_VISU22,726
#define DEBUG_SEARCH DEBUG_SEARCH23,749
#define HEADER_SIZE_ESTIMATE HEADER_SIZE_ESTIMATE28,922
#define DQ_LIMIT DQ_LIMIT30,1047
#define PARTITION0_SIZE_LIMIT PARTITION0_SIZE_LIMIT32,1178
  int is_first;is_first35,1331
  int is_first;__anon76::is_first35,1331
  float dq;dq36,1347
  float dq;__anon76::dq36,1347
  float q, last_q;q37,1359
  float q, last_q;__anon76::q37,1359
  float q, last_q;last_q37,1359
  float q, last_q;__anon76::last_q37,1359
  double value, last_value;   // PSNR or sizevalue38,1378
  double value, last_value;   // PSNR or size__anon76::value38,1378
  double value, last_value;   // PSNR or sizelast_value38,1378
  double value, last_value;   // PSNR or size__anon76::last_value38,1378
  double target;target39,1424
  double target;__anon76::target39,1424
  int do_size_search;do_size_search40,1441
  int do_size_search;__anon76::do_size_search40,1441
} PassStats;PassStats41,1463
static int InitPassStats(const VP8Encoder* const enc, PassStats* const s) {InitPassStats43,1477
static float Clamp(float v, float min, float max) {Clamp59,2048
static float ComputeNextQ(PassStats* const s) {ComputeNextQ63,2151
const uint8_t VP8Cat3[] = { 173, 148, 140 };VP8Cat385,2808
const uint8_t VP8Cat4[] = { 176, 155, 140, 135 };VP8Cat486,2853
const uint8_t VP8Cat5[] = { 180, 157, 141, 134, 130 };VP8Cat587,2903
const uint8_t VP8Cat6[] =VP8Cat688,2958
static void ResetStats(VP8Encoder* const enc) {ResetStats94,3206
#define SKIP_PROBA_THRESHOLD SKIP_PROBA_THRESHOLD103,3467
static int CalcSkipProba(uint64_t nb, uint64_t total) {CalcSkipProba105,3547
static int FinalizeSkipProba(VP8Encoder* const enc) {FinalizeSkipProba110,3721
static int CalcTokenProba(int nb, int total) {CalcTokenProba128,4470
static int BranchCost(int nb, int total, int proba) {BranchCost134,4662
static void ResetTokenStats(VP8Encoder* const enc) {ResetTokenStats138,4793
static int FinalizeTokenProbas(VP8EncProba* const proba) {FinalizeTokenProbas143,4943
static int GetProba(int a, int b) {GetProba182,6435
static void ResetSegments(VP8Encoder* const enc) {ResetSegments188,6641
static void SetSegmentProbas(VP8Encoder* const enc) {SetSegmentProbas195,6793
static int PutCoeffs(VP8BitWriter* const bw, int ctx, const VP8Residual* res) {PutCoeffs233,8095
static void CodeResiduals(VP8BitWriter* const bw, VP8EncIterator* const it,CodeResiduals306,10235
static void RecordResiduals(VP8EncIterator* const it,RecordResiduals360,11940
static int RecordTokens(VP8EncIterator* const it, const VP8ModeScore* const rd,RecordTokens408,13320
static void SetBlock(uint8_t* p, int value, int size) {SetBlock460,14887
static void ResetSSE(VP8Encoder* const enc) {ResetSSE469,15039
static void StoreSSE(const VP8EncIterator* const it) {StoreSSE477,15217
static void StoreSideInfo(const VP8EncIterator* const it) {StoreSideInfo488,15694
static void ResetSSE(VP8Encoder* const enc) {ResetSSE524,16971
static void StoreSideInfo(const VP8EncIterator* const it) {StoreSideInfo527,17032
static double GetPSNR(uint64_t mse, uint64_t size) {GetPSNR537,17341
static void SetLoopParams(VP8Encoder* const enc, float q) {SetLoopParams546,17770
static uint64_t OneStatPass(VP8Encoder* const enc, VP8RDLevel rd_opt,OneStatPass557,18107
static int StatLoop(VP8Encoder* const enc) {StatLoop597,19319
static const uint8_t kAverageBytesPerMB[8] = { 50, 24, 16, 9, 7, 5, 3, 2 };kAverageBytesPerMB661,21615
static int PreLoopInitialize(VP8Encoder* const enc) {PreLoopInitialize663,21692
static int PostLoopFinalize(VP8EncIterator* const it, int ok) {PostLoopFinalize680,22250
static void ResetAfterSkip(VP8EncIterator* const it) {ResetAfterSkip712,23238
int VP8EncLoop(VP8Encoder* const enc) {VP8EncLoop721,23462
#define MIN_COUNT MIN_COUNT758,24553
int VP8EncTokenLoop(VP8Encoder* const enc) {VP8EncTokenLoop760,24631
int VP8EncTokenLoop(VP8Encoder* const enc) {VP8EncTokenLoop866,28093

src/enc/vp8l_enc.c,8056
#define MAX_HUFF_IMAGE_SIZE MAX_HUFF_IMAGE_SIZE32,1058
static int PaletteCompareColorsForQsort(const void* p1, const void* p2) {PaletteCompareColorsForQsort36,1174
static WEBP_INLINE uint32_t PaletteComponentDistance(uint32_t v) {PaletteComponentDistance43,1400
static WEBP_INLINE uint32_t PaletteColorDistance(uint32_t col1, uint32_t col2) {PaletteColorDistance52,1747
static WEBP_INLINE void SwapColor(uint32_t* const col1, uint32_t* const col2) {SwapColor64,2237
static void GreedyMinimizeDeltas(uint32_t palette[], int num_colors) {GreedyMinimizeDeltas70,2382
static int PaletteHasNonMonotonousDeltas(uint32_t palette[], int num_colors) {PaletteHasNonMonotonousDeltas97,3451
static int AnalyzeAndCreatePalette(const WebPPicture* const pic,AnalyzeAndCreatePalette125,4379
  kDirect = 0,kDirect144,5108
  kSpatial = 1,kSpatial145,5123
  kSubGreen = 2,kSubGreen146,5139
  kSpatialSubGreen = 3,kSpatialSubGreen147,5156
  kPalette = 4,kPalette148,5180
  kNumEntropyIx = 5kNumEntropyIx149,5196
} EntropyIx;EntropyIx150,5216
  kHistoAlpha = 0,kHistoAlpha153,5245
  kHistoAlphaPred,kHistoAlphaPred154,5264
  kHistoGreen,kHistoGreen155,5283
  kHistoGreenPred,kHistoGreenPred156,5298
  kHistoRed,kHistoRed157,5317
  kHistoRedPred,kHistoRedPred158,5330
  kHistoBlue,kHistoBlue159,5347
  kHistoBluePred,kHistoBluePred160,5361
  kHistoRedSubGreen,kHistoRedSubGreen161,5379
  kHistoRedPredSubGreen,kHistoRedPredSubGreen162,5400
  kHistoBlueSubGreen,kHistoBlueSubGreen163,5425
  kHistoBluePredSubGreen,kHistoBluePredSubGreen164,5447
  kHistoPalette,kHistoPalette165,5473
  kHistoTotal  // Must be last.kHistoTotal166,5490
} HistoIx;HistoIx167,5522
static void AddSingleSubGreen(int p, uint32_t* const r, uint32_t* const b) {AddSingleSubGreen169,5534
static void AddSingle(uint32_t p,AddSingle175,5754
static WEBP_INLINE uint32_t HashPix(uint32_t pix) {HashPix184,6013
static int AnalyzeEntropy(const uint32_t* argb,AnalyzeEntropy190,6281
static int GetHistoBits(int method, int use_palette, int width, int height) {GetHistoBits337,12290
static int GetTransformBits(int method, int histo_bits) {GetTransformBits350,12858
#define CRUNCH_CONFIGS_LZ77_MAX CRUNCH_CONFIGS_LZ77_MAX359,13204
  int entropy_idx_;entropy_idx_361,13255
  int entropy_idx_;__anon79::entropy_idx_361,13255
  int lz77s_types_to_try_[CRUNCH_CONFIGS_LZ77_MAX];lz77s_types_to_try_362,13275
  int lz77s_types_to_try_[CRUNCH_CONFIGS_LZ77_MAX];__anon79::lz77s_types_to_try_362,13275
  int lz77s_types_to_try_size_;lz77s_types_to_try_size_363,13327
  int lz77s_types_to_try_size_;__anon79::lz77s_types_to_try_size_363,13327
} CrunchConfig;CrunchConfig364,13359
#define CRUNCH_CONFIGS_MAX CRUNCH_CONFIGS_MAX366,13376
static int EncoderAnalyze(VP8LEncoder* const enc,EncoderAnalyze368,13418
static int EncoderInit(VP8LEncoder* const enc) {EncoderInit435,15923
static int GetHuffBitLengthsAndCodes(GetHuffBitLengthsAndCodes452,16521
static void StoreHuffmanTreeOfHuffmanTreeToBitMask(StoreHuffmanTreeOfHuffmanTreeToBitMask525,19144
static void ClearHuffmanTreeIfOnlyOneSymbol(ClearHuffmanTreeIfOnlyOneSymbol547,19973
static void StoreHuffmanTreeToBitMask(StoreHuffmanTreeToBitMask563,20369
static void StoreFullHuffmanCode(VP8LBitWriter* const bw,StoreFullHuffmanCode587,21054
static void StoreHuffmanCode(VP8LBitWriter* const bw,StoreHuffmanCode655,23476
static WEBP_INLINE void WriteHuffmanCode(VP8LBitWriter* const bw,WriteHuffmanCode694,24790
static WEBP_INLINE void WriteHuffmanCodeWithExtraBits(WriteHuffmanCodeWithExtraBits702,25102
static WebPEncodingError StoreImageToBitMask(StoreImageToBitMask713,25439
static WebPEncodingError EncodeImageNoHuffman(VP8LBitWriter* const bw,EncodeImageNoHuffman775,27835
static WebPEncodingError EncodeImageInternal(EncodeImageInternal863,30903
static void ApplySubtractGreen(VP8LEncoder* const enc, int width, int height,ApplySubtractGreen1071,38613
static WebPEncodingError ApplyPredictFilter(const VP8LEncoder* const enc,ApplyPredictFilter1078,38894
static WebPEncodingError ApplyCrossColorFilter(const VP8LEncoder* const enc,ApplyCrossColorFilter1105,40273
static WebPEncodingError WriteRiffHeader(const WebPPicture* const pic,WriteRiffHeader1128,41444
static int WriteImageSize(const WebPPicture* const pic,WriteImageSize1142,42015
static int WriteRealAlphaAndVersion(VP8LBitWriter* const bw, int has_alpha) {WriteRealAlphaAndVersion1153,42390
static WebPEncodingError WriteImage(const WebPPicture* const pic,WriteImage1159,42578
static void ClearTransformBuffer(VP8LEncoder* const enc) {ClearTransformBuffer1193,43633
static WebPEncodingError AllocateTransformBuffer(VP8LEncoder* const enc,AllocateTransformBuffer1204,44012
static WebPEncodingError MakeInputImageCopy(VP8LEncoder* const enc) {MakeInputImageCopy1250,45754
static WEBP_INLINE int SearchColorNoIdx(const uint32_t sorted[], uint32_t color,SearchColorNoIdx1271,46493
#define APPLY_PALETTE_GREEDY_MAX APPLY_PALETTE_GREEDY_MAX1287,46918
static WEBP_INLINE uint32_t SearchColorGreedy(const uint32_t palette[],SearchColorGreedy1289,46954
static WEBP_INLINE uint32_t ApplyPaletteHash0(uint32_t color) {ApplyPaletteHash01301,47398
#define PALETTE_INV_SIZE_BITS PALETTE_INV_SIZE_BITS1306,47526
#define PALETTE_INV_SIZE PALETTE_INV_SIZE1307,47559
static WEBP_INLINE uint32_t ApplyPaletteHash1(uint32_t color) {ApplyPaletteHash11309,47614
static WEBP_INLINE uint32_t ApplyPaletteHash2(uint32_t color) {ApplyPaletteHash21315,47809
static void PrepareMapToPalette(const uint32_t palette[], int num_colors,PrepareMapToPalette1322,48083
#define APPLY_PALETTE_FOR(APPLY_PALETTE_FOR1333,48521
static WebPEncodingError ApplyPalette(const uint32_t* src, uint32_t src_stride,ApplyPalette1355,49636
#undef APPLY_PALETTE_FORAPPLY_PALETTE_FOR1411,51704
#undef PALETTE_INV_SIZE_BITSPALETTE_INV_SIZE_BITS1412,51729
#undef PALETTE_INV_SIZEPALETTE_INV_SIZE1413,51758
#undef APPLY_PALETTE_GREEDY_MAXAPPLY_PALETTE_GREEDY_MAX1414,51782
static WebPEncodingError MapImageFromPalette(VP8LEncoder* const enc,MapImageFromPalette1417,51868
static WebPEncodingError EncodePalette(VP8LBitWriter* const bw, int low_effort,EncodePalette1448,52977
static WebPEncodingError EncodeDeltaPalettePredictorImage(EncodeDeltaPalettePredictorImage1469,53850
static VP8LEncoder* VP8LEncoderNew(const WebPConfig* const config,VP8LEncoderNew1513,55492
static void VP8LEncoderDelete(VP8LEncoder* enc) {VP8LEncoderDelete1529,55937
  const WebPConfig* config_;config_1543,56302
  const WebPConfig* config_;__anon80::config_1543,56302
  const WebPPicture* picture_;picture_1544,56331
  const WebPPicture* picture_;__anon80::picture_1544,56331
  VP8LBitWriter* bw_;bw_1545,56362
  VP8LBitWriter* bw_;__anon80::bw_1545,56362
  VP8LEncoder* enc_;enc_1546,56384
  VP8LEncoder* enc_;__anon80::enc_1546,56384
  int use_cache_;use_cache_1547,56405
  int use_cache_;__anon80::use_cache_1547,56405
  CrunchConfig crunch_configs_[CRUNCH_CONFIGS_MAX];crunch_configs_1548,56423
  CrunchConfig crunch_configs_[CRUNCH_CONFIGS_MAX];__anon80::crunch_configs_1548,56423
  int num_crunch_configs_;num_crunch_configs_1549,56475
  int num_crunch_configs_;__anon80::num_crunch_configs_1549,56475
  int red_and_blue_always_zero_;red_and_blue_always_zero_1550,56502
  int red_and_blue_always_zero_;__anon80::red_and_blue_always_zero_1550,56502
  WebPEncodingError err_;err_1551,56535
  WebPEncodingError err_;__anon80::err_1551,56535
  WebPAuxStats* stats_;stats_1552,56561
  WebPAuxStats* stats_;__anon80::stats_1552,56561
} StreamEncodeContext;StreamEncodeContext1553,56585
static int EncodeStreamHook(void* input, void* data2) {EncodeStreamHook1555,56609
WebPEncodingError VP8LEncodeStream(const WebPConfig* const config,VP8LEncodeStream1739,63576
#undef CRUNCH_CONFIGS_MAXCRUNCH_CONFIGS_MAX1880,68745
#undef CRUNCH_CONFIGS_LZ77_MAXCRUNCH_CONFIGS_LZ77_MAX1881,68771
int VP8LEncodeImage(const WebPConfig* const config,VP8LEncodeImage1883,68803

src/enc/tree_enc.c,875
  VP8CoeffsProba0[NUM_TYPES][NUM_BANDS][NUM_CTX][NUM_PROBAS] = {VP8CoeffsProba021,742
void VP8DefaultProbas(VP8Encoder* const enc) {VP8DefaultProbas156,7131
static const uint8_t kBModesProba[NUM_BMODES][NUM_BMODES][NUM_BMODES - 1] = {kBModesProba167,7601
static int PutI4Mode(VP8BitWriter* const bw, int mode,PutI4Mode270,12383
static void PutI16Mode(VP8BitWriter* const bw, int mode) {PutI16Mode292,13097
static void PutUVMode(VP8BitWriter* const bw, int uv_mode) {PutUVMode300,13351
static void PutSegment(VP8BitWriter* const bw, int s, const uint8_t* p) {PutSegment308,13587
void VP8CodeIntraModes(VP8Encoder* const enc) {VP8CodeIntraModes313,13737
    VP8CoeffsUpdateProba[NUM_TYPES][NUM_BANDS][NUM_CTX][NUM_PROBAS] = {VP8CoeffsUpdateProba350,14853
void VP8WriteProbas(VP8BitWriter* const bw, const VP8EncProba* const probas) {VP8WriteProbas485,21376

src/enc/vp8li_enc.h,4111
#define WEBP_ENC_VP8LI_ENC_H_WEBP_ENC_VP8LI_ENC_H_15,583
#define WEBP_NEAR_LOSSLESS WEBP_NEAR_LOSSLESS23,828
#define MAX_TRANSFORM_BITS MAX_TRANSFORM_BITS37,1146
  kEncoderNone = 0,kEncoderNone40,1191
  kEncoderARGB,kEncoderARGB41,1211
  kEncoderNearLossless,kEncoderNearLossless42,1227
  kEncoderPalettekEncoderPalette43,1251
} VP8LEncoderARGBContent;VP8LEncoderARGBContent44,1269
  const WebPConfig* config_;      // user configuration and parametersconfig_47,1313
  const WebPConfig* config_;      // user configuration and parameters__anon82::config_47,1313
  const WebPPicture* pic_;        // input picture.pic_48,1384
  const WebPPicture* pic_;        // input picture.__anon82::pic_48,1384
  uint32_t* argb_;                       // Transformed argb image data.argb_50,1437
  uint32_t* argb_;                       // Transformed argb image data.__anon82::argb_50,1437
  VP8LEncoderARGBContent argb_content_;  // Content type of the argb buffer.argb_content_51,1510
  VP8LEncoderARGBContent argb_content_;  // Content type of the argb buffer.__anon82::argb_content_51,1510
  uint32_t* argb_scratch_;               // Scratch memory for argb rowsargb_scratch_52,1587
  uint32_t* argb_scratch_;               // Scratch memory for argb rows__anon82::argb_scratch_52,1587
  uint32_t* transform_data_;             // Scratch memory for transform data.transform_data_54,1727
  uint32_t* transform_data_;             // Scratch memory for transform data.__anon82::transform_data_54,1727
  uint32_t* transform_mem_;              // Currently allocated memory.transform_mem_55,1806
  uint32_t* transform_mem_;              // Currently allocated memory.__anon82::transform_mem_55,1806
  size_t    transform_mem_size_;         // Currently allocated memory size.transform_mem_size_56,1878
  size_t    transform_mem_size_;         // Currently allocated memory size.__anon82::transform_mem_size_56,1878
  int       current_width_;       // Corresponds to packed image width.current_width_58,1956
  int       current_width_;       // Corresponds to packed image width.__anon82::current_width_58,1956
  int histo_bits_;histo_bits_61,2086
  int histo_bits_;__anon82::histo_bits_61,2086
  int transform_bits_;    // <= MAX_TRANSFORM_BITS.transform_bits_62,2105
  int transform_bits_;    // <= MAX_TRANSFORM_BITS.__anon82::transform_bits_62,2105
  int cache_bits_;        // If equal to 0, don't use color cache.cache_bits_63,2157
  int cache_bits_;        // If equal to 0, don't use color cache.__anon82::cache_bits_63,2157
  int use_cross_color_;use_cross_color_66,2286
  int use_cross_color_;__anon82::use_cross_color_66,2286
  int use_subtract_green_;use_subtract_green_67,2310
  int use_subtract_green_;__anon82::use_subtract_green_67,2310
  int use_predict_;use_predict_68,2337
  int use_predict_;__anon82::use_predict_68,2337
  int use_palette_;use_palette_69,2357
  int use_palette_;__anon82::use_palette_69,2357
  int palette_size_;palette_size_70,2377
  int palette_size_;__anon82::palette_size_70,2377
  uint32_t palette_[MAX_PALETTE_SIZE];palette_71,2398
  uint32_t palette_[MAX_PALETTE_SIZE];__anon82::palette_71,2398
  struct VP8LBackwardRefs refs_[3];  // Backward Refs array for temporaries.refs_74,2487
  struct VP8LBackwardRefs refs_[3];  // Backward Refs array for temporaries.__anon82::refs_74,2487
  VP8LHashChain hash_chain_;         // HashChain data for constructinghash_chain_75,2564
  VP8LHashChain hash_chain_;         // HashChain data for constructing__anon82::hash_chain_75,2564
} VP8LEncoder;VP8LEncoder77,2697
int VP8LEncodeImage(const WebPConfig* const config,VP8LEncodeImage85,2941
WebPEncodingError VP8LEncodeStream(const WebPConfig* const config,VP8LEncodeStream90,3174
int VP8ApplyNearLossless(const WebPPicture* const picture, int quality,VP8ApplyNearLossless97,3490
void VP8LResidualImage(int width, int height, int bits, int low_effort,VP8LResidualImage104,3740
void VP8LColorSpaceTransform(int width, int height, int bits, int quality,VP8LColorSpaceTransform109,4013

src/enc/cost_enc.h,1223
#define WEBP_ENC_COST_ENC_H_WEBP_ENC_COST_ENC_H_15,577
typedef struct VP8Residual VP8Residual;VP8Residual27,819
struct VP8Residual {VP8Residual28,859
  int first;first29,880
  int first;VP8Residual::first29,880
  int last;last30,893
  int last;VP8Residual::last30,893
  const int16_t* coeffs;coeffs31,905
  const int16_t* coeffs;VP8Residual::coeffs31,905
  int coeff_type;coeff_type33,931
  int coeff_type;VP8Residual::coeff_type33,931
  ProbaArray*   prob;prob34,949
  ProbaArray*   prob;VP8Residual::prob34,949
  StatsArray*   stats;stats35,971
  StatsArray*   stats;VP8Residual::stats35,971
  CostArrayPtr  costs;costs36,994
  CostArrayPtr  costs;VP8Residual::costs36,994
void VP8InitResidual(int first, int coeff_type,VP8InitResidual39,1021
int VP8RecordCoeffs(int ctx, const VP8Residual* const res);VP8RecordCoeffs42,1139
static WEBP_INLINE int VP8RecordStats(int bit, proba_t* const stats) {VP8RecordStats45,1230
static WEBP_INLINE int VP8BitCost(int bit, uint8_t proba) {VP8BitCost59,1745
void VP8CalculateLevelCosts(VP8EncProba* const proba);VP8CalculateLevelCosts65,1964
static WEBP_INLINE int VP8LevelCost(const uint16_t* const table, int level) {VP8LevelCost66,2019

src/webp/demux.h,8076
#define WEBP_WEBP_DEMUX_H_WEBP_WEBP_DEMUX_H_49,2031
#define WEBP_DEMUX_ABI_VERSION WEBP_DEMUX_ABI_VERSION58,2172
typedef struct WebPDemuxer WebPDemuxer;WebPDemuxer64,2459
typedef struct WebPIterator WebPIterator;WebPIterator65,2499
typedef struct WebPChunkIterator WebPChunkIterator;WebPChunkIterator66,2541
typedef struct WebPAnimInfo WebPAnimInfo;WebPAnimInfo67,2593
typedef struct WebPAnimDecoderOptions WebPAnimDecoderOptions;WebPAnimDecoderOptions68,2635
WEBP_EXTERN int WebPGetDemuxVersion(void);WebPGetDemuxVersion74,2928
typedef enum WebPDemuxState {WebPDemuxState79,3080
  WEBP_DEMUX_PARSE_ERROR    = -1,  // An error occurred while parsing.WEBP_DEMUX_PARSE_ERROR80,3110
  WEBP_DEMUX_PARSING_HEADER =  0,  // Not enough data to parse full header.WEBP_DEMUX_PARSING_HEADER81,3181
  WEBP_DEMUX_PARSED_HEADER  =  1,  // Header parsing complete,WEBP_DEMUX_PARSED_HEADER82,3257
  WEBP_DEMUX_DONE           =  2   // Entire file has been parsed.WEBP_DEMUX_DONE84,3381
} WebPDemuxState;WebPDemuxState85,3448
WEBP_EXTERN WebPDemuxer* WebPDemuxInternal(WebPDemuxInternal88,3509
static WEBP_INLINE WebPDemuxer* WebPDemux(const WebPData* data) {WebPDemux94,3821
static WEBP_INLINE WebPDemuxer* WebPDemuxPartial(WebPDemuxPartial106,4501
WEBP_EXTERN void WebPDemuxDelete(WebPDemuxer* dmux);WebPDemuxDelete112,4713
typedef enum WebPFormatFeature {WebPFormatFeature117,4881
  WEBP_FF_FORMAT_FLAGS,      // bit-wise combination of WebPFeatureFlagsWEBP_FF_FORMAT_FLAGS118,4914
  WEBP_FF_CANVAS_WIDTH,WEBP_FF_CANVAS_WIDTH120,5067
  WEBP_FF_CANVAS_HEIGHT,WEBP_FF_CANVAS_HEIGHT121,5091
  WEBP_FF_LOOP_COUNT,        // only relevant for animated fileWEBP_FF_LOOP_COUNT122,5116
  WEBP_FF_BACKGROUND_COLOR,  // idem.WEBP_FF_BACKGROUND_COLOR123,5180
  WEBP_FF_FRAME_COUNT        // Number of frames present in the demux object.WEBP_FF_FRAME_COUNT124,5218
} WebPFormatFeature;WebPFormatFeature128,5506
WEBP_EXTERN uint32_t WebPDemuxGetI(WebPDemuxGetI137,5951
struct WebPIterator {WebPIterator143,6147
  int frame_num;frame_num144,6169
  int frame_num;WebPIterator::frame_num144,6169
  int num_frames;          // equivalent to WEBP_FF_FRAME_COUNT.num_frames145,6186
  int num_frames;          // equivalent to WEBP_FF_FRAME_COUNT.WebPIterator::num_frames145,6186
  int x_offset, y_offset;  // offset relative to the canvas.x_offset146,6251
  int x_offset, y_offset;  // offset relative to the canvas.WebPIterator::x_offset146,6251
  int x_offset, y_offset;  // offset relative to the canvas.y_offset146,6251
  int x_offset, y_offset;  // offset relative to the canvas.WebPIterator::y_offset146,6251
  int width, height;       // dimensions of this frame.width147,6312
  int width, height;       // dimensions of this frame.WebPIterator::width147,6312
  int width, height;       // dimensions of this frame.height147,6312
  int width, height;       // dimensions of this frame.WebPIterator::height147,6312
  int duration;            // display duration in milliseconds.duration148,6368
  int duration;            // display duration in milliseconds.WebPIterator::duration148,6368
  WebPMuxAnimDispose dispose_method;  // dispose method for the frame.dispose_method149,6432
  WebPMuxAnimDispose dispose_method;  // dispose method for the frame.WebPIterator::dispose_method149,6432
  int complete;   // true if 'fragment' contains a full frame. partial imagescomplete150,6503
  int complete;   // true if 'fragment' contains a full frame. partial imagesWebPIterator::complete150,6503
  WebPData fragment;  // The frame given by 'frame_num'. Note for historicalfragment152,6658
  WebPData fragment;  // The frame given by 'frame_num'. Note for historicalWebPIterator::fragment152,6658
  int has_alpha;      // True if the frame contains transparency.has_alpha154,6795
  int has_alpha;      // True if the frame contains transparency.WebPIterator::has_alpha154,6795
  WebPMuxAnimBlend blend_method;  // Blend operation for the frame.blend_method155,6861
  WebPMuxAnimBlend blend_method;  // Blend operation for the frame.WebPIterator::blend_method155,6861
  uint32_t pad[2];         // padding for later use.pad157,6930
  uint32_t pad[2];         // padding for later use.WebPIterator::pad157,6930
  void* private_;          // for internal use only.private_158,6983
  void* private_;          // for internal use only.WebPIterator::private_158,6983
WEBP_EXTERN int WebPDemuxGetFrame(WebPDemuxGetFrame167,7440
WEBP_EXTERN int WebPDemuxNextFrame(WebPIterator* iter);WebPDemuxNextFrame173,7734
WEBP_EXTERN int WebPDemuxPrevFrame(WebPIterator* iter);WebPDemuxPrevFrame174,7790
WEBP_EXTERN void WebPDemuxReleaseIterator(WebPIterator* iter);WebPDemuxReleaseIterator180,8077
struct WebPChunkIterator {WebPChunkIterator185,8243
  int chunk_num;chunk_num188,8365
  int chunk_num;WebPChunkIterator::chunk_num188,8365
  int num_chunks;num_chunks189,8382
  int num_chunks;WebPChunkIterator::num_chunks189,8382
  WebPData chunk;    // The payload of the chunk.chunk190,8400
  WebPData chunk;    // The payload of the chunk.WebPChunkIterator::chunk190,8400
  uint32_t pad[6];   // padding for later usepad192,8451
  uint32_t pad[6];   // padding for later useWebPChunkIterator::pad192,8451
  void* private_;private_193,8497
  void* private_;WebPChunkIterator::private_193,8497
WEBP_EXTERN int WebPDemuxGetChunk(const WebPDemuxer* dmux,WebPDemuxGetChunk205,9090
WEBP_EXTERN int WebPDemuxNextChunk(WebPChunkIterator* iter);WebPDemuxNextChunk212,9471
WEBP_EXTERN int WebPDemuxPrevChunk(WebPChunkIterator* iter);WebPDemuxPrevChunk213,9532
WEBP_EXTERN void WebPDemuxReleaseChunkIterator(WebPChunkIterator* iter);WebPDemuxReleaseChunkIterator218,9731
typedef struct WebPAnimDecoder WebPAnimDecoder;  // Main opaque object.WebPAnimDecoder248,10766
struct WebPAnimDecoderOptions {WebPAnimDecoderOptions251,10858
  WEBP_CSP_MODE color_mode;color_mode254,11006
  WEBP_CSP_MODE color_mode;WebPAnimDecoderOptions::color_mode254,11006
  int use_threads;           // If true, use multi-threaded decoding.use_threads255,11034
  int use_threads;           // If true, use multi-threaded decoding.WebPAnimDecoderOptions::use_threads255,11034
  uint32_t padding[7];       // Padding for later use.padding256,11104
  uint32_t padding[7];       // Padding for later use.WebPAnimDecoderOptions::padding256,11104
WEBP_EXTERN int WebPAnimDecoderOptionsInitInternal(WebPAnimDecoderOptionsInitInternal260,11206
static WEBP_INLINE int WebPAnimDecoderOptionsInit(WebPAnimDecoderOptionsInit267,11538
WEBP_EXTERN WebPAnimDecoder* WebPAnimDecoderNewInternal(WebPAnimDecoderNewInternal274,11804
static WEBP_INLINE WebPAnimDecoder* WebPAnimDecoderNew(WebPAnimDecoderNew287,12471
struct WebPAnimInfo {WebPAnimInfo294,12771
  uint32_t canvas_width;canvas_width295,12793
  uint32_t canvas_width;WebPAnimInfo::canvas_width295,12793
  uint32_t canvas_height;canvas_height296,12818
  uint32_t canvas_height;WebPAnimInfo::canvas_height296,12818
  uint32_t loop_count;loop_count297,12844
  uint32_t loop_count;WebPAnimInfo::loop_count297,12844
  uint32_t bgcolor;bgcolor298,12867
  uint32_t bgcolor;WebPAnimInfo::bgcolor298,12867
  uint32_t frame_count;frame_count299,12887
  uint32_t frame_count;WebPAnimInfo::frame_count299,12887
  uint32_t pad[4];   // padding for later usepad300,12911
  uint32_t pad[4];   // padding for later useWebPAnimInfo::pad300,12911
WEBP_EXTERN int WebPAnimDecoderGetInfo(const WebPAnimDecoder* dec,WebPAnimDecoderGetInfo309,13180
WEBP_EXTERN int WebPAnimDecoderGetNext(WebPAnimDecoder* dec,WebPAnimDecoderGetNext324,14024
WEBP_EXTERN int WebPAnimDecoderHasMoreFrames(const WebPAnimDecoder* dec);WebPAnimDecoderHasMoreFrames333,14383
WEBP_EXTERN void WebPAnimDecoderReset(WebPAnimDecoder* dec);WebPAnimDecoderReset341,14806
WEBP_EXTERN const WebPDemuxer* WebPAnimDecoderGetDemuxer(WebPAnimDecoderGetDemuxer351,15267
WEBP_EXTERN void WebPAnimDecoderDelete(WebPAnimDecoder* dec);WebPAnimDecoderDelete357,15464

src/webp/mux_types.h,1499
#define WEBP_WEBP_MUX_TYPES_H_WEBP_WEBP_MUX_TYPES_H_15,589
typedef struct WebPData WebPData;WebPData30,1024
typedef enum WebPFeatureFlags {WebPFeatureFlags33,1082
  ANIMATION_FLAG  = 0x00000002,ANIMATION_FLAG34,1114
  XMP_FLAG        = 0x00000004,XMP_FLAG35,1146
  EXIF_FLAG       = 0x00000008,EXIF_FLAG36,1178
  ALPHA_FLAG      = 0x00000010,ALPHA_FLAG37,1210
  ICCP_FLAG       = 0x00000020,ICCP_FLAG38,1242
  ALL_VALID_FLAGS = 0x0000003eALL_VALID_FLAGS40,1275
} WebPFeatureFlags;WebPFeatureFlags41,1306
typedef enum WebPMuxAnimDispose {WebPMuxAnimDispose45,1479
  WEBP_MUX_DISPOSE_NONE,       // Do not dispose.WEBP_MUX_DISPOSE_NONE46,1513
  WEBP_MUX_DISPOSE_BACKGROUND  // Dispose to background color.WEBP_MUX_DISPOSE_BACKGROUND47,1563
} WebPMuxAnimDispose;WebPMuxAnimDispose48,1626
typedef enum WebPMuxAnimBlend {WebPMuxAnimBlend52,1790
  WEBP_MUX_BLEND,              // Blend.WEBP_MUX_BLEND53,1822
  WEBP_MUX_NO_BLEND            // Do not blend.WEBP_MUX_NO_BLEND54,1863
} WebPMuxAnimBlend;WebPMuxAnimBlend55,1911
struct WebPData {WebPData59,2050
  const uint8_t* bytes;bytes60,2068
  const uint8_t* bytes;WebPData::bytes60,2068
  size_t size;size61,2092
  size_t size;WebPData::size61,2092
static WEBP_INLINE void WebPDataInit(WebPData* webp_data) {WebPDataInit65,2186
static WEBP_INLINE void WebPDataClear(WebPData* webp_data) {WebPDataClear73,2436
static WEBP_INLINE int WebPDataCopy(const WebPData* src, WebPData* dst) {WebPDataCopy82,2698

src/webp/mux.h,7447
#define WEBP_WEBP_MUX_H_WEBP_WEBP_MUX_H_16,631
#define WEBP_MUX_ABI_VERSION WEBP_MUX_ABI_VERSION24,723
typedef struct WebPMux WebPMux;   // main opaque object.WebPMux67,2226
typedef struct WebPMuxFrameInfo WebPMuxFrameInfo;WebPMuxFrameInfo68,2283
typedef struct WebPMuxAnimParams WebPMuxAnimParams;WebPMuxAnimParams69,2333
typedef struct WebPAnimEncoderOptions WebPAnimEncoderOptions;WebPAnimEncoderOptions70,2385
typedef enum WebPMuxError {WebPMuxError73,2463
  WEBP_MUX_OK                 =  1,WEBP_MUX_OK74,2491
  WEBP_MUX_NOT_FOUND          =  0,WEBP_MUX_NOT_FOUND75,2527
  WEBP_MUX_INVALID_ARGUMENT   = -1,WEBP_MUX_INVALID_ARGUMENT76,2563
  WEBP_MUX_BAD_DATA           = -2,WEBP_MUX_BAD_DATA77,2599
  WEBP_MUX_MEMORY_ERROR       = -3,WEBP_MUX_MEMORY_ERROR78,2635
  WEBP_MUX_NOT_ENOUGH_DATA    = -4WEBP_MUX_NOT_ENOUGH_DATA79,2671
} WebPMuxError;WebPMuxError80,2706
typedef enum WebPChunkId {WebPChunkId83,2761
  WEBP_CHUNK_VP8X,        // VP8XWEBP_CHUNK_VP8X84,2788
  WEBP_CHUNK_ICCP,        // ICCPWEBP_CHUNK_ICCP85,2822
  WEBP_CHUNK_ANIM,        // ANIMWEBP_CHUNK_ANIM86,2856
  WEBP_CHUNK_ANMF,        // ANMFWEBP_CHUNK_ANMF87,2890
  WEBP_CHUNK_DEPRECATED,  // (deprecated from FRGM)WEBP_CHUNK_DEPRECATED88,2924
  WEBP_CHUNK_ALPHA,       // ALPHWEBP_CHUNK_ALPHA89,2976
  WEBP_CHUNK_IMAGE,       // VP8/VP8LWEBP_CHUNK_IMAGE90,3010
  WEBP_CHUNK_EXIF,        // EXIFWEBP_CHUNK_EXIF91,3048
  WEBP_CHUNK_XMP,         // XMPWEBP_CHUNK_XMP92,3082
  WEBP_CHUNK_UNKNOWN,     // Other chunks.WEBP_CHUNK_UNKNOWN93,3115
  WEBP_CHUNK_NILWEBP_CHUNK_NIL94,3158
} WebPChunkId;WebPChunkId95,3175
WEBP_EXTERN int WebPGetMuxVersion(void);WebPGetMuxVersion101,3419
WEBP_EXTERN WebPMux* WebPNewInternal(int);WebPNewInternal107,3609
static WEBP_INLINE WebPMux* WebPMuxNew(void) {WebPMuxNew113,3789
WEBP_EXTERN void WebPMuxDelete(WebPMux* mux);WebPMuxDelete120,3970
WEBP_EXTERN WebPMux* WebPMuxCreateInternal(const WebPData*, int, int);WebPMuxCreateInternal126,4158
static WEBP_INLINE WebPMux* WebPMuxCreate(const WebPData* bitstream,WebPMuxCreate136,4655
WEBP_EXTERN WebPMuxError WebPMuxSetChunk(WebPMuxSetChunk163,6019
WEBP_EXTERN WebPMuxError WebPMuxGetChunk(WebPMuxGetChunk179,6798
WEBP_EXTERN WebPMuxError WebPMuxDeleteChunk(WebPMuxDeleteChunk192,7441
struct WebPMuxFrameInfo {WebPMuxFrameInfo199,7664
  WebPData    bitstream;  // image data: can be a raw VP8/VP8L bitstreambitstream200,7690
  WebPData    bitstream;  // image data: can be a raw VP8/VP8L bitstreamWebPMuxFrameInfo::bitstream200,7690
  int         x_offset;   // x-offset of the frame.x_offset202,7821
  int         x_offset;   // x-offset of the frame.WebPMuxFrameInfo::x_offset202,7821
  int         y_offset;   // y-offset of the frame.y_offset203,7873
  int         y_offset;   // y-offset of the frame.WebPMuxFrameInfo::y_offset203,7873
  int         duration;   // duration of the frame (in milliseconds).duration204,7925
  int         duration;   // duration of the frame (in milliseconds).WebPMuxFrameInfo::duration204,7925
  WebPChunkId id;         // frame type: should be one of WEBP_CHUNK_ANMFid206,7996
  WebPChunkId id;         // frame type: should be one of WEBP_CHUNK_ANMFWebPMuxFrameInfo::id206,7996
  WebPMuxAnimDispose dispose_method;  // Disposal method for the frame.dispose_method208,8119
  WebPMuxAnimDispose dispose_method;  // Disposal method for the frame.WebPMuxFrameInfo::dispose_method208,8119
  WebPMuxAnimBlend   blend_method;    // Blend operation for the frame.blend_method209,8191
  WebPMuxAnimBlend   blend_method;    // Blend operation for the frame.WebPMuxFrameInfo::blend_method209,8191
  uint32_t    pad[1];     // padding for later usepad210,8263
  uint32_t    pad[1];     // padding for later useWebPMuxFrameInfo::pad210,8263
WEBP_EXTERN WebPMuxError WebPMuxSetImage(WebPMuxSetImage225,8941
WEBP_EXTERN WebPMuxError WebPMuxPushFrame(WebPMuxPushFrame244,9911
WEBP_EXTERN WebPMuxError WebPMuxGetFrame(WebPMuxGetFrame262,10757
WEBP_EXTERN WebPMuxError WebPMuxDeleteFrame(WebPMux* mux, uint32_t nth);WebPMuxDeleteFrame275,11310
struct WebPMuxAnimParams {WebPMuxAnimParams281,11505
  uint32_t bgcolor;  // Background color of the canvas stored (in MSB order) as:bgcolor282,11532
  uint32_t bgcolor;  // Background color of the canvas stored (in MSB order) as:WebPMuxAnimParams::bgcolor282,11532
  int loop_count;    // Number of times to repeat the animation [0 = infinite].loop_count287,11794
  int loop_count;    // Number of times to repeat the animation [0 = infinite].WebPMuxAnimParams::loop_count287,11794
WEBP_EXTERN WebPMuxError WebPMuxSetAnimationParams(WebPMuxSetAnimationParams299,12256
WEBP_EXTERN WebPMuxError WebPMuxGetAnimationParams(WebPMuxGetAnimationParams310,12746
WEBP_EXTERN WebPMuxError WebPMuxSetCanvasSize(WebPMux* mux,WebPMuxSetCanvasSize331,13772
WEBP_EXTERN WebPMuxError WebPMuxGetCanvasSize(const WebPMux* mux,WebPMuxGetCanvasSize346,14469
WEBP_EXTERN WebPMuxError WebPMuxGetFeatures(const WebPMux* mux,WebPMuxGetFeatures362,15323
WEBP_EXTERN WebPMuxError WebPMuxNumChunks(const WebPMux* mux,WebPMuxNumChunks373,15818
WEBP_EXTERN WebPMuxError WebPMuxAssemble(WebPMux* mux,WebPMuxAssemble391,16755
typedef struct WebPAnimEncoder WebPAnimEncoder;  // Main opaque object.WebPAnimEncoder417,17633
struct WebPAnimEncoderOptions {WebPAnimEncoderOptions424,17811
  WebPMuxAnimParams anim_params;  // Animation parameters.anim_params425,17843
  WebPMuxAnimParams anim_params;  // Animation parameters.WebPAnimEncoderOptions::anim_params425,17843
  int minimize_size;    // If true, minimize the output size (slow). Implicitlyminimize_size426,17902
  int minimize_size;    // If true, minimize the output size (slow). ImplicitlyWebPAnimEncoderOptions::minimize_size426,17902
  int kmin;kmin428,18039
  int kmin;WebPAnimEncoderOptions::kmin428,18039
  int kmax;             // Minimum and maximum distance between consecutive keykmax429,18051
  int kmax;             // Minimum and maximum distance between consecutive keyWebPAnimEncoderOptions::kmax429,18051
  int allow_mixed;      // If true, use mixed compression mode; may chooseallow_mixed437,18660
  int allow_mixed;      // If true, use mixed compression mode; may chooseWebPAnimEncoderOptions::allow_mixed437,18660
  int verbose;          // If true, print info and warning messages to stderr.verbose439,18804
  int verbose;          // If true, print info and warning messages to stderr.WebPAnimEncoderOptions::verbose439,18804
  uint32_t padding[4];  // Padding for later use.padding441,18884
  uint32_t padding[4];  // Padding for later use.WebPAnimEncoderOptions::padding441,18884
WEBP_EXTERN int WebPAnimEncoderOptionsInitInternal(WebPAnimEncoderOptionsInitInternal445,18981
static WEBP_INLINE int WebPAnimEncoderOptionsInit(WebPAnimEncoderOptionsInit452,19313
WEBP_EXTERN WebPAnimEncoder* WebPAnimEncoderNewInternal(WebPAnimEncoderNewInternal458,19533
static WEBP_INLINE WebPAnimEncoder* WebPAnimEncoderNew(WebPAnimEncoderNew469,20001
WEBP_EXTERN int WebPAnimEncoderAdd(WebPAnimEncoderAdd493,21282
WEBP_EXTERN int WebPAnimEncoderAssemble(WebPAnimEncoder* enc,WebPAnimEncoderAssemble506,21816
WEBP_EXTERN const char* WebPAnimEncoderGetError(WebPAnimEncoder* enc);WebPAnimEncoderGetError517,22435
WEBP_EXTERN void WebPAnimEncoderDelete(WebPAnimEncoder* enc);WebPAnimEncoderDelete522,22602

src/webp/decode.h,14110
#define WEBP_WEBP_DECODE_H_WEBP_WEBP_DECODE_H_15,585
#define WEBP_DECODER_ABI_VERSION WEBP_DECODER_ABI_VERSION23,676
typedef struct WebPRGBABuffer WebPRGBABuffer;WebPRGBABuffer29,955
typedef struct WebPYUVABuffer WebPYUVABuffer;WebPYUVABuffer30,1001
typedef struct WebPDecBuffer WebPDecBuffer;WebPDecBuffer31,1047
typedef struct WebPIDecoder WebPIDecoder;WebPIDecoder32,1091
typedef struct WebPBitstreamFeatures WebPBitstreamFeatures;WebPBitstreamFeatures33,1133
typedef struct WebPDecoderOptions WebPDecoderOptions;WebPDecoderOptions34,1193
typedef struct WebPDecoderConfig WebPDecoderConfig;WebPDecoderConfig35,1247
WEBP_EXTERN int WebPGetDecoderVersion(void);WebPGetDecoderVersion39,1436
WEBP_EXTERN int WebPGetInfo(const uint8_t* data, size_t data_size,WebPGetInfo45,1764
WEBP_EXTERN uint8_t* WebPDecodeRGBA(const uint8_t* data, size_t data_size,WebPDecodeRGBA53,2206
WEBP_EXTERN uint8_t* WebPDecodeARGB(const uint8_t* data, size_t data_size,WebPDecodeARGB57,2425
WEBP_EXTERN uint8_t* WebPDecodeBGRA(const uint8_t* data, size_t data_size,WebPDecodeBGRA61,2644
WEBP_EXTERN uint8_t* WebPDecodeRGB(const uint8_t* data, size_t data_size,WebPDecodeRGB66,2915
WEBP_EXTERN uint8_t* WebPDecodeBGR(const uint8_t* data, size_t data_size,WebPDecodeBGR70,3125
WEBP_EXTERN uint8_t* WebPDecodeYUV(const uint8_t* data, size_t data_size,WebPDecodeYUV83,3844
WEBP_EXTERN void WebPFree(void* ptr);WebPFree89,4171
WEBP_EXTERN uint8_t* WebPDecodeRGBAInto(WebPDecodeRGBAInto99,4745
WEBP_EXTERN uint8_t* WebPDecodeARGBInto(WebPDecodeARGBInto102,4904
WEBP_EXTERN uint8_t* WebPDecodeBGRAInto(WebPDecodeBGRAInto105,5063
WEBP_EXTERN uint8_t* WebPDecodeRGBInto(WebPDecodeRGBInto111,5331
WEBP_EXTERN uint8_t* WebPDecodeBGRInto(WebPDecodeBGRInto114,5489
WEBP_EXTERN uint8_t* WebPDecodeYUVInto(WebPDecodeYUVInto125,6138
typedef enum WEBP_CSP_MODE {WEBP_CSP_MODE146,7186
  MODE_RGB = 0, MODE_RGBA = 1,MODE_RGB147,7215
  MODE_RGB = 0, MODE_RGBA = 1,MODE_RGBA147,7215
  MODE_BGR = 2, MODE_BGRA = 3,MODE_BGR148,7246
  MODE_BGR = 2, MODE_BGRA = 3,MODE_BGRA148,7246
  MODE_ARGB = 4, MODE_RGBA_4444 = 5,MODE_ARGB149,7277
  MODE_ARGB = 4, MODE_RGBA_4444 = 5,MODE_RGBA_4444149,7277
  MODE_RGB_565 = 6,MODE_RGB_565150,7314
  MODE_rgbA = 7,MODE_rgbA152,7402
  MODE_bgrA = 8,MODE_bgrA153,7419
  MODE_Argb = 9,MODE_Argb154,7436
  MODE_rgbA_4444 = 10,MODE_rgbA_4444155,7453
  MODE_YUV = 11, MODE_YUVA = 12,  // yuv 4:2:0MODE_YUV157,7517
  MODE_YUV = 11, MODE_YUVA = 12,  // yuv 4:2:0MODE_YUVA157,7517
  MODE_LAST = 13MODE_LAST158,7564
} WEBP_CSP_MODE;WEBP_CSP_MODE159,7581
static WEBP_INLINE int WebPIsPremultipliedMode(WEBP_CSP_MODE mode) {WebPIsPremultipliedMode162,7622
static WEBP_INLINE int WebPIsAlphaMode(WEBP_CSP_MODE mode) {WebPIsAlphaMode167,7802
static WEBP_INLINE int WebPIsRGBMode(WEBP_CSP_MODE mode) {WebPIsRGBMode173,8038
struct WebPRGBABuffer {    // view as RGBAWebPRGBABuffer180,8287
  uint8_t* rgba;    // pointer to RGBA samplesrgba181,8330
  uint8_t* rgba;    // pointer to RGBA samplesWebPRGBABuffer::rgba181,8330
  int stride;       // stride in bytes from one scanline to the next.stride182,8377
  int stride;       // stride in bytes from one scanline to the next.WebPRGBABuffer::stride182,8377
  size_t size;      // total size of the *rgba buffer.size183,8447
  size_t size;      // total size of the *rgba buffer.WebPRGBABuffer::size183,8447
struct WebPYUVABuffer {              // view as YUVAWebPYUVABuffer186,8506
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesy187,8559
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesWebPYUVABuffer::y187,8559
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesu187,8559
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesWebPYUVABuffer::u187,8559
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesv187,8559
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesWebPYUVABuffer::v187,8559
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesa187,8559
  uint8_t* y, *u, *v, *a;     // pointer to luma, chroma U/V, alpha samplesWebPYUVABuffer::a187,8559
  int y_stride;               // luma stridey_stride188,8635
  int y_stride;               // luma strideWebPYUVABuffer::y_stride188,8635
  int u_stride, v_stride;     // chroma stridesu_stride189,8680
  int u_stride, v_stride;     // chroma stridesWebPYUVABuffer::u_stride189,8680
  int u_stride, v_stride;     // chroma stridesv_stride189,8680
  int u_stride, v_stride;     // chroma stridesWebPYUVABuffer::v_stride189,8680
  int a_stride;               // alpha stridea_stride190,8728
  int a_stride;               // alpha strideWebPYUVABuffer::a_stride190,8728
  size_t y_size;              // luma plane sizey_size191,8774
  size_t y_size;              // luma plane sizeWebPYUVABuffer::y_size191,8774
  size_t u_size, v_size;      // chroma planes sizeu_size192,8823
  size_t u_size, v_size;      // chroma planes sizeWebPYUVABuffer::u_size192,8823
  size_t u_size, v_size;      // chroma planes sizev_size192,8823
  size_t u_size, v_size;      // chroma planes sizeWebPYUVABuffer::v_size192,8823
  size_t a_size;              // alpha-plane sizea_size193,8875
  size_t a_size;              // alpha-plane sizeWebPYUVABuffer::a_size193,8875
struct WebPDecBuffer {WebPDecBuffer197,8946
  WEBP_CSP_MODE colorspace;  // Colorspace.colorspace198,8969
  WEBP_CSP_MODE colorspace;  // Colorspace.WebPDecBuffer::colorspace198,8969
  int width, height;         // Dimensions.width199,9013
  int width, height;         // Dimensions.WebPDecBuffer::width199,9013
  int width, height;         // Dimensions.height199,9013
  int width, height;         // Dimensions.WebPDecBuffer::height199,9013
  int is_external_memory;    // If non-zero, 'internal_memory' pointer is notis_external_memory200,9057
  int is_external_memory;    // If non-zero, 'internal_memory' pointer is notWebPDecBuffer::is_external_memory200,9057
    WebPRGBABuffer RGBA;RGBA205,9354
    WebPRGBABuffer RGBA;WebPDecBuffer::__anon83::RGBA205,9354
    WebPYUVABuffer YUVA;YUVA206,9379
    WebPYUVABuffer YUVA;WebPDecBuffer::__anon83::YUVA206,9379
  } u;                       // Nameless union of buffer parameters.u207,9404
  } u;                       // Nameless union of buffer parameters.WebPDecBuffer::u207,9404
  uint32_t       pad[4];     // padding for later usepad208,9473
  uint32_t       pad[4];     // padding for later useWebPDecBuffer::pad208,9473
  uint8_t* private_memory;   // Internally allocated memory (only whenprivate_memory210,9528
  uint8_t* private_memory;   // Internally allocated memory (only whenWebPDecBuffer::private_memory210,9528
WEBP_EXTERN int WebPInitDecBufferInternal(WebPDecBuffer*, int);WebPInitDecBufferInternal216,9801
static WEBP_INLINE int WebPInitDecBuffer(WebPDecBuffer* buffer) {WebPInitDecBuffer220,9986
WEBP_EXTERN void WebPFreeDecBuffer(WebPDecBuffer* buffer);WebPFreeDecBuffer226,10253
typedef enum VP8StatusCode {VP8StatusCode231,10430
  VP8_STATUS_OK = 0,VP8_STATUS_OK232,10459
  VP8_STATUS_OUT_OF_MEMORY,VP8_STATUS_OUT_OF_MEMORY233,10480
  VP8_STATUS_INVALID_PARAM,VP8_STATUS_INVALID_PARAM234,10508
  VP8_STATUS_BITSTREAM_ERROR,VP8_STATUS_BITSTREAM_ERROR235,10536
  VP8_STATUS_UNSUPPORTED_FEATURE,VP8_STATUS_UNSUPPORTED_FEATURE236,10566
  VP8_STATUS_SUSPENDED,VP8_STATUS_SUSPENDED237,10600
  VP8_STATUS_USER_ABORT,VP8_STATUS_USER_ABORT238,10624
  VP8_STATUS_NOT_ENOUGH_DATAVP8_STATUS_NOT_ENOUGH_DATA239,10649
} VP8StatusCode;VP8StatusCode240,10678
WEBP_EXTERN WebPIDecoder* WebPINewDecoder(WebPDecBuffer* output_buffer);WebPINewDecoder280,12556
WEBP_EXTERN WebPIDecoder* WebPINewRGB(WebPINewRGB292,13293
WEBP_EXTERN WebPIDecoder* WebPINewYUVA(WebPINewYUVA307,14261
WEBP_EXTERN WebPIDecoder* WebPINewYUV(WebPINewYUV315,14589
WEBP_EXTERN void WebPIDelete(WebPIDecoder* idec);WebPIDelete322,14915
WEBP_EXTERN VP8StatusCode WebPIAppend(WebPIAppend327,15168
WEBP_EXTERN VP8StatusCode WebPIUpdate(WebPIUpdate335,15600
WEBP_EXTERN uint8_t* WebPIDecGetRGB(WebPIDecGetRGB345,16166
WEBP_EXTERN uint8_t* WebPIDecGetYUVA(WebPIDecGetYUVA352,16482
static WEBP_INLINE uint8_t* WebPIDecGetYUV(WebPIDecGetYUV359,16823
WEBP_EXTERN const WebPDecBuffer* WebPIDecodedArea(WebPIDecodedArea372,17529
struct WebPBitstreamFeatures {WebPBitstreamFeatures409,18907
  int width;          // Width in pixels, as read from the bitstream.width410,18938
  int width;          // Width in pixels, as read from the bitstream.WebPBitstreamFeatures::width410,18938
  int height;         // Height in pixels, as read from the bitstream.height411,19008
  int height;         // Height in pixels, as read from the bitstream.WebPBitstreamFeatures::height411,19008
  int has_alpha;      // True if the bitstream contains an alpha channel.has_alpha412,19079
  int has_alpha;      // True if the bitstream contains an alpha channel.WebPBitstreamFeatures::has_alpha412,19079
  int has_animation;  // True if the bitstream is an animation.has_animation413,19153
  int has_animation;  // True if the bitstream is an animation.WebPBitstreamFeatures::has_animation413,19153
  int format;         // 0 = undefined (/mixed), 1 = lossy, 2 = losslessformat414,19217
  int format;         // 0 = undefined (/mixed), 1 = lossy, 2 = losslessWebPBitstreamFeatures::format414,19217
  uint32_t pad[5];    // padding for later usepad416,19291
  uint32_t pad[5];    // padding for later useWebPBitstreamFeatures::pad416,19291
WEBP_EXTERN VP8StatusCode WebPGetFeaturesInternal(WebPGetFeaturesInternal420,19384
static WEBP_INLINE VP8StatusCode WebPGetFeatures(WebPGetFeatures428,19824
struct WebPDecoderOptions {WebPDecoderOptions436,20099
  int bypass_filtering;               // if true, skip the in-loop filteringbypass_filtering437,20127
  int bypass_filtering;               // if true, skip the in-loop filteringWebPDecoderOptions::bypass_filtering437,20127
  int no_fancy_upsampling;            // if true, use faster pointwise upsamplerno_fancy_upsampling438,20204
  int no_fancy_upsampling;            // if true, use faster pointwise upsamplerWebPDecoderOptions::no_fancy_upsampling438,20204
  int use_cropping;                   // if true, cropping is applied _first_use_cropping439,20285
  int use_cropping;                   // if true, cropping is applied _first_WebPDecoderOptions::use_cropping439,20285
  int crop_left, crop_top;            // top-left position for cropping.crop_left440,20363
  int crop_left, crop_top;            // top-left position for cropping.WebPDecoderOptions::crop_left440,20363
  int crop_left, crop_top;            // top-left position for cropping.crop_top440,20363
  int crop_left, crop_top;            // top-left position for cropping.WebPDecoderOptions::crop_top440,20363
  int crop_width, crop_height;        // dimension of the cropping areacrop_width442,20509
  int crop_width, crop_height;        // dimension of the cropping areaWebPDecoderOptions::crop_width442,20509
  int crop_width, crop_height;        // dimension of the cropping areacrop_height442,20509
  int crop_width, crop_height;        // dimension of the cropping areaWebPDecoderOptions::crop_height442,20509
  int use_scaling;                    // if true, scaling is applied _afterward_use_scaling443,20581
  int use_scaling;                    // if true, scaling is applied _afterward_WebPDecoderOptions::use_scaling443,20581
  int scaled_width, scaled_height;    // final resolutionscaled_width444,20662
  int scaled_width, scaled_height;    // final resolutionWebPDecoderOptions::scaled_width444,20662
  int scaled_width, scaled_height;    // final resolutionscaled_height444,20662
  int scaled_width, scaled_height;    // final resolutionWebPDecoderOptions::scaled_height444,20662
  int use_threads;                    // if true, use multi-threaded decodinguse_threads445,20720
  int use_threads;                    // if true, use multi-threaded decodingWebPDecoderOptions::use_threads445,20720
  int dithering_strength;             // dithering strength (0=Off, 100=full)dithering_strength446,20798
  int dithering_strength;             // dithering strength (0=Off, 100=full)WebPDecoderOptions::dithering_strength446,20798
  int flip;                           // flip output verticallyflip447,20876
  int flip;                           // flip output verticallyWebPDecoderOptions::flip447,20876
  int alpha_dithering_strength;       // alpha dithering strength in [0..100]alpha_dithering_strength448,20940
  int alpha_dithering_strength;       // alpha dithering strength in [0..100]WebPDecoderOptions::alpha_dithering_strength448,20940
  uint32_t pad[5];                    // padding for later usepad450,21019
  uint32_t pad[5];                    // padding for later useWebPDecoderOptions::pad450,21019
struct WebPDecoderConfig {WebPDecoderConfig454,21150
  WebPBitstreamFeatures input;  // Immutable bitstream features (optional)input455,21177
  WebPBitstreamFeatures input;  // Immutable bitstream features (optional)WebPDecoderConfig::input455,21177
  WebPDecBuffer output;         // Output buffer (can point to external mem)output456,21252
  WebPDecBuffer output;         // Output buffer (can point to external mem)WebPDecoderConfig::output456,21252
  WebPDecoderOptions options;   // Decoding optionsoptions457,21329
  WebPDecoderOptions options;   // Decoding optionsWebPDecoderConfig::options457,21329
WEBP_EXTERN int WebPInitDecoderConfigInternal(WebPDecoderConfig*, int);WebPInitDecoderConfigInternal461,21427
static WEBP_INLINE int WebPInitDecoderConfig(WebPDecoderConfig* config) {WebPInitDecoderConfig466,21678
WEBP_EXTERN WebPIDecoder* WebPIDecode(const uint8_t* data, size_t data_size,WebPIDecode481,22553
WEBP_EXTERN VP8StatusCode WebPDecode(const uint8_t* data, size_t data_size,WebPDecode487,22928

src/webp/format_constants.h,2591
#define WEBP_WEBP_FORMAT_CONSTANTS_H_WEBP_WEBP_FORMAT_CONSTANTS_H_15,606
#define MKFOURCC(MKFOURCC18,706
#define VP8_SIGNATURE VP8_SIGNATURE21,813
#define VP8_MAX_PARTITION0_SIZE VP8_MAX_PARTITION0_SIZE22,883
#define VP8_MAX_PARTITION_SIZE VP8_MAX_PARTITION_SIZE23,957
#define VP8_FRAME_HEADER_SIZE VP8_FRAME_HEADER_SIZE24,1033
#define VP8L_SIGNATURE_SIZE VP8L_SIGNATURE_SIZE27,1140
#define VP8L_MAGIC_BYTE VP8L_MAGIC_BYTE28,1208
#define VP8L_IMAGE_SIZE_BITS VP8L_IMAGE_SIZE_BITS29,1276
#define VP8L_VERSION_BITS VP8L_VERSION_BITS31,1417
#define VP8L_VERSION VP8L_VERSION32,1493
#define VP8L_FRAME_HEADER_SIZE VP8L_FRAME_HEADER_SIZE33,1550
#define MAX_PALETTE_SIZE MAX_PALETTE_SIZE35,1629
#define MAX_CACHE_BITS MAX_CACHE_BITS36,1670
#define HUFFMAN_CODES_PER_META_CODE HUFFMAN_CODES_PER_META_CODE37,1710
#define ARGB_BLACK ARGB_BLACK38,1749
#define DEFAULT_CODE_LENGTH DEFAULT_CODE_LENGTH40,1798
#define MAX_ALLOWED_CODE_LENGTH MAX_ALLOWED_CODE_LENGTH41,1837
#define NUM_LITERAL_CODES NUM_LITERAL_CODES43,1878
#define NUM_LENGTH_CODES NUM_LENGTH_CODES44,1919
#define NUM_DISTANCE_CODES NUM_DISTANCE_CODES45,1959
#define CODE_LENGTH_CODES CODE_LENGTH_CODES46,1999
#define MIN_HUFFMAN_BITS MIN_HUFFMAN_BITS48,2040
#define MAX_HUFFMAN_BITS MAX_HUFFMAN_BITS49,2110
#define TRANSFORM_PRESENT TRANSFORM_PRESENT51,2181
#define NUM_TRANSFORMS NUM_TRANSFORMS53,2331
  PREDICTOR_TRANSFORM      = 0,PREDICTOR_TRANSFORM56,2484
  CROSS_COLOR_TRANSFORM    = 1,CROSS_COLOR_TRANSFORM57,2516
  SUBTRACT_GREEN           = 2,SUBTRACT_GREEN58,2548
  COLOR_INDEXING_TRANSFORM = 3COLOR_INDEXING_TRANSFORM59,2580
} VP8LImageTransformType;VP8LImageTransformType60,2611
#define ALPHA_HEADER_LEN ALPHA_HEADER_LEN63,2666
#define ALPHA_NO_COMPRESSION ALPHA_NO_COMPRESSION64,2704
#define ALPHA_LOSSLESS_COMPRESSION ALPHA_LOSSLESS_COMPRESSION65,2742
#define ALPHA_PREPROCESSED_LEVELS ALPHA_PREPROCESSED_LEVELS66,2780
#define TAG_SIZE TAG_SIZE69,2845
#define CHUNK_SIZE_BYTES CHUNK_SIZE_BYTES70,2916
#define CHUNK_HEADER_SIZE CHUNK_HEADER_SIZE71,2987
#define RIFF_HEADER_SIZE RIFF_HEADER_SIZE72,3047
#define ANMF_CHUNK_SIZE ANMF_CHUNK_SIZE73,3125
#define ANIM_CHUNK_SIZE ANIM_CHUNK_SIZE74,3184
#define VP8X_CHUNK_SIZE VP8X_CHUNK_SIZE75,3243
#define MAX_CANVAS_SIZE MAX_CANVAS_SIZE77,3302
#define MAX_IMAGE_AREA MAX_IMAGE_AREA78,3381
#define MAX_LOOP_COUNT MAX_LOOP_COUNT79,3457
#define MAX_DURATION MAX_DURATION80,3531
#define MAX_POSITION_OFFSET MAX_POSITION_OFFSET81,3593
#define MAX_CHUNK_PAYLOAD MAX_CHUNK_PAYLOAD85,3762

src/webp/types.h,710
#define WEBP_WEBP_TYPES_H_WEBP_WEBP_TYPES_H_15,556
#define WEBP_INLINE WEBP_INLINE23,781
#define WEBP_INLINEWEBP_INLINE25,814
typedef signed   char int8_t;int8_t28,847
typedef unsigned char uint8_t;uint8_t29,877
typedef signed   short int16_t;int16_t30,908
typedef unsigned short uint16_t;uint16_t31,940
typedef signed   int int32_t;int32_t32,973
typedef unsigned int uint32_t;uint32_t33,1003
typedef unsigned long long int uint64_t;uint64_t34,1034
typedef long long int int64_t;int64_t35,1075
#define WEBP_INLINE WEBP_INLINE36,1106
#  define WEBP_EXTERN WEBP_EXTERN43,1338
#  define WEBP_EXTERN WEBP_EXTERN45,1415
#define WEBP_ABI_IS_INCOMPATIBLE(WEBP_ABI_IS_INCOMPATIBLE50,1565

src/webp/encode.h,22318
#define WEBP_WEBP_ENCODE_H_WEBP_WEBP_ENCODE_H_15,574
#define WEBP_ENCODER_ABI_VERSION WEBP_ENCODER_ABI_VERSION23,665
typedef struct WebPConfig WebPConfig;WebPConfig31,1030
typedef struct WebPPicture WebPPicture;   // main structure for I/OWebPPicture32,1068
typedef struct WebPAuxStats WebPAuxStats;WebPAuxStats33,1136
typedef struct WebPMemoryWriter WebPMemoryWriter;WebPMemoryWriter34,1178
WEBP_EXTERN int WebPGetEncoderVersion(void);WebPGetEncoderVersion38,1365
WEBP_EXTERN size_t WebPEncodeRGB(const uint8_t* rgb,WebPEncodeRGB49,1889
WEBP_EXTERN size_t WebPEncodeBGR(const uint8_t* bgr,WebPEncodeBGR52,2084
WEBP_EXTERN size_t WebPEncodeRGBA(const uint8_t* rgba,WebPEncodeRGBA55,2279
WEBP_EXTERN size_t WebPEncodeBGRA(const uint8_t* bgra,WebPEncodeBGRA58,2478
WEBP_EXTERN size_t WebPEncodeLosslessRGB(const uint8_t* rgb,WebPEncodeLosslessRGB65,2860
WEBP_EXTERN size_t WebPEncodeLosslessBGR(const uint8_t* bgr,WebPEncodeLosslessBGR68,3057
WEBP_EXTERN size_t WebPEncodeLosslessRGBA(const uint8_t* rgba,WebPEncodeLosslessRGBA71,3254
WEBP_EXTERN size_t WebPEncodeLosslessBGRA(const uint8_t* bgra,WebPEncodeLosslessBGRA74,3455
WEBP_EXTERN void WebPFree(void* ptr);WebPFree79,3723
typedef enum WebPImageHint {WebPImageHint85,3923
  WEBP_HINT_DEFAULT = 0,  // default preset.WEBP_HINT_DEFAULT86,3952
  WEBP_HINT_PICTURE,      // digital picture, like portrait, inner shotWEBP_HINT_PICTURE87,3997
  WEBP_HINT_PHOTO,        // outdoor photograph, with natural lightingWEBP_HINT_PHOTO88,4069
  WEBP_HINT_GRAPH,        // Discrete tone image (graph, map-tile etc).WEBP_HINT_GRAPH89,4140
  WEBP_HINT_LASTWEBP_HINT_LAST90,4212
} WebPImageHint;WebPImageHint91,4229
struct WebPConfig {WebPConfig94,4274
  int lossless;           // Lossless encoding (0=lossy(default), 1=lossless).lossless95,4294
  int lossless;           // Lossless encoding (0=lossy(default), 1=lossless).WebPConfig::lossless95,4294
  float quality;          // between 0 and 100. For lossy, 0 gives the smallestquality96,4373
  float quality;          // between 0 and 100. For lossy, 0 gives the smallestWebPConfig::quality96,4373
  int method;             // quality/speed trade-off (0=fast, 6=slower-better)method101,4754
  int method;             // quality/speed trade-off (0=fast, 6=slower-better)WebPConfig::method101,4754
  WebPImageHint image_hint;  // Hint for image type (lossless only for now).image_hint103,4834
  WebPImageHint image_hint;  // Hint for image type (lossless only for now).WebPConfig::image_hint103,4834
  int target_size;        // if non-zero, set the desired target size in bytes.target_size105,4912
  int target_size;        // if non-zero, set the desired target size in bytes.WebPConfig::target_size105,4912
  float target_PSNR;      // if non-zero, specifies the minimal distortion totarget_PSNR107,5072
  float target_PSNR;      // if non-zero, specifies the minimal distortion toWebPConfig::target_PSNR107,5072
  int segments;           // maximum number of segments to use, in [1..4]segments109,5230
  int segments;           // maximum number of segments to use, in [1..4]WebPConfig::segments109,5230
  int sns_strength;       // Spatial Noise Shaping. 0=off, 100=maximum.sns_strength110,5304
  int sns_strength;       // Spatial Noise Shaping. 0=off, 100=maximum.WebPConfig::sns_strength110,5304
  int filter_strength;    // range: [0 = off .. 100 = strongest]filter_strength111,5376
  int filter_strength;    // range: [0 = off .. 100 = strongest]WebPConfig::filter_strength111,5376
  int filter_sharpness;   // range: [0 = off .. 7 = least sharp]filter_sharpness112,5441
  int filter_sharpness;   // range: [0 = off .. 7 = least sharp]WebPConfig::filter_sharpness112,5441
  int filter_type;        // filtering type: 0 = simple, 1 = strong (only usedfilter_type113,5506
  int filter_type;        // filtering type: 0 = simple, 1 = strong (only usedWebPConfig::filter_type113,5506
  int autofilter;         // Auto adjust filter's strength [0 = off, 1 = on]autofilter115,5656
  int autofilter;         // Auto adjust filter's strength [0 = off, 1 = on]WebPConfig::autofilter115,5656
  int alpha_compression;  // Algorithm for encoding the alpha plane (0 = none,alpha_compression116,5733
  int alpha_compression;  // Algorithm for encoding the alpha plane (0 = none,WebPConfig::alpha_compression116,5733
  int alpha_filtering;    // Predictive filtering method for alpha plane.alpha_filtering118,5891
  int alpha_filtering;    // Predictive filtering method for alpha plane.WebPConfig::alpha_filtering118,5891
  int alpha_quality;      // Between 0 (smallest size) and 100 (lossless).alpha_quality120,6036
  int alpha_quality;      // Between 0 (smallest size) and 100 (lossless).WebPConfig::alpha_quality120,6036
  int pass;               // number of entropy-analysis passes (in [1..10]).pass122,6156
  int pass;               // number of entropy-analysis passes (in [1..10]).WebPConfig::pass122,6156
  int show_compressed;    // if true, export the compressed picture back.show_compressed124,6234
  int show_compressed;    // if true, export the compressed picture back.WebPConfig::show_compressed124,6234
  int preprocessing;      // preprocessing filter:preprocessing126,6371
  int preprocessing;      // preprocessing filter:WebPConfig::preprocessing126,6371
  int partitions;         // log2(number of token partitions) in [0..3]. Defaultpartitions128,6503
  int partitions;         // log2(number of token partitions) in [0..3]. DefaultWebPConfig::partitions128,6503
  int partition_limit;    // quality degradation allowed to fit the 512k limitpartition_limit130,6658
  int partition_limit;    // quality degradation allowed to fit the 512k limitWebPConfig::partition_limit130,6658
  int emulate_jpeg_size;  // If true, compression parameters will be remappedemulate_jpeg_size133,6878
  int emulate_jpeg_size;  // If true, compression parameters will be remappedWebPConfig::emulate_jpeg_size133,6878
  int thread_level;       // If non-zero, try and use multi-threaded encoding.thread_level137,7185
  int thread_level;       // If non-zero, try and use multi-threaded encoding.WebPConfig::thread_level137,7185
  int low_memory;         // If set, reduce memory usage (but increase CPU use).low_memory138,7264
  int low_memory;         // If set, reduce memory usage (but increase CPU use).WebPConfig::low_memory138,7264
  int near_lossless;      // Near lossless encoding [0 = max loss .. 100 = offnear_lossless140,7346
  int near_lossless;      // Near lossless encoding [0 = max loss .. 100 = offWebPConfig::near_lossless140,7346
  int exact;              // if non-zero, preserve the exact RGB values underexact142,7466
  int exact;              // if non-zero, preserve the exact RGB values underWebPConfig::exact142,7466
  int use_delta_palette;  // reserved for future lossless featureuse_delta_palette147,7748
  int use_delta_palette;  // reserved for future lossless featureWebPConfig::use_delta_palette147,7748
  int use_sharp_yuv;      // if needed, use sharp (and slow) RGB->YUV conversionuse_sharp_yuv148,7814
  int use_sharp_yuv;      // if needed, use sharp (and slow) RGB->YUV conversionWebPConfig::use_sharp_yuv148,7814
  uint32_t pad[2];        // padding for later usepad150,7896
  uint32_t pad[2];        // padding for later useWebPConfig::pad150,7896
typedef enum WebPPreset {WebPPreset155,8105
  WEBP_PRESET_DEFAULT = 0,  // default preset.WEBP_PRESET_DEFAULT156,8131
  WEBP_PRESET_PICTURE,      // digital picture, like portrait, inner shotWEBP_PRESET_PICTURE157,8178
  WEBP_PRESET_PHOTO,        // outdoor photograph, with natural lightingWEBP_PRESET_PHOTO158,8252
  WEBP_PRESET_DRAWING,      // hand or line drawing, with high-contrast detailsWEBP_PRESET_DRAWING159,8325
  WEBP_PRESET_ICON,         // small-sized colorful imagesWEBP_PRESET_ICON160,8405
  WEBP_PRESET_TEXT          // text-likeWEBP_PRESET_TEXT161,8464
} WebPPreset;WebPPreset162,8505
WEBP_EXTERN int WebPConfigInitInternal(WebPConfig*, WebPPreset, float, int);WebPConfigInitInternal165,8562
static WEBP_INLINE int WebPConfigInit(WebPConfig* config) {WebPConfigInit171,8915
static WEBP_INLINE int WebPConfigPreset(WebPConfig* config,WebPConfigPreset180,9364
WEBP_EXTERN int WebPConfigLosslessPreset(WebPConfig* config, int level);WebPConfigLosslessPreset192,10027
WEBP_EXTERN int WebPValidateConfig(const WebPConfig* config);WebPValidateConfig196,10208
struct WebPAuxStats {WebPAuxStats202,10418
  int coded_size;         // final sizecoded_size203,10440
  int coded_size;         // final sizeWebPAuxStats::coded_size203,10440
  float PSNR[5];          // peak-signal-to-noise ratio for Y/U/V/All/AlphaPSNR205,10481
  float PSNR[5];          // peak-signal-to-noise ratio for Y/U/V/All/AlphaWebPAuxStats::PSNR205,10481
  int block_count[3];     // number of intra4/intra16/skipped macroblocksblock_count206,10557
  int block_count[3];     // number of intra4/intra16/skipped macroblocksWebPAuxStats::block_count206,10557
  int header_bytes[2];    // approximate number of bytes spent for headerheader_bytes207,10631
  int header_bytes[2];    // approximate number of bytes spent for headerWebPAuxStats::header_bytes207,10631
  int residual_bytes[3][4];  // approximate number of bytes spent forresidual_bytes209,10756
  int residual_bytes[3][4];  // approximate number of bytes spent forWebPAuxStats::residual_bytes209,10756
  int segment_size[4];    // number of macroblocks in each segmentssegment_size211,10906
  int segment_size[4];    // number of macroblocks in each segmentsWebPAuxStats::segment_size211,10906
  int segment_quant[4];   // quantizer values for each segmentssegment_quant212,10974
  int segment_quant[4];   // quantizer values for each segmentsWebPAuxStats::segment_quant212,10974
  int segment_level[4];   // filtering strength for each segments [0..63]segment_level213,11038
  int segment_level[4];   // filtering strength for each segments [0..63]WebPAuxStats::segment_level213,11038
  int alpha_data_size;    // size of the transparency dataalpha_data_size215,11113
  int alpha_data_size;    // size of the transparency dataWebPAuxStats::alpha_data_size215,11113
  int layer_data_size;    // size of the enhancement layer datalayer_data_size216,11172
  int layer_data_size;    // size of the enhancement layer dataWebPAuxStats::layer_data_size216,11172
  uint32_t lossless_features;  // bit0:predictor bit1:cross-color transformlossless_features219,11270
  uint32_t lossless_features;  // bit0:predictor bit1:cross-color transformWebPAuxStats::lossless_features219,11270
  int histogram_bits;          // number of precision bits of histogramhistogram_bits221,11420
  int histogram_bits;          // number of precision bits of histogramWebPAuxStats::histogram_bits221,11420
  int transform_bits;          // precision bits for transformtransform_bits222,11492
  int transform_bits;          // precision bits for transformWebPAuxStats::transform_bits222,11492
  int cache_bits;              // number of bits for color cache lookupcache_bits223,11555
  int cache_bits;              // number of bits for color cache lookupWebPAuxStats::cache_bits223,11555
  int palette_size;            // number of color in palette, if usedpalette_size224,11627
  int palette_size;            // number of color in palette, if usedWebPAuxStats::palette_size224,11627
  int lossless_size;           // final lossless sizelossless_size225,11697
  int lossless_size;           // final lossless sizeWebPAuxStats::lossless_size225,11697
  int lossless_hdr_size;       // lossless header (transform, huffman etc) sizelossless_hdr_size226,11751
  int lossless_hdr_size;       // lossless header (transform, huffman etc) sizeWebPAuxStats::lossless_hdr_size226,11751
  int lossless_data_size;      // lossless image data sizelossless_data_size227,11831
  int lossless_data_size;      // lossless image data sizeWebPAuxStats::lossless_data_size227,11831
  uint32_t pad[2];        // padding for later usepad229,11891
  uint32_t pad[2];        // padding for later useWebPAuxStats::pad229,11891
typedef int (*WebPWriterFunction)(const uint8_t* data, size_t data_size,WebPWriterFunction235,12161
struct WebPMemoryWriter {WebPMemoryWriter240,12445
  uint8_t* mem;       // final buffer (of size 'max_size', larger than 'size').mem241,12471
  uint8_t* mem;       // final buffer (of size 'max_size', larger than 'size').WebPMemoryWriter::mem241,12471
  size_t   size;      // final sizesize242,12551
  size_t   size;      // final sizeWebPMemoryWriter::size242,12551
  size_t   max_size;  // total capacitymax_size243,12587
  size_t   max_size;  // total capacityWebPMemoryWriter::max_size243,12587
  uint32_t pad[1];    // padding for later usepad244,12627
  uint32_t pad[1];    // padding for later useWebPMemoryWriter::pad244,12627
WEBP_EXTERN void WebPMemoryWriterInit(WebPMemoryWriter* writer);WebPMemoryWriterInit248,12732
WEBP_EXTERN void WebPMemoryWriterClear(WebPMemoryWriter* writer);WebPMemoryWriterClear252,12914
WEBP_EXTERN int WebPMemoryWrite(const uint8_t* data, size_t data_size,WebPMemoryWrite256,13184
typedef int (*WebPProgressHook)(int percent, const WebPPicture* picture);WebPProgressHook262,13490
typedef enum WebPEncCSP {WebPEncCSP265,13582
  WEBP_YUV420  = 0,        // 4:2:0WEBP_YUV420267,13629
  WEBP_YUV420A = 4,        // alpha channel variantWEBP_YUV420A268,13665
  WEBP_CSP_UV_MASK = 3,    // bit-mask to get the UV sampling factorsWEBP_CSP_UV_MASK269,13717
  WEBP_CSP_ALPHA_BIT = 4   // bit that is set if alpha is presentWEBP_CSP_ALPHA_BIT270,13787
} WebPEncCSP;WebPEncCSP271,13853
typedef enum WebPEncodingError {WebPEncodingError274,13898
  VP8_ENC_OK = 0,VP8_ENC_OK275,13931
  VP8_ENC_ERROR_OUT_OF_MEMORY,            // memory error allocating objectsVP8_ENC_ERROR_OUT_OF_MEMORY276,13949
  VP8_ENC_ERROR_BITSTREAM_OUT_OF_MEMORY,  // memory error while flushing bitsVP8_ENC_ERROR_BITSTREAM_OUT_OF_MEMORY277,14026
  VP8_ENC_ERROR_NULL_PARAMETER,           // a pointer parameter is NULLVP8_ENC_ERROR_NULL_PARAMETER278,14104
  VP8_ENC_ERROR_INVALID_CONFIGURATION,    // configuration is invalidVP8_ENC_ERROR_INVALID_CONFIGURATION279,14177
  VP8_ENC_ERROR_BAD_DIMENSION,            // picture has invalid width/heightVP8_ENC_ERROR_BAD_DIMENSION280,14247
  VP8_ENC_ERROR_PARTITION0_OVERFLOW,      // partition is bigger than 512kVP8_ENC_ERROR_PARTITION0_OVERFLOW281,14325
  VP8_ENC_ERROR_PARTITION_OVERFLOW,       // partition is bigger than 16MVP8_ENC_ERROR_PARTITION_OVERFLOW282,14400
  VP8_ENC_ERROR_BAD_WRITE,                // error while flushing bytesVP8_ENC_ERROR_BAD_WRITE283,14474
  VP8_ENC_ERROR_FILE_TOO_BIG,             // file is bigger than 4GVP8_ENC_ERROR_FILE_TOO_BIG284,14546
  VP8_ENC_ERROR_USER_ABORT,               // abort request by userVP8_ENC_ERROR_USER_ABORT285,14614
  VP8_ENC_ERROR_LAST                      // list terminator. always last.VP8_ENC_ERROR_LAST286,14681
} WebPEncodingError;WebPEncodingError287,14756
#define WEBP_MAX_DIMENSION WEBP_MAX_DIMENSION290,14833
struct WebPPicture {WebPPicture293,14936
  int use_argb;use_argb300,15272
  int use_argb;WebPPicture::use_argb300,15272
  WebPEncCSP colorspace;     // colorspace: should be YUV420 for now (=Y'CbCr).colorspace303,15349
  WebPEncCSP colorspace;     // colorspace: should be YUV420 for now (=Y'CbCr).WebPPicture::colorspace303,15349
  int width, height;         // dimensions (less or equal to WEBP_MAX_DIMENSION)width304,15429
  int width, height;         // dimensions (less or equal to WEBP_MAX_DIMENSION)WebPPicture::width304,15429
  int width, height;         // dimensions (less or equal to WEBP_MAX_DIMENSION)height304,15429
  int width, height;         // dimensions (less or equal to WEBP_MAX_DIMENSION)WebPPicture::height304,15429
  uint8_t *y, *u, *v;        // pointers to luma/chroma planes.y305,15510
  uint8_t *y, *u, *v;        // pointers to luma/chroma planes.WebPPicture::y305,15510
  uint8_t *y, *u, *v;        // pointers to luma/chroma planes.u305,15510
  uint8_t *y, *u, *v;        // pointers to luma/chroma planes.WebPPicture::u305,15510
  uint8_t *y, *u, *v;        // pointers to luma/chroma planes.v305,15510
  uint8_t *y, *u, *v;        // pointers to luma/chroma planes.WebPPicture::v305,15510
  int y_stride, uv_stride;   // luma/chroma strides.y_stride306,15574
  int y_stride, uv_stride;   // luma/chroma strides.WebPPicture::y_stride306,15574
  int y_stride, uv_stride;   // luma/chroma strides.uv_stride306,15574
  int y_stride, uv_stride;   // luma/chroma strides.WebPPicture::uv_stride306,15574
  uint8_t* a;                // pointer to the alpha planea307,15627
  uint8_t* a;                // pointer to the alpha planeWebPPicture::a307,15627
  int a_stride;              // stride of the alpha planea_stride308,15686
  int a_stride;              // stride of the alpha planeWebPPicture::a_stride308,15686
  uint32_t pad1[2];          // padding for later usepad1309,15744
  uint32_t pad1[2];          // padding for later useWebPPicture::pad1309,15744
  uint32_t* argb;            // Pointer to argb (32 bit) plane.argb312,15863
  uint32_t* argb;            // Pointer to argb (32 bit) plane.WebPPicture::argb312,15863
  int argb_stride;           // This is stride in pixels units, not bytes.argb_stride313,15927
  int argb_stride;           // This is stride in pixels units, not bytes.WebPPicture::argb_stride313,15927
  uint32_t pad2[3];          // padding for later usepad2314,16002
  uint32_t pad2[3];          // padding for later useWebPPicture::pad2314,16002
  WebPWriterFunction writer;  // can be NULLwriter319,16159
  WebPWriterFunction writer;  // can be NULLWebPPicture::writer319,16159
  void* custom_ptr;           // can be used by the writer.custom_ptr320,16204
  void* custom_ptr;           // can be used by the writer.WebPPicture::custom_ptr320,16204
  int extra_info_type;    // 1: intra type, 2: segment, 3: quantextra_info_type323,16330
  int extra_info_type;    // 1: intra type, 2: segment, 3: quantWebPPicture::extra_info_type323,16330
  uint8_t* extra_info;    // if not NULL, points to an array of sizeextra_info327,16565
  uint8_t* extra_info;    // if not NULL, points to an array of sizeWebPPicture::extra_info327,16565
  WebPAuxStats* stats;stats335,16952
  WebPAuxStats* stats;WebPPicture::stats335,16952
  WebPEncodingError error_code;error_code338,17041
  WebPEncodingError error_code;WebPPicture::error_code338,17041
  WebPProgressHook progress_hook;progress_hook341,17125
  WebPProgressHook progress_hook;WebPPicture::progress_hook341,17125
  void* user_data;        // this field is free to be set to any value anduser_data343,17160
  void* user_data;        // this field is free to be set to any value andWebPPicture::user_data343,17160
  uint32_t pad3[3];       // padding for later usepad3346,17316
  uint32_t pad3[3];       // padding for later useWebPPicture::pad3346,17316
  uint8_t *pad4, *pad5;pad4349,17388
  uint8_t *pad4, *pad5;WebPPicture::pad4349,17388
  uint8_t *pad4, *pad5;pad5349,17388
  uint8_t *pad4, *pad5;WebPPicture::pad5349,17388
  uint32_t pad6[8];       // padding for later usepad6350,17412
  uint32_t pad6[8];       // padding for later useWebPPicture::pad6350,17412
  void* memory_;          // row chunk of memory for yuva planesmemory_354,17507
  void* memory_;          // row chunk of memory for yuva planesWebPPicture::memory_354,17507
  void* memory_argb_;     // and for argb too.memory_argb_355,17572
  void* memory_argb_;     // and for argb too.WebPPicture::memory_argb_355,17572
  void* pad7[2];          // padding for later usepad7356,17619
  void* pad7[2];          // padding for later useWebPPicture::pad7356,17619
WEBP_EXTERN int WebPPictureInitInternal(WebPPicture*, int);WebPPictureInitInternal360,17716
static WEBP_INLINE int WebPPictureInit(WebPPicture* picture) {WebPPictureInit366,18031
WEBP_EXTERN int WebPPictureAlloc(WebPPicture* picture);WebPPictureAlloc377,18520
WEBP_EXTERN void WebPPictureFree(WebPPicture* picture);WebPPictureFree384,18837
WEBP_EXTERN int WebPPictureCopy(const WebPPicture* src, WebPPicture* dst);WebPPictureCopy390,19161
WEBP_EXTERN int WebPPlaneDistortion(const uint8_t* src, size_t src_stride,WebPPlaneDistortion399,19671
WEBP_EXTERN int WebPPictureDistortion(WebPPictureDistortion411,20439
WEBP_EXTERN int WebPPictureCrop(WebPPicture* picture,WebPPictureCrop424,21126
WEBP_EXTERN int WebPPictureView(const WebPPicture* src,WebPPictureView438,22040
WEBP_EXTERN int WebPPictureIsView(const WebPPicture* picture);WebPPictureIsView444,22327
WEBP_EXTERN int WebPPictureRescale(WebPPicture* pic, int width, int height);WebPPictureRescale451,22690
WEBP_EXTERN int WebPPictureImportRGB(WebPPictureImportRGB457,22977
WEBP_EXTERN int WebPPictureImportRGBA(WebPPictureImportRGBA460,23108
WEBP_EXTERN int WebPPictureImportRGBX(WebPPictureImportRGBX465,23424
WEBP_EXTERN int WebPPictureImportBGR(WebPPictureImportBGR469,23582
WEBP_EXTERN int WebPPictureImportBGRA(WebPPictureImportBGRA471,23683
WEBP_EXTERN int WebPPictureImportBGRX(WebPPictureImportBGRX473,23787
WEBP_EXTERN int WebPPictureARGBToYUVA(WebPPicture* picture,WebPPictureARGBToYUVA482,24261
WEBP_EXTERN int WebPPictureARGBToYUVADithered(WebPPictureARGBToYUVADithered489,24629
WEBP_EXTERN int WebPPictureSharpARGBToYUVA(WebPPicture* picture);WebPPictureSharpARGBToYUVA497,25043
WEBP_EXTERN int WebPPictureSmartARGBToYUVA(WebPPicture* picture);WebPPictureSmartARGBToYUVA499,25145
WEBP_EXTERN int WebPPictureYUVAToARGB(WebPPicture* picture);WebPPictureYUVAToARGB507,25581
WEBP_EXTERN void WebPCleanupTransparentArea(WebPPicture* picture);WebPCleanupTransparentArea512,25846
WEBP_EXTERN int WebPPictureHasTransparency(const WebPPicture* picture);WebPPictureHasTransparency517,26118
WEBP_EXTERN void WebPBlendAlpha(WebPPicture* pic, uint32_t background_rgb);WebPBlendAlpha522,26401
WEBP_EXTERN int WebPEncode(const WebPConfig* config, WebPPicture* picture);WebPEncode537,27242

src/mux/muxinternal.c,3201
#define UNDEFINED_CHUNK_SIZE UNDEFINED_CHUNK_SIZE19,659
const ChunkInfo kChunks[] = {kChunks21,706
int WebPGetMuxVersion(void) {WebPGetMuxVersion38,1676
void ChunkInit(WebPChunk* const chunk) {ChunkInit45,1895
WebPChunk* ChunkRelease(WebPChunk* const chunk) {ChunkRelease51,2017
CHUNK_INDEX ChunkGetIndexFromTag(uint32_t tag) {ChunkGetIndexFromTag65,2347
WebPChunkId ChunkGetIdFromTag(uint32_t tag) {ChunkGetIdFromTag73,2536
uint32_t ChunkGetTagFromFourCC(const char fourcc[4]) {ChunkGetTagFromFourCC81,2728
CHUNK_INDEX ChunkGetIndexFromFourCC(const char fourcc[4]) {ChunkGetIndexFromFourCC85,2849
static WebPChunk* ChunkSearchNextInList(WebPChunk* chunk, uint32_t tag) {ChunkSearchNextInList94,3169
WebPChunk* ChunkSearchList(WebPChunk* first, uint32_t nth, uint32_t tag) {ChunkSearchList101,3340
static int ChunkSearchListToSet(WebPChunk** chunk_list, uint32_t nth,ChunkSearchListToSet117,3889
WebPMuxError ChunkAssignData(WebPChunk* chunk, const WebPData* const data,ChunkAssignData138,4527
WebPMuxError ChunkSetNth(WebPChunk* chunk, WebPChunk** chunk_list,ChunkSetNth159,5187
WebPChunk* ChunkDelete(WebPChunk* const chunk) {ChunkDelete179,5781
void ChunkListDelete(WebPChunk** const chunk_list) {ChunkListDelete185,5918
static uint8_t* ChunkEmit(const WebPChunk* const chunk, uint8_t* dst) {ChunkEmit194,6168
uint8_t* ChunkListEmit(const WebPChunk* chunk_list, uint8_t* dst) {ChunkListEmit207,6657
size_t ChunkListDiskSize(const WebPChunk* chunk_list) {ChunkListDiskSize215,6851
void MuxImageInit(WebPMuxImage* const wpi) {MuxImageInit227,7166
WebPMuxImage* MuxImageRelease(WebPMuxImage* const wpi) {MuxImageRelease232,7261
static WebPChunk** GetChunkListFromId(const WebPMuxImage* const wpi,GetChunkListFromId249,7739
int MuxImageCount(const WebPMuxImage* wpi_list, WebPChunkId id) {MuxImageCount260,8118
static int SearchImageToGetOrDelete(WebPMuxImage** wpi_list, uint32_t nth,SearchImageToGetOrDelete280,8856
WebPMuxError MuxImagePush(const WebPMuxImage* wpi, WebPMuxImage** wpi_list) {MuxImagePush304,9519
WebPMuxImage* MuxImageDelete(WebPMuxImage* const wpi) {MuxImageDelete329,10177
WebPMuxError MuxImageDeleteNth(WebPMuxImage** wpi_list, uint32_t nth) {MuxImageDeleteNth336,10389
WebPMuxError MuxImageGetNth(const WebPMuxImage** wpi_list, uint32_t nth,MuxImageGetNth348,10753
size_t MuxImageDiskSize(const WebPMuxImage* const wpi) {MuxImageDiskSize364,11270
static uint8_t* ChunkEmitSpecial(const WebPChunk* const header,ChunkEmitSpecial374,11685
uint8_t* MuxImageEmit(const WebPMuxImage* const wpi, uint8_t* dst) {MuxImageEmit389,12316
int MuxHasAlpha(const WebPMuxImage* images) {MuxHasAlpha407,12972
uint8_t* MuxEmitRiffHeader(uint8_t* const data, size_t size) {MuxEmitRiffHeader415,13130
WebPChunk** MuxGetChunkListFromId(const WebPMux* mux, WebPChunkId id) {MuxGetChunkListFromId423,13456
static int IsNotCompatible(int feature, int num_items) {IsNotCompatible435,13948
#define NO_FLAG NO_FLAG439,14052
static WebPMuxError ValidateChunk(const WebPMux* const mux, CHUNK_INDEX idx,ValidateChunk445,14307
WebPMuxError MuxValidate(const WebPMux* const mux) {MuxValidate459,14876
#undef NO_FLAGNO_FLAG548,17843

src/mux/animi.h,116
#define WEBP_MUX_ANIMI_H_WEBP_MUX_ANIMI_H_15,582
int WebPAnimEncoderRefineRect(WebPAnimEncoderRefineRect33,1260

src/mux/anim_encode.c,14464
#define snprintf snprintf27,848
#define ERROR_STR_MAX_LENGTH ERROR_STR_MAX_LENGTH30,883
  int x_offset_, y_offset_, width_, height_;x_offset_37,1075
  int x_offset_, y_offset_, width_, height_;__anon85::x_offset_37,1075
  int x_offset_, y_offset_, width_, height_;y_offset_37,1075
  int x_offset_, y_offset_, width_, height_;__anon85::y_offset_37,1075
  int x_offset_, y_offset_, width_, height_;width_37,1075
  int x_offset_, y_offset_, width_, height_;__anon85::width_37,1075
  int x_offset_, y_offset_, width_, height_;height_37,1075
  int x_offset_, y_offset_, width_, height_;__anon85::height_37,1075
} FrameRectangle;FrameRectangle38,1120
  WebPMuxFrameInfo sub_frame_;  // Encoded frame rectangle.sub_frame_43,1268
  WebPMuxFrameInfo sub_frame_;  // Encoded frame rectangle.__anon86::sub_frame_43,1268
  WebPMuxFrameInfo key_frame_;  // Encoded frame if it is a key-frame.key_frame_44,1328
  WebPMuxFrameInfo key_frame_;  // Encoded frame if it is a key-frame.__anon86::key_frame_44,1328
  int is_key_frame_;            // True if 'key_frame' has been chosen.is_key_frame_45,1399
  int is_key_frame_;            // True if 'key_frame' has been chosen.__anon86::is_key_frame_45,1399
} EncodedFrame;EncodedFrame46,1471
struct WebPAnimEncoder {WebPAnimEncoder48,1488
  const int canvas_width_;                  // Canvas width.canvas_width_49,1513
  const int canvas_width_;                  // Canvas width.WebPAnimEncoder::canvas_width_49,1513
  const int canvas_height_;                 // Canvas height.canvas_height_50,1574
  const int canvas_height_;                 // Canvas height.WebPAnimEncoder::canvas_height_50,1574
  const WebPAnimEncoderOptions options_;    // Global encoding options.options_51,1636
  const WebPAnimEncoderOptions options_;    // Global encoding options.WebPAnimEncoder::options_51,1636
  FrameRectangle prev_rect_;          // Previous WebP frame rectangle.prev_rect_53,1709
  FrameRectangle prev_rect_;          // Previous WebP frame rectangle.WebPAnimEncoder::prev_rect_53,1709
  WebPConfig last_config_;            // Cached in case a re-encode is needed.last_config_54,1781
  WebPConfig last_config_;            // Cached in case a re-encode is needed.WebPAnimEncoder::last_config_54,1781
  WebPConfig last_config_reversed_;   // If 'last_config_' uses lossless, thenlast_config_reversed_55,1860
  WebPConfig last_config_reversed_;   // If 'last_config_' uses lossless, thenWebPAnimEncoder::last_config_reversed_55,1860
  WebPPicture* curr_canvas_;          // Only pointer; we don't own memory.curr_canvas_60,2148
  WebPPicture* curr_canvas_;          // Only pointer; we don't own memory.WebPAnimEncoder::curr_canvas_60,2148
  WebPPicture curr_canvas_copy_;      // Possibly modified current canvas.curr_canvas_copy_63,2246
  WebPPicture curr_canvas_copy_;      // Possibly modified current canvas.WebPAnimEncoder::curr_canvas_copy_63,2246
  int curr_canvas_copy_modified_;     // True if pixels in 'curr_canvas_copy_'curr_canvas_copy_modified_64,2321
  int curr_canvas_copy_modified_;     // True if pixels in 'curr_canvas_copy_'WebPAnimEncoder::curr_canvas_copy_modified_64,2321
  WebPPicture prev_canvas_;           // Previous canvas.prev_canvas_67,2479
  WebPPicture prev_canvas_;           // Previous canvas.WebPAnimEncoder::prev_canvas_67,2479
  WebPPicture prev_canvas_disposed_;  // Previous canvas disposed to background.prev_canvas_disposed_68,2537
  WebPPicture prev_canvas_disposed_;  // Previous canvas disposed to background.WebPAnimEncoder::prev_canvas_disposed_68,2537
  EncodedFrame* encoded_frames_;      // Array of encoded frames.encoded_frames_71,2638
  EncodedFrame* encoded_frames_;      // Array of encoded frames.WebPAnimEncoder::encoded_frames_71,2638
  size_t size_;             // Number of allocated frames.size_72,2704
  size_t size_;             // Number of allocated frames.WebPAnimEncoder::size_72,2704
  size_t start_;            // Frame start index.start_73,2763
  size_t start_;            // Frame start index.WebPAnimEncoder::start_73,2763
  size_t count_;            // Number of valid frames.count_74,2813
  size_t count_;            // Number of valid frames.WebPAnimEncoder::count_74,2813
  size_t flush_count_;      // If >0, 'flush_count' frames starting fromflush_count_75,2868
  size_t flush_count_;      // If >0, 'flush_count' frames starting fromWebPAnimEncoder::flush_count_75,2868
  int64_t best_delta_;      // min(canvas size - frame size) over the frames.best_delta_79,3035
  int64_t best_delta_;      // min(canvas size - frame size) over the frames.WebPAnimEncoder::best_delta_79,3035
  int keyframe_;            // Index of selected key-frame relative to 'start_'.keyframe_82,3246
  int keyframe_;            // Index of selected key-frame relative to 'start_'.WebPAnimEncoder::keyframe_82,3246
  int count_since_key_frame_;     // Frames seen since the last key-frame.count_since_key_frame_83,3327
  int count_since_key_frame_;     // Frames seen since the last key-frame.WebPAnimEncoder::count_since_key_frame_83,3327
  int first_timestamp_;           // Timestamp of the first frame.first_timestamp_85,3403
  int first_timestamp_;           // Timestamp of the first frame.WebPAnimEncoder::first_timestamp_85,3403
  int prev_timestamp_;            // Timestamp of the last added frame.prev_timestamp_86,3470
  int prev_timestamp_;            // Timestamp of the last added frame.WebPAnimEncoder::prev_timestamp_86,3470
  int prev_candidate_undecided_;  // True if it's not yet decided if previousprev_candidate_undecided_87,3542
  int prev_candidate_undecided_;  // True if it's not yet decided if previousWebPAnimEncoder::prev_candidate_undecided_87,3542
  int is_first_frame_;  // True if first frame is yet to be added/being added.is_first_frame_91,3712
  int is_first_frame_;  // True if first frame is yet to be added/being added.WebPAnimEncoder::is_first_frame_91,3712
  int got_null_frame_;  // True if WebPAnimEncoderAdd() has already been calledgot_null_frame_92,3791
  int got_null_frame_;  // True if WebPAnimEncoderAdd() has already been calledWebPAnimEncoder::got_null_frame_92,3791
  size_t in_frame_count_;   // Number of input frames processed so far.in_frame_count_95,3918
  size_t in_frame_count_;   // Number of input frames processed so far.WebPAnimEncoder::in_frame_count_95,3918
  size_t out_frame_count_;  // Number of frames added to mux so far. This may beout_frame_count_96,3990
  size_t out_frame_count_;  // Number of frames added to mux so far. This may beWebPAnimEncoder::out_frame_count_96,3990
  WebPMux* mux_;        // Muxer to assemble the WebP bitstream.mux_99,4152
  WebPMux* mux_;        // Muxer to assemble the WebP bitstream.WebPAnimEncoder::mux_99,4152
  char error_str_[ERROR_STR_MAX_LENGTH];  // Error string. Empty if no error.error_str_100,4217
  char error_str_[ERROR_STR_MAX_LENGTH];  // Error string. Empty if no error.WebPAnimEncoder::error_str_100,4217
#define DELTA_INFINITY DELTA_INFINITY106,4416
#define KEYFRAME_NONE KEYFRAME_NONE107,4457
static void ResetCounters(WebPAnimEncoder* const enc) {ResetCounters110,4537
static void DisableKeyframes(WebPAnimEncoderOptions* const enc_options) {DisableKeyframes118,4730
#define MAX_CACHED_FRAMES MAX_CACHED_FRAMES123,4883
static void SanitizeEncoderOptions(WebPAnimEncoderOptions* const enc_options) {SanitizeEncoderOptions125,4913
#undef MAX_CACHED_FRAMESMAX_CACHED_FRAMES172,6527
static void DefaultEncoderOptions(WebPAnimEncoderOptions* const enc_options) {DefaultEncoderOptions174,6553
int WebPAnimEncoderOptionsInitInternal(WebPAnimEncoderOptions* enc_options,WebPAnimEncoderOptionsInitInternal183,6865
#define TRANSPARENT_COLOR TRANSPARENT_COLOR194,7244
static void ClearRectangle(WebPPicture* const picture,ClearRectangle196,7284
static void WebPUtilClearPic(WebPPicture* const picture,WebPUtilClearPic208,7630
static void MarkNoError(WebPAnimEncoder* const enc) {MarkNoError218,7971
static void MarkError(WebPAnimEncoder* const enc, const char* str) {MarkError222,8075
static void MarkError2(WebPAnimEncoder* const enc,MarkError2228,8251
WebPAnimEncoder* WebPAnimEncoderNewInternal(WebPAnimEncoderNewInternal236,8498
static void FrameRelease(EncodedFrame* const encoded_frame) {FrameRelease312,10926
void WebPAnimEncoderDelete(WebPAnimEncoder* enc) {WebPAnimEncoderDelete320,11194
static EncodedFrame* GetFrame(const WebPAnimEncoder* const enc,GetFrame341,11814
typedef int (*ComparePixelsFunc)(const uint32_t*, int, const uint32_t*, int,ComparePixelsFunc347,12033
static WEBP_INLINE int ComparePixelsLossless(const uint32_t* src, int src_step,ComparePixelsLossless353,12357
static WEBP_INLINE int PixelsAreSimilar(uint32_t src, uint32_t dst,PixelsAreSimilar370,12873
static WEBP_INLINE int ComparePixelsLossy(const uint32_t* src, int src_step,ComparePixelsLossy389,13699
static int IsEmptyRect(const FrameRectangle* const rect) {IsEmptyRect403,14120
static int QualityToMaxDiff(float quality) {QualityToMaxDiff407,14236
static void MinimizeChangeRectangle(const WebPPicture* const src,MinimizeChangeRectangle414,14492
static WEBP_INLINE void SnapToEvenOffsets(FrameRectangle* const rect) {SnapToEvenOffsets501,17601
  int should_try_;               // Should try this set of parameters.should_try_509,17826
  int should_try_;               // Should try this set of parameters.__anon87::should_try_509,17826
  int empty_rect_allowed_;       // Frame with empty rectangle can be skipped.empty_rect_allowed_510,17897
  int empty_rect_allowed_;       // Frame with empty rectangle can be skipped.__anon87::empty_rect_allowed_510,17897
  FrameRectangle rect_ll_;       // Frame rectangle for lossless compression.rect_ll_511,17976
  FrameRectangle rect_ll_;       // Frame rectangle for lossless compression.__anon87::rect_ll_511,17976
  WebPPicture sub_frame_ll_;     // Sub-frame pic for lossless compression.sub_frame_ll_512,18054
  WebPPicture sub_frame_ll_;     // Sub-frame pic for lossless compression.__anon87::sub_frame_ll_512,18054
  FrameRectangle rect_lossy_;    // Frame rectangle for lossy compression.rect_lossy_513,18130
  FrameRectangle rect_lossy_;    // Frame rectangle for lossy compression.__anon87::rect_lossy_513,18130
  WebPPicture sub_frame_lossy_;  // Sub-frame pic for lossless compression.sub_frame_lossy_516,18351
  WebPPicture sub_frame_lossy_;  // Sub-frame pic for lossless compression.__anon87::sub_frame_lossy_516,18351
} SubFrameParams;SubFrameParams517,18427
static int SubFrameParamsInit(SubFrameParams* const params,SubFrameParamsInit519,18446
static void SubFrameParamsFree(SubFrameParams* const params) {SubFrameParamsFree530,18802
static int GetSubRect(const WebPPicture* const prev_canvas,GetSubRect538,19144
static int GetSubRects(const WebPPicture* const prev_canvas,GetSubRects569,20438
static WEBP_INLINE int clip(int v, int min_v, int max_v) {clip590,21412
int WebPAnimEncoderRefineRect(WebPAnimEncoderRefineRect594,21530
static void DisposeFrameRectangle(int dispose_method,DisposeFrameRectangle623,22746
static uint32_t RectArea(const FrameRectangle* const rect) {RectArea632,23063
static int IsLosslessBlendingPossible(const WebPPicture* const src,IsLosslessBlendingPossible636,23176
static int IsLossyBlendingPossible(const WebPPicture* const src,IsLossyBlendingPossible658,24169
static int IncreaseTransparency(const WebPPicture* const src,IncreaseTransparency686,25475
#undef TRANSPARENT_COLORTRANSPARENT_COLOR706,26249
static int FlattenSimilarBlocks(const WebPPicture* const src,FlattenSimilarBlocks712,26476
static int EncodeFrame(const WebPConfig* const config, WebPPicture* const pic,EncodeFrame767,28841
  WebPMemoryWriter  mem_;mem_780,29216
  WebPMemoryWriter  mem_;__anon88::mem_780,29216
  WebPMuxFrameInfo  info_;info_781,29242
  WebPMuxFrameInfo  info_;__anon88::info_781,29242
  FrameRectangle    rect_;rect_782,29269
  FrameRectangle    rect_;__anon88::rect_782,29269
  int               evaluate_;  // True if this candidate should be evaluated.evaluate_783,29296
  int               evaluate_;  // True if this candidate should be evaluated.__anon88::evaluate_783,29296
} Candidate;Candidate784,29375
static WebPEncodingError EncodeCandidate(WebPPicture* const sub_frame,EncodeCandidate787,29458
static void CopyCurrentCanvas(WebPAnimEncoder* const enc) {CopyCurrentCanvas829,30923
  LL_DISP_NONE = 0,LL_DISP_NONE839,31289
  LL_DISP_BG,LL_DISP_BG840,31309
  LOSSY_DISP_NONE,LOSSY_DISP_NONE841,31323
  LOSSY_DISP_BG,LOSSY_DISP_BG842,31342
  CANDIDATE_COUNTCANDIDATE_COUNT843,31359
#define MIN_COLORS_LOSSY MIN_COLORS_LOSSY846,31381
#define MAX_COLORS_LOSSLESS MAX_COLORS_LOSSLESS847,31455
static WebPEncodingError GenerateCandidates(GenerateCandidates851,31624
#undef MIN_COLORS_LOSSYMIN_COLORS_LOSSY918,34403
#undef MAX_COLORS_LOSSLESSMAX_COLORS_LOSSLESS919,34427
static void GetEncodedData(const WebPMemoryWriter* const memory,GetEncodedData921,34455
static void SetPreviousDisposeMethod(WebPAnimEncoder* const enc,SetPreviousDisposeMethod928,34726
static int IncreasePreviousDuration(WebPAnimEncoder* const enc, int duration) {IncreasePreviousDuration946,35546
static void PickBestCandidate(WebPAnimEncoder* const enc,PickBestCandidate1011,38612
static WebPEncodingError SetFrame(WebPAnimEncoder* const enc,SetFrame1058,40542
static int64_t KeyFramePenalty(const EncodedFrame* const encoded_frame) {KeyFramePenalty1191,45849
static int CacheFrame(WebPAnimEncoder* const enc,CacheFrame1196,46041
static int FlushFrames(WebPAnimEncoder* const enc) {FlushFrames1297,49794
#undef DELTA_INFINITYDELTA_INFINITY1334,51047
#undef KEYFRAME_NONEKEYFRAME_NONE1335,51069
int WebPAnimEncoderAdd(WebPAnimEncoder* enc, WebPPicture* frame, int timestamp,WebPAnimEncoderAdd1337,51091
static int DecodeFrameOntoCanvas(const WebPMuxFrameInfo* const frame,DecodeFrameOntoCanvas1417,53374
static int FrameToFullCanvas(WebPAnimEncoder* const enc,FrameToFullCanvas1444,54328
static WebPMuxError OptimizeSingleFrame(WebPAnimEncoder* const enc,OptimizeSingleFrame1476,55401
int WebPAnimEncoderAssemble(WebPAnimEncoder* enc, WebPData* webp_data) {WebPAnimEncoderAssemble1518,56740
const char* WebPAnimEncoderGetError(WebPAnimEncoder* enc) {WebPAnimEncoderGetError1576,58242

src/mux/muxedit.c,2339
static void MuxInit(WebPMux* const mux) {MuxInit22,759
WebPMux* WebPNewInternal(int version) {WebPNewInternal29,939
static void DeleteAllImages(WebPMuxImage** const wpi_list) {DeleteAllImages40,1240
static void MuxRelease(WebPMux* const mux) {MuxRelease46,1381
void WebPMuxDelete(WebPMux* mux) {WebPMuxDelete57,1680
#define SWITCH_ID_LIST(SWITCH_ID_LIST68,1949
static WebPMuxError MuxSet(WebPMux* const mux, uint32_t tag, uint32_t nth,MuxSet77,2521
#undef SWITCH_ID_LISTSWITCH_ID_LIST94,3143
static WebPMuxError CreateFrameData(CreateFrameData97,3231
static WebPMuxError GetImageData(const WebPData* const bitstream,GetImageData128,4383
static WebPMuxError DeleteChunks(WebPChunk** chunk_list, uint32_t tag) {DeleteChunks153,5292
static WebPMuxError MuxDeleteAllNamedData(WebPMux* const mux, uint32_t tag) {MuxDeleteAllNamedData168,5663
WebPMuxError WebPMuxSetChunk(WebPMux* mux, const char fourcc[4],WebPMuxSetChunk178,6024
static WebPMuxError AddDataToChunkList(AddDataToChunkList197,6741
static WebPMuxError SetAlphaAndImageChunks(SetAlphaAndImageChunks215,7284
WebPMuxError WebPMuxSetImage(WebPMux* mux, const WebPData* bitstream,WebPMuxSetImage233,8033
WebPMuxError WebPMuxPushFrame(WebPMux* mux, const WebPMuxFrameInfo* info,WebPMuxPushFrame265,8869
WebPMuxError WebPMuxSetAnimationParams(WebPMux* mux,WebPMuxSetAnimationParams327,10917
WebPMuxError WebPMuxSetCanvasSize(WebPMux* mux,WebPMuxSetCanvasSize348,11673
WebPMuxError WebPMuxDeleteChunk(WebPMux* mux, const char fourcc[4]) {WebPMuxDeleteChunk377,12626
WebPMuxError WebPMuxDeleteFrame(WebPMux* mux, uint32_t nth) {WebPMuxDeleteFrame382,12838
static WebPMuxError GetFrameInfo(GetFrameInfo390,13121
static WebPMuxError GetImageInfo(const WebPMuxImage* const wpi,GetImageInfo405,13683
static WebPMuxError GetAdjustedCanvasSize(const WebPMux* const mux,GetAdjustedCanvasSize425,14465
static WebPMuxError CreateVP8XChunk(WebPMux* const mux) {CreateVP8XChunk468,15870
static WebPMuxError MuxCleanup(WebPMux* const mux) {MuxCleanup547,18319
static size_t ImageListDiskSize(const WebPMuxImage* wpi_list) {ImageListDiskSize582,19701
static uint8_t* ImageListEmit(const WebPMuxImage* wpi_list, uint8_t* dst) {ImageListEmit592,19957
WebPMuxError WebPMuxAssemble(WebPMux* mux, WebPData* assembled_data) {WebPMuxAssemble600,20154

src/mux/muxi.h,6268
#define WEBP_MUX_MUXI_H_WEBP_MUX_MUXI_H_15,566
#define MUX_MAJ_VERSION MUX_MAJ_VERSION29,848
#define MUX_MIN_VERSION MUX_MIN_VERSION30,874
#define MUX_REV_VERSION MUX_REV_VERSION31,900
typedef struct WebPChunk WebPChunk;WebPChunk34,944
struct WebPChunk {WebPChunk35,980
  uint32_t        tag_;tag_36,999
  uint32_t        tag_;WebPChunk::tag_36,999
  int             owner_;  // True if *data_ memory is owned internally.owner_37,1023
  int             owner_;  // True if *data_ memory is owned internally.WebPChunk::owner_37,1023
  WebPData        data_;data_40,1232
  WebPData        data_;WebPChunk::data_40,1232
  WebPChunk*      next_;next_41,1257
  WebPChunk*      next_;WebPChunk::next_41,1257
typedef struct WebPMuxImage WebPMuxImage;WebPMuxImage46,1388
struct WebPMuxImage {WebPMuxImage47,1430
  WebPChunk*  header_;      // Corresponds to WEBP_CHUNK_ANMF.header_48,1452
  WebPChunk*  header_;      // Corresponds to WEBP_CHUNK_ANMF.WebPMuxImage::header_48,1452
  WebPChunk*  alpha_;       // Corresponds to WEBP_CHUNK_ALPHA.alpha_49,1515
  WebPChunk*  alpha_;       // Corresponds to WEBP_CHUNK_ALPHA.WebPMuxImage::alpha_49,1515
  WebPChunk*  img_;         // Corresponds to WEBP_CHUNK_IMAGE.img_50,1579
  WebPChunk*  img_;         // Corresponds to WEBP_CHUNK_IMAGE.WebPMuxImage::img_50,1579
  WebPChunk*  unknown_;     // Corresponds to WEBP_CHUNK_UNKNOWN.unknown_51,1643
  WebPChunk*  unknown_;     // Corresponds to WEBP_CHUNK_UNKNOWN.WebPMuxImage::unknown_51,1643
  int         width_;width_52,1709
  int         width_;WebPMuxImage::width_52,1709
  int         height_;height_53,1731
  int         height_;WebPMuxImage::height_53,1731
  int         has_alpha_;   // Through ALPH chunk or as part of VP8L.has_alpha_54,1754
  int         has_alpha_;   // Through ALPH chunk or as part of VP8L.WebPMuxImage::has_alpha_54,1754
  int         is_partial_;  // True if only some of the chunks are filled.is_partial_55,1824
  int         is_partial_;  // True if only some of the chunks are filled.WebPMuxImage::is_partial_55,1824
  WebPMuxImage* next_;next_56,1899
  WebPMuxImage* next_;WebPMuxImage::next_56,1899
struct WebPMux {WebPMux60,1966
  WebPMuxImage*   images_;images_61,1983
  WebPMuxImage*   images_;WebPMux::images_61,1983
  WebPChunk*      iccp_;iccp_62,2010
  WebPChunk*      iccp_;WebPMux::iccp_62,2010
  WebPChunk*      exif_;exif_63,2035
  WebPChunk*      exif_;WebPMux::exif_63,2035
  WebPChunk*      xmp_;xmp_64,2060
  WebPChunk*      xmp_;WebPMux::xmp_64,2060
  WebPChunk*      anim_;anim_65,2084
  WebPChunk*      anim_;WebPMux::anim_65,2084
  WebPChunk*      vp8x_;vp8x_66,2109
  WebPChunk*      vp8x_;WebPMux::vp8x_66,2109
  WebPChunk*      unknown_;unknown_68,2135
  WebPChunk*      unknown_;WebPMux::unknown_68,2135
  int             canvas_width_;canvas_width_69,2163
  int             canvas_width_;WebPMux::canvas_width_69,2163
  int             canvas_height_;canvas_height_70,2196
  int             canvas_height_;WebPMux::canvas_height_70,2196
  IDX_VP8X = 0,IDX_VP8X78,2554
  IDX_ICCP,IDX_ICCP79,2570
  IDX_ANIM,IDX_ANIM80,2582
  IDX_ANMF,IDX_ANMF81,2594
  IDX_ALPHA,IDX_ALPHA82,2606
  IDX_VP8,IDX_VP883,2619
  IDX_VP8L,IDX_VP8L84,2630
  IDX_EXIF,IDX_EXIF85,2642
  IDX_XMP,IDX_XMP86,2654
  IDX_UNKNOWN,IDX_UNKNOWN87,2665
  IDX_NIL,IDX_NIL89,2681
  IDX_LAST_CHUNKIDX_LAST_CHUNK90,2692
} CHUNK_INDEX;CHUNK_INDEX91,2709
#define NIL_TAG NIL_TAG93,2725
  uint32_t      tag;tag96,2797
  uint32_t      tag;__anon91::tag96,2797
  WebPChunkId   id;id97,2818
  WebPChunkId   id;__anon91::id97,2818
  uint32_t      size;size98,2838
  uint32_t      size;__anon91::size98,2838
} ChunkInfo;ChunkInfo99,2860
void ChunkInit(WebPChunk* const chunk);ChunkInit107,3048
CHUNK_INDEX ChunkGetIndexFromTag(uint32_t tag);ChunkGetIndexFromTag110,3158
WebPChunkId ChunkGetIdFromTag(uint32_t tag);ChunkGetIdFromTag113,3280
uint32_t ChunkGetTagFromFourCC(const char fourcc[4]);ChunkGetTagFromFourCC116,3363
CHUNK_INDEX ChunkGetIndexFromFourCC(const char fourcc[4]);ChunkGetIndexFromFourCC119,3498
WebPChunk* ChunkSearchList(WebPChunk* first, uint32_t nth, uint32_t tag);ChunkSearchList123,3655
WebPMuxError ChunkAssignData(WebPChunk* chunk, const WebPData* const data,ChunkAssignData126,3769
WebPMuxError ChunkSetNth(WebPChunk* chunk, WebPChunk** chunk_list,ChunkSetNth132,4085
WebPChunk* ChunkRelease(WebPChunk* const chunk);ChunkRelease136,4237
WebPChunk* ChunkDelete(WebPChunk* const chunk);ChunkDelete139,4334
void ChunkListDelete(WebPChunk** const chunk_list);ChunkListDelete142,4430
static WEBP_INLINE size_t SizeWithPadding(size_t chunk_size) {SizeWithPadding145,4562
static WEBP_INLINE size_t ChunkDiskSize(const WebPChunk* chunk) {ChunkDiskSize150,4732
size_t ChunkListDiskSize(const WebPChunk* chunk_list);ChunkListDiskSize157,4960
uint8_t* ChunkListEmit(const WebPChunk* chunk_list, uint8_t* dst);ChunkListEmit160,5066
void MuxImageInit(WebPMuxImage* const wpi);MuxImageInit166,5262
WebPMuxImage* MuxImageRelease(WebPMuxImage* const wpi);MuxImageRelease169,5354
WebPMuxImage* MuxImageDelete(WebPMuxImage* const wpi);MuxImageDelete173,5502
int MuxImageCount(const WebPMuxImage* wpi_list, WebPChunkId id);MuxImageCount177,5685
int MuxImageFinalize(WebPMuxImage* const wpi);MuxImageFinalize181,5854
static WEBP_INLINE int IsWPI(WebPChunkId id) {IsWPI184,5962
WebPMuxError MuxImagePush(const WebPMuxImage* wpi, WebPMuxImage** wpi_list);MuxImagePush194,6195
WebPMuxError MuxImageDeleteNth(WebPMuxImage** wpi_list, uint32_t nth);MuxImageDeleteNth197,6312
WebPMuxError MuxImageGetNth(const WebPMuxImage** wpi_list, uint32_t nth,MuxImageGetNth200,6420
size_t MuxImageDiskSize(const WebPMuxImage* const wpi);MuxImageDiskSize204,6577
uint8_t* MuxImageEmit(const WebPMuxImage* const wpi, uint8_t* dst);MuxImageEmit207,6675
int MuxHasAlpha(const WebPMuxImage* images);MuxHasAlpha213,6927
uint8_t* MuxEmitRiffHeader(uint8_t* const data, size_t size);MuxEmitRiffHeader216,7041
WebPChunk** MuxGetChunkListFromId(const WebPMux* mux, WebPChunkId id);MuxGetChunkListFromId219,7176
WebPMuxError MuxValidate(const WebPMux* const mux);MuxValidate222,7283

src/mux/muxread.c,1834
#define SWITCH_ID_LIST(SWITCH_ID_LIST23,761
static WebPMuxError MuxGet(const WebPMux* const mux, CHUNK_INDEX idx,MuxGet35,1566
#undef SWITCH_ID_LISTSWITCH_ID_LIST49,2041
static WebPMuxError ChunkVerifyAndAssign(WebPChunk* chunk,ChunkVerifyAndAssign53,2162
int MuxImageFinalize(WebPMuxImage* const wpi) {MuxImageFinalize75,2942
static int MuxImageParse(const WebPChunk* const chunk, int copy_data,MuxImageParse98,3665
WebPMux* WebPMuxCreateInternal(const WebPData* bitstream, int copy_data,WebPMuxCreateInternal168,6015
static WebPMuxError ValidateForSingleImage(const WebPMux* const mux) {ValidateForSingleImage293,9921
static WebPMuxError MuxGetCanvasInfo(const WebPMux* const mux,MuxGetCanvasInfo311,10533
WebPMuxError WebPMuxGetCanvasSize(const WebPMux* mux, int* width, int* height) {WebPMuxGetCanvasSize347,11683
WebPMuxError WebPMuxGetFeatures(const WebPMux* mux, uint32_t* flags) {WebPMuxGetFeatures354,11918
static uint8_t* EmitVP8XChunk(uint8_t* const dst, int width,EmitVP8XChunk359,12113
static WebPMuxError SynthesizeBitstream(const WebPMuxImage* const wpi,SynthesizeBitstream374,12772
WebPMuxError WebPMuxGetChunk(const WebPMux* mux, const char fourcc[4],WebPMuxGetChunk406,13836
static WebPMuxError MuxGetImageInternal(const WebPMuxImage* const wpi,MuxGetImageInternal426,14603
static WebPMuxError MuxGetFrameInternal(const WebPMuxImage* const wpi,MuxGetFrameInternal439,15087
WebPMuxError WebPMuxGetFrame(WebPMuxGetFrame462,16119
WebPMuxError WebPMuxGetAnimationParams(const WebPMux* mux,WebPMuxGetAnimationParams484,16656
static CHUNK_INDEX ChunkGetIndexFromId(WebPChunkId id) {ChunkGetIndexFromId501,17226
static int CountChunks(const WebPChunk* const chunk_list, uint32_t tag) {CountChunks511,17532
WebPMuxError WebPMuxNumChunks(const WebPMux* mux,WebPMuxNumChunks522,17854

examples/gif2webp.c,581
static int transparent_index = GIF_INDEX_INVALID;  // Opaque by default.transparent_index35,1005
static const char* const kErrorMessages[-WEBP_MUX_NOT_ENOUGH_DATA + 1] = {kErrorMessages37,1079
static const char* ErrorString(WebPMuxError err) {ErrorString42,1286
  METADATA_ICC  = (1 << 0),METADATA_ICC48,1450
  METADATA_XMP  = (1 << 1),METADATA_XMP49,1478
  METADATA_ALL  = METADATA_ICC | METADATA_XMPMETADATA_ALL50,1506
static void Help(void) {Help55,1638
int main(int argc, const char *argv[]) {main89,3524
int main(int argc, const char *argv[]) {main576,19334

examples/anim_util.h,1550
#define WEBP_EXAMPLES_ANIM_UTIL_H_WEBP_EXAMPLES_ANIM_UTIL_H_13,532
  uint8_t* rgba;         // Decoded and reconstructed full frame.rgba26,704
  uint8_t* rgba;         // Decoded and reconstructed full frame.__anon93::rgba26,704
  int duration;          // Frame duration in milliseconds.duration27,770
  int duration;          // Frame duration in milliseconds.__anon93::duration27,770
  int is_key_frame;      // True if this frame is a key-frame.is_key_frame28,830
  int is_key_frame;      // True if this frame is a key-frame.__anon93::is_key_frame28,830
} DecodedFrame;DecodedFrame29,893
  uint32_t canvas_width;canvas_width32,927
  uint32_t canvas_width;__anon94::canvas_width32,927
  uint32_t canvas_height;canvas_height33,952
  uint32_t canvas_height;__anon94::canvas_height33,952
  uint32_t bgcolor;bgcolor34,978
  uint32_t bgcolor;__anon94::bgcolor34,978
  uint32_t loop_count;loop_count35,998
  uint32_t loop_count;__anon94::loop_count35,998
  DecodedFrame* frames;frames36,1021
  DecodedFrame* frames;__anon94::frames36,1021
  uint32_t num_frames;num_frames37,1045
  uint32_t num_frames;__anon94::num_frames37,1045
  void* raw_mem;raw_mem38,1068
  void* raw_mem;__anon94::raw_mem38,1068
} AnimatedImage;AnimatedImage39,1085
void ClearAnimatedImage(AnimatedImage* const image);ClearAnimatedImage42,1168
int ReadAnimatedImage(const char filename[], AnimatedImage* const image,ReadAnimatedImage49,1483
void GetDiffAndPSNR(const uint8_t rgba1[], const uint8_t rgba2[],GetDiffAndPSNR55,1798

examples/gifdec.c,2575
#define GIF_TRANSPARENT_COLOR GIF_TRANSPARENT_COLOR24,658
#define GIF_WHITE_COLOR GIF_WHITE_COLOR25,700
#define GIF_TRANSPARENT_MASK GIF_TRANSPARENT_MASK26,742
#define GIF_DISPOSE_MASK GIF_DISPOSE_MASK27,777
#define GIF_DISPOSE_SHIFT GIF_DISPOSE_SHIFT28,812
extern void WebPCopyPlane(const uint8_t* src, int src_stride,WebPCopyPlane34,906
extern void WebPCopyPixels(const WebPPicture* const src,WebPCopyPixels37,1074
void GIFGetBackgroundColor(const ColorMapObject* const color_map,GIFGetBackgroundColor43,1212
int GIFReadGraphicsExtension(const GifByteType* const buf, int* const duration,GIFReadGraphicsExtension64,2055
static int Remap(const GifFileType* const gif, const uint8_t* const src,Remap90,2882
int GIFReadFrame(GifFileType* const gif, int transparent_index,GIFReadFrame113,3604
int GIFReadLoopCount(GifFileType* const gif, GifByteType** const buf,GIFReadLoopCount175,5827
int GIFReadMetadata(GifFileType* const gif, GifByteType** const buf,GIFReadMetadata192,6328
static void ClearRectangle(WebPPicture* const picture,ClearRectangle237,8006
void GIFClearPic(WebPPicture* const pic, const GIFFrameRect* const rect) {GIFClearPic247,8364
void GIFCopyPixels(const WebPPicture* const src, WebPPicture* const dst) {GIFCopyPixels256,8638
void GIFDisposeFrame(GIFDisposeMethod dispose, const GIFFrameRect* const rect,GIFDisposeFrame260,8744
void GIFBlendFrames(const WebPPicture* const src,GIFBlendFrames280,9654
void GIFDisplayError(const GifFileType* const gif, int gif_error) {GIFDisplayError297,10300
static void ErrorGIFNotAvailable() {ErrorGIFNotAvailable320,11006
void GIFGetBackgroundColor(const struct ColorMapObject* const color_map,GIFGetBackgroundColor325,11164
int GIFReadGraphicsExtension(const GifByteType* const data, int* const duration,GIFReadGraphicsExtension335,11475
int GIFReadFrame(struct GifFileType* const gif, int transparent_index,GIFReadFrame346,11796
int GIFReadLoopCount(struct GifFileType* const gif, GifByteType** const buf,GIFReadLoopCount357,12084
int GIFReadMetadata(struct GifFileType* const gif, GifByteType** const buf,GIFReadMetadata366,12294
void GIFDisposeFrame(GIFDisposeMethod dispose, const GIFFrameRect* const rect,GIFDisposeFrame375,12510
void GIFBlendFrames(const struct WebPPicture* const src,GIFBlendFrames385,12819
void GIFDisplayError(const struct GifFileType* const gif, int gif_error) {GIFDisplayError394,13050
void GIFClearPic(struct WebPPicture* const pic,GIFClearPic400,13186
void GIFCopyPixels(const struct WebPPicture* const src,GIFCopyPixels407,13341

examples/anim_diff.c,879
#define snprintf snprintf25,907
static int AdditionWillOverflow(int a, int b) {AdditionWillOverflow29,984
static int FramesAreEqual(const uint8_t* const rgba1,FramesAreEqual33,1074
static WEBP_INLINE int PixelsAreSimilar(uint32_t src, uint32_t dst,PixelsAreSimilar39,1332
static int FramesAreSimilar(const uint8_t* const rgba1,FramesAreSimilar56,2066
static void MinimizeAnimationFrames(AnimatedImage* const img, int max_diff) {MinimizeAnimationFrames75,2718
static int CompareValues(uint32_t a, uint32_t b, const char* output_str) {CompareValues105,3889
static int CompareBackgroundColor(uint32_t bg1, uint32_t bg2, int premultiply) {CompareBackgroundColor113,4070
static int CompareAnimatedImagePair(const AnimatedImage* const img1,CompareAnimatedImagePair129,4603
static void Help(void) {Help183,6712
int main(int argc, const char* argv[]) {main197,7344

examples/dwebp.c,405
static int verbose = 0;verbose28,825
static int quiet = 0;quiet29,849
static int SaveOutput(const WebPDecBuffer* const buffer,SaveOutput43,1057
static void Help(void) {Help76,1942
static const char* const kFormatType[] = {kFormatType110,3719
static uint8_t* AllocateExternalBuffer(WebPDecoderConfig* config,AllocateExternalBuffer114,3803
int main(int argc, const char *argv[]) {main178,6377

examples/anim_dump.c,125
#define snprintf snprintf22,774
static void Help(void) {Help25,809
int main(int argc, const char* argv[]) {main35,1217

examples/cwebp.c,2481
static int verbose = 0;verbose43,1153
static int ReadYUV(const uint8_t* const data, size_t data_size,ReadYUV45,1178
static int ReadPicture(const char* const filename, WebPPicture* const pic,ReadPicture74,2306
static int ReadPicture(const char* const filename, WebPPicture* const pic,ReadPicture99,3104
static void AllocExtraInfo(WebPPicture* const pic) {AllocExtraInfo125,3838
static void PrintByteCount(const int bytes[4], int total_size,PrintByteCount131,4059
static void PrintPercents(const int counts[4], int total) {PrintPercents143,4409
static void PrintValues(const int values[4]) {PrintValues151,4612
static void PrintFullLosslessInfo(const WebPAuxStats* const stats,PrintFullLosslessInfo159,4771
static void PrintExtraInfoLossless(const WebPPicture* const pic,PrintExtraInfoLossless180,5819
static void PrintExtraInfoLossy(const WebPPicture* const pic, int short_output,PrintExtraInfoLossy194,6390
static void PrintMapInfo(const WebPPicture* const pic) {PrintMapInfo260,9390
static int MyWriter(const uint8_t* data, size_t data_size,MyWriter288,10298
static int DumpPicture(const WebPPicture* const picture, const char* PGM_name) {DumpPicture295,10577
  METADATA_EXIF = (1 << 0),METADATA_EXIF334,11961
  METADATA_ICC  = (1 << 1),METADATA_ICC335,11989
  METADATA_XMP  = (1 << 2),METADATA_XMP336,12017
  METADATA_ALL  = METADATA_EXIF | METADATA_ICC | METADATA_XMPMETADATA_ALL337,12045
static const int kChunkHeaderSize = 8;kChunkHeaderSize340,12111
static const int kTagSize = 4;kTagSize341,12150
static void PrintMetadataInfo(const Metadata* const metadata,PrintMetadataInfo343,12182
static int WriteLE(FILE* const out, uint32_t val, int num) {WriteLE360,12831
static int WriteLE24(FILE* const out, uint32_t val) {WriteLE24370,13049
static int WriteLE32(FILE* const out, uint32_t val) {WriteLE32374,13137
static int WriteMetadataChunk(FILE* const out, const char fourcc[4],WriteMetadataChunk378,13225
static int UpdateFlagsAndSize(const MetadataPayload* const payload,UpdateFlagsAndSize390,13826
static int WriteWebPWithMetadata(FILE* const out,WriteWebPWithMetadata405,14499
static int ProgressReport(int percent, const WebPPicture* const picture) {ProgressReport498,18386
static void HelpShort(void) {HelpShort506,18658
static void HelpLong(void) {HelpLong514,18974
static const char* const kErrorMessages[VP8_ENC_ERROR_LAST] = {kErrorMessages617,24641
int main(int argc, const char *argv[]) {main638,25641

examples/webpinfo.c,7842
#define snprintf snprintf28,880
#define LOG_ERROR(LOG_ERROR31,915
#define LOG_WARN(LOG_WARN38,1175
static const char* const kFormats[3] = {kFormats45,1445
static const char* const kLosslessTransforms[4] = {kLosslessTransforms51,1527
static const char* const kAlphaFilterMethods[4] = {kAlphaFilterMethods58,1654
  WEBP_INFO_OK = 0,WEBP_INFO_OK66,1778
  WEBP_INFO_TRUNCATED_DATA,WEBP_INFO_TRUNCATED_DATA67,1798
  WEBP_INFO_PARSE_ERROR,WEBP_INFO_PARSE_ERROR68,1826
  WEBP_INFO_INVALID_PARAM,WEBP_INFO_INVALID_PARAM69,1851
  WEBP_INFO_BITSTREAM_ERROR,WEBP_INFO_BITSTREAM_ERROR70,1878
  WEBP_INFO_MISSING_DATA,WEBP_INFO_MISSING_DATA71,1907
  WEBP_INFO_INVALID_COMMANDWEBP_INFO_INVALID_COMMAND72,1933
} WebPInfoStatus;WebPInfoStatus73,1961
typedef enum ChunkID {ChunkID75,1980
  CHUNK_VP8,CHUNK_VP876,2003
  CHUNK_VP8L,CHUNK_VP8L77,2016
  CHUNK_VP8X,CHUNK_VP8X78,2030
  CHUNK_ALPHA,CHUNK_ALPHA79,2044
  CHUNK_ANIM,CHUNK_ANIM80,2059
  CHUNK_ANMF,CHUNK_ANMF81,2073
  CHUNK_ICCP,CHUNK_ICCP82,2087
  CHUNK_EXIF,CHUNK_EXIF83,2101
  CHUNK_XMP,CHUNK_XMP84,2115
  CHUNK_UNKNOWN,CHUNK_UNKNOWN85,2128
  CHUNK_TYPES = CHUNK_UNKNOWNCHUNK_TYPES86,2145
} ChunkID;ChunkID87,2175
  size_t start_;start_90,2204
  size_t start_;__anon97::start_90,2204
  size_t end_;end_91,2221
  size_t end_;__anon97::end_91,2221
  const uint8_t* buf_;buf_92,2236
  const uint8_t* buf_;__anon97::buf_92,2236
} MemBuffer;MemBuffer93,2259
  size_t offset_;offset_96,2290
  size_t offset_;__anon98::offset_96,2290
  size_t size_;size_97,2308
  size_t size_;__anon98::size_97,2308
  const uint8_t* payload_;payload_98,2324
  const uint8_t* payload_;__anon98::payload_98,2324
  ChunkID id_;id_99,2351
  ChunkID id_;__anon98::id_99,2351
} ChunkData;ChunkData100,2366
typedef struct WebPInfo {WebPInfo102,2380
  int canvas_width_;canvas_width_103,2406
  int canvas_width_;WebPInfo::canvas_width_103,2406
  int canvas_height_;canvas_height_104,2427
  int canvas_height_;WebPInfo::canvas_height_104,2427
  int loop_count_;loop_count_105,2449
  int loop_count_;WebPInfo::loop_count_105,2449
  int num_frames_;num_frames_106,2468
  int num_frames_;WebPInfo::num_frames_106,2468
  int chunk_counts_[CHUNK_TYPES];chunk_counts_107,2487
  int chunk_counts_[CHUNK_TYPES];WebPInfo::chunk_counts_107,2487
  int anmf_subchunk_counts_[3];  // 0 VP8; 1 VP8L; 2 ALPH.anmf_subchunk_counts_108,2521
  int anmf_subchunk_counts_[3];  // 0 VP8; 1 VP8L; 2 ALPH.WebPInfo::anmf_subchunk_counts_108,2521
  uint32_t bgcolor_;bgcolor_109,2580
  uint32_t bgcolor_;WebPInfo::bgcolor_109,2580
  int feature_flags_;feature_flags_110,2601
  int feature_flags_;WebPInfo::feature_flags_110,2601
  int has_alpha_;has_alpha_111,2623
  int has_alpha_;WebPInfo::has_alpha_111,2623
  int frame_width_, frame_height_;frame_width_113,2676
  int frame_width_, frame_height_;WebPInfo::frame_width_113,2676
  int frame_width_, frame_height_;frame_height_113,2676
  int frame_width_, frame_height_;WebPInfo::frame_height_113,2676
  size_t anim_frame_data_size_;anim_frame_data_size_114,2711
  size_t anim_frame_data_size_;WebPInfo::anim_frame_data_size_114,2711
  int is_processing_anim_frame_, seen_alpha_subchunk_, seen_image_subchunk_;is_processing_anim_frame_115,2743
  int is_processing_anim_frame_, seen_alpha_subchunk_, seen_image_subchunk_;WebPInfo::is_processing_anim_frame_115,2743
  int is_processing_anim_frame_, seen_alpha_subchunk_, seen_image_subchunk_;seen_alpha_subchunk_115,2743
  int is_processing_anim_frame_, seen_alpha_subchunk_, seen_image_subchunk_;WebPInfo::seen_alpha_subchunk_115,2743
  int is_processing_anim_frame_, seen_alpha_subchunk_, seen_image_subchunk_;seen_image_subchunk_115,2743
  int is_processing_anim_frame_, seen_alpha_subchunk_, seen_image_subchunk_;WebPInfo::seen_image_subchunk_115,2743
  int quiet_, show_diagnosis_, show_summary_;quiet_117,2847
  int quiet_, show_diagnosis_, show_summary_;WebPInfo::quiet_117,2847
  int quiet_, show_diagnosis_, show_summary_;show_diagnosis_117,2847
  int quiet_, show_diagnosis_, show_summary_;WebPInfo::show_diagnosis_117,2847
  int quiet_, show_diagnosis_, show_summary_;show_summary_117,2847
  int quiet_, show_diagnosis_, show_summary_;WebPInfo::show_summary_117,2847
  int parse_bitstream_;parse_bitstream_118,2893
  int parse_bitstream_;WebPInfo::parse_bitstream_118,2893
} WebPInfo;WebPInfo119,2917
static void WebPInfoInit(WebPInfo* const webp_info) {WebPInfoInit121,2930
static const char kWebPChunkTags[CHUNK_TYPES][4] = {kWebPChunkTags125,3031
static int GetLE16(const uint8_t* const data) {GetLE16140,3421
static int GetLE24(const uint8_t* const data) {GetLE24144,3514
static uint32_t GetLE32(const uint8_t* const data) {GetLE32148,3607
static int ReadLE16(const uint8_t** data) {ReadLE16152,3725
static int ReadLE24(const uint8_t** data) {ReadLE24158,3834
static uint32_t ReadLE32(const uint8_t** data) {ReadLE32164,3943
static int ReadFileToWebPData(const char* const filename,ReadFileToWebPData170,4062
static void InitMemBuffer(MemBuffer* const mem, const WebPData* webp_data) {InitMemBuffer183,4448
static size_t MemDataSize(const MemBuffer* const mem) {MemDataSize189,4610
static const uint8_t* GetBuffer(MemBuffer* const mem) {GetBuffer193,4705
static void Skip(MemBuffer* const mem, size_t size) {Skip197,4798
static uint32_t ReadMemBufLE32(MemBuffer* const mem) {ReadMemBufLE32201,4878
static int GetBits(const uint8_t* const data, size_t data_size, size_t nb,GetBits212,5203
static int GetSignedBits(const uint8_t* const data, size_t data_size, size_t nb,GetSignedBits227,5584
#define GET_BITS(GET_BITS236,5905
#define GET_SIGNED_BITS(GET_SIGNED_BITS244,6262
static WebPInfoStatus ParseLossySegmentHeader(const WebPInfo* const webp_info,ParseLossySegmentHeader252,6655
static WebPInfoStatus ParseLossyFilterHeader(const WebPInfo* const webp_info,ParseLossyFilterHeader302,8379
static WebPInfoStatus ParseLossyHeader(const ChunkData* const chunk_data,ParseLossyHeader331,9327
static int LLGetBits(const uint8_t* const data, size_t data_size, size_t nb,LLGetBits448,13656
#define LL_GET_BITS(LL_GET_BITS465,14066
static WebPInfoStatus ParseLosslessTransform(WebPInfo* const webp_info,ParseLosslessTransform473,14435
static WebPInfoStatus ParseLosslessHeader(const ChunkData* const chunk_data,ParseLosslessHeader502,15458
static WebPInfoStatus ParseAlphaHeader(const ChunkData* const chunk_data,ParseAlphaHeader538,16693
static WebPInfoStatus ParseRIFFHeader(const WebPInfo* const webp_info,ParseRIFFHeader582,18385
static WebPInfoStatus ParseChunk(const WebPInfo* const webp_info,ParseChunk621,19720
static WebPInfoStatus ProcessVP8XChunk(const ChunkData* const chunk_data,ProcessVP8XChunk667,21489
static WebPInfoStatus ProcessANIMChunk(const ChunkData* const chunk_data,ProcessANIMChunk708,23194
static WebPInfoStatus ProcessANMFChunk(const ChunkData* const chunk_data,ProcessANMFChunk736,24271
static WebPInfoStatus ProcessImageChunk(const ChunkData* const chunk_data,ProcessImageChunk789,26370
static WebPInfoStatus ProcessALPHChunk(const ChunkData* const chunk_data,ProcessALPHChunk868,29707
static WebPInfoStatus ProcessICCPChunk(const ChunkData* const chunk_data,ProcessICCPChunk911,31246
static WebPInfoStatus ProcessChunk(const ChunkData* const chunk_data,ProcessChunk928,31849
static WebPInfoStatus Validate(const WebPInfo* const webp_info) {Validate990,33913
static void ShowSummary(const WebPInfo* const webp_info) {ShowSummary1047,36119
static WebPInfoStatus AnalyzeWebP(WebPInfo* const webp_info,AnalyzeWebP1066,36722
static void HelpShort(void) {HelpShort1099,37822
static void HelpLong(void) {HelpLong1104,37967
int main(int argc, const char* argv[]) {main1116,38514

examples/gifdec.h,2156
#define WEBP_EXAMPLES_GIFDEC_H_WEBP_EXAMPLES_GIFDEC_H_13,511
# define LOCAL_GIF_VERSION LOCAL_GIF_VERSION32,835
# define LOCAL_GIF_PREREQ(LOCAL_GIF_PREREQ33,899
# define LOCAL_GIF_VERSION LOCAL_GIF_VERSION36,993
# define LOCAL_GIF_PREREQ(LOCAL_GIF_PREREQ37,1022
#define GIF_INDEX_INVALID GIF_INDEX_INVALID40,1068
typedef enum GIFDisposeMethod {GIFDisposeMethod42,1100
  GIF_DISPOSE_NONE,GIF_DISPOSE_NONE43,1132
  GIF_DISPOSE_BACKGROUND,GIF_DISPOSE_BACKGROUND44,1152
  GIF_DISPOSE_RESTORE_PREVIOUSGIF_DISPOSE_RESTORE_PREVIOUS45,1178
} GIFDisposeMethod;GIFDisposeMethod46,1209
  int x_offset, y_offset, width, height;x_offset49,1247
  int x_offset, y_offset, width, height;__anon99::x_offset49,1247
  int x_offset, y_offset, width, height;y_offset49,1247
  int x_offset, y_offset, width, height;__anon99::y_offset49,1247
  int x_offset, y_offset, width, height;width49,1247
  int x_offset, y_offset, width, height;__anon99::width49,1247
  int x_offset, y_offset, width, height;height49,1247
  int x_offset, y_offset, width, height;__anon99::height49,1247
} GIFFrameRect;GIFFrameRect50,1288
typedef unsigned char GifByteType;GifByteType58,1408
void GIFGetBackgroundColor(const struct ColorMapObject* const color_map,GIFGetBackgroundColor63,1590
int GIFReadGraphicsExtension(const GifByteType* const buf, int* const duration,GIFReadGraphicsExtension70,1943
int GIFReadFrame(struct GifFileType* const gif, int transparent_index,GIFReadFrame77,2294
int GIFReadLoopCount(struct GifFileType* const gif, GifByteType** const buf,GIFReadLoopCount82,2527
int GIFReadMetadata(struct GifFileType* const gif, GifByteType** const buf,GIFReadMetadata87,2755
void GIFDisposeFrame(GIFDisposeMethod dispose, const GIFFrameRect* const rect,GIFDisposeFrame92,2987
void GIFBlendFrames(const struct WebPPicture* const src,GIFBlendFrames97,3270
void GIFDisplayError(const struct GifFileType* const gif, int gif_error);GIFDisplayError102,3480
void GIFClearPic(struct WebPPicture* const pic, const GIFFrameRect* const rect);GIFClearPic105,3627
void GIFCopyPixels(const struct WebPPicture* const src,GIFCopyPixels109,3818

examples/img2webp.c,265
static void Help(void) {Help35,1058
static int ReadImage(const char filename[], WebPPicture* const pic) {ReadImage67,2513
static int SetLoopCount(int loop_count, WebPData* const webp_data) {SetLoopCount85,3065
int main(int argc, char* argv[]) {main120,3976

examples/vwebp.c,3217
#define _POSIX_C_SOURCE _POSIX_C_SOURCE18,652
#define snprintf snprintf47,1145
  int has_animation;has_animation52,1265
  int has_animation;__anon100::has_animation52,1265
  int has_color_profile;has_color_profile53,1286
  int has_color_profile;__anon100::has_color_profile53,1286
  int done;done54,1311
  int done;__anon100::done54,1311
  int decoding_error;decoding_error55,1323
  int decoding_error;__anon100::decoding_error55,1323
  int print_info;print_info56,1345
  int print_info;__anon100::print_info56,1345
  int only_deltas;only_deltas57,1363
  int only_deltas;__anon100::only_deltas57,1363
  int use_color_profile;use_color_profile58,1382
  int use_color_profile;__anon100::use_color_profile58,1382
  int canvas_width, canvas_height;canvas_width60,1408
  int canvas_width, canvas_height;__anon100::canvas_width60,1408
  int canvas_width, canvas_height;canvas_height60,1408
  int canvas_width, canvas_height;__anon100::canvas_height60,1408
  int loop_count;loop_count61,1443
  int loop_count;__anon100::loop_count61,1443
  uint32_t bg_color;bg_color62,1461
  uint32_t bg_color;__anon100::bg_color62,1461
  const char* file_name;file_name64,1483
  const char* file_name;__anon100::file_name64,1483
  WebPData data;data65,1508
  WebPData data;__anon100::data65,1508
  WebPDecoderConfig config;config66,1525
  WebPDecoderConfig config;__anon100::config66,1525
  const WebPDecBuffer* pic;pic67,1553
  const WebPDecBuffer* pic;__anon100::pic67,1553
  WebPDemuxer* dmux;dmux68,1581
  WebPDemuxer* dmux;__anon100::dmux68,1581
  WebPIterator curr_frame;curr_frame69,1602
  WebPIterator curr_frame;__anon100::curr_frame69,1602
  WebPIterator prev_frame;prev_frame70,1629
  WebPIterator prev_frame;__anon100::prev_frame70,1629
  WebPChunkIterator iccp;iccp71,1656
  WebPChunkIterator iccp;__anon100::iccp71,1656
  int viewport_width, viewport_height;viewport_width72,1682
  int viewport_width, viewport_height;__anon100::viewport_width72,1682
  int viewport_width, viewport_height;viewport_height72,1682
  int viewport_width, viewport_height;__anon100::viewport_height72,1682
} kParams;kParams73,1721
static void ClearPreviousPic(void) {ClearPreviousPic75,1733
static void ClearParams(void) {ClearParams80,1845
static void ClearPreviousFrame(void) {ClearPreviousFrame92,2266
static int ApplyColorProfile(const WebPData* const profile,ApplyColorProfile102,2636
static int Decode(void) {   // Fills kParams.curr_frameDecode164,4637
static void decode_callback(int what) {decode_callback189,5435
static void HandleKey(unsigned char key, int pos_x, int pos_y) {HandleKey222,6345
static void HandleReshape(int width, int height) {HandleReshape262,7633
static void PrintString(const char* const text) {PrintString275,8063
static float GetColorf(uint32_t color, int shift) {GetColorf283,8241
static void DrawCheckerBoard(void) {DrawCheckerBoard287,8331
static void HandleDisplay(void) {HandleDisplay307,8945
static void StartDisplay(void) {StartDisplay388,11943
static void Help(void) {Help417,12931
int main(int argc, char *argv[]) {main439,13916
int main(int argc, const char *argv[]) {main584,18590

examples/example_util.h,437
#define WEBP_EXAMPLES_EXAMPLE_UTIL_H_WEBP_EXAMPLES_EXAMPLE_UTIL_H_14,557
uint32_t ExUtilGetUInt(const char* const v, int base, int* const error);ExUtilGetUInt28,978
int ExUtilGetInt(const char* const v, int base, int* const error);ExUtilGetInt29,1051
float ExUtilGetFloat(const char* const v, int* const error);ExUtilGetFloat30,1118
int ExUtilGetInts(const char* v, int base, int max_output, int output[]);ExUtilGetInts36,1449

examples/example_util.c,366
uint32_t ExUtilGetUInt(const char* const v, int base, int* const error) {ExUtilGetUInt22,708
int ExUtilGetInt(const char* const v, int base, int* const error) {ExUtilGetInt33,1054
int ExUtilGetInts(const char* v, int base, int max_output, int output[]) {ExUtilGetInts37,1170
float ExUtilGetFloat(const char* const v, int* const error) {ExUtilGetFloat49,1516

examples/stopwatch.h,529
#define WEBP_EXAMPLES_STOPWATCH_H_WEBP_EXAMPLES_STOPWATCH_H_15,598
typedef LARGE_INTEGER Stopwatch;Stopwatch22,721
static WEBP_INLINE void StopwatchReset(Stopwatch* watch) {StopwatchReset24,755
static WEBP_INLINE double StopwatchReadAndReset(Stopwatch* watch) {StopwatchReadAndReset28,851
typedef struct timeval Stopwatch;Stopwatch45,1291
static WEBP_INLINE void StopwatchReset(Stopwatch* watch) {StopwatchReset47,1326
static WEBP_INLINE double StopwatchReadAndReset(Stopwatch* watch) {StopwatchReadAndReset51,1417

examples/anim_util.c,4101
#define snprintf snprintf28,819
static const int kNumChannels = 4;kNumChannels31,854
static int IsFullFrame(int width, int height,IsFullFrame38,1073
static int CheckSizeForOverflow(uint64_t size) {CheckSizeForOverflow44,1269
static int AllocateFrames(AnimatedImage* const image, uint32_t num_frames) {AllocateFrames48,1354
void ClearAnimatedImage(AnimatedImage* const image) {ClearAnimatedImage80,2331
static void ZeroFillCanvas(uint8_t* rgba,ZeroFillCanvas92,2609
static void ZeroFillFrameRect(uint8_t* rgba, int rgba_stride, int x_offset,ZeroFillFrameRect98,2841
static void CopyCanvas(const uint8_t* src, uint8_t* dst,CopyCanvas110,3261
static void CopyFrameRectangle(const uint8_t* src, uint8_t* dst, int stride,CopyFrameRectangle117,3549
static void CleanupTransparentPixels(uint32_t* rgba,CleanupTransparentPixels135,4159
static int DumpFrame(const char filename[], const char dump_folder[],DumpFrame148,4536
static int IsWebP(const WebPData* const webp_data) {IsWebP205,6291
static int ReadAnimatedWebP(const char filename[],ReadAnimatedWebP210,6496
static int IsGIF(const WebPData* const data) {IsGIF290,8988
# define LOCAL_GIF_VERSION LOCAL_GIF_VERSION299,9363
# define LOCAL_GIF_PREREQ(LOCAL_GIF_PREREQ300,9427
# define LOCAL_GIF_VERSION LOCAL_GIF_VERSION303,9521
# define LOCAL_GIF_PREREQ(LOCAL_GIF_PREREQ304,9550
  int DisposalMode;DisposalMode311,9659
  int DisposalMode;__anon101::DisposalMode311,9659
#define DISPOSAL_UNSPECIFIED DISPOSAL_UNSPECIFIED312,9679
#define DISPOSE_DO_NOT DISPOSE_DO_NOT313,9746
#define DISPOSE_BACKGROUND DISPOSE_BACKGROUND314,9812
#define DISPOSE_PREVIOUS DISPOSE_PREVIOUS315,9886
  int UserInputFlag;       // User confirmation required before disposalUserInputFlag316,9959
  int UserInputFlag;       // User confirmation required before disposal__anon101::UserInputFlag316,9959
  int DelayTime;           // Pre-display delay in 0.01sec unitsDelayTime317,10032
  int DelayTime;           // Pre-display delay in 0.01sec units__anon101::DelayTime317,10032
  int TransparentColor;    // Palette index for transparency, -1 if noneTransparentColor318,10097
  int TransparentColor;    // Palette index for transparency, -1 if none__anon101::TransparentColor318,10097
#define NO_TRANSPARENT_COLOR NO_TRANSPARENT_COLOR319,10170
} GraphicsControlBlock;GraphicsControlBlock320,10206
static int DGifExtensionToGCB(const size_t GifExtensionLength,DGifExtensionToGCB322,10231
static int DGifSavedExtensionToGCB(GifFileType* GifFile, int ImageIndex,DGifSavedExtensionToGCB339,10810
#define CONTINUE_EXT_FUNC_CODE CONTINUE_EXT_FUNC_CODE360,11523
#define DGifOpenFileName(DGifOpenFileName363,11593
#define DGifCloseFile(DGifCloseFile369,11738
static void GIFDisplayError(const GifFileType* const gif, int gif_error) {GIFDisplayError372,11791
static int IsKeyFrameGIF(const GifImageDesc* prev_desc, int prev_dispose,IsKeyFrameGIF392,12396
static int GetTransparentIndexGIF(GifFileType* gif) {GetTransparentIndexGIF406,12871
static uint32_t GetBackgroundColorGIF(GifFileType* gif) {GetBackgroundColorGIF413,13090
static uint32_t GetLoopCountGIF(const GifFileType* const gif) {GetLoopCountGIF437,14187
static int GetFrameDurationGIF(GifFileType* gif, int n) {GetFrameDurationGIF464,15290
static int CoversFrameGIF(const GifImageDesc* const target,CoversFrameGIF472,15544
static void RemapPixelsGIF(const uint8_t* const src,RemapPixelsGIF480,15900
static int ReadFrameGIF(const SavedImage* const gif_image,ReadFrameGIF497,16513
static int ReadAnimatedGIF(const char filename[], AnimatedImage* const image,ReadAnimatedGIF524,17409
static int IsGIF(const WebPData* const data) {IsGIF693,23508
static int ReadAnimatedGIF(const char filename[], AnimatedImage* const image,ReadAnimatedGIF698,23584
int ReadAnimatedImage(const char filename[], AnimatedImage* const image,ReadAnimatedImage713,24050
static void Accumulate(double v1, double v2, double* const max_diff,Accumulate742,24913
void GetDiffAndPSNR(const uint8_t rgba1[], const uint8_t rgba2[],GetDiffAndPSNR749,25131

examples/webpmux.c,4385
  NIL_ACTION = 0,NIL_ACTION69,2343
  ACTION_GET,ACTION_GET70,2361
  ACTION_SET,ACTION_SET71,2375
  ACTION_STRIP,ACTION_STRIP72,2389
  ACTION_INFO,ACTION_INFO73,2405
  ACTION_HELP,ACTION_HELP74,2420
  ACTION_DURATIONACTION_DURATION75,2435
} ActionType;ActionType76,2453
  NIL_SUBTYPE = 0,NIL_SUBTYPE79,2483
  SUBTYPE_ANMF,SUBTYPE_ANMF80,2502
  SUBTYPE_LOOP,SUBTYPE_LOOP81,2518
  SUBTYPE_BGCOLORSUBTYPE_BGCOLOR82,2534
} FeatureSubType;FeatureSubType83,2552
  FeatureSubType subtype_;subtype_86,2588
  FeatureSubType subtype_;__anon104::subtype_86,2588
  const char* filename_;filename_87,2615
  const char* filename_;__anon104::filename_87,2615
  const char* params_;params_88,2640
  const char* params_;__anon104::params_88,2640
} FeatureArg;FeatureArg89,2663
  NIL_FEATURE = 0,NIL_FEATURE92,2693
  FEATURE_EXIF,FEATURE_EXIF93,2712
  FEATURE_XMP,FEATURE_XMP94,2728
  FEATURE_ICCP,FEATURE_ICCP95,2743
  FEATURE_ANMF,FEATURE_ANMF96,2759
  FEATURE_DURATION,FEATURE_DURATION97,2775
  LAST_FEATURELAST_FEATURE98,2795
} FeatureType;FeatureType99,2810
static const char* const kFourccList[LAST_FEATURE] = {kFourccList101,2826
static const char* const kDescriptions[LAST_FEATURE] = {kDescriptions105,2924
  FeatureType type_;type_111,3078
  FeatureType type_;__anon106::type_111,3078
  FeatureArg* args_;args_112,3099
  FeatureArg* args_;__anon106::args_112,3099
  int arg_count_;arg_count_113,3120
  int arg_count_;__anon106::arg_count_113,3120
} Feature;Feature114,3138
  ActionType action_type_;action_type_117,3167
  ActionType action_type_;__anon107::action_type_117,3167
  const char* input_;input_118,3194
  const char* input_;__anon107::input_118,3194
  const char* output_;output_119,3216
  const char* output_;__anon107::output_119,3216
  Feature feature_;feature_120,3239
  Feature feature_;__anon107::feature_120,3239
} WebPMuxConfig;WebPMuxConfig121,3259
static int CountOccurrences(const char* arglist[], int list_length,CountOccurrences126,3380
static const char* const kErrorMessages[-WEBP_MUX_NOT_ENOUGH_DATA + 1] = {kErrorMessages139,3667
static const char* ErrorString(WebPMuxError err) {ErrorString144,3874
#define RETURN_IF_ERROR(RETURN_IF_ERROR149,4031
#define RETURN_IF_ERROR3(RETURN_IF_ERROR3155,4320
#define ERROR_GOTO1(ERROR_GOTO1161,4609
#define ERROR_GOTO2(ERROR_GOTO2168,4979
#define ERROR_GOTO3(ERROR_GOTO3175,5349
static WebPMuxError DisplayInfo(const WebPMux* mux) {DisplayInfo182,5719
static void PrintHelp(void) {PrintHelp292,9518
static void WarnAboutOddOffset(const WebPMuxFrameInfo* const info) {WarnAboutOddOffset374,13009
static int ReadFileToWebPData(const char* const filename,ReadFileToWebPData382,13332
static int CreateMux(const char* const filename, WebPMux** mux) {CreateMux392,13615
static int WriteData(const char* filename, const WebPData* const webpdata) {WriteData403,13977
static int WriteWebP(WebPMux* const mux, const char* filename) {WriteWebP422,14606
static WebPMux* DuplicateMuxHeader(const WebPMux* const mux) {DuplicateMuxHeader435,14976
static int ParseFrameArgs(const char* args, WebPMuxFrameInfo* const info) {ParseFrameArgs474,15962
static int ParseBgcolorArgs(const char* args, uint32_t* const bgcolor) {ParseBgcolorArgs509,17010
static void DeleteConfig(WebPMuxConfig* config) {DeleteConfig520,17402
static int ValidateCommandLine(int argc, const char* argv[],ValidateCommandLine534,17896
#define ACTION_IS_NIL ACTION_IS_NIL599,20142
#define FEATURETYPE_IS_NIL FEATURETYPE_IS_NIL601,20202
#define CHECK_NUM_ARGS_LESS(CHECK_NUM_ARGS_LESS603,20262
#define CHECK_NUM_ARGS_NOT_EQUAL(CHECK_NUM_ARGS_NOT_EQUAL609,20567
static int ParseCommandLine(int argc, const char* argv[],ParseCommandLine617,20970
static int ValidateConfig(WebPMuxConfig* config) {ValidateConfig780,26842
static int InitializeConfig(int argc, const char* argv[],InitializeConfig813,27758
#undef ACTION_IS_NILACTION_IS_NIL842,28610
#undef FEATURETYPE_IS_NILFEATURETYPE_IS_NIL843,28631
#undef CHECK_NUM_ARGS_LESSCHECK_NUM_ARGS_LESS844,28657
#undef CHECK_NUM_ARGS_MORECHECK_NUM_ARGS_MORE845,28684
static int GetFrame(const WebPMux* mux, const WebPMuxConfig* config) {GetFrame850,28809
static int Process(const WebPMuxConfig* config) {Process894,30146
int main(int argc, const char* argv[]) {main1142,38843

imageio/metadata.c,303
void MetadataInit(Metadata* const metadata) {MetadataInit20,592
void MetadataPayloadDelete(MetadataPayload* const payload) {MetadataPayloadDelete25,715
void MetadataFree(Metadata* const metadata) {MetadataFree32,880
int MetadataCopy(const char* metadata, size_t metadata_len,MetadataCopy39,1086

imageio/jpegdec.c,2107
# define JPEG_APP1 JPEG_APP135,903
# define JPEG_APP2 JPEG_APP238,963
  const uint8_t* data;data42,1023
  const uint8_t* data;__anon108::data42,1023
  size_t data_length;data_length43,1046
  size_t data_length;__anon108::data_length43,1046
  int seq;  // this segment's sequence number [1, 255] for use in reassembly.seq44,1068
  int seq;  // this segment's sequence number [1, 255] for use in reassembly.__anon108::seq44,1068
} ICCPSegment;ICCPSegment45,1146
static void SaveMetadataMarkers(j_decompress_ptr dinfo) {SaveMetadataMarkers47,1162
static int CompareICCPSegments(const void* a, const void* b) {CompareICCPSegments53,1417
static int StoreICCP(j_decompress_ptr dinfo, MetadataPayload* const iccp) {StoreICCP62,1795
static int ExtractMetadataFromJPEG(j_decompress_ptr dinfo,ExtractMetadataFromJPEG150,4895
#undef JPEG_APP1JPEG_APP1196,6812
#undef JPEG_APP2JPEG_APP2197,6829
struct my_error_mgr {my_error_mgr202,6946
  struct jpeg_error_mgr pub;pub203,6968
  struct jpeg_error_mgr pub;my_error_mgr::pub203,6968
  jmp_buf setjmp_buffer;setjmp_buffer204,6997
  jmp_buf setjmp_buffer;my_error_mgr::setjmp_buffer204,6997
static void my_error_exit(j_common_ptr dinfo) {my_error_exit207,7026
  struct jpeg_source_mgr pub;pub214,7232
  struct jpeg_source_mgr pub;__anon109::pub214,7232
  const uint8_t* data;data215,7262
  const uint8_t* data;__anon109::data215,7262
  size_t data_size;data_size216,7285
  size_t data_size;__anon109::data_size216,7285
} JPEGReadContext;JPEGReadContext217,7305
static void ContextInit(j_decompress_ptr cinfo) {ContextInit219,7325
static boolean ContextFill(j_decompress_ptr cinfo) {ContextFill225,7524
static void ContextSkip(j_decompress_ptr cinfo, long jump_size) {ContextSkip231,7658
static void ContextTerm(j_decompress_ptr cinfo) {ContextTerm241,8008
static void ContextSetup(volatile struct jpeg_decompress_struct* const cinfo,ContextSetup245,8076
int ReadJPEG(const uint8_t* const data, size_t data_size,ReadJPEG257,8541
int ReadJPEG(const uint8_t* const data, size_t data_size,ReadJPEG345,10840

imageio/image_dec.c,437
static WEBP_INLINE uint32_t GetBE32(const uint8_t buf[]) {GetBE3214,522
WebPInputFileFormat WebPGuessImageType(const uint8_t* const data,WebPGuessImageType18,661
static int FailReader(const uint8_t* const data, size_t data_size,FailReader41,1566
WebPImageReader WebPGetImageReader(WebPInputFileFormat format) {WebPGetImageReader52,1858
WebPImageReader WebPGuessImageReader(const uint8_t* const data,WebPGuessImageReader63,2198

imageio/imageio_util.h,602
#define WEBP_IMAGEIO_IMAGEIO_UTIL_H_WEBP_IMAGEIO_IMAGEIO_UTIL_H_14,554
FILE* ImgIoUtilSetBinaryMode(FILE* file);ImgIoUtilSetBinaryMode28,858
int ImgIoUtilReadFile(const char* const file_name,ImgIoUtilReadFile35,1209
int ImgIoUtilReadFromStdin(const uint8_t** data, size_t* data_size);ImgIoUtilReadFromStdin39,1397
int ImgIoUtilWriteFile(const char* const file_name,ImgIoUtilWriteFile43,1614
void ImgIoUtilCopyPlane(const uint8_t* src, int src_stride,ImgIoUtilCopyPlane49,1884
int ImgIoUtilCheckSizeArgumentsOverflow(uint64_t nmemb, size_t size);ImgIoUtilCheckSizeArgumentsOverflow55,2155

imageio/tiffdec.c,1470
  ttag_t tag;tag30,761
  ttag_t tag;__anon110::tag30,761
  size_t storage_offset;storage_offset31,775
  size_t storage_offset;__anon110::storage_offset31,775
} kTIFFMetadataMap[] = {kTIFFMetadataMap32,800
static int ExtractMetadataFromTIFF(TIFF* const tif, Metadata* const metadata) {ExtractMetadataFromTIFF40,1032
  const uint8_t* data;data71,2196
  const uint8_t* data;__anon111::data71,2196
  toff_t size;size72,2219
  toff_t size;__anon111::size72,2219
  toff_t pos;pos73,2234
  toff_t pos;__anon111::pos73,2234
} MyData;MyData74,2248
static int MyClose(thandle_t opaque) {MyClose76,2259
static toff_t MySize(thandle_t opaque) {MySize81,2329
static toff_t MySeek(thandle_t opaque, toff_t offset, int whence) {MySeek86,2446
static int MyMapFile(thandle_t opaque, void** base, toff_t* size) {MyMapFile96,2763
static void MyUnmapFile(thandle_t opaque, void* base, toff_t size) {MyUnmapFile102,2889
static tsize_t MyRead(thandle_t opaque, void* dst, tsize_t size) {MyRead108,3005
#define MFIX MFIX122,3457
#define HALF HALF123,3508
#define KINV_255 KINV_255124,3541
static uint32_t Unmult(uint8_t x, uint32_t mult) {Unmult126,3581
static WEBP_INLINE uint32_t GetScale(uint32_t a) {GetScale131,3715
static void MultARGBRow(uint8_t* ptr, int width) {MultARGBRow135,3798
int ReadTIFF(const uint8_t* const data, size_t data_size,ReadTIFF152,4240
int ReadTIFF(const uint8_t* const data, size_t data_size,ReadTIFF254,7676

imageio/tiffdec.h,137
#define WEBP_IMAGEIO_TIFFDEC_H_WEBP_IMAGEIO_TIFFDEC_H_13,512
int ReadTIFF(const uint8_t* const data, size_t data_size,ReadTIFF29,960

imageio/metadata.h,973
#define WEBP_IMAGEIO_METADATA_H_WEBP_IMAGEIO_METADATA_H_14,534
typedef struct MetadataPayload {MetadataPayload22,633
  uint8_t* bytes;bytes23,666
  uint8_t* bytes;MetadataPayload::bytes23,666
  size_t size;size24,684
  size_t size;MetadataPayload::size24,684
} MetadataPayload;MetadataPayload25,699
typedef struct Metadata {Metadata27,719
  MetadataPayload exif;exif28,745
  MetadataPayload exif;Metadata::exif28,745
  MetadataPayload iccp;iccp29,769
  MetadataPayload iccp;Metadata::iccp29,769
  MetadataPayload xmp;xmp30,793
  MetadataPayload xmp;Metadata::xmp30,793
} Metadata;Metadata31,816
#define METADATA_OFFSET(METADATA_OFFSET33,829
void MetadataInit(Metadata* const metadata);MetadataInit35,879
void MetadataPayloadDelete(MetadataPayload* const payload);MetadataPayloadDelete36,924
void MetadataFree(Metadata* const metadata);MetadataFree37,984
int MetadataCopy(const char* metadata, size_t metadata_len,MetadataCopy40,1107

imageio/webpdec.c,577
static const char* const kStatusMessages[VP8_STATUS_NOT_ENOUGH_DATA + 1] = {kStatusMessages25,746
static void PrintAnimationWarning(const WebPDecoderConfig* const config) {PrintAnimationWarning30,958
void PrintWebPError(const char* const in_file, int status) {PrintWebPError39,1294
int LoadWebP(const char* const in_file,LoadWebP48,1611
VP8StatusCode DecodeWebP(const uint8_t* const data, size_t data_size,DecodeWebP72,2251
VP8StatusCode DecodeWebPIncremental(DecodeWebPIncremental79,2518
int ReadWebP(const uint8_t* const data, size_t data_size,ReadWebP115,3616

imageio/wicdec.c,1387
#define INITGUID INITGUID24,686
#define CINTERFACECINTERFACE26,770
#define COBJMACROSCOBJMACROS27,789
#define _WIN32_IE _WIN32_IE28,808
#define IFS(IFS39,1122
#define WEBP_DEFINE_GUID(WEBP_DEFINE_GUID48,1608
#define MAKE_REFGUID(MAKE_REFGUID53,1795
#define MAKE_REFGUID(MAKE_REFGUID55,1829
typedef struct WICFormatImporter {WICFormatImporter58,1866
  const GUID* pixel_format;pixel_format59,1901
  const GUID* pixel_format;WICFormatImporter::pixel_format59,1901
  int bytes_per_pixel;bytes_per_pixel60,1929
  int bytes_per_pixel;WICFormatImporter::bytes_per_pixel60,1929
  int (*import)(WebPPicture* const, const uint8_t* const, int);import61,1952
  int (*import)(WebPPicture* const, const uint8_t* const, int);WICFormatImporter::import61,1952
} WICFormatImporter;WICFormatImporter62,2016
static HRESULT OpenInputStream(const char* filename, IStream** stream) {OpenInputStream86,3127
static HRESULT ExtractICCP(IWICImagingFactory* const factory,ExtractICCP126,4360
static HRESULT ExtractMetadata(IWICImagingFactory* const factory,ExtractMetadata182,6500
static int HasPalette(GUID pixel_format) {HasPalette193,6942
static int HasAlpha(IWICImagingFactory* const factory,HasAlpha204,7471
int ReadPictureWithWIC(const char* const filename,ReadPictureWithWIC242,9243
int ReadPictureWithWIC(const char* const filename,ReadPictureWithWIC381,14284

imageio/webpdec.h,433
#define WEBP_IMAGEIO_WEBPDEC_H_WEBP_IMAGEIO_WEBPDEC_H_13,512
void PrintWebPError(const char* const in_file, int status);PrintWebPError30,918
int LoadWebP(const char* const in_file,LoadWebP35,1164
VP8StatusCode DecodeWebP(const uint8_t* const data, size_t data_size,DecodeWebP44,1587
VP8StatusCode DecodeWebPIncremental(DecodeWebPIncremental48,1777
int ReadWebP(const uint8_t* const data, size_t data_size,ReadWebP59,2306

imageio/image_enc.c,2366
#define INITGUID INITGUID24,700
#define CINTERFACECINTERFACE26,784
#define COBJMACROSCOBJMACROS27,803
#define _WIN32_IE _WIN32_IE28,822
#define IFS(IFS43,1207
#define MAKE_REFGUID(MAKE_REFGUID52,1661
#define MAKE_REFGUID(MAKE_REFGUID54,1695
static HRESULT CreateOutputStream(const char* out_file_name,CreateOutputStream57,1732
static HRESULT WriteUsingWIC(const char* out_file_name, int use_stdout,WriteUsingWIC73,2265
int WebPWritePNG(const char* out_file_name, int use_stdout,WebPWritePNG141,5160
static void PNGAPI PNGErrorFunction(png_structp png, png_const_charp dummy) {PNGErrorFunction155,5767
int WebPWritePNG(FILE* out_file, const WebPDecBuffer* const buffer) {WebPWritePNG160,5929
int WebPWritePNG(FILE* fout, const WebPDecBuffer* const buffer) {WebPWritePNG201,7286
static int WritePPMPAM(FILE* fout, const WebPDecBuffer* const buffer,WritePPMPAM214,7720
int WebPWritePPM(FILE* fout, const WebPDecBuffer* const buffer) {WebPWritePPM244,8569
int WebPWritePAM(FILE* fout, const WebPDecBuffer* const buffer) {WebPWritePAM248,8677
int WebPWrite16bAsPGM(FILE* fout, const WebPDecBuffer* const buffer) {WebPWrite16bAsPGM256,8942
static void PutLE16(uint8_t* const dst, uint32_t value) {PutLE16279,9616
static void PutLE32(uint8_t* const dst, uint32_t value) {PutLE32284,9741
#define BMP_HEADER_SIZE BMP_HEADER_SIZE289,9890
int WebPWriteBMP(FILE* fout, const WebPDecBuffer* const buffer) {WebPWriteBMP290,9917
#undef BMP_HEADER_SIZEBMP_HEADER_SIZE346,12181
#define NUM_IFD_ENTRIES NUM_IFD_ENTRIES351,12295
#define EXTRA_DATA_SIZE EXTRA_DATA_SIZE352,12322
#define EXTRA_DATA_OFFSET EXTRA_DATA_OFFSET354,12420
#define TIFF_HEADER_SIZE TIFF_HEADER_SIZE355,12478
int WebPWriteTIFF(FILE* fout, const WebPDecBuffer* const buffer) {WebPWriteTIFF357,12542
#undef TIFF_HEADER_SIZETIFF_HEADER_SIZE426,15749
#undef EXTRA_DATA_OFFSETEXTRA_DATA_OFFSET427,15773
#undef EXTRA_DATA_SIZEEXTRA_DATA_SIZE428,15798
#undef NUM_IFD_ENTRIESNUM_IFD_ENTRIES429,15821
int WebPWriteAlphaPlane(FILE* fout, const WebPDecBuffer* const buffer) {WebPWriteAlphaPlane434,15940
int WebPWritePGM(FILE* fout, const WebPDecBuffer* const buffer) {WebPWritePGM458,16597
int WebPWriteYUV(FILE* fout, const WebPDecBuffer* const buffer) {WebPWriteYUV502,18045
int WebPSaveImage(const WebPDecBuffer* const buffer,WebPSaveImage544,19336

imageio/imageio_util.c,535
FILE* ImgIoUtilSetBinaryMode(FILE* file) {ImgIoUtilSetBinaryMode25,785
int ImgIoUtilReadFromStdin(const uint8_t** data, size_t* data_size) {ImgIoUtilReadFromStdin35,1010
int ImgIoUtilReadFile(const char* const file_name,ImgIoUtilReadFile68,1946
int ImgIoUtilWriteFile(const char* const file_name,ImgIoUtilWriteFile106,2928
void ImgIoUtilCopyPlane(const uint8_t* src, int src_stride,ImgIoUtilCopyPlane127,3548
int ImgIoUtilCheckSizeArgumentsOverflow(uint64_t nmemb, size_t size) {ImgIoUtilCheckSizeArgumentsOverflow138,3891

imageio/image_enc.h,1979
#define WEBP_IMAGEIO_IMAGE_ENC_H_WEBP_IMAGEIO_IMAGE_ENC_H_15,608
  PNG = 0,PNG32,838
  PAM,PAM33,849
  PPM,PPM34,856
  PGM,PGM35,863
  BMP,BMP36,870
  TIFF,TIFF37,877
  RAW_YUV,RAW_YUV38,885
  ALPHA_PLANE_ONLY,  // this is for experimenting onlyALPHA_PLANE_ONLY39,896
  RGB, RGBA, BGR, BGRA, ARGB,RGB41,1003
  RGB, RGBA, BGR, BGRA, ARGB,RGBA41,1003
  RGB, RGBA, BGR, BGRA, ARGB,BGR41,1003
  RGB, RGBA, BGR, BGRA, ARGB,BGRA41,1003
  RGB, RGBA, BGR, BGRA, ARGB,ARGB41,1003
  RGBA_4444, RGB_565,RGBA_444442,1033
  RGBA_4444, RGB_565,RGB_56542,1033
  rgbA, bgrA, Argb, rgbA_4444,rgbA43,1055
  rgbA, bgrA, Argb, rgbA_4444,bgrA43,1055
  rgbA, bgrA, Argb, rgbA_4444,Argb43,1055
  rgbA, bgrA, Argb, rgbA_4444,rgbA_444443,1055
  YUV, YUVAYUV44,1086
  YUV, YUVAYUVA44,1086
} WebPOutputFileFormat;WebPOutputFileFormat45,1098
int WebPSaveImage(const WebPDecBuffer* const buffer,WebPSaveImage52,1367
int WebPWritePNG(const char* out_file_name, int use_stdout,WebPWritePNG57,1541
int WebPWritePNG(FILE* out_file, const WebPDecBuffer* const buffer);WebPWritePNG60,1667
int WebPWritePPM(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWritePPM64,1782
int WebPWritePAM(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWritePAM67,1893
int WebPWrite16bAsPGM(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWrite16bAsPGM70,2031
int WebPWriteBMP(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWriteBMP73,2124
int WebPWriteTIFF(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWriteTIFF76,2213
int WebPWriteAlphaPlane(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWriteAlphaPlane79,2327
int WebPWritePGM(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWritePGM84,2587
int WebPWriteYUV(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWriteYUV87,2706
int WebPWrite16bAsPGM(FILE* fout, const struct WebPDecBuffer* const buffer);WebPWrite16bAsPGM90,2859

imageio/pngdec.c,1302
static void PNGAPI error_function(png_structp png, png_const_charp error) {error_function30,800
static uint8_t* HexStringToBytes(const char* hexstring,HexStringToBytes44,1560
static int ProcessRawProfile(const char* profile, size_t profile_len,ProcessRawProfile72,2263
  const char* name;name106,3260
  const char* name;__anon113::name106,3260
  int (*process)(const char* profile, size_t profile_len,process107,3280
  int (*process)(const char* profile, size_t profile_len,__anon113::process107,3280
  size_t storage_offset;storage_offset109,3388
  size_t storage_offset;__anon113::storage_offset109,3388
} kPNGMetadataMap[] = {kPNGMetadataMap110,3413
static int ExtractMetadataFromPNG(png_structp png,ExtractMetadataFromPNG126,4157
  const uint8_t* data;data193,6339
  const uint8_t* data;__anon114::data193,6339
  size_t data_size;data_size194,6362
  size_t data_size;__anon114::data_size194,6362
  png_size_t offset;offset195,6382
  png_size_t offset;__anon114::offset195,6382
} PNGReadContext;PNGReadContext196,6403
static void ReadFunc(png_structp png_ptr, png_bytep data, png_size_t length) {ReadFunc198,6422
int ReadPNG(const uint8_t* const data, size_t data_size,ReadPNG207,6770
int ReadPNG(const uint8_t* const data, size_t data_size,ReadPNG317,9713

imageio/jpegdec.h,137
#define WEBP_IMAGEIO_JPEGDEC_H_WEBP_IMAGEIO_JPEGDEC_H_13,512
int ReadJPEG(const uint8_t* const data, size_t data_size,ReadJPEG29,907

imageio/image_dec.h,775
#define WEBP_IMAGEIO_IMAGE_DEC_H_WEBP_IMAGEIO_IMAGE_DEC_H_15,616
  WEBP_PNG_FORMAT = 0,WEBP_PNG_FORMAT36,945
  WEBP_JPEG_FORMAT,WEBP_JPEG_FORMAT37,968
  WEBP_TIFF_FORMAT,WEBP_TIFF_FORMAT38,988
  WEBP_WEBP_FORMAT,WEBP_WEBP_FORMAT39,1008
  WEBP_PNM_FORMAT,WEBP_PNM_FORMAT40,1028
  WEBP_UNSUPPORTED_FORMATWEBP_UNSUPPORTED_FORMAT41,1047
} WebPInputFileFormat;WebPInputFileFormat42,1073
WebPInputFileFormat WebPGuessImageType(const uint8_t* const data,WebPGuessImageType46,1237
typedef int (*WebPImageReader)(const uint8_t* const data, size_t data_size,WebPImageReader50,1435
WebPImageReader WebPGetImageReader(WebPInputFileFormat format);WebPGetImageReader55,1711
WebPImageReader WebPGuessImageReader(const uint8_t* const data,WebPGuessImageReader60,1974

imageio/wicdec.h,138
#define WEBP_IMAGEIO_WICDEC_H_WEBP_IMAGEIO_WICDEC_H_13,538
int ReadPictureWithWIC(const char* const filename,ReadPictureWithWIC26,901

imageio/pnmdec.h,133
#define WEBP_IMAGEIO_PNMDEC_H_WEBP_IMAGEIO_PNMDEC_H_13,535
int ReadPNM(const uint8_t* const data, size_t data_size,ReadPNM29,931

imageio/pnmdec.c,1615
  WIDTH_FLAG      = 1 << 0,WIDTH_FLAG24,680
  HEIGHT_FLAG     = 1 << 1,HEIGHT_FLAG25,708
  DEPTH_FLAG      = 1 << 2,DEPTH_FLAG26,736
  MAXVAL_FLAG     = 1 << 3,MAXVAL_FLAG27,764
  TUPLE_FLAG      = 1 << 4,TUPLE_FLAG28,792
  ALL_NEEDED_FLAGS = 0x1fALL_NEEDED_FLAGS29,820
} PNMFlags;PNMFlags30,846
  const uint8_t* data;data33,876
  const uint8_t* data;__anon117::data33,876
  size_t data_size;data_size34,899
  size_t data_size;__anon117::data_size34,899
  int width, height;width35,919
  int width, height;__anon117::width35,919
  int width, height;height35,919
  int width, height;__anon117::height35,919
  int bytes_per_px;   // 1, 3, 4bytes_per_px36,940
  int bytes_per_px;   // 1, 3, 4__anon117::bytes_per_px36,940
  int depth;depth37,973
  int depth;__anon117::depth37,973
  int max_value;max_value38,986
  int max_value;__anon117::max_value38,986
  int type;           // 5, 6 or 7type39,1003
  int type;           // 5, 6 or 7__anon117::type39,1003
  int seen_flags;seen_flags40,1038
  int seen_flags;__anon117::seen_flags40,1038
} PNMInfo;PNMInfo41,1056
#define MAX_LINE_SIZE MAX_LINE_SIZE46,1166
static const size_t kMinPNMHeaderSize = 3;kMinPNMHeaderSize47,1193
static size_t ReadLine(const uint8_t* const data, size_t off, size_t data_size,ReadLine49,1237
static size_t FlagError(const char flag[]) {FlagError67,1753
static size_t ReadPAMFields(PNMInfo* const info, size_t off) {ReadPAMFields73,1946
static size_t ReadHeader(PNMInfo* const info) {ReadHeader135,4146
int ReadPNM(const uint8_t* const data, size_t data_size,ReadPNM176,5512

imageio/pngdec.h,133
#define WEBP_IMAGEIO_PNGDEC_H_WEBP_IMAGEIO_PNGDEC_H_13,510
int ReadPNG(const uint8_t* const data, size_t data_size,ReadPNG29,955

swig/libwebp_python_wrap.c,34363
#define SWIGPYTHONSWIGPYTHON11,518
#define SWIG_PYTHON_DIRECTOR_NO_VTABLESWIG_PYTHON_DIRECTOR_NO_VTABLE12,537
#  define SWIGTEMPLATEDISAMBIGUATOR SWIGTEMPLATEDISAMBIGUATOR22,1050
#  define SWIGTEMPLATEDISAMBIGUATOR SWIGTEMPLATEDISAMBIGUATOR26,1305
#  define SWIGTEMPLATEDISAMBIGUATORSWIGTEMPLATEDISAMBIGUATOR28,1357
#   define SWIGINLINE SWIGINLINE35,1529
#   define SWIGINLINESWIGINLINE37,1565
#     define SWIGUNUSED SWIGUNUSED45,1808
#     define SWIGUNUSEDSWIGUNUSED47,1870
#   define SWIGUNUSED SWIGUNUSED50,1926
#   define SWIGUNUSEDSWIGUNUSED52,1984
#   define SWIGUNUSEDPARM(SWIGUNUSEDPARM64,2223
#   define SWIGUNUSEDPARM(SWIGUNUSEDPARM66,2259
# define SWIGINTERN SWIGINTERN72,2363
# define SWIGINTERNINLINE SWIGINTERNINLINE77,2468
#    define GCC_HASCLASSVISIBILITYGCC_HASCLASSVISIBILITY83,2643
#     define SWIGEXPORTSWIGEXPORT90,2810
#     define SWIGEXPORT SWIGEXPORT92,2843
#     define SWIGEXPORT SWIGEXPORT96,2966
#     define SWIGEXPORTSWIGEXPORT98,3039
#   define SWIGSTDCALL SWIGSTDCALL106,3213
#   define SWIGSTDCALLSWIGSTDCALL108,3253
# define _CRT_SECURE_NO_DEPRECATE_CRT_SECURE_NO_DEPRECATE114,3477
# define _SCL_SECURE_NO_DEPRECATE_SCL_SECURE_NO_DEPRECATE119,3711
#define SWIG_RUNTIME_VERSION SWIG_RUNTIME_VERSION136,4230
# define SWIG_QUOTE_STRING(SWIG_QUOTE_STRING140,4342
# define SWIG_EXPAND_AND_QUOTE_STRING(SWIG_EXPAND_AND_QUOTE_STRING141,4375
# define SWIG_TYPE_TABLE_NAME SWIG_TYPE_TABLE_NAME142,4437
# define SWIG_TYPE_TABLE_NAMESWIG_TYPE_TABLE_NAME144,4519
# define SWIGRUNTIME SWIGRUNTIME157,4886
# define SWIGRUNTIMEINLINE SWIGRUNTIMEINLINE161,4952
# define SWIG_BUFFER_SIZE SWIG_BUFFER_SIZE166,5062
#define SWIG_POINTER_DISOWN SWIG_POINTER_DISOWN170,5137
#define SWIG_CAST_NEW_MEMORY SWIG_CAST_NEW_MEMORY171,5176
#define SWIG_POINTER_OWN SWIG_POINTER_OWN174,5252
#define SWIG_OK SWIG_OK256,7362
#define SWIG_ERROR SWIG_ERROR257,7401
#define SWIG_IsOK(SWIG_IsOK258,7441
#define SWIG_ArgError(SWIG_ArgError259,7485
#define SWIG_CASTRANKLIMIT SWIG_CASTRANKLIMIT262,7632
#define SWIG_NEWOBJMASK SWIG_NEWOBJMASK264,7744
#define SWIG_TMPOBJMASK SWIG_TMPOBJMASK266,7873
#define SWIG_BADOBJ SWIG_BADOBJ268,7961
#define SWIG_OLDOBJ SWIG_OLDOBJ269,8009
#define SWIG_NEWOBJ SWIG_NEWOBJ270,8054
#define SWIG_TMPOBJ SWIG_TMPOBJ271,8117
#define SWIG_AddNewMask(SWIG_AddNewMask273,8218
#define SWIG_DelNewMask(SWIG_DelNewMask274,8296
#define SWIG_IsNewObj(SWIG_IsNewObj275,8375
#define SWIG_AddTmpMask(SWIG_AddTmpMask276,8450
#define SWIG_DelTmpMask(SWIG_DelTmpMask277,8528
#define SWIG_IsTmpObj(SWIG_IsTmpObj278,8607
#    define SWIG_TypeRank SWIG_TypeRank283,8760
#    define SWIG_MAXCASTRANK SWIG_MAXCASTRANK286,8886
#  define SWIG_CASTRANKMASK SWIG_CASTRANKMASK288,8937
#  define SWIG_CastRank(SWIG_CastRank289,9000
SWIGINTERNINLINE int SWIG_AddCast(int r) {SWIG_AddCast290,9061
SWIGINTERNINLINE int SWIG_CheckState(int r) {SWIG_CheckState293,9198
#  define SWIG_AddCastSWIG_AddCast297,9326
#  define SWIG_CheckState(SWIG_CheckState298,9349
typedef void *(*swig_converter_func)(void *, int *);swig_converter_func308,9471
typedef struct swig_type_info *(*swig_dycast_func)(void **);swig_dycast_func309,9524
typedef struct swig_type_info {swig_type_info312,9635
  const char             *name;                 /* mangled name of this type */name313,9667
  const char             *name;                 /* mangled name of this type */swig_type_info::name313,9667
  const char             *str;                  /* human readable name of this type */str314,9747
  const char             *str;                  /* human readable name of this type */swig_type_info::str314,9747
  swig_dycast_func        dcast;                /* dynamic cast function down a hierarchy */dcast315,9834
  swig_dycast_func        dcast;                /* dynamic cast function down a hierarchy */swig_type_info::dcast315,9834
  struct swig_cast_info  *cast;                 /* linked list of types that can cast into this type */cast316,9927
  struct swig_cast_info  *cast;                 /* linked list of types that can cast into this type */swig_type_info::cast316,9927
  void                   *clientdata;           /* language specific type data */clientdata317,10031
  void                   *clientdata;           /* language specific type data */swig_type_info::clientdata317,10031
  int                    owndata;               /* flag if the structure owns the clientdata */owndata318,10113
  int                    owndata;               /* flag if the structure owns the clientdata */swig_type_info::owndata318,10113
} swig_type_info;swig_type_info319,10209
typedef struct swig_cast_info {swig_cast_info322,10301
  swig_type_info         *type;                 /* pointer to type that is equivalent to this type */type323,10333
  swig_type_info         *type;                 /* pointer to type that is equivalent to this type */swig_cast_info::type323,10333
  swig_converter_func     converter;            /* function to cast the void pointers */converter324,10435
  swig_converter_func     converter;            /* function to cast the void pointers */swig_cast_info::converter324,10435
  struct swig_cast_info  *next;                 /* pointer to next cast in linked list */next325,10524
  struct swig_cast_info  *next;                 /* pointer to next cast in linked list */swig_cast_info::next325,10524
  struct swig_cast_info  *prev;                 /* pointer to the previous cast */prev326,10614
  struct swig_cast_info  *prev;                 /* pointer to the previous cast */swig_cast_info::prev326,10614
} swig_cast_info;swig_cast_info327,10697
typedef struct swig_module_info {swig_module_info332,10911
  swig_type_info         **types;               /* Array of pointers to swig_type_info structures that are in this module */types333,10945
  swig_type_info         **types;               /* Array of pointers to swig_type_info structures that are in this module */swig_module_info::types333,10945
  size_t                 size;                  /* Number of types in this module */size334,11070
  size_t                 size;                  /* Number of types in this module */swig_module_info::size334,11070
  struct swig_module_info *next;                /* Pointer to next element in circularly linked list */next335,11155
  struct swig_module_info *next;                /* Pointer to next element in circularly linked list */swig_module_info::next335,11155
  swig_type_info         **type_initial;        /* Array of initially generated type structures */type_initial336,11259
  swig_type_info         **type_initial;        /* Array of initially generated type structures */swig_module_info::type_initial336,11259
  swig_cast_info         **cast_initial;        /* Array of initially generated casting structures */cast_initial337,11358
  swig_cast_info         **cast_initial;        /* Array of initially generated casting structures */swig_module_info::cast_initial337,11358
  void                    *clientdata;          /* Language specific module data */clientdata338,11460
  void                    *clientdata;          /* Language specific module data */swig_module_info::clientdata338,11460
} swig_module_info;swig_module_info339,11544
SWIG_TypeNameComp(const char *f1, const char *l1,SWIG_TypeNameComp349,11802
SWIG_TypeEquiv(const char *nb, const char *tb) {SWIG_TypeEquiv364,12260
SWIG_TypeCompare(const char *nb, const char *tb) {SWIG_TypeCompare383,12717
SWIG_TypeCheck(const char *c, swig_type_info *ty) {SWIG_TypeCheck402,13097
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {SWIG_TypeCheckStruct429,13796
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {SWIG_TypeCast456,14452
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {SWIG_TypeDynamicCast464,14690
SWIG_TypeName(const swig_type_info *ty) {SWIG_TypeName478,15000
SWIG_TypePrettyName(const swig_type_info *type) {SWIG_TypePrettyName487,15215
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {SWIG_TypeClientData508,15768
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {SWIG_TypeNewClientData524,16163
SWIG_MangledTypeQueryModule(swig_module_info *start,SWIG_MangledTypeQueryModule538,16594
SWIG_TypeQueryModule(swig_module_info *start,SWIG_TypeQueryModule583,18028
SWIG_PackData(char *c, void *ptr, size_t sz) {SWIG_PackData612,18840
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {SWIG_UnpackData628,19253
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {SWIG_PackVoidPtr656,19932
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {SWIG_UnpackVoidPtr667,20244
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {SWIG_PackDataName680,20517
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {SWIG_UnpackDataName695,20866
#define  SWIG_UnknownError SWIG_UnknownError712,21169
#define  SWIG_IOError SWIG_IOError713,21207
#define  SWIG_RuntimeError SWIG_RuntimeError714,21245
#define  SWIG_IndexError SWIG_IndexError715,21283
#define  SWIG_TypeError SWIG_TypeError716,21321
#define  SWIG_DivisionByZero SWIG_DivisionByZero717,21359
#define  SWIG_OverflowError SWIG_OverflowError718,21397
#define  SWIG_SyntaxError SWIG_SyntaxError719,21435
#define  SWIG_ValueError SWIG_ValueError720,21473
#define  SWIG_SystemError SWIG_SystemError721,21511
#define  SWIG_AttributeError SWIG_AttributeError722,21550
#define  SWIG_MemoryError SWIG_MemoryError723,21589
#define  SWIG_NullReferenceError SWIG_NullReferenceError724,21628
#define PyClass_Check(PyClass_Check731,21744
#define PyInt_Check(PyInt_Check732,21822
#define PyInt_AsLong(PyInt_AsLong733,21861
#define PyInt_FromLong(PyInt_FromLong734,21902
#define PyString_Check(PyString_Check735,21947
#define PyString_FromString(PyString_FromString736,21996
#define PyString_Format(PyString_Format737,22051
#define PyString_AsString(PyString_AsString738,22115
#define PyString_Size(PyString_Size739,22168
#define PyString_InternFromString(PyString_InternFromString740,22213
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_HAVE_CLASS741,22284
#define PyString_AS_STRING(PyString_AS_STRING742,22334
#define _PyLong_FromSsize_t(_PyLong_FromSsize_t743,22387
#  define Py_TYPE(Py_TYPE748,22465
#  define SWIG_Python_str_FromFormat SWIG_Python_str_FromFormat754,22600
#  define SWIG_Python_str_FromFormat SWIG_Python_str_FromFormat756,22664
SWIG_Python_str_AsChar(PyObject *str)SWIG_Python_str_AsChar764,22883
#  define SWIG_Python_str_DelForPy3(SWIG_Python_str_DelForPy3782,23270
#  define SWIG_Python_str_DelForPy3(SWIG_Python_str_DelForPy3784,23335
SWIG_Python_str_FromChar(const char *c)SWIG_Python_str_FromChar789,23404
#  define PyOS_snprintf PyOS_snprintf801,23702
#  define PyOS_snprintf PyOS_snprintf803,23743
# define SWIG_PYBUFFER_SIZE SWIG_PYBUFFER_SIZE811,23917
PyString_FromFormat(const char *fmt, ...) {PyString_FromFormat815,23976
# define PyObject_Del(PyObject_Del828,24321
# define PyObject_DEL PyObject_DEL831,24391
#  define PyExc_StopIteration PyExc_StopIteration837,24555
#  define PyObject_GenericGetAttr PyObject_GenericGetAttr840,24645
#  define Py_NotImplemented Py_NotImplemented847,24806
#  define PyString_AsStringAndSize(PyString_AsStringAndSize854,25005
#  define PySequence_Size PySequence_Size861,25223
PyObject *PyBool_FromLong(long ok)PyBool_FromLong868,25360
typedef int Py_ssize_t;Py_ssize_t880,25691
# define PY_SSIZE_T_MAX PY_SSIZE_T_MAX881,25715
# define PY_SSIZE_T_MIN PY_SSIZE_T_MIN882,25747
typedef inquiry lenfunc;lenfunc883,25779
typedef intargfunc ssizeargfunc;ssizeargfunc884,25804
typedef intintargfunc ssizessizeargfunc;ssizessizeargfunc885,25837
typedef intobjargproc ssizeobjargproc;ssizeobjargproc886,25878
typedef intintobjargproc ssizessizeobjargproc;ssizessizeobjargproc887,25917
typedef getreadbufferproc readbufferproc;readbufferproc888,25964
typedef getwritebufferproc writebufferproc;writebufferproc889,26006
typedef getsegcountproc segcountproc;segcountproc890,26050
typedef getcharbufferproc charbufferproc;charbufferproc891,26088
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))PyNumber_AsSsize_t892,26130
#define Py_VISIT(Py_VISIT905,26378
  PyTypeObject type;type917,26799
  PyTypeObject type;__anon118::type917,26799
  PyNumberMethods as_number;as_number918,26820
  PyNumberMethods as_number;__anon118::as_number918,26820
  PyMappingMethods as_mapping;as_mapping919,26849
  PyMappingMethods as_mapping;__anon118::as_mapping919,26849
  PySequenceMethods as_sequence;as_sequence920,26880
  PySequenceMethods as_sequence;__anon118::as_sequence920,26880
  PyBufferProcs as_buffer;as_buffer921,26913
  PyBufferProcs as_buffer;__anon118::as_buffer921,26913
  PyObject *name, *slots;name922,26940
  PyObject *name, *slots;__anon118::name922,26940
  PyObject *name, *slots;slots922,26940
  PyObject *name, *slots;__anon118::slots922,26940
} PyHeapTypeObject;PyHeapTypeObject923,26966
typedef destructor freefunc;freefunc927,27026
# define SWIGPY_USE_CAPSULESWIGPY_USE_CAPSULE933,27208
# define SWIGPY_CAPSULE_NAME SWIGPY_CAPSULE_NAME934,27236
#define PyDescr_TYPE(PyDescr_TYPE938,27400
#define PyDescr_NAME(PyDescr_NAME939,27457
SWIG_Python_ErrorType(int code) {SWIG_Python_ErrorType947,27732
SWIG_Python_AddErrorMsg(const char* mesg)SWIG_Python_AddErrorMsg991,28618
#    undef SWIG_PYTHON_THREADSSWIG_PYTHON_THREADS1015,29212
#      define SWIG_PYTHON_USE_GILSWIG_PYTHON_USE_GIL1021,29487
#     define SWIG_PYTHON_INITIALIZE_THREADS SWIG_PYTHON_INITIALIZE_THREADS1026,29654
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK SWIG_PYTHON_THREAD_BEGIN_BLOCK1045,30430
#      define SWIG_PYTHON_THREAD_END_BLOCK SWIG_PYTHON_THREAD_END_BLOCK1046,30521
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW SWIG_PYTHON_THREAD_BEGIN_ALLOW1047,30593
#      define SWIG_PYTHON_THREAD_END_ALLOW SWIG_PYTHON_THREAD_END_ALLOW1048,30684
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK SWIG_PYTHON_THREAD_BEGIN_BLOCK1050,30779
#      define SWIG_PYTHON_THREAD_END_BLOCK SWIG_PYTHON_THREAD_END_BLOCK1051,30884
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW SWIG_PYTHON_THREAD_BEGIN_ALLOW1052,30970
#      define SWIG_PYTHON_THREAD_END_ALLOW SWIG_PYTHON_THREAD_END_ALLOW1053,31073
#      define SWIG_PYTHON_INITIALIZE_THREADSSWIG_PYTHON_INITIALIZE_THREADS1057,31289
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCKSWIG_PYTHON_THREAD_BEGIN_BLOCK1060,31394
#      define SWIG_PYTHON_THREAD_END_BLOCKSWIG_PYTHON_THREAD_END_BLOCK1063,31497
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOWSWIG_PYTHON_THREAD_BEGIN_ALLOW1066,31600
#      define SWIG_PYTHON_THREAD_END_ALLOWSWIG_PYTHON_THREAD_END_ALLOW1069,31703
#  define SWIG_PYTHON_INITIALIZE_THREADSSWIG_PYTHON_INITIALIZE_THREADS1073,31796
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCKSWIG_PYTHON_THREAD_BEGIN_BLOCK1074,31837
#  define SWIG_PYTHON_THREAD_END_BLOCKSWIG_PYTHON_THREAD_END_BLOCK1075,31878
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOWSWIG_PYTHON_THREAD_BEGIN_ALLOW1076,31917
#  define SWIG_PYTHON_THREAD_END_ALLOWSWIG_PYTHON_THREAD_END_ALLOW1077,31958
#define SWIG_PY_POINTER SWIG_PY_POINTER1093,32472
#define SWIG_PY_BINARY SWIG_PY_BINARY1094,32498
typedef struct swig_const_info {swig_const_info1097,32562
  int type;type1098,32595
  int type;swig_const_info::type1098,32595
  char *name;name1099,32607
  char *name;swig_const_info::name1099,32607
  long lvalue;lvalue1100,32621
  long lvalue;swig_const_info::lvalue1100,32621
  double dvalue;dvalue1101,32636
  double dvalue;swig_const_info::dvalue1101,32636
  void   *pvalue;pvalue1102,32653
  void   *pvalue;swig_const_info::pvalue1102,32653
  swig_type_info **ptype;ptype1103,32671
  swig_type_info **ptype;swig_const_info::ptype1103,32671
} swig_const_info;swig_const_info1104,32697
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)SWIGUNUSEDPARM1112,33033
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))SWIGUNUSEDPARM1117,33176
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))SWIGUNUSEDPARM1117,33176
#define SWIG_Python_ConvertPtr(SWIG_Python_ConvertPtr1140,33718
#define SWIG_ConvertPtr(SWIG_ConvertPtr1141,33830
#define SWIG_ConvertPtrAndOwn(SWIG_ConvertPtrAndOwn1142,33933
#define SWIG_NewPointerObj(SWIG_NewPointerObj1145,34074
#define SWIG_NewPointerObj(SWIG_NewPointerObj1147,34186
#define SWIG_InternalNewPointerObj(SWIG_InternalNewPointerObj1150,34300
#define SWIG_CheckImplicit(SWIG_CheckImplicit1152,34407
#define SWIG_AcquirePtr(SWIG_AcquirePtr1153,34493
#define swig_owntype swig_owntype1154,34582
#define SWIG_ConvertPacked(SWIG_ConvertPacked1157,34669
#define SWIG_NewPackedObj(SWIG_NewPackedObj1158,34769
#define SWIG_ConvertInstance(SWIG_ConvertInstance1161,34901
#define SWIG_NewInstanceObj(SWIG_NewInstanceObj1162,34997
#define SWIG_ConvertFunctionPtr(SWIG_ConvertFunctionPtr1165,35128
#define SWIG_NewFunctionPtrObj(SWIG_NewFunctionPtrObj1166,35232
#define SWIG_ConvertMember(SWIG_ConvertMember1169,35385
#define SWIG_NewMemberObj(SWIG_NewMemberObj1170,35485
#define SWIG_GetModule(SWIG_GetModule1175,35602
#define SWIG_SetModule(SWIG_SetModule1176,35682
#define SWIG_NewClientData(SWIG_NewClientData1177,35769
#define SWIG_SetErrorObj SWIG_SetErrorObj1179,35852
#define SWIG_SetErrorMsg SWIG_SetErrorMsg1180,35932
#define SWIG_ErrorType(SWIG_ErrorType1181,36012
#define SWIG_Error(SWIG_Error1182,36096
#define SWIG_fail SWIG_fail1183,36203
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {SWIG_Python_SetErrorObj1191,36347
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {SWIG_Python_SetErrorMsg1199,36543
#define SWIG_Python_Raise(SWIG_Python_Raise1205,36716
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {SwigPyBuiltin_AddPublicSymbol1212,36900
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {SWIG_Python_SetConstant1219,37072
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {SWIG_Python_SetConstant1229,37345
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {SWIG_Python_AppendOutput1239,37553
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)SWIG_Python_UnpackTuple1284,38505
#define SWIG_Python_CallFunctor(SWIG_Python_CallFunctor1331,39898
#define SWIG_Python_CallFunctor(SWIG_Python_CallFunctor1333,40010
#define SWIG_STATIC_POINTER(SWIG_STATIC_POINTER1341,40288
#define SWIG_STATIC_POINTER(SWIG_STATIC_POINTER1343,40332
#define SWIG_POINTER_NOSHADOW SWIG_POINTER_NOSHADOW1351,40623
#define SWIG_POINTER_NEW SWIG_POINTER_NEW1352,40688
#define SWIG_POINTER_IMPLICIT_CONV SWIG_POINTER_IMPLICIT_CONV1354,40768
#define SWIG_BUILTIN_TP_INIT SWIG_BUILTIN_TP_INIT1356,40834
#define SWIG_BUILTIN_INIT SWIG_BUILTIN_INIT1357,40894
#      define SWIG_PYTHON_BUILD_NONESWIG_PYTHON_BUILD_NONE1367,41178
#   undef Py_NonePy_None1374,41290
#   define Py_None Py_None1375,41308
_SWIG_Py_None(void)_SWIG_Py_None1378,41380
SWIG_Py_None(void)SWIG_Py_None1385,41506
SWIG_Py_Void(void)SWIG_Py_Void1395,41681
  PyObject *klass;klass1405,41808
  PyObject *klass;__anon119::klass1405,41808
  PyObject *newraw;newraw1406,41827
  PyObject *newraw;__anon119::newraw1406,41827
  PyObject *newargs;newargs1407,41847
  PyObject *newargs;__anon119::newargs1407,41847
  PyObject *destroy;destroy1408,41868
  PyObject *destroy;__anon119::destroy1408,41868
  int delargs;delargs1409,41889
  int delargs;__anon119::delargs1409,41889
  int implicitconv;implicitconv1410,41904
  int implicitconv;__anon119::implicitconv1410,41904
  PyTypeObject *pytype;pytype1411,41924
  PyTypeObject *pytype;__anon119::pytype1411,41924
} SwigPyClientData;SwigPyClientData1412,41948
SWIG_Python_CheckImplicit(swig_type_info *ty)SWIG_Python_CheckImplicit1415,41991
SWIG_Python_ExceptionType(swig_type_info *desc) {SWIG_Python_ExceptionType1422,42174
SwigPyClientData_New(PyObject* obj)SwigPyClientData_New1430,42427
SwigPyClientData_Del(SwigPyClientData *data) {SwigPyClientData_Del1484,43831
  void *ptr;ptr1494,44057
  void *ptr;__anon120::ptr1494,44057
  swig_type_info *ty;ty1495,44070
  swig_type_info *ty;__anon120::ty1495,44070
  int own;own1496,44092
  int own;__anon120::own1496,44092
  PyObject *next;next1497,44103
  PyObject *next;__anon120::next1497,44103
  PyObject *dict;dict1499,44147
  PyObject *dict;__anon120::dict1499,44147
} SwigPyObject;SwigPyObject1501,44172
SwigPyObject_long(SwigPyObject *v)SwigPyObject_long1504,44212
SwigPyObject_format(const char* fmt, SwigPyObject *v)SwigPyObject_format1510,44312
SwigPyObject_oct(SwigPyObject *v)SwigPyObject_oct1532,44813
SwigPyObject_hex(SwigPyObject *v)SwigPyObject_hex1538,44913
SwigPyObject_repr(SwigPyObject *v)SwigPyObject_repr1545,45032
SwigPyObject_print(SwigPyObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))SwigPyObject_print1571,45710
SwigPyObject_str(SwigPyObject *v)SwigPyObject_str1591,46118
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)SwigPyObject_compare1599,46321
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)SwigPyObject_richcompare1608,46554
SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);SwigPyObject_TypeOnce1620,46847
static swig_type_info *SwigPyObject_stype = 0;SwigPyObject_stype1623,46929
SwigPyObject_type(void) {SwigPyObject_type1625,47002
SwigPyObject_type(void) {SwigPyObject_type1635,47244
SwigPyObject_Check(PyObject *op) {SwigPyObject_Check1642,47393
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);SwigPyObject_New1655,47771
SwigPyObject_dealloc(PyObject *v)SwigPyObject_dealloc1658,47847
SwigPyObject_append(PyObject* v, PyObject* next)SwigPyObject_append1693,48994
SwigPyObject_next(PyObject* v)SwigPyObject_next1711,49379
SwigPyObject_disown(PyObject *v)SwigPyObject_disown1727,49686
SwigPyObject_acquire(PyObject *v)SwigPyObject_acquire1739,49926
SwigPyObject_own(PyObject *v, PyObject *args)SwigPyObject_own1750,50164
swigobject_methods[] = {swigobject_methods1786,50923
swigobject_methods[] = {swigobject_methods1797,51685
SwigPyObject_getattr(SwigPyObject *sobj,char *name)SwigPyObject_getattr1810,52489
SwigPyObject_TypeOnce(void) {SwigPyObject_TypeOnce1817,52647
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)SwigPyObject_New1954,58184
  void *pack;pack1972,58717
  void *pack;__anon121::pack1972,58717
  swig_type_info *ty;ty1973,58731
  swig_type_info *ty;__anon121::ty1973,58731
  size_t size;size1974,58753
  size_t size;__anon121::size1974,58753
} SwigPyPacked;SwigPyPacked1975,58768
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))SwigPyPacked_print1978,58801
SwigPyPacked_repr(SwigPyPacked *v)SwigPyPacked_repr1992,59141
SwigPyPacked_str(SwigPyPacked *v)SwigPyPacked_str2003,59481
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)SwigPyPacked_compare2014,59773
SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);SwigPyPacked_TypeOnce2022,59992
SwigPyPacked_type(void) {SwigPyPacked_type2025,60074
SwigPyPacked_Check(PyObject *op) {SwigPyPacked_Check2031,60216
SwigPyPacked_dealloc(PyObject *v)SwigPyPacked_dealloc2037,60384
SwigPyPacked_TypeOnce(void) {SwigPyPacked_TypeOnce2047,60570
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)SwigPyPacked_New2133,64370
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)SwigPyPacked_UnpackData2152,64808
_SWIG_This(void)_SWIG_This2169,65303
static PyObject *swig_this = NULL;swig_this2174,65370
SWIG_This(void)SWIG_This2177,65429
#define SWIG_PYTHON_SLOW_GETSET_THISSWIG_PYTHON_SLOW_GETSET_THIS2188,65680
SWIG_Python_GetSwigThis(PyObject *pyobj)SWIG_Python_GetSwigThis2192,65752
SWIG_Python_AcquirePtr(PyObject *obj, int own) {SWIG_Python_AcquirePtr2258,67321
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {SWIG_Python_ConvertPtrAndOwn2273,67620
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {SWIG_Python_ConvertFunctionPtr2370,70228
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {SWIG_Python_ConvertPacked2402,71126
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)SWIG_Python_NewShadowInstance2425,71801
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)SWIG_Python_SetSwigThis2494,73702
SWIG_Python_InitShadowInstance(PyObject *args) {SWIG_Python_InitShadowInstance2516,74247
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {SWIG_Python_NewPointerObj2534,74701
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {SWIG_Python_NewPackedObj2587,76124
void *SWIG_ReturnGlobalTypeList(void *);SWIG_ReturnGlobalTypeList2596,76481
SWIG_Python_GetModule(void) {SWIG_Python_GetModule2600,76561
PyModule_AddObject(PyObject *m, char *name, PyObject *o)PyModule_AddObject2626,77395
SWIG_Python_DestroyModule(PyObject *obj)SWIG_Python_DestroyModule2656,78170
SWIG_Python_SetModule(swig_module_info *swig_module) {SWIG_Python_SetModule2680,78815
SWIG_Python_TypeCache(void) {SWIG_Python_TypeCache2707,79886
SWIG_Python_TypeQuery(const char *type)SWIG_Python_TypeQuery2713,80026
#define SWIG_POINTER_EXCEPTION SWIG_POINTER_EXCEPTION2745,80892
#define SWIG_arg_fail(SWIG_arg_fail2746,80926
#define SWIG_MustGetPtr(SWIG_MustGetPtr2747,80983
SWIG_Python_AddErrMesg(const char* mesg, int infront)SWIG_Python_AddErrMesg2750,81096
SWIG_Python_ArgFail(int argnum)SWIG_Python_ArgFail2777,81766
SwigPyObject_GetDesc(PyObject *self)SwigPyObject_GetDesc2790,82072
SWIG_Python_TypeError(const char *type, PyObject *obj)SWIG_Python_TypeError2798,82246
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {SWIG_Python_MustGetPtr2837,83468
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {SWIG_Python_NonDynamicSetAttr2852,83856
#define SWIG_exception_fail(SWIG_exception_fail2910,85101
#define SWIG_contract_assert(SWIG_contract_assert2912,85191
  #define SWIG_exception(SWIG_exception2916,85303
#define SWIGTYPE_p_char SWIGTYPE_p_char2921,85437
#define SWIGTYPE_p_int SWIGTYPE_p_int2922,85475
#define SWIGTYPE_p_uint8_t SWIGTYPE_p_uint8_t2923,85512
static swig_type_info *swig_types[4];swig_types2924,85553
static swig_module_info swig_module = {swig_types, 3, 0, 0, 0, 0};swig_module2925,85591
#define SWIG_TypeQuery(SWIG_TypeQuery2926,85658
#define SWIG_MangledTypeQuery(SWIG_MangledTypeQuery2927,85742
#  define SWIG_init SWIG_init2941,86226
#  define SWIG_init SWIG_init2944,86272
#define SWIG_name SWIG_name2947,86316
#define SWIGVERSION SWIGVERSION2949,86349
#define SWIG_VERSION SWIG_VERSION2950,86378
#define SWIG_as_voidptr(SWIG_as_voidptr2953,86413
#define SWIG_as_voidptrptr(SWIG_as_voidptrptr2954,86468
  #define SWIG_From_long SWIG_From_long2957,86540
SWIG_From_int  (int value)SWIG_From_int2961,86612
SWIG_pchar_descriptor(void)SWIG_pchar_descriptor2968,86706
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)SWIG_AsCharPtrAndSize2981,86899
SWIG_AsVal_double (PyObject *obj, double *val)SWIG_AsVal_double3057,89130
SWIG_CanCastAsInteger(double *d, double min, double max) {SWIG_CanCastAsInteger3107,90113
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val)SWIG_AsVal_unsigned_SS_long3137,90720
SWIG_AsVal_size_t (PyObject * obj, size_t *val)SWIG_AsVal_size_t3181,91705
static size_t ReturnedBufferSize(ReturnedBufferSize3194,91954
typedef size_t (*WebPEncodeFunction)(const uint8_t* rgb,WebPEncodeFunction3246,93759
typedef size_t (*WebPEncodeLosslessFunction)(const uint8_t* rgb,WebPEncodeLosslessFunction3249,93966
static uint8_t* EncodeLossy(const uint8_t* rgb,EncodeLossy3253,94176
static uint8_t* EncodeLossless(const uint8_t* rgb,EncodeLossless3268,94787
#define LOSSY_WRAPPER(LOSSY_WRAPPER3287,95671
#undef LOSSY_WRAPPERLOSSY_WRAPPER3300,96309
#define LOSSLESS_WRAPPER(LOSSLESS_WRAPPER3302,96331
#undef LOSSLESS_WRAPPERLOSSLESS_WRAPPER3315,97013
#   define LLONG_MAX LLONG_MAX3322,97169
#   define LLONG_MIN LLONG_MIN3323,97208
#   define ULLONG_MAX ULLONG_MAX3324,97248
LOSSY_WRAPPER(WebPEncodeRGB)LOSSY_WRAPPER3295,96190
SWIG_AsVal_int (PyObject * obj, int *val)SWIG_AsVal_int3369,98158
SWIG_AsVal_float (PyObject * obj, float *val)SWIG_AsVal_float3385,98436
SWIGINTERN PyObject *_wrap_WebPGetDecoderVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3402,98748
SWIGINTERN PyObject *_wrap_WebPGetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3415,99094
SWIGINTERN PyObject *_wrap_WebPDecodeRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3463,100760
SWIGINTERN PyObject *_wrap_WebPDecodeRGBA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3516,102580
SWIGINTERN PyObject *_wrap_WebPDecodeARGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3569,104405
SWIGINTERN PyObject *_wrap_WebPDecodeBGR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3622,106230
SWIGINTERN PyObject *_wrap_WebPDecodeBGRA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3675,108050
SWIGINTERN PyObject *_wrap_WebPGetEncoderVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3728,109875
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3741,110221
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeBGR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3861,114265
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeRGBA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM3981,118309
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeBGRA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM4101,122365
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeLosslessRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM4221,126421
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeLosslessBGR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM4332,130244
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeLosslessRGBA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM4443,134067
SWIGINTERN PyObject *_wrap_wrap_WebPEncodeLosslessBGRA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {SWIGUNUSEDPARM4554,137901
static PyMethodDef SwigMethods[] = {SwigMethods4665,141735
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};_swigt__p_char4689,144116
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};_swigt__p_int4690,144197
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "uint8_t *", 0, 0, (void*)0, 0};_swigt__p_uint8_t4691,144275
static swig_type_info *swig_type_initial[] = {swig_type_initial4693,144366
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};_swigc__p_char4699,144476
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};_swigc__p_int4700,144562
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};_swigc__p_uint8_t4701,144646
static swig_cast_info *swig_cast_initial[] = {swig_cast_initial4703,144739
static swig_const_info swig_const_table[] = {swig_const_table4712,144916
SWIG_InitializeModule(void *clientdata) {SWIG_InitializeModule4772,147712
SWIG_PropagateClientData(void) {SWIG_PropagateClientData4925,152622
#define SWIG_newvarlink(SWIG_newvarlink4962,153272
#define SWIG_addvarlink(SWIG_addvarlink4963,153351
#define SWIG_InstallConstants(SWIG_InstallConstants4964,153457
  typedef struct swig_globalvar {swig_globalvar4970,153760
    char       *name;                  /* Name of global variable */name4971,153794
    char       *name;                  /* Name of global variable */swig_globalvar::name4971,153794
    PyObject *(*get_attr)(void);       /* Return the current value */get_attr4972,153863
    PyObject *(*get_attr)(void);       /* Return the current value */swig_globalvar::get_attr4972,153863
    int       (*set_attr)(PyObject *); /* Set the value */set_attr4973,153933
    int       (*set_attr)(PyObject *); /* Set the value */swig_globalvar::set_attr4973,153933
    struct swig_globalvar *next;next4974,153992
    struct swig_globalvar *next;swig_globalvar::next4974,153992
  } swig_globalvar;swig_globalvar4975,154025
  typedef struct swig_varlinkobject {swig_varlinkobject4977,154046
    swig_globalvar *vars;vars4979,154102
    swig_globalvar *vars;swig_varlinkobject::vars4979,154102
  } swig_varlinkobject;swig_varlinkobject4980,154128
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {SWIGUNUSEDPARM4983,154177
  swig_varlink_str(swig_varlinkobject *v) {swig_varlink_str4992,154438
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {swig_varlink_print5030,155558
  swig_varlink_dealloc(swig_varlinkobject *v) {swig_varlink_dealloc5041,155891
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {swig_varlink_getattr5052,156119
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {swig_varlink_setattr5069,156535
  swig_varlink_type(void) {swig_varlink_type5086,156963
  SWIG_Python_newvarlink(void) {SWIG_Python_newvarlink5150,159600
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {SWIG_Python_addvarlink5159,159825
  SWIG_globals(void) {SWIG_globals5176,160369
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {SWIG_Python_InstallConstants5188,160772
  SWIG_Python_FixMethods(PyMethodDef *methods,SWIG_Python_FixMethods5215,161655
SWIG_init(void) {SWIG_init5274,163334

swig/libwebp_gc.c,444
#define SWIG_PARM_SIZE SWIG_PARM_SIZE18,663
#define SWIG_PARM_SIZE SWIG_PARM_SIZE20,694
static void (*x_wrap_WebPGetDecoderVersion)(void*) = _wrap_WebPGetDecoderVersion;x_wrap_WebPGetDecoderVersion25,855
·WebPGetDecoderVersion(struct {WebPGetDecoderVersion28,943
static void (*x_wrap_wrapped_WebPGetInfo)(void*) = _wrap_wrapped_WebPGetInfo;x_wrap_wrapped_WebPGetInfo40,1192
·Wrapped_WebPGetInfo(struct {Wrapped_WebPGetInfo43,1276

swig/libwebp_java_wrap.c,16823
#define SWIGJAVASWIGJAVA11,518
#  define SWIGTEMPLATEDISAMBIGUATOR SWIGTEMPLATEDISAMBIGUATOR21,1009
#  define SWIGTEMPLATEDISAMBIGUATOR SWIGTEMPLATEDISAMBIGUATOR25,1264
#  define SWIGTEMPLATEDISAMBIGUATORSWIGTEMPLATEDISAMBIGUATOR27,1316
#   define SWIGINLINE SWIGINLINE34,1488
#   define SWIGINLINESWIGINLINE36,1524
#     define SWIGUNUSED SWIGUNUSED44,1767
#     define SWIGUNUSEDSWIGUNUSED46,1829
#   define SWIGUNUSED SWIGUNUSED49,1885
#   define SWIGUNUSEDSWIGUNUSED51,1943
#   define SWIGUNUSEDPARM(SWIGUNUSEDPARM63,2182
#   define SWIGUNUSEDPARM(SWIGUNUSEDPARM65,2218
# define SWIGINTERN SWIGINTERN71,2322
# define SWIGINTERNINLINE SWIGINTERNINLINE76,2427
#    define GCC_HASCLASSVISIBILITYGCC_HASCLASSVISIBILITY82,2602
#     define SWIGEXPORTSWIGEXPORT89,2769
#     define SWIGEXPORT SWIGEXPORT91,2802
#     define SWIGEXPORT SWIGEXPORT95,2925
#     define SWIGEXPORTSWIGEXPORT97,2998
#   define SWIGSTDCALL SWIGSTDCALL105,3172
#   define SWIGSTDCALLSWIGSTDCALL107,3212
# define _CRT_SECURE_NO_DEPRECATE_CRT_SECURE_NO_DEPRECATE113,3436
# define _SCL_SECURE_NO_DEPRECATE_SCL_SECURE_NO_DEPRECATE118,3670
  typedef long long __int64;__int64125,3821
#   undef _LP64_LP64131,3936
  SWIG_JavaOutOfMemoryError = 1,SWIG_JavaOutOfMemoryError142,4085
  SWIG_JavaIOException,SWIG_JavaIOException143,4118
  SWIG_JavaRuntimeException,SWIG_JavaRuntimeException144,4142
  SWIG_JavaIndexOutOfBoundsException,SWIG_JavaIndexOutOfBoundsException145,4171
  SWIG_JavaArithmeticException,SWIG_JavaArithmeticException146,4209
  SWIG_JavaIllegalArgumentException,SWIG_JavaIllegalArgumentException147,4241
  SWIG_JavaNullPointerException,SWIG_JavaNullPointerException148,4278
  SWIG_JavaDirectorPureVirtual,SWIG_JavaDirectorPureVirtual149,4311
  SWIG_JavaUnknownErrorSWIG_JavaUnknownError150,4343
} SWIG_JavaExceptionCodes;SWIG_JavaExceptionCodes151,4367
  SWIG_JavaExceptionCodes code;code154,4412
  SWIG_JavaExceptionCodes code;__anon123::code154,4412
  const char *java_exception;java_exception155,4444
  const char *java_exception;__anon123::java_exception155,4444
} SWIG_JavaExceptions_t;SWIG_JavaExceptions_t156,4474
static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {SWIG_JavaThrowException159,4501
#define SWIG_contract_assert(SWIG_contract_assert187,5685
#define  SWIG_UnknownError SWIG_UnknownError190,5871
#define  SWIG_IOError SWIG_IOError191,5909
#define  SWIG_RuntimeError SWIG_RuntimeError192,5947
#define  SWIG_IndexError SWIG_IndexError193,5985
#define  SWIG_TypeError SWIG_TypeError194,6023
#define  SWIG_DivisionByZero SWIG_DivisionByZero195,6061
#define  SWIG_OverflowError SWIG_OverflowError196,6099
#define  SWIG_SyntaxError SWIG_SyntaxError197,6137
#define  SWIG_ValueError SWIG_ValueError198,6175
#define  SWIG_SystemError SWIG_SystemError199,6213
#define  SWIG_AttributeError SWIG_AttributeError200,6252
#define  SWIG_MemoryError SWIG_MemoryError201,6291
#define  SWIG_NullReferenceError SWIG_NullReferenceError202,6330
SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {SWIG_JavaException207,6373
int SWIG_JavaArrayInSchar (JNIEnv *jenv, jbyte **jarr, signed char **carr, jbyteArray input);SWIG_JavaArrayInSchar244,7361
void SWIG_JavaArrayArgoutSchar (JNIEnv *jenv, jbyte *jarr, signed char *carr, jbyteArray input);SWIG_JavaArrayArgoutSchar245,7455
jbyteArray SWIG_JavaArrayOutSchar (JNIEnv *jenv, signed char *result, jsize sz);SWIG_JavaArrayOutSchar246,7552
int SWIG_JavaArrayInUchar (JNIEnv *jenv, jshort **jarr, unsigned char **carr, jshortArray input);SWIG_JavaArrayInUchar249,7635
void SWIG_JavaArrayArgoutUchar (JNIEnv *jenv, jshort *jarr, unsigned char *carr, jshortArray input);SWIG_JavaArrayArgoutUchar250,7733
jshortArray SWIG_JavaArrayOutUchar (JNIEnv *jenv, unsigned char *result, jsize sz);SWIG_JavaArrayOutUchar251,7834
int SWIG_JavaArrayInShort (JNIEnv *jenv, jshort **jarr, short **carr, jshortArray input);SWIG_JavaArrayInShort254,7920
void SWIG_JavaArrayArgoutShort (JNIEnv *jenv, jshort *jarr, short *carr, jshortArray input);SWIG_JavaArrayArgoutShort255,8010
jshortArray SWIG_JavaArrayOutShort (JNIEnv *jenv, short *result, jsize sz);SWIG_JavaArrayOutShort256,8103
int SWIG_JavaArrayInUshort (JNIEnv *jenv, jint **jarr, unsigned short **carr, jintArray input);SWIG_JavaArrayInUshort259,8181
void SWIG_JavaArrayArgoutUshort (JNIEnv *jenv, jint *jarr, unsigned short *carr, jintArray input);SWIG_JavaArrayArgoutUshort260,8277
jintArray SWIG_JavaArrayOutUshort (JNIEnv *jenv, unsigned short *result, jsize sz);SWIG_JavaArrayOutUshort261,8376
int SWIG_JavaArrayInInt (JNIEnv *jenv, jint **jarr, int **carr, jintArray input);SWIG_JavaArrayInInt264,8462
void SWIG_JavaArrayArgoutInt (JNIEnv *jenv, jint *jarr, int *carr, jintArray input);SWIG_JavaArrayArgoutInt265,8544
jintArray SWIG_JavaArrayOutInt (JNIEnv *jenv, int *result, jsize sz);SWIG_JavaArrayOutInt266,8629
int SWIG_JavaArrayInUint (JNIEnv *jenv, jlong **jarr, unsigned int **carr, jlongArray input);SWIG_JavaArrayInUint269,8701
void SWIG_JavaArrayArgoutUint (JNIEnv *jenv, jlong *jarr, unsigned int *carr, jlongArray input);SWIG_JavaArrayArgoutUint270,8795
jlongArray SWIG_JavaArrayOutUint (JNIEnv *jenv, unsigned int *result, jsize sz);SWIG_JavaArrayOutUint271,8892
int SWIG_JavaArrayInLong (JNIEnv *jenv, jint **jarr, long **carr, jintArray input);SWIG_JavaArrayInLong274,8975
void SWIG_JavaArrayArgoutLong (JNIEnv *jenv, jint *jarr, long *carr, jintArray input);SWIG_JavaArrayArgoutLong275,9059
jintArray SWIG_JavaArrayOutLong (JNIEnv *jenv, long *result, jsize sz);SWIG_JavaArrayOutLong276,9146
int SWIG_JavaArrayInUlong (JNIEnv *jenv, jlong **jarr, unsigned long **carr, jlongArray input);SWIG_JavaArrayInUlong279,9220
void SWIG_JavaArrayArgoutUlong (JNIEnv *jenv, jlong *jarr, unsigned long *carr, jlongArray input);SWIG_JavaArrayArgoutUlong280,9316
jlongArray SWIG_JavaArrayOutUlong (JNIEnv *jenv, unsigned long *result, jsize sz);SWIG_JavaArrayOutUlong281,9415
int SWIG_JavaArrayInLonglong (JNIEnv *jenv, jlong **jarr, jlong **carr, jlongArray input);SWIG_JavaArrayInLonglong284,9500
void SWIG_JavaArrayArgoutLonglong (JNIEnv *jenv, jlong *jarr, jlong *carr, jlongArray input);SWIG_JavaArrayArgoutLonglong285,9591
jlongArray SWIG_JavaArrayOutLonglong (JNIEnv *jenv, jlong *result, jsize sz);SWIG_JavaArrayOutLonglong286,9685
int SWIG_JavaArrayInFloat (JNIEnv *jenv, jfloat **jarr, float **carr, jfloatArray input);SWIG_JavaArrayInFloat289,9765
void SWIG_JavaArrayArgoutFloat (JNIEnv *jenv, jfloat *jarr, float *carr, jfloatArray input);SWIG_JavaArrayArgoutFloat290,9855
jfloatArray SWIG_JavaArrayOutFloat (JNIEnv *jenv, float *result, jsize sz);SWIG_JavaArrayOutFloat291,9948
int SWIG_JavaArrayInDouble (JNIEnv *jenv, jdouble **jarr, double **carr, jdoubleArray input);SWIG_JavaArrayInDouble294,10026
void SWIG_JavaArrayArgoutDouble (JNIEnv *jenv, jdouble *jarr, double *carr, jdoubleArray input);SWIG_JavaArrayArgoutDouble295,10120
jdoubleArray SWIG_JavaArrayOutDouble (JNIEnv *jenv, double *result, jsize sz);SWIG_JavaArrayOutDouble296,10217
int SWIG_JavaArrayInSchar (JNIEnv *jenv, jbyte **jarr, signed char **carr, jbyteArray input) {SWIG_JavaArrayInSchar303,10334
void SWIG_JavaArrayArgoutSchar (JNIEnv *jenv, jbyte *jarr, signed char *carr, jbyteArray input) {SWIG_JavaArrayArgoutSchar324,10962
jbyteArray SWIG_JavaArrayOutSchar (JNIEnv *jenv, signed char *result, jsize sz) {SWIG_JavaArrayOutSchar332,11235
int SWIG_JavaArrayInUchar (JNIEnv *jenv, jshort **jarr, unsigned char **carr, jshortArray input) {SWIG_JavaArrayInUchar349,11681
void SWIG_JavaArrayArgoutUchar (JNIEnv *jenv, jshort *jarr, unsigned char *carr, jshortArray input) {SWIG_JavaArrayArgoutUchar370,12320
jshortArray SWIG_JavaArrayOutUchar (JNIEnv *jenv, unsigned char *result, jsize sz) {SWIG_JavaArrayOutUchar378,12599
int SWIG_JavaArrayInShort (JNIEnv *jenv, jshort **jarr, short **carr, jshortArray input) {SWIG_JavaArrayInShort395,13046
void SWIG_JavaArrayArgoutShort (JNIEnv *jenv, jshort *jarr, short *carr, jshortArray input) {SWIG_JavaArrayArgoutShort416,13653
jshortArray SWIG_JavaArrayOutShort (JNIEnv *jenv, short *result, jsize sz) {SWIG_JavaArrayOutShort424,13924
int SWIG_JavaArrayInUshort (JNIEnv *jenv, jint **jarr, unsigned short **carr, jintArray input) {SWIG_JavaArrayInUshort441,14372
void SWIG_JavaArrayArgoutUshort (JNIEnv *jenv, jint *jarr, unsigned short *carr, jintArray input) {SWIG_JavaArrayArgoutUshort462,15010
jintArray SWIG_JavaArrayOutUshort (JNIEnv *jenv, unsigned short *result, jsize sz) {SWIG_JavaArrayOutUshort470,15283
int SWIG_JavaArrayInInt (JNIEnv *jenv, jint **jarr, int **carr, jintArray input) {SWIG_JavaArrayInInt487,15716
void SWIG_JavaArrayArgoutInt (JNIEnv *jenv, jint *jarr, int *carr, jintArray input) {SWIG_JavaArrayArgoutInt508,16307
jintArray SWIG_JavaArrayOutInt (JNIEnv *jenv, int *result, jsize sz) {SWIG_JavaArrayOutInt516,16566
int SWIG_JavaArrayInUint (JNIEnv *jenv, jlong **jarr, unsigned int **carr, jlongArray input) {SWIG_JavaArrayInUint533,16994
void SWIG_JavaArrayArgoutUint (JNIEnv *jenv, jlong *jarr, unsigned int *carr, jlongArray input) {SWIG_JavaArrayArgoutUint554,17625
jlongArray SWIG_JavaArrayOutUint (JNIEnv *jenv, unsigned int *result, jsize sz) {SWIG_JavaArrayOutUint562,17898
int SWIG_JavaArrayInLong (JNIEnv *jenv, jint **jarr, long **carr, jintArray input) {SWIG_JavaArrayInLong579,18335
void SWIG_JavaArrayArgoutLong (JNIEnv *jenv, jint *jarr, long *carr, jintArray input) {SWIG_JavaArrayArgoutLong600,18931
jintArray SWIG_JavaArrayOutLong (JNIEnv *jenv, long *result, jsize sz) {SWIG_JavaArrayOutLong608,19192
int SWIG_JavaArrayInUlong (JNIEnv *jenv, jlong **jarr, unsigned long **carr, jlongArray input) {SWIG_JavaArrayInUlong625,19623
void SWIG_JavaArrayArgoutUlong (JNIEnv *jenv, jlong *jarr, unsigned long *carr, jlongArray input) {SWIG_JavaArrayArgoutUlong646,20259
jlongArray SWIG_JavaArrayOutUlong (JNIEnv *jenv, unsigned long *result, jsize sz) {SWIG_JavaArrayOutUlong654,20534
int SWIG_JavaArrayInLonglong (JNIEnv *jenv, jlong **jarr, jlong **carr, jlongArray input) {SWIG_JavaArrayInLonglong671,20974
void SWIG_JavaArrayArgoutLonglong (JNIEnv *jenv, jlong *jarr, jlong *carr, jlongArray input) {SWIG_JavaArrayArgoutLonglong692,21581
jlongArray SWIG_JavaArrayOutLonglong (JNIEnv *jenv, jlong *result, jsize sz) {SWIG_JavaArrayOutLonglong700,21851
int SWIG_JavaArrayInFloat (JNIEnv *jenv, jfloat **jarr, float **carr, jfloatArray input) {SWIG_JavaArrayInFloat717,22286
void SWIG_JavaArrayArgoutFloat (JNIEnv *jenv, jfloat *jarr, float *carr, jfloatArray input) {SWIG_JavaArrayArgoutFloat738,22893
jfloatArray SWIG_JavaArrayOutFloat (JNIEnv *jenv, float *result, jsize sz) {SWIG_JavaArrayOutFloat746,23164
int SWIG_JavaArrayInDouble (JNIEnv *jenv, jdouble **jarr, double **carr, jdoubleArray input) {SWIG_JavaArrayInDouble763,23604
void SWIG_JavaArrayArgoutDouble (JNIEnv *jenv, jdouble *jarr, double *carr, jdoubleArray input) {SWIG_JavaArrayArgoutDouble784,24219
jdoubleArray SWIG_JavaArrayOutDouble (JNIEnv *jenv, double *result, jsize sz) {SWIG_JavaArrayOutDouble792,24496
int SWIG_JavaArrayInUint8 (JNIEnv *jenv, jbyte **jarr, uint8_t **carr, jbyteArray input);SWIG_JavaArrayInUint8814,24957
void SWIG_JavaArrayArgoutUint8 (JNIEnv *jenv, jbyte *jarr, uint8_t *carr, jbyteArray input);SWIG_JavaArrayArgoutUint8815,25047
jbyteArray SWIG_JavaArrayOutUint8 (JNIEnv *jenv, uint8_t *result, jsize sz);SWIG_JavaArrayOutUint8816,25140
int SWIG_JavaArrayInUint8 (JNIEnv *jenv, jbyte **jarr, uint8_t **carr, jbyteArray input) {SWIG_JavaArrayInUint8820,25243
void SWIG_JavaArrayArgoutUint8 (JNIEnv *jenv, jbyte *jarr, uint8_t *carr, jbyteArray input) {SWIG_JavaArrayArgoutUint8841,25855
jbyteArray SWIG_JavaArrayOutUint8 (JNIEnv *jenv, uint8_t *result, jsize sz) {SWIG_JavaArrayOutUint8849,26124
#define FillMeInAsSizeCannotBeDeterminedAutomatically FillMeInAsSizeCannotBeDeterminedAutomatically869,26588
static size_t ReturnedBufferSize(ReturnedBufferSize873,26716
typedef size_t (*WebPEncodeFunction)(const uint8_t* rgb,WebPEncodeFunction925,28521
typedef size_t (*WebPEncodeLosslessFunction)(const uint8_t* rgb,WebPEncodeLosslessFunction928,28728
static uint8_t* EncodeLossy(const uint8_t* rgb,EncodeLossy932,28938
static uint8_t* EncodeLossless(const uint8_t* rgb,EncodeLossless947,29549
#define LOSSY_WRAPPER(LOSSY_WRAPPER966,30433
#undef LOSSY_WRAPPERLOSSY_WRAPPER979,31071
#define LOSSLESS_WRAPPER(LOSSLESS_WRAPPER981,31093
#undef LOSSLESS_WRAPPERLOSSLESS_WRAPPER994,31775
# undef JNIEXPORTJNIEXPORT1000,31858
# define JNIEXPORTJNIEXPORT1001,31876
# undef JNICALLJNICALL1002,31895
# define JNICALLJNICALL1003,31911
SWIGEXPORT jint JNICALL Java_com_google_webp_libwebpJNI_WebPGetDecoderVersion(JNIEnv *jenv, jclass jcls) {Java_com_google_webp_libwebpJNI_WebPGetDecoderVersion1011,31977
SWIGEXPORT jint JNICALL Java_com_google_webp_libwebpJNI_WebPGetInfo(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jlong jarg2, jintArray jarg3, jintArray jarg4) {Java_com_google_webp_libwebpJNI_WebPGetInfo1023,32237
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_WebPDecodeRGB(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jlong jarg2, jintArray jarg3, jintArray jarg4) {Java_com_google_webp_libwebpJNI_WebPDecodeRGB1078,33762
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_WebPDecodeRGBA(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jlong jarg2, jintArray jarg3, jintArray jarg4) {Java_com_google_webp_libwebpJNI_WebPDecodeRGBA1134,35406
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_WebPDecodeARGB(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jlong jarg2, jintArray jarg3, jintArray jarg4) {Java_com_google_webp_libwebpJNI_WebPDecodeARGB1190,37052
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_WebPDecodeBGR(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jlong jarg2, jintArray jarg3, jintArray jarg4) {Java_com_google_webp_libwebpJNI_WebPDecodeBGR1246,38698
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_WebPDecodeBGRA(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jlong jarg2, jintArray jarg3, jintArray jarg4) {Java_com_google_webp_libwebpJNI_WebPDecodeBGRA1302,40342
SWIGEXPORT jint JNICALL Java_com_google_webp_libwebpJNI_WebPGetEncoderVersion(JNIEnv *jenv, jclass jcls) {Java_com_google_webp_libwebpJNI_WebPGetEncoderVersion1358,41988
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeRGB(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7, jfloat jarg8) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeRGB1370,42248
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeBGR(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7, jfloat jarg8) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeBGR1420,43691
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeRGBA(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7, jfloat jarg8) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeRGBA1470,45134
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeBGRA(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7, jfloat jarg8) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeBGRA1520,46579
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessRGB(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessRGB1570,48024
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessBGR(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessBGR1618,49426
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessRGBA(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessRGBA1666,50828
SWIGEXPORT jbyteArray JNICALL Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessBGRA(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jint jarg2, jint jarg3, jintArray jarg4, jint jarg5, jint jarg6, jint jarg7) {Java_com_google_webp_libwebpJNI_wrap_1WebPEncodeLosslessBGRA1714,52232

swig/libwebp_go_wrap.c,3043
#define SWIGMODULE SWIGMODULE10,518
#  define SWIGTEMPLATEDISAMBIGUATOR SWIGTEMPLATEDISAMBIGUATOR19,1018
#  define SWIGTEMPLATEDISAMBIGUATOR SWIGTEMPLATEDISAMBIGUATOR23,1273
#  define SWIGTEMPLATEDISAMBIGUATORSWIGTEMPLATEDISAMBIGUATOR25,1325
#   define SWIGINLINE SWIGINLINE32,1497
#   define SWIGINLINESWIGINLINE34,1533
#     define SWIGUNUSED SWIGUNUSED42,1776
#     define SWIGUNUSEDSWIGUNUSED44,1838
#   define SWIGUNUSED SWIGUNUSED47,1894
#   define SWIGUNUSEDSWIGUNUSED49,1952
#   define SWIGUNUSEDPARM(SWIGUNUSEDPARM61,2191
#   define SWIGUNUSEDPARM(SWIGUNUSEDPARM63,2227
# define SWIGINTERN SWIGINTERN69,2331
# define SWIGINTERNINLINE SWIGINTERNINLINE74,2436
#    define GCC_HASCLASSVISIBILITYGCC_HASCLASSVISIBILITY80,2611
#     define SWIGEXPORTSWIGEXPORT87,2778
#     define SWIGEXPORT SWIGEXPORT89,2811
#     define SWIGEXPORT SWIGEXPORT93,2934
#     define SWIGEXPORTSWIGEXPORT95,3007
#   define SWIGSTDCALL SWIGSTDCALL103,3181
#   define SWIGSTDCALLSWIGSTDCALL105,3221
# define _CRT_SECURE_NO_DEPRECATE_CRT_SECURE_NO_DEPRECATE111,3445
# define _SCL_SECURE_NO_DEPRECATE_SCL_SECURE_NO_DEPRECATE116,3679
typedef long long intgo;intgo129,3828
typedef unsigned long long uintgo;uintgo130,3853
typedef struct { char *p; intgo n; } _gostring_;p134,3891
typedef struct { char *p; intgo n; } _gostring_;__anon124::p134,3891
typedef struct { char *p; intgo n; } _gostring_;n134,3891
typedef struct { char *p; intgo n; } _gostring_;__anon124::n134,3891
typedef struct { char *p; intgo n; } _gostring_;_gostring_134,3891
typedef struct { void* array; intgo len; intgo cap; } _goslice_;array135,3940
typedef struct { void* array; intgo len; intgo cap; } _goslice_;__anon125::array135,3940
typedef struct { void* array; intgo len; intgo cap; } _goslice_;len135,3940
typedef struct { void* array; intgo len; intgo cap; } _goslice_;__anon125::len135,3940
typedef struct { void* array; intgo len; intgo cap; } _goslice_;cap135,3940
typedef struct { void* array; intgo len; intgo cap; } _goslice_;__anon125::cap135,3940
typedef struct { void* array; intgo len; intgo cap; } _goslice_;_goslice_135,3940
#define swiggo_size_assert_eq(swiggo_size_assert_eq140,4009
#define swiggo_size_assert(swiggo_size_assert141,4088
typedef long long swiggo_long_long;swiggo_long_long146,4274
extern void crosscall2(void (*fn)(void *, int), void *, int);crosscall2154,4449
extern void _cgo_allocate(void *, int);_cgo_allocate155,4511
extern void _cgo_panic(void *, int);_cgo_panic156,4551
static void *_swig_goallocate(size_t len) {_swig_goallocate161,4617
static void _swig_gopanic(const char *p) {_swig_gopanic171,4793
static _gostring_ _swig_makegostring(const char *p, size_t l) {_swig_makegostring182,4936
#define SWIG_contract_assert(SWIG_contract_assert190,5113
#define SWIG_exception(SWIG_exception194,5201
_wrap_WebPGetDecoderVersion(void *swig_v)_wrap_WebPGetDecoderVersion205,5352
_wrap_wrapped_WebPGetInfo(void *swig_v)_wrap_wrapped_WebPGetInfo221,5584

extras/get_disto.c,1782
static size_t ReadPicture(const char* const filename, WebPPicture* const pic,ReadPicture30,1008
static void RescalePlane(uint8_t* plane, int width, int height,RescalePlane57,1789
static int DiffScaleChannel(uint8_t* src1, int stride1,DiffScaleChannel71,2264
#define SSIM_KERNEL SSIM_KERNEL95,3171
  uint32_t w;              // sum(w_i) : sum of weightsw99,3309
  uint32_t w;              // sum(w_i) : sum of weights__anon126::w99,3309
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)xm100,3365
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)__anon126::xm100,3365
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)ym100,3365
  uint32_t xm, ym;         // sum(w_i * x_i), sum(w_i * y_i)__anon126::ym100,3365
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.xxm101,3426
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.__anon126::xxm101,3426
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.xym101,3426
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.__anon126::xym101,3426
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.yym101,3426
  uint32_t xxm, xym, yym;  // sum(w_i * x_i * x_i), etc.__anon126::yym101,3426
} DistoStats;DistoStats102,3483
static const uint32_t kWeight[2 * SSIM_KERNEL + 1] = { 1, 2, 3, 4, 3, 2, 1 };kWeight105,3556
static WEBP_INLINE double SSIMCalculation(const DistoStats* const stats) {SSIMCalculation107,3635
static double SSIMGetClipped(const uint8_t* src1, int stride1,SSIMGetClipped132,4743
static int SSIMScaleChannel(uint8_t* src1, int stride1,SSIMScaleChannel161,5898
static void ConvertToGray(WebPPicture* const pic) {ConvertToGray196,6980
static void Help(void) {Help214,7603
int main(int argc, const char *argv[]) {main227,8220

extras/webp_quality.c,53
int main(int argc, const char *argv[]) {main17,477

extras/quality_estimate.c,311
#define INVALID_BIT_POS INVALID_BIT_POS21,724
static WEBP_INLINE uint32_t GetBit(const uint8_t* const data, size_t nb,GetBit26,983
#define GET_BIT(GET_BIT41,1419
#define CONDITIONAL_SKIP(CONDITIONAL_SKIP42,1472
int VP8EstimateQuality(const uint8_t* const data, size_t size) {VP8EstimateQuality44,1533

extras/extras.c,588
#define XTRA_MAJ_VERSION XTRA_MAJ_VERSION19,602
#define XTRA_MIN_VERSION XTRA_MIN_VERSION20,629
#define XTRA_REV_VERSION XTRA_REV_VERSION21,656
int WebPGetExtrasVersion(void) {WebPGetExtrasVersion25,766
int WebPImportGray(const uint8_t* gray_data, WebPPicture* pic) {WebPImportGray31,964
int WebPImportRGB565(const uint8_t* rgb565, WebPPicture* pic) {WebPImportRGB56549,1586
int WebPImportRGB4444(const uint8_t* rgb4444, WebPPicture* pic) {WebPImportRGB444480,2476
int WebPImportColorMappedARGB(const uint8_t* indexed, int indexed_stride,WebPImportColorMappedARGB113,3421

extras/webp_to_sdl.h,150
#define WEBP_EXTRAS_WEBP_TO_SDL_H_WEBP_EXTRAS_WEBP_TO_SDL_H_15,598
extern int WebpToSDL(const char* data, unsigned int data_size);WebpToSDL20,787

extras/webp_to_sdl.c,114
static int init_ok = 0;init_ok31,802
int WebpToSDL(const char* data, unsigned int data_size) {WebpToSDL32,826

extras/extras.h,703
#define WEBP_EXTRAS_EXTRAS_H_WEBP_EXTRAS_EXTRAS_H_12,494
#define WEBP_EXTRAS_ABI_VERSION WEBP_EXTRAS_ABI_VERSION22,616
WEBP_EXTERN int WebPGetExtrasVersion(void);WebPGetExtrasVersion28,915
WEBP_EXTERN int WebPImportGray(const uint8_t* gray, WebPPicture* picture);WebPImportGray35,1209
WEBP_EXTERN int WebPImportRGB565(const uint8_t* rgb565, WebPPicture* pic);WebPImportRGB56539,1424
WEBP_EXTERN int WebPImportRGB4444(const uint8_t* rgb4444, WebPPicture* pic);WebPImportRGB444443,1640
WebPImportColorMappedARGB(const uint8_t* indexed, int indexed_stride,WebPImportColorMappedARGB50,1984
WEBP_EXTERN int VP8EstimateQuality(const uint8_t* const data, size_t size);VP8EstimateQuality62,2655

extras/vwebp_sdl.c,157
static void ProcessEvents(void) {ProcessEvents35,895
int main(int argc, char* argv[]) {main51,1221
int main(int argc, const char *argv[]) {main90,2128
