/*
 * Copyright (C) 2012 Google Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

// https://w3c.github.io/mediacapture-main/#navigatorusermedia-interface-extensions
[
    ImplementedAs=NavigatorMediaStream
] partial interface Navigator {
    [HighEntropy,
     RaisesException,
     SecureContext,
     MeasureAs=GetUserMediaLegacy
    ] void getUserMedia(MediaStreamConstraints constraints,
                        NavigatorUserMediaSuccessCallback successCallback,
                        NavigatorUserMediaErrorCallback errorCallback);

    // Non-standard
    [HighEntropy,
     RaisesException,
     SecureContext,
     ImplementedAs=getUserMedia,
     MeasureAs=GetUserMediaPrefixed
    ] void webkitGetUserMedia(MediaStreamConstraints constraints,
                              NavigatorUserMediaSuccessCallback successCallback,
                              NavigatorUserMediaErrorCallback errorCallback);
};

// https://w3c.github.io/mediacapture-main/#navigatorusermediasuccesscallback
callback NavigatorUserMediaSuccessCallback = void (MediaStream stream);

// https://w3c.github.io/mediacapture-main/#navigatorusermediaerrorcallback
callback NavigatorUserMediaErrorCallback = void (MediaStreamError error);

// TODO(orphis): The only valid types for MediaStreamError are DOMException and
// OverconstrainedError. The spec defines MediaStreamError as object because
// neither DOMException nor OverconstrainedError is an IDL type in the spec.
// Bug: http://crbug.com/737497 http://crbug.com/769726
typedef (DOMException or OverconstrainedError) MediaStreamError;
