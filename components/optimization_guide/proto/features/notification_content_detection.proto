// Copyright 2025 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

edition = "2023";

package optimization_guide.proto;

import "components/optimization_guide/proto/features/common_quality_data.proto";

option optimize_for = LITE_RUNTIME;
option java_package = "org.chromium.components.optimization_guide.features.proto";

option java_outer_classname = "NotificationContentDetectionProto";

// DO NOT EDIT THIS FILE DIRECTLY!
//
// This file is generated in g3 and then synced to Chrome. Instead, please refer to
// http://go/chrome-mqls-onboarding (Google-internal link), and then changes will
// be synced with Chrome automatically.

message NotificationContentDetectionLoggingData {
  NotificationContentDetectionRequest request = 1 [features = { field_presence: EXPLICIT }];

  NotificationContentDetectionResponse response = 2 [features = { field_presence: EXPLICIT }];

  NotificationContentDetectionQuality quality = 3 [features = { field_presence: EXPLICIT }];
}

message NotificationContentDetectionRequest {
  // The textual contents of the notification.
  NotificationContents notification_contents = 1 [features = { field_presence: EXPLICIT }];
}

message NotificationContents {
  string notification_title = 1 [features = { field_presence: EXPLICIT }];

  string notification_message = 2 [features = { field_presence: EXPLICIT }];

  repeated string notification_action_labels = 3;

  string url = 4 [features = { field_presence: EXPLICIT }];
}

message NotificationContentDetectionResponse {
  // The score of the notification being suspicious from 0 to 100.
  float suspicious_score = 1 [features = { field_presence: EXPLICIT }];
}

message NotificationContentDetectionQuality {
  UserFeedback user_feedback = 1 [features = { field_presence: EXPLICIT }];

  FinalModelStatus final_model_status = 2 [features = { field_presence: EXPLICIT }];

  // Is the url of the notification on the safe browsing high confidence
  // allowlist.
  bool is_url_on_allowlist = 3 [features = { field_presence: EXPLICIT }];

  // Did the user tap "Always allow" on a notification from the url to bypass
  // warnings for the url.
  bool did_user_always_allow_url = 4 [features = { field_presence: EXPLICIT }];

  // Was the user shown a warning for these notification contents.
  bool was_user_shown_warning = 5 [features = { field_presence: EXPLICIT }];

  // Did the user adhere to the warning, by "Unsubscribing".
  bool did_user_unsubscribe = 6 [features = { field_presence: EXPLICIT }];

  SiteEngagementScore site_engagement_score = 7 [features = { field_presence: EXPLICIT }];
}

// Defined in
// third_party/blink/public/mojom/site_engagement/site_engagement.mojom
// Next ID: 6
enum SiteEngagementScore {
  SITE_ENGAGEMENT_SCORE_NONE = 0;

  SITE_ENGAGEMENT_SCORE_MINIMAL = 1;

  SITE_ENGAGEMENT_SCORE_LOW = 2;

  SITE_ENGAGEMENT_SCORE_MEDIUM = 3;

  SITE_ENGAGEMENT_SCORE_HIGH = 4;

  SITE_ENGAGEMENT_SCORE_MAX = 5;
}
