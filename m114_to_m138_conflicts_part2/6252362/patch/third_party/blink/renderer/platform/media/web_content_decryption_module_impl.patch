--- third_party/blink/renderer/platform/media/web_content_decryption_module_impl.cc
+++ third_party/blink/renderer/platform/media/web_content_decryption_module_impl.cc
@@ -38,48 +38,9 @@
 const char kSetServerCertificateUMAName[] = "SetServerCertificate";
 const char kGetStatusForPolicyUMAName[] = "GetStatusForPolicy";
 
-<<<<<<< HEAD
-=======
 #if BUILDFLAG(USE_STARBOARD_MEDIA)
 const char kGetMetricsUMAName[] = "GetMetrics";
 #endif // BUILDFLAG(USE_STARBOARD_MEDIA)
-
-bool ConvertHdcpVersion(const WebString& hdcp_version_string,
-                        media::HdcpVersion* hdcp_version) {
-  if (!hdcp_version_string.ContainsOnlyASCII())
-    return false;
-
-  std::string hdcp_version_ascii = hdcp_version_string.Ascii();
-
-  // The strings are specified in the explainer doc:
-  // https://github.com/WICG/hdcp-detection/blob/master/explainer.md
-  if (hdcp_version_ascii.empty())
-    *hdcp_version = media::HdcpVersion::kHdcpVersionNone;
-  else if (hdcp_version_ascii == "1.0")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion1_0;
-  else if (hdcp_version_ascii == "1.1")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion1_1;
-  else if (hdcp_version_ascii == "1.2")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion1_2;
-  else if (hdcp_version_ascii == "1.3")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion1_3;
-  else if (hdcp_version_ascii == "1.4")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion1_4;
-  else if (hdcp_version_ascii == "2.0")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion2_0;
-  else if (hdcp_version_ascii == "2.1")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion2_1;
-  else if (hdcp_version_ascii == "2.2")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion2_2;
-  else if (hdcp_version_ascii == "2.3")
-    *hdcp_version = media::HdcpVersion::kHdcpVersion2_3;
-  else
-    return false;
-
-  return true;
-}
-
->>>>>>> 7f7e8d81f8b ([media] Implement custom Starboard MediaKeys GetMetrics over Mojo (#6344))
 }  // namespace
 
 void WebContentDecryptionModuleImpl::Create(
