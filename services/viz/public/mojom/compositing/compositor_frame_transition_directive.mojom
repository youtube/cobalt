// Copyright 2021 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module viz.mojom;

import "mojo/public/mojom/base/unguessable_token.mojom";
import "services/viz/public/mojom/compositing/compositor_render_pass_id.mojom";
import "services/viz/public/mojom/compositing/view_transition_element_resource_id.mojom";

enum CompositorFrameTransitionDirectiveType {
  kSave,
  kAnimateRenderer,
  kRelease
};

// This struct identifes a shared element.
struct CompositorFrameTransitionDirectiveSharedElement {
  CompositorRenderPassId render_pass_id;
  ViewTransitionElementResourceId view_transition_element_resource_id;
};

// See components/viz/common/quads/compositor_frame_transition_directive.h
// for a description of this struct.
struct CompositorFrameTransitionDirective {
  // Uniquely identifies a transition sequence initiated for a document
  // navigation.
  //
  // This ID is generated by the renderer process and shared between renderer
  // processes for cross-document navigations via the browser. The cross-process
  // sharing is necessary when the documents exist in different renderer
  // processes. Access to this ID ensures only the renderer processes hosting
  // the new Document can access content cached from the old Document.
  //
  // This field is empty for same-view transitions which don't correspond to
  // a navigation.
  mojo_base.mojom.UnguessableToken? navigation_id;

  // A monotonically increasing sequence_id for a given communication channel
  // (i.e. surface). This is used to distinguish new directives from directives
  // that have already been processed.
  uint32 sequence_id;

  // The type of this directive.
  CompositorFrameTransitionDirectiveType type;

  // A collection of shared elements.
  array<CompositorFrameTransitionDirectiveSharedElement> shared_elements;
};
