[url-origin.any.html]
  [Origin parsing: <#x> against <sc://ñ>]
    expected: FAIL

  [Origin parsing: <?x> against <sc://ñ>]
    expected: FAIL

  [Origin parsing: <\\\\x\\hello> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <a:\t foo.com> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <blob:file://host/path> without base]
    expected: FAIL

  [Origin parsing: <blob:ftp://host/path> without base]
    expected: FAIL

  [Origin parsing: <blob:ws://example.org/> without base]
    expected: FAIL

  [Origin parsing: <blob:wss://example.org/> without base]
    expected: FAIL

  [Origin parsing: <c:/foo> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <h://.> without base]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <http://!"$&'()*+,-.;=_`{}~/> without base]
    expected: FAIL

  [Origin parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> without base]
    expected: FAIL

  [Origin parsing: <http://example.com/foo%00%51> without base]
    expected: FAIL

  [Origin parsing: <w://x:0> without base]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <wss://!"$&'()*+,-.;=_`{}~/> without base]
    expected: FAIL

  [Origin parsing: <x> against <sc://ñ>]
    expected: FAIL


[url-origin.any.worker.html]
  [Origin parsing: <#x> against <sc://ñ>]
    expected: FAIL

  [Origin parsing: <?x> against <sc://ñ>]
    expected: FAIL

  [Origin parsing: <\\\\x\\hello> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <a:\t foo.com> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <blob:file://host/path> without base]
    expected: FAIL

  [Origin parsing: <blob:ftp://host/path> without base]
    expected: FAIL

  [Origin parsing: <blob:ws://example.org/> without base]
    expected: FAIL

  [Origin parsing: <blob:wss://example.org/> without base]
    expected: FAIL

  [Origin parsing: <c:/foo> against <http://example.org/foo/bar>]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <h://.> without base]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <http://!"$&'()*+,-.;=_`{}~/> without base]
    expected: FAIL

  [Origin parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> without base]
    expected: FAIL

  [Origin parsing: <http://example.com/foo%00%51> without base]
    expected: FAIL

  [Origin parsing: <w://x:0> without base]
    expected:
      if (product == "content_shell") and (os == "win"): FAIL

  [Origin parsing: <wss://!"$&'()*+,-.;=_`{}~/> without base]
    expected: FAIL

  [Origin parsing: <x> against <sc://ñ>]
    expected: FAIL
