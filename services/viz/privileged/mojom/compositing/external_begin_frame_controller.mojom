// Copyright 2018 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module viz.mojom;

import "mojo/public/mojom/base/time.mojom";
import "services/viz/public/mojom/compositing/begin_frame_args.mojom";

// Exposes a way to manually issue BeginFrames to a Display.
interface ExternalBeginFrameController {
  // Request a frame. The callback is invoked when frame has either been
  // produced or can not be produced at this time.
  // If force is set to true, the frame will either begin or fail immediately,
  // otherwise the frame will be deferred till one of the frame sinks indicates
  // it's interested in a frame.
  // This is only used for headless on desktop and Android XR compositor.
  [EnableIfNot=is_ios]
  IssueExternalBeginFrame(BeginFrameArgs args, bool force)
      => (BeginFrameAck ack);

  // Issue a begin frame to the compositor. This is only used on iOS where begin
  // frames originate in the browser process due to sandbox restrictions and we
  // don't care about BeginFrameAcks for frame throttling unlike headless.
  [EnableIf=is_ios]
  IssueExternalBeginFrameNoAck(BeginFrameArgs args);
};

// Exposes a way to control when external BeginFrames are issued.
interface ExternalBeginFrameControllerClient {
  // Indicate we need begin frames or not.
  SetNeedsBeginFrame(bool needs_begin_frames);

  // Update the preferred interval.
  SetPreferredInterval(mojo_base.mojom.TimeDelta interval);
};
