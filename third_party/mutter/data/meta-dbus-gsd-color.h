/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __META_DBUS_GSD_COLOR_H__
#define __META_DBUS_GSD_COLOR_H__

#include <gio/gio.h>

G_BEGIN_DECLS

/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.SettingsDaemon.Color */

#define META_DBUS_TYPE_SETTINGS_DAEMON_COLOR \
  (meta_dbus_settings_daemon_color_get_type())
#define META_DBUS_SETTINGS_DAEMON_COLOR(o)                               \
  (G_TYPE_CHECK_INSTANCE_CAST((o), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR, \
                              MetaDBusSettingsDaemonColor))
#define META_DBUS_IS_SETTINGS_DAEMON_COLOR(o) \
  (G_TYPE_CHECK_INSTANCE_TYPE((o), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR))
#define META_DBUS_SETTINGS_DAEMON_COLOR_GET_IFACE(o)                        \
  (G_TYPE_INSTANCE_GET_INTERFACE((o), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR, \
                                 MetaDBusSettingsDaemonColorIface))

struct _MetaDBusSettingsDaemonColor;
typedef struct _MetaDBusSettingsDaemonColor MetaDBusSettingsDaemonColor;
typedef struct _MetaDBusSettingsDaemonColorIface
    MetaDBusSettingsDaemonColorIface;

struct _MetaDBusSettingsDaemonColorIface {
  GTypeInterface parent_iface;

  gboolean (*get_disabled_until_tomorrow)(MetaDBusSettingsDaemonColor* object);

  gboolean (*get_night_light_active)(MetaDBusSettingsDaemonColor* object);

  guint (*get_temperature)(MetaDBusSettingsDaemonColor* object);
};

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC(MetaDBusSettingsDaemonColor, g_object_unref)
#endif

GType meta_dbus_settings_daemon_color_get_type(void) G_GNUC_CONST;

GDBusInterfaceInfo* meta_dbus_settings_daemon_color_interface_info(void);
guint meta_dbus_settings_daemon_color_override_properties(
    GObjectClass* klass,
    guint property_id_begin);

/* D-Bus property accessors: */
gboolean meta_dbus_settings_daemon_color_get_disabled_until_tomorrow(
    MetaDBusSettingsDaemonColor* object);
void meta_dbus_settings_daemon_color_set_disabled_until_tomorrow(
    MetaDBusSettingsDaemonColor* object,
    gboolean value);

gboolean meta_dbus_settings_daemon_color_get_night_light_active(
    MetaDBusSettingsDaemonColor* object);
void meta_dbus_settings_daemon_color_set_night_light_active(
    MetaDBusSettingsDaemonColor* object,
    gboolean value);

guint meta_dbus_settings_daemon_color_get_temperature(
    MetaDBusSettingsDaemonColor* object);
void meta_dbus_settings_daemon_color_set_temperature(
    MetaDBusSettingsDaemonColor* object,
    guint value);

/* ---- */

#define META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_PROXY \
  (meta_dbus_settings_daemon_color_proxy_get_type())
#define META_DBUS_SETTINGS_DAEMON_COLOR_PROXY(o)                               \
  (G_TYPE_CHECK_INSTANCE_CAST((o), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_PROXY, \
                              MetaDBusSettingsDaemonColorProxy))
#define META_DBUS_SETTINGS_DAEMON_COLOR_PROXY_CLASS(k)                      \
  (G_TYPE_CHECK_CLASS_CAST((k), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_PROXY, \
                           MetaDBusSettingsDaemonColorProxyClass))
#define META_DBUS_SETTINGS_DAEMON_COLOR_PROXY_GET_CLASS(o)                    \
  (G_TYPE_INSTANCE_GET_CLASS((o), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_PROXY, \
                             MetaDBusSettingsDaemonColorProxyClass))
#define META_DBUS_IS_SETTINGS_DAEMON_COLOR_PROXY(o) \
  (G_TYPE_CHECK_INSTANCE_TYPE((o), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_PROXY))
#define META_DBUS_IS_SETTINGS_DAEMON_COLOR_PROXY_CLASS(k) \
  (G_TYPE_CHECK_CLASS_TYPE((k), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_PROXY))

typedef struct _MetaDBusSettingsDaemonColorProxy
    MetaDBusSettingsDaemonColorProxy;
typedef struct _MetaDBusSettingsDaemonColorProxyClass
    MetaDBusSettingsDaemonColorProxyClass;
typedef struct _MetaDBusSettingsDaemonColorProxyPrivate
    MetaDBusSettingsDaemonColorProxyPrivate;

struct _MetaDBusSettingsDaemonColorProxy {
  /*< private >*/
  GDBusProxy parent_instance;
  MetaDBusSettingsDaemonColorProxyPrivate* priv;
};

struct _MetaDBusSettingsDaemonColorProxyClass {
  GDBusProxyClass parent_class;
};

GType meta_dbus_settings_daemon_color_proxy_get_type(void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC(MetaDBusSettingsDaemonColorProxy, g_object_unref)
#endif

void meta_dbus_settings_daemon_color_proxy_new(GDBusConnection* connection,
                                               GDBusProxyFlags flags,
                                               const gchar* name,
                                               const gchar* object_path,
                                               GCancellable* cancellable,
                                               GAsyncReadyCallback callback,
                                               gpointer user_data);
MetaDBusSettingsDaemonColor* meta_dbus_settings_daemon_color_proxy_new_finish(
    GAsyncResult* res,
    GError** error);
MetaDBusSettingsDaemonColor* meta_dbus_settings_daemon_color_proxy_new_sync(
    GDBusConnection* connection,
    GDBusProxyFlags flags,
    const gchar* name,
    const gchar* object_path,
    GCancellable* cancellable,
    GError** error);

void meta_dbus_settings_daemon_color_proxy_new_for_bus(
    GBusType bus_type,
    GDBusProxyFlags flags,
    const gchar* name,
    const gchar* object_path,
    GCancellable* cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);
MetaDBusSettingsDaemonColor*
meta_dbus_settings_daemon_color_proxy_new_for_bus_finish(GAsyncResult* res,
                                                         GError** error);
MetaDBusSettingsDaemonColor*
meta_dbus_settings_daemon_color_proxy_new_for_bus_sync(
    GBusType bus_type,
    GDBusProxyFlags flags,
    const gchar* name,
    const gchar* object_path,
    GCancellable* cancellable,
    GError** error);

/* ---- */

#define META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_SKELETON \
  (meta_dbus_settings_daemon_color_skeleton_get_type())
#define META_DBUS_SETTINGS_DAEMON_COLOR_SKELETON(o)                          \
  (G_TYPE_CHECK_INSTANCE_CAST((o),                                           \
                              META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_SKELETON, \
                              MetaDBusSettingsDaemonColorSkeleton))
#define META_DBUS_SETTINGS_DAEMON_COLOR_SKELETON_CLASS(k)                      \
  (G_TYPE_CHECK_CLASS_CAST((k), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_SKELETON, \
                           MetaDBusSettingsDaemonColorSkeletonClass))
#define META_DBUS_SETTINGS_DAEMON_COLOR_SKELETON_GET_CLASS(o)               \
  (G_TYPE_INSTANCE_GET_CLASS((o),                                           \
                             META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_SKELETON, \
                             MetaDBusSettingsDaemonColorSkeletonClass))
#define META_DBUS_IS_SETTINGS_DAEMON_COLOR_SKELETON(o) \
  (G_TYPE_CHECK_INSTANCE_TYPE((o),                     \
                              META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_SKELETON))
#define META_DBUS_IS_SETTINGS_DAEMON_COLOR_SKELETON_CLASS(k) \
  (G_TYPE_CHECK_CLASS_TYPE((k), META_DBUS_TYPE_SETTINGS_DAEMON_COLOR_SKELETON))

typedef struct _MetaDBusSettingsDaemonColorSkeleton
    MetaDBusSettingsDaemonColorSkeleton;
typedef struct _MetaDBusSettingsDaemonColorSkeletonClass
    MetaDBusSettingsDaemonColorSkeletonClass;
typedef struct _MetaDBusSettingsDaemonColorSkeletonPrivate
    MetaDBusSettingsDaemonColorSkeletonPrivate;

struct _MetaDBusSettingsDaemonColorSkeleton {
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  MetaDBusSettingsDaemonColorSkeletonPrivate* priv;
};

struct _MetaDBusSettingsDaemonColorSkeletonClass {
  GDBusInterfaceSkeletonClass parent_class;
};

GType meta_dbus_settings_daemon_color_skeleton_get_type(void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC(MetaDBusSettingsDaemonColorSkeleton,
                              g_object_unref)
#endif

MetaDBusSettingsDaemonColor* meta_dbus_settings_daemon_color_skeleton_new(void);

G_END_DECLS

#endif /* __META_DBUS_GSD_COLOR_H__ */
