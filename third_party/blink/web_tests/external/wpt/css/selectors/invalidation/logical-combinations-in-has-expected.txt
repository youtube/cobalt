This is a testharness.js-based test.
PASS Initial color
FAIL Check :not() for has-scope parent change: Add .c assert_equals: expected "rgb(128, 128, 128)" but got "rgb(255, 0, 0)"
PASS Check :not() for has-scope parent change: Remove .c
FAIL Check :not() for has-scope change: Add .c assert_equals: expected "rgb(128, 128, 128)" but got "rgb(255, 0, 0)"
PASS Check :not() for has-scope change: Remove .c
PASS Check :not() for has-scope descendant change: Add .c
PASS Check :not() for has-scope descendant change: Remove .c
FAIL Check :is() for has-scope parent change: Add .g1 assert_equals: expected "rgb(255, 165, 0)" but got "rgb(128, 128, 128)"
PASS Check :is() for has-scope parent change: Remove .g1
FAIL Check :is() for has-scope change: Add .g1 assert_equals: expected "rgb(255, 165, 0)" but got "rgb(128, 128, 128)"
PASS Check :is() for has-scope change: Remove .g1
PASS Check :is() for has-scope descendant change: Add .g1
PASS Check :is() for has-scope descendant change: Remove .g1
FAIL Check :where() for has-scope parent change: Add .g2 assert_equals: expected "rgb(255, 255, 0)" but got "rgb(128, 128, 128)"
PASS Check :where() for has-scope parent change: Remove .g2
FAIL Check :where() for has-scope change: Add .g2 assert_equals: expected "rgb(255, 255, 0)" but got "rgb(128, 128, 128)"
PASS Check :where() for has-scope change: Remove .g2
PASS Check :where() for has-scope descendant change: Add .g2
PASS Check :where() for has-scope descendant change: Remove .g2
FAIL Check :is() for has-scope parent sibling change: Add .k assert_equals: expected "rgb(0, 128, 0)" but got "rgb(128, 128, 128)"
PASS Check :is() for has-scope parent sibling change: Remove .k
FAIL Check :is() for has-scope sibling change: Add .k assert_equals: expected "rgb(0, 128, 0)" but got "rgb(128, 128, 128)"
PASS Check :is() for has-scope sibling change: Remove .k
PASS Check :is() for has-scope descendant sibling change: Add .k
PASS Check :is() for has-scope descendant sibling change: Remove .k
FAIL Check :is() for has-scope previous sibling change: Add .p assert_equals: expected "rgb(0, 0, 255)" but got "rgb(128, 128, 128)"
PASS Check :is() for has-scope previous sibling change: Remove .p
FAIL Check :is() for has-scope change (for sibling relationship): Add .p assert_equals: expected "rgb(0, 0, 255)" but got "rgb(128, 128, 128)"
PASS Check :is() for has-scope change (for sibling relationship): Remove .p
PASS Check :is() for has-scope next sibling change: Add .p
PASS Check :is() for has-scope next sibling change: Remove .p
Harness: the test ran to completion.

